#!/usr/bin/env bash
set -eu

ROOT="$(pwd)"

mvlogs() {
    local i=$1
    local devname=$2
    local prefix=$3

    set +e
    for f in $(ls logs/good/*); do
        mv -v $f "$ROOT/logs/$i/$devname/$prefix-$(basename $f)"
    done
    set -e
}

runsuite() {
    local i=$1
    local suite=$2

    cd "$2"

    if [[ $HOSTNAME == "monza" ]]; then
        mkdir -p "$ROOT/logs/$i/amd"
        mkdir -p "$ROOT/logs/$i/intel"
        echo "$(tput setaf 2)Build $suite for CPU$(tput sgr0)"
        ./set-device CPU &> /dev/null
        echo "$(tput setaf 2)Execute $suite on CPU$(tput sgr0)"
        DEVTYPE=CPU ./run
        mvlogs $i "intel" "$suite"
        echo "$(tput setaf 2)Build $suite for GPU$(tput sgr0)"
        ./set-device GPU &> /dev/null
        echo "$(tput setaf 2)Execute $suite on GPU$(tput sgr0)"
        DEVTYPE=GPU ./run
        mvlogs $i "amd" "$suite"
    elif [[ $HOSTNAME == "diana" ]]; then
        mkdir -p "$ROOT/logs/$i/nvidia"
        echo "$(tput setaf 2)Build $suite for GPU$(tput sgr0)"
        ./set-device GPU &> /dev/null
        echo "$(tput setaf 2)Execute $suite on GPU$(tput sgr0)"
        DEVTYPE=GPU ./run
        mvlogs $i "nvidia" "$suite"
    else
        echo "fatal: Unknown hostname '$HOSTNAME'" >&2
        exit 1
    fi

    cd ../
}


iteration() {
    local i=$1

    mkdir -p "$ROOT/logs/$i"

    runsuite $i amd-app-sdk-3.0
    runsuite $i npb-3.3
    runsuite $i nvidia-4.2
    runsuite $i parboil-0.2
    runsuite $i polybench-gpu-1.0
    runsuite $i rodinia-3.1
    runsuite $i shoc-1.1.5
}


main() {
    rm -rf "$ROOT/logs"
    rm -f "$ROOT/logs-$HOSTNAME.zip"
    mkdir "$ROOT/logs"

    local nmax=5

    for i in $(seq 1 $nmax); do
        echo "$(tput bold)$(tput setaf 1)ITERATION $i of $nmax$(tput sgr0) ..."
        iteration $i
    done

    local zipfile=$(date +"$ROOT/logs-$HOSTNAME-%y-%m-%d.%H:%M.zip")
    zip -r "$zipfile" logs

    # Copy results to data directory:
    mkdir -p ~/phd/lab/smith/benchmarks/data/
    cp -v "$zipfile" ~/phd/lab/smith/benchmarks/data/
    echo "done"
}
main $@
