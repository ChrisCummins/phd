<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="config/getconfig_test" tests="1" failures="0" errors="1">
    <testcase name="config/getconfig_test" status="run" duration="3" time="3"><error message="exited with error code 1"></error></testcase>
    <system-out><![CDATA[I0308 11:10:04.178449 4619277760 test.py:79] Running pytest with arguments: ['/private/var/tmp/_bazel_cec/ce66aefd86f9b09aced8556389d9936d/sandbox/darwin-sandbox/55/execroot/phd/bazel-out/darwin-fastbuild/bin/config/getconfig_test.runfiles/phd/config/getconfig_test.py', '-vv', '--maxfail=1', '--durations=1']
fatal: --local can only be used inside a git repository
============================= test session starts ==============================
platform darwin -- Python 3.6.5, pytest-3.4.1, py-1.5.2, pluggy-0.6.0 -- /usr/local/opt/python/bin/python3.6
cachedir: .pytest_cache
benchmark: 3.1.1 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /private/var/tmp/_bazel_cec/ce66aefd86f9b09aced8556389d9936d/sandbox/darwin-sandbox/55/execroot/phd/bazel-out/darwin-fastbuild/bin/config/getconfig_test.runfiles/phd, inifile:
plugins: benchmark-3.1.1, mock-1.10.0, cov-2.5.1
collecting ... collected 5 items

config/getconfig_test.py::test_GetGlobalConfig_system_values PASSED      [ 20%]
config/getconfig_test.py::test_uname PASSED                              [ 40%]
config/getconfig_test.py::test_configure_id FAILED                       [ 60%]

=========================== slowest 1 test durations ===========================
0.19s call     config/getconfig_test.py::test_configure_id
=================================== FAILURES ===================================
______________________________ test_configure_id _______________________________

    def test_configure_id():
      """Test that the ID generated by configure has not changed.
    
      If this test fails, do not panic. It simply indicates that the you need to
      run ./configure again.
      """
      config = getconfig.GetGlobalConfig()
      configure_path = pathlib.Path(config.paths.repo_root) / 'configure'
      assert configure_path.is_file()
    
      def ToConfigureArg(field: str) -> str:
        """Turn an 'options' field into a --[no]arg ./configure argument."""
        return f'--{field}' if getattr(config.options, field) else f'--no{field}'
    
      args = [ToConfigureArg(f.name) for f in config.options.DESCRIPTOR.fields]
      cmd = [str(configure_path), '--print_id', '--noninteractive'] + args
      print('$', ' '.join(cmd))
>     assert config.configure_id == subprocess.check_output(
          cmd, universal_newlines=True).rstrip()
E     AssertionError: assert '0e0ad0c5905b...acf9e1b348a84' == '74b45253216b7...7ae3e5f5368d2'
E       - 0e0ad0c5905b17221d4801fbc042815dea50c9fa4070608e050acf9e1b348a84
E       + 74b45253216b74ea4dc1d127737937a85ee8e624eac1e152c5a7ae3e5f5368d2

config/getconfig_test.py:49: AssertionError
----------------------------- Captured stdout call -----------------------------
$ /Users/cec/phd/configure --print_id --noninteractive --nowith_cuda --update_git_submodules --symlink_python --noinstall_git_hooks
----------------------------- Captured stderr call -----------------------------
CUDA not found at: '/usr/local/cuda-9.0/bin/nvcc'.
====================== 1 failed, 2 passed in 0.26 seconds ======================]]></system-out>
  </testsuite>
</testsuites>
