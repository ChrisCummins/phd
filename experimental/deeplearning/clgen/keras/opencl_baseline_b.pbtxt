# File: //deeplearning/clgen/proto/clgen.proto
# Proto: clgen.Instance
working_dir: "/var/phd/clgen/opencl"
model {
  corpus {
    local_directory: "/mnt/cc/data/kernels/github"
    ascii_character_atomizer: true
    contentfile_separator: "\n\n"
    preprocessor: "deeplearning.clgen.preprocessors.opencl:ClangPreprocessWithShim"
    preprocessor: "deeplearning.clgen.preprocessors.opencl:Compile"
    preprocessor: "deeplearning.clgen.preprocessors.opencl:NormalizeIdentifiers"
    preprocessor: "deeplearning.clgen.preprocessors.opencl:StripDoubleUnderscorePrefixes"
    preprocessor: "deeplearning.clgen.preprocessors.common:StripDuplicateEmptyLines"
    preprocessor: "deeplearning.clgen.preprocessors.opencl:SanitizeKernelPrototype"
    preprocessor: "deeplearning.clgen.preprocessors.common:StripTrailingWhitespace"
    preprocessor: "deeplearning.clgen.preprocessors.opencl:ClangFormat"
    preprocessor: "deeplearning.clgen.preprocessors.common:MinimumLineCount3"
    preprocessor: "deeplearning.clgen.preprocessors.opencl:Compile"
  }
  architecture {
    neuron_type: LSTM
    neurons_per_layer: 512
    num_layers: 2
    post_layer_dropout_micros: 2000  # = 0.2 real value
  }
  training {
    num_epochs: 50
    sequence_length: 50
    batch_size: 64
    shuffle_corpus_contentfiles_between_epochs: false
    rmsprop_optimizer {
      initial_learning_rate_micros: 1000  # 0.01
      learning_rate_decay_per_epoch_micros: 0  # 0.0
    }
  }
}
sampler {
  start_text: "kernel void "
  batch_size: 1
  temperature_micros: 1000000
  termination_criteria {
    symtok {
      depth_increase_token: "{"
      depth_decrease_token: "}"
    }
  }
  termination_criteria {
    maxlen {
      maximum_tokens_in_sample: 5000
    }
  }
}
