// Protos for reachability analysis.

syntax = "proto2";

package phd.experimental.compilers.reachability;

// A collection of control flow graphs.
message ControlFlowGraphSet {
  repeated ControlFlowGraph graph = 1;
  optional int64 initial_random_seed = 2;
}

// A control flow graph is a collection of basic blocks and edges between them.
message ControlFlowGraph {
  required string name = 1;
  repeated BasicBlock block = 2;
  repeated ControlFlowGraphEdge edge = 3;
  required int64 entry_block_index = 4;
  required int64 exit_block_index = 5;
}

// A basic block.
message BasicBlock {
  required string name = 1;
  optional string text = 2;
}

// A CFG edge is a pair of indices into a ControlFlowGraph.block list that
// identifies the source and destination BasicBlocks.
message ControlFlowGraphEdge {
  required int64 src_index = 1;
  required int64 dst_index = 2;
}

// The result of attempting to extract LLVM bytecode from an input source.
message LlvmBytecode {
  optional string source_name = 1;
  optional string relpath = 2;
  optional string lang = 3;
  optional string cflags = 4;
  optional string bytecode = 5;
  optional int32 clang_returncode = 6;
  optional string error_message = 7;
}
