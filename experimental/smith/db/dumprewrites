#!/usr/bin/env python3
import re
import sqlite3
from argparse import ArgumentParser

import smith

from labm8.py import fs


def sanitize_id(id):
  return re.sub('[/:\.]+', '-', id)


def dump_rewrites(db, outdir):
  fs.mkdir(outdir)

  c = db.cursor()
  c.execute(
      "SELECT ContentFiles.id,ContentMeta.path,ContentFiles.contents,"
      "PreprocessedFiles.contents "
      "FROM PreprocessedFiles LEFT JOIN ContentFiles "
      "ON PreprocessedFiles.id=ContentFiles.id "
      "LEFT JOIN ContentMeta ON PreprocessedFiles.id=ContentMeta.id "
      "WHERE PreprocessedFiles.status=0")
  for row in c.fetchall():
    id, path, before, after = row

    outpath = fs.path(outdir, sanitize_id(id) + ".cl")
    with open(outpath, "w") as outfile:
      print("/* ID:", id, "*/", file=outfile)
      print("/* PATH:", path, "*/", file=outfile)
      print("\n/* INPUT: */\n", file=outfile)
      print(before, file=outfile)
      print("\n/* OUTPUT: */\n", file=outfile)
      print(after, file=outfile)


def main():
  parser = ArgumentParser()
  parser.add_argument("database", help="Path to input database")
  parser.add_argument("outdir", help="Path to output directory")
  args = parser.parse_args()

  db = sqlite3.connect(smith.assert_exists(args.database))
  dump_rewrites(db, args.outdir)


if __name__ == "__main__":
  main()
