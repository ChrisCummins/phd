,benchmark,dataset,comp,rational,mem,localmem,coalesced,atomic,transfer,wgsize,oracle,runtime_cpu,runtime_gpu,src,seq
0,amd-app-sdk-3.0-BinomialOption-binomial_options,default,98,8,13,11,2,0,2048,255,GPU,3.2910730000000004,0.152038,"__kernel void A(int a, const __global float4* b, __global float4* c, __local float4* d, __local float4* e) {
  unsigned int f = get_local_id(0);
  unsigned int g = get_group_id(0);

  float4 h = b[g];

  float4 i = (1.0f - h) * 5.0f + h * 30.f;
  float4 j = (1.0f - h) * 1.0f + h * 100.f;
  float4 k = (1.0f - h) * 0.25f + h * 10.f;
  float4 l = k * (1.0f / (float)a);
  float4 m = 0.30f * sqrt(l);
  float4 n = 0.02f * l;
  float4 o = exp(n);
  float4 p = 1.0f / o;
  float4 q = exp(m);
  float4 r = 1.0f / q;
  float4 s = (o - r) / (q - r);
  float4 t = 1.0f - s;
  float4 u = s * p;
  float4 v = t * p;

  float4 w = i * exp(m * (2.0f * f - (float)a)) - j;
  d[f].x = w.x > 0 ? w.x : 0.0f;
  d[f].y = w.y > 0 ? w.y : 0.0f;
  d[f].z = w.z > 0 ? w.z : 0.0f;
  d[f].w = w.w > 0 ? w.w : 0.0f;

  barrier(1);

  for (int x = a; x > 0; x -= 2) {
    if (f < x) {
      e[f] = u * d[f] + v * d[f + 1];
    }
    barrier(1);

    if (f < x - 1) {
      d[f] = u * e[f] + v * e[f + 1];
    }
    barrier(1);
  }

  if (f == 0)
    c[g] = d[0];
}
","[129 129 129 ...,   0 127   0]"
1,amd-app-sdk-3.0-BitonicSort-bitonicSort,default,12,2,6,0,6,0,131072,256,GPU,0.12194,0.057834,"__kernel void A(__global uint* a, const uint b, const uint c, const uint d) {
  uint e = d;
  uint f = get_global_id(0);

  uint g = 1 << (b - c);
  uint h = 2 * g;

  uint i = (f % g) + (f / g) * h;

  uint j = i + g;

  uint k = a[i];
  uint l = a[j];

  uint m = 1 << b;

  if ((f / m) % 2 == 1)
    e = 1 - e;

  uint n;
  uint o;
  if (k > l) {
    n = k;
    o = l;
  } else {
    n = l;
    o = k;
  }

  if (e) {
    a[i] = o;
    a[j] = n;
  } else {
    a[i] = n;
    a[j] = o;
  }
}
","[129 129 129 ...,   0 127   0]"
2,amd-app-sdk-3.0-BlackScholes-blackScholes,default,220,4,3,0,0,0,3145728,256,GPU,6.076052,1.997728,"__kernel void A(const __global float4* a, int b, __global float4* c, __global float4* d) {
  float4 e, f;
  float4 g, h;
  float4 i;
  float4 j;

  unsigned k = get_global_id(0);
  unsigned l = get_global_id(1);
  float4 m = (float4)2.0f;
  float4 n = a[l * b + k];
  float4 o = 10.0f * n + 100.0f * (1.0f - n);
  float4 p = 10.0f * n + 100.0f * (1.0f - n);
  float4 q = 1.0f * n + 10.0f * (1.0f - n);
  float4 r = 0.01f * n + 0.05f * (1.0f - n);
  float4 s = 0.01f * n + 0.10f * (1.0f - n);

  i = s * sqrt(q);

  e = (log(o / p) + (r + s * s / m) * q) / i;
  f = e - i;

  j = p * exp(-r * q);
  A(e, &g);
  A(f, &h);
  c[l * b + k] = o * g - j * h;
  A(e, &g);
  A(f, &h);
  d[l * b + k] = j * h - o * g;
}","[129 129 129 ...,  26   0 127]"
3,amd-app-sdk-3.0-FastWalshTransform-fastWalshTransform,default,8,0,4,0,4,0,4096,256,GPU,0.130003,0.062024,"__kernel void A(__global float* a, __const int b) {
  unsigned int c = get_global_id(0);

  const unsigned int d = c % b;
  const unsigned int e = 2 * b * (c / b) + d;

  const unsigned int f = e + b;

  float g = a[e];
  float h = a[f];

  a[e] = g + h;
  a[f] = g - h;
}
","[129 129 129 ...,   0 127   0]"
4,amd-app-sdk-3.0-FloydWarshall-floydWarshallPass,default,11,1,5,0,0,0,524288,256,CPU,0.283447,0.604686,"__kernel void A(__global uint* a, __global uint* b, const unsigned int c, const unsigned int d) {
  int e = get_global_id(0);
  int f = get_global_id(1);

  int g = d;
  int h = a[f * c + e];
  int i = (a[f * c + g] + a[g * c + e]);

  if (i < h) {
    a[f * c + e] = i;
    b[f * c + e] = g;
  }
}","[129 129 129 ..., 127   0 127]"
5,amd-app-sdk-3.0-MatrixMultiplication-mmmKernel,default,163,1,12,0,0,0,49152,64,GPU,0.277644,0.12421099999999999,"__kernel void A(__global float4* a, __global float4* b, __global float4* c, uint d, uint e) {
  int2 f = (int2)(get_global_id(0), get_global_id(1));

  float4 g;
  float4 h;
  float4 i;
  float4 j;

  e /= 4;

  for (int k = 0; k < d; k = k + 4) {
    float4 l = a[k / 4 + (f.y << 2) * (d / 4)];
    float4 m = a[k / 4 + ((f.y << 2) + 1) * (d / 4)];
    float4 n = a[k / 4 + ((f.y << 2) + 2) * (d / 4)];
    float4 o = a[k / 4 + ((f.y << 2) + 3) * (d / 4)];

    float4 p = b[f.x + k * e];
    float4 q = b[f.x + (k + 1) * e];
    float4 r = b[f.x + (k + 2) * e];
    float4 s = b[f.x + (k + 3) * e];

    g.x += l.x * p.x + l.y * q.x + l.z * r.x + l.w * s.x;
    g.y += l.x * p.y + l.y * q.y + l.z * r.y + l.w * s.y;
    g.z += l.x * p.z + l.y * q.z + l.z * r.z + l.w * s.z;
    g.w += l.x * p.w + l.y * q.w + l.z * r.w + l.w * s.w;

    h.x += m.x * p.x + m.y * q.x + m.z * r.x + m.w * s.x;
    h.y += m.x * p.y + m.y * q.y + m.z * r.y + m.w * s.y;
    h.z += m.x * p.z + m.y * q.z + m.z * r.z + m.w * s.z;
    h.w += m.x * p.w + m.y * q.w + m.z * r.w + m.w * s.w;

    i.x += n.x * p.x + n.y * q.x + n.z * r.x + n.w * s.x;
    i.y += n.x * p.y + n.y * q.y + n.z * r.y + n.w * s.y;
    i.z += n.x * p.z + n.y * q.z + n.z * r.z + n.w * s.z;
    i.w += n.x * p.w + n.y * q.w + n.z * r.w + n.w * s.w;

    j.x += o.x * p.x + o.y * q.x + o.z * r.x + o.w * s.x;
    j.y += o.x * p.y + o.y * q.y + o.z * r.y + o.w * s.y;
    j.z += o.x * p.z + o.y * q.z + o.z * r.z + o.w * s.z;
    j.w += o.x * p.w + o.y * q.w + o.z * r.w + o.w * s.w;
  }
  c[f.x + ((f.y << 2) + 0) * e] = g;
  c[f.x + ((f.y << 2) + 1) * e] = h;
  c[f.x + ((f.y << 2) + 2) * e] = i;
  c[f.x + ((f.y << 2) + 3) * e] = j;
}
","[  1   9   1 ...,   0 127   0]"
6,amd-app-sdk-3.0-MatrixTranspose-matrixTranspose,default,42,0,16,8,2,0,32768,256,GPU,0.156639,0.08784600000000001,"__kernel void A(__global float4* a, __global float4* b, __local float4* c) {
  uint d = get_global_size(0);

  uint e = get_group_id(0);
  uint f = get_group_id(1);

  uint g = get_num_groups(0);

  uint h = e;
  uint i = (e + f) % g;

  uint j = get_local_id(0);
  uint k = get_local_id(1);

  uint l = get_local_size(0);

  uint m = i * l + j;
  uint n = h * l + k;
  int o = m + (n)*d * 4;

  int p = k * l * 4 + j;
  c[p] = b[o];
  c[p + l] = b[o + d];
  c[p + l * 2] = b[o + d * 2];
  c[p + l * 3] = b[o + d * 3];

  barrier(1);

  m = h * l + j;
  n = i * l + k;
  int q = m + (n)*d * 4;

  p = j * l * 4 + k;
  float4 r = c[p];
  float4 s = c[p + l];
  float4 t = c[p + l * 2];
  float4 u = c[p + l * 3];

  a[q] = (float4)(rx, sx, tx, ux);
  a[q + d] = (float4)(ry, sy, ty, uy);
  a[q + d * 2] = (float4)(rz, sz, tz, uz);
  a[q + d * 3] = (float4)(rw, sw, tw, uw);
}
","[129 129 129 ...,   0 127   0]"
7,amd-app-sdk-3.0-PrefixSum-group_prefixSum,default,36,10,12,8,2,0,4096,1024,GPU,0.484234,0.049375999999999996,"__kernel void A(__global float* a, __global float* b, __local float* c, const uint d, const uint e) {
  int f = get_local_id(0);
  int g = get_local_size(0);
  int h = get_group_id(0);

  h = (e * (2 * (h * g + f) + 1)) - 1;
  if (h < d) {
    c[2 * f] = b[h];
  }
  if (h + e < d) {
    c[2 * f + 1] = b[h + e];
  }

  int i = 1;
  for (int j = d >> 1; j > 0; j >>= 1) {
    barrier(1);
    if (f < j) {
      int k = i * (2 * f + 1) - 1;
      int l = i * (2 * f + 2) - 1;
      c[l] += c[k];
    }
    i <<= 1;
  }

  if (d > 2) {
    if (i < d) {
      i <<= 1;
    }

    int m = i >> 1;
    for (int n = 0; n < m; n <<= 1) {
      n += 1;
      i >>= 1;
      barrier(1);

      if (f < n) {
        int k = i * (f + 1) - 1;
        int l = k + (i >> 1);
        c[l] += c[k];
      }
    }
  }
  barrier(1);

  if (h < d) {
    a[h] = c[2 * f];
  }
  if (h + e < d) {
    a[h + e] = c[2 * f + 1];
  }
}
","[129 129 129 ...,   0 127   0]"
8,amd-app-sdk-3.0-Reduction-reduce,default,6,3,7,4,2,0,8208,256,GPU,0.161025,0.070912,"__kernel void A(__global uint4* a, __global uint4* b, __local uint4* c) {
  unsigned int d = get_local_id(0);
  unsigned int e = get_group_id(0);
  unsigned int f = get_global_id(0);

  unsigned int g = get_local_size(0);
  unsigned int h = f * 2;
  c[d] = a[h] + a[h + 1];

  barrier(1);

  for (unsigned int i = g >> 1; i > 0; i >>= 1) {
    if (d < i) {
      c[d] += c[d + i];
    }
    barrier(1);
  }

  if (d == 0)
    b[e] = c[0];
}
","[129 129 129 ...,   0 127   0]"
9,amd-app-sdk-3.0-ScanLargeArrays-ScanLargeArrays,default,32,3,21,14,4,0,263168,128,GPU,0.336185,0.03863,"__kernel void A(__global float* a, __global float* b, __local float* c, const uint d, __global float* e) {
  int f = get_local_id(0);
  int g = get_global_id(0);
  int h = get_group_id(0);

  c[2 * f] = b[2 * g];
  c[2 * f + 1] = b[2 * g + 1];
  barrier(1);

  float i = c[0];
  float j = i + c[1];

  for (int k = 1; k < d; k *= 2) {
    if (2 * f >= k) {
      i = c[2 * f - k] + c[2 * f];
      j = c[2 * f + 1 - k] + c[2 * f + 1];
    }
    barrier(1);

    c[2 * f] = i;
    c[2 * f + 1] = j;

    barrier(1);
  }

  e[h] = c[d - 1];

  if (f == 0) {
    a[2 * g] = 0;
    a[2 * g + 1] = c[2 * f];
  } else {
    a[2 * g] = c[2 * f - 1];
    a[2 * g + 1] = c[2 * f];
  }
}","[129 129 129 ..., 127   0 127]"
10,amd-app-sdk-3.0-ScanLargeArrays-blockAddition,default,0,1,4,2,2,0,263168,256,GPU,0.147294,0.022841999999999998,"__kernel void A(__global float* a, __global float* b) {
  int c = get_global_id(0);
  int d = get_group_id(0);
  int e = get_local_id(0);

  __local float f[1];

  if (e == 0) {
    f[0] = a[d];
  }
  barrier(1);

  b[c] += f[0];
}","[129 129 129 ...,  26   0 127]"
11,amd-app-sdk-3.0-ScanLargeArrays-prefixSum,default,31,3,19,13,3,0,263168,64,GPU,0.130323,0.023642,"__kernel void A(__global float* a, __global float* b, __local float* c, const uint d) {
  int e = get_local_id(0);
  int f = get_global_id(0);
  int g = get_group_id(0);

  c[2 * e] = b[2 * f];
  c[2 * e + 1] = b[2 * f + 1];
  barrier(1);

  float h = c[0];
  float i = h + c[1];

  for (int j = 1; j < d; j *= 2) {
    if (2 * e >= j) {
      h = c[2 * e - j] + c[2 * e];
      i = c[2 * e + 1 - j] + c[2 * e + 1];
    }
    barrier(1);

    c[2 * e] = h;
    c[2 * e + 1] = i;

    barrier(1);
  }

  if (e == 0) {
    a[2 * f] = 0;
    a[2 * f + 1] = c[2 * e];
  } else {
    a[2 * f] = c[2 * e - 1];
    a[2 * f + 1] = c[2 * e];
  }
}","[129 129 129 ..., 127   0 127]"
12,amd-app-sdk-3.0-SimpleConvolution-simpleNonSeparableConvolution,default,9,4,3,0,3,0,4206668,256,GPU,3.979828,2.312966,"__kernel void A(__global uint* a, __global float* b, __global int* c, const uint2 d, const uint2 e, const uint f) {
  uint g = get_global_id(0);

  uint h = d.x;
  uint i = d.y;

  uint j = g % h;
  uint k = g / h;

  uint l = e.x;
  uint m = e.y;

  if (j >= h || k >= i)
    return;

  float n = 0.0f;
  int o = 0, p = 0;

  for (uint q = k; q < (k + m); ++q, o++) {
    p = 0;
    for (uint r = j; r < (j + l); ++r, p++) {
      uint s = o * l + p;
      uint t = q * f + r;

      n += ((float)a[t] * b[s]);
    }
  }

  n += 0.5f;
  c[g] = (int)n;
}","[129 129 129 ...,  26   0 127]"
13,amd-app-sdk-3.0-SimpleConvolution-simpleSeparableConvolutionPass1,default,9,3,3,0,1,0,4206668,256,GPU,3.226918,2.2661119999999997,"__kernel void A(__global uint* a, __global float* b, __global float* c, const uint2 d, const uint e, const uint2 f) {
  int g = 0, h = 0;

  uint i = d.x;
  uint j = d.y;

  uint k = get_global_id(0);
  uint l = k % i;
  uint m = k / i;

  if (l >= i || m >= (j + e - 1))
    return;

  float n = 0.0f;

  for (uint g = l; g < (l + e); ++g) {
    n = mad((float)a[m * f.x + g], b[h++], n);
  }

  c[l * f.y + m] = n;
}","[129 129 129 ...,  26   0 127]"
14,amd-app-sdk-3.0-SimpleConvolution-simpleSeparableConvolutionPass2,default,7,3,3,0,1,0,4206668,256,GPU,3.256935,2.266182,"__kernel void A(__global float* a, __global float* b, __global int* c, const uint2 d, const uint e, const uint2 f) {
  int g = 0, h = 0;

  uint i = d.x;
  uint j = d.y;

  uint k = get_global_id(0);
  uint l = k % j;
  uint m = k / j;

  if (m >= i || l >= j)
    return;

  float n = 0.0f;

  for (uint g = l; g < (l + e); ++g) {
    n = mad(a[m * f.y + g], b[h++], n);
  }

  n += 0.5f;
  c[l * i + m] = (int)n;
}","[129 129 129 ...,  26   0 127]"
15,amd-app-sdk-3.0-SobelFilter-sobel_filter,default,31,4,10,0,4,0,2097152,256,GPU,3.535082,1.580339,"__kernel void A(__global uchar4* a, __global uchar4* b) {
  uint c = get_global_id(0);
  uint d = get_global_id(1);

  uint e = get_global_size(0);
  uint f = get_global_size(1);

  float4 g = (float4)(0);
  float4 h = g;

  int i = c + d * e;

  if (c >= 1 && c < (e - 1) && d >= 1 && d < f - 1) {
    float4 j = convert_float4(a[i - 1 - e]);
    float4 k = convert_float4(a[i - e]);
    float4 l = convert_float4(a[i + 1 - e]);
    float4 m = convert_float4(a[i - 1]);
    float4 n = convert_float4(a[i]);
    float4 o = convert_float4(a[i + 1]);
    float4 p = convert_float4(a[i - 1 + e]);
    float4 q = convert_float4(a[i + e]);
    float4 r = convert_float4(a[i + 1 + e]);

    g = j + (float4)(2) * k + l - p - (float4)(2) * q - r;

    h = j - l + (float4)(2) * m - (float4)(2) * o + p - r;

    b[i] = convert_uchar4(hypot(g, h) / (float4)(2));
  }
}
","[129 129 129 ...,   0 127   0]"
16,npb-3.3-BT-add,A,28,4,2,0,3,0,320454824,62,GPU,1.8807369999999999,0.485853,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h > (e - 2) || g > (d - 2) || f > (c - 2))
    return;

  __global double(*j)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*k)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  for (i = 0; i < 5; i++) {
    j[h][g][f][i] = j[h][g][f][i] + k[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
17,npb-3.3-BT-add,B,28,4,2,0,3,0,1313673512,32,GPU,7.0964279999999995,0.92984,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h > (e - 2) || g > (d - 2) || f > (c - 2))
    return;

  __global double(*j)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*k)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  for (i = 0; i < 5; i++) {
    j[h][g][f][i] = j[h][g][f][i] + k[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
18,npb-3.3-BT-add,S,28,4,2,0,3,0,1807992,60,GPU,0.079557,0.075764,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h > (e - 2) || g > (d - 2) || f > (c - 2))
    return;

  __global double(*j)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*k)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  for (i = 0; i < 5; i++) {
    j[h][g][f][i] = j[h][g][f][i] + k[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
19,npb-3.3-BT-add,W,28,4,2,0,3,0,15949464,44,GPU,0.145375,0.088408,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h > (e - 2) || g > (d - 2) || f > (c - 2))
    return;

  __global double(*j)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*k)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  for (i = 0; i < 5; i++) {
    j[h][g][f][i] = j[h][g][f][i] + k[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
20,npb-3.3-BT-compute_rhs1,A,127,3,8,0,12,0,320454824,64,GPU,2.088552,0.259261,"__kernel void A(__global const double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, int h, int i, int j) {
  int k, l, m;
  double n;
  double o[4];
  double p;

  m = get_global_id(2);
  l = get_global_id(1);
  k = get_global_id(0);
  if (m >= j || l >= i || k >= h)
    return;

  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*s)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*t)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  __global double(*u)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;
  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])f;
  __global double(*w)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])g;

  o[0] = q[m][l][k][0];
  o[1] = q[m][l][k][1];
  o[2] = q[m][l][k][2];
  o[3] = q[m][l][k][3];

  n = 1.0 / o[0];
  v[m][l][k] = n;
  r[m][l][k] = o[1] * n;
  s[m][l][k] = o[2] * n;
  t[m][l][k] = o[3] * n;
  p = 0.5 * (o[1] * o[1] + o[2] * o[2] + o[3] * o[3]) * n;
  w[m][l][k] = p;
  u[m][l][k] = p * n;
}
","[  1  93   1 ...,   0 127   0]"
21,npb-3.3-BT-compute_rhs1,B,127,3,8,0,12,0,1313673512,32,GPU,9.072222,0.723952,"__kernel void A(__global const double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, int h, int i, int j) {
  int k, l, m;
  double n;
  double o[4];
  double p;

  m = get_global_id(2);
  l = get_global_id(1);
  k = get_global_id(0);
  if (m >= j || l >= i || k >= h)
    return;

  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*s)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*t)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  __global double(*u)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;
  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])f;
  __global double(*w)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])g;

  o[0] = q[m][l][k][0];
  o[1] = q[m][l][k][1];
  o[2] = q[m][l][k][2];
  o[3] = q[m][l][k][3];

  n = 1.0 / o[0];
  v[m][l][k] = n;
  r[m][l][k] = o[1] * n;
  s[m][l][k] = o[2] * n;
  t[m][l][k] = o[3] * n;
  p = 0.5 * (o[1] * o[1] + o[2] * o[2] + o[3] * o[3]) * n;
  w[m][l][k] = p;
  u[m][l][k] = p * n;
}
","[  1  93   1 ...,   0 127   0]"
22,npb-3.3-BT-compute_rhs1,S,127,3,8,0,12,0,1807992,60,GPU,0.08259,0.075816,"__kernel void A(__global const double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, int h, int i, int j) {
  int k, l, m;
  double n;
  double o[4];
  double p;

  m = get_global_id(2);
  l = get_global_id(1);
  k = get_global_id(0);
  if (m >= j || l >= i || k >= h)
    return;

  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*s)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*t)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  __global double(*u)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;
  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])f;
  __global double(*w)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])g;

  o[0] = q[m][l][k][0];
  o[1] = q[m][l][k][1];
  o[2] = q[m][l][k][2];
  o[3] = q[m][l][k][3];

  n = 1.0 / o[0];
  v[m][l][k] = n;
  r[m][l][k] = o[1] * n;
  s[m][l][k] = o[2] * n;
  t[m][l][k] = o[3] * n;
  p = 0.5 * (o[1] * o[1] + o[2] * o[2] + o[3] * o[3]) * n;
  w[m][l][k] = p;
  u[m][l][k] = p * n;
}
","[  1  93   1 ...,   0 127   0]"
23,npb-3.3-BT-compute_rhs1,W,127,3,8,0,12,0,15949464,48,GPU,0.175005,0.081839,"__kernel void A(__global const double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, int h, int i, int j) {
  int k, l, m;
  double n;
  double o[4];
  double p;

  m = get_global_id(2);
  l = get_global_id(1);
  k = get_global_id(0);
  if (m >= j || l >= i || k >= h)
    return;

  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*s)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*t)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  __global double(*u)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;
  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])f;
  __global double(*w)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])g;

  o[0] = q[m][l][k][0];
  o[1] = q[m][l][k][1];
  o[2] = q[m][l][k][2];
  o[3] = q[m][l][k][3];

  n = 1.0 / o[0];
  v[m][l][k] = n;
  r[m][l][k] = o[1] * n;
  s[m][l][k] = o[2] * n;
  t[m][l][k] = o[3] * n;
  p = 0.5 * (o[1] * o[1] + o[2] * o[2] + o[3] * o[3]) * n;
  w[m][l][k] = p;
  u[m][l][k] = p * n;
}
","[  1  93   1 ...,   0 127   0]"
24,npb-3.3-BT-compute_rhs2,A,27,4,2,0,2,0,320454824,64,GPU,2.059176,0.440564,"__kernel void A(__global const double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;

  h = get_global_id(2);
  g = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || g >= d || f >= c)
    return;

  __global double(*j)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*k)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  for (i = 0; i < 5; i++) {
    k[h][g][f][i] = j[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
25,npb-3.3-BT-compute_rhs2,B,27,4,2,0,2,0,1313673512,32,GPU,7.506122,0.7440140000000001,"__kernel void A(__global const double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;

  h = get_global_id(2);
  g = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || g >= d || f >= c)
    return;

  __global double(*j)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*k)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  for (i = 0; i < 5; i++) {
    k[h][g][f][i] = j[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
26,npb-3.3-BT-compute_rhs2,S,27,4,2,0,2,0,1807992,60,GPU,0.08118099999999999,0.07582799999999999,"__kernel void A(__global const double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;

  h = get_global_id(2);
  g = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || g >= d || f >= c)
    return;

  __global double(*j)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*k)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  for (i = 0; i < 5; i++) {
    k[h][g][f][i] = j[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
27,npb-3.3-BT-compute_rhs2,W,27,4,2,0,2,0,15949464,48,GPU,0.15946,0.089766,"__kernel void A(__global const double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;

  h = get_global_id(2);
  g = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || g >= d || f >= c)
    return;

  __global double(*j)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*k)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  for (i = 0; i < 5; i++) {
    k[h][g][f][i] = j[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
28,npb-3.3-BT-compute_rhs3,A,1257,23,8,0,107,0,320454824,62,GPU,2.858859,1.2834139999999998,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5];
  double u[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  n = get_global_id(1) + 1;
  m = get_global_id(0) + 1;
  if (n > (k - 2) || m > (j - 2))
    return;

  __global double(*an)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*ao)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*ap)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  __global double(*aq)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;
  __global double(*ar)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])f;
  __global double(*as)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])g;
  __global double(*at)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*au)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])h;

  q[0] = at[n][m][0][0];
  q[1] = at[n][m][0][1];
  q[2] = at[n][m][0][2];
  q[3] = at[n][m][0][3];
  q[4] = at[n][m][0][4];
  r[0] = at[n][m][1][0];
  r[1] = at[n][m][1][1];
  r[2] = at[n][m][1][2];
  r[3] = at[n][m][1][3];
  r[4] = at[n][m][1][4];
  s[0] = at[n][m][2][0];
  s[1] = at[n][m][2][1];
  s[2] = at[n][m][2][2];
  s[3] = at[n][m][2][3];
  s[4] = at[n][m][2][4];

  v = an[n][m][0];
  w = an[n][m][1];
  y = ao[n][m][0];
  z = ao[n][m][1];
  ab = ap[n][m][0];
  ac = ap[n][m][1];
  ae = aq[n][m][0];
  af = aq[n][m][1];
  ah = ar[n][m][0];
  ai = ar[n][m][1];
  ak = as[n][m][0];
  al = as[n][m][1];
  l = 1;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m][l + 2][0];
  s[1] = at[n][m][l + 2][1];
  s[2] = at[n][m][l + 2][2];
  s[3] = at[n][m][l + 2][3];
  s[4] = at[n][m][l + 2][4];
  x = v;
  v = w;
  w = an[n][m][l + 1];
  aa = y;
  y = z;
  z = ao[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = ap[n][m][l + 1];
  ag = ae;
  ae = af;
  af = aq[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = ar[n][m][l + 1];
  am = ak;
  ak = al;
  al = as[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - u[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - u[1] * x + (r[4] - al - u[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - u[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - u[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * u[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  l = 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m][l + 2][0];
  s[1] = at[n][m][l + 2][1];
  s[2] = at[n][m][l + 2][2];
  s[3] = at[n][m][l + 2][3];
  s[4] = at[n][m][l + 2][4];
  x = v;
  v = w;
  w = an[n][m][l + 1];
  aa = y;
  y = z;
  z = ao[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = ap[n][m][l + 1];
  ag = ae;
  ae = af;
  af = aq[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = ar[n][m][l + 1];
  am = ak;
  ak = al;
  al = as[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - u[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - u[1] * x + (r[4] - al - u[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - u[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - u[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * u[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (l = 3; l <= i - 4; l++) {
    t[0] = u[0];
    t[1] = u[1];
    t[2] = u[2];
    t[3] = u[3];
    t[4] = u[4];
    u[0] = q[0];
    u[1] = q[1];
    u[2] = q[2];
    u[3] = q[3];
    u[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = at[n][m][l + 2][0];
    s[1] = at[n][m][l + 2][1];
    s[2] = at[n][m][l + 2][2];
    s[3] = at[n][m][l + 2][3];
    s[4] = at[n][m][l + 2][4];
    x = v;
    v = w;
    w = an[n][m][l + 1];
    aa = y;
    y = z;
    z = ao[n][m][l + 1];
    ad = ab;
    ab = ac;
    ac = ap[n][m][l + 1];
    ag = ae;
    ae = af;
    af = aq[n][m][l + 1];
    aj = ah;
    ah = ai;
    ai = ar[n][m][l + 1];
    am = ak;
    ak = al;
    al = as[n][m][l + 1];
    p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - u[1]);
    p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - u[1] * x + (r[4] - al - u[4] + am) * 0.4);
    p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - u[2] * x);
    p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - u[3] * x);
    p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * u[4] - 0.4 * am) * x);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  l = i - 3;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m][l + 2][0];
  s[1] = at[n][m][l + 2][1];
  s[2] = at[n][m][l + 2][2];
  s[3] = at[n][m][l + 2][3];
  s[4] = at[n][m][l + 2][4];
  x = v;
  v = w;
  w = an[n][m][l + 1];
  aa = y;
  y = z;
  z = ao[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = ap[n][m][l + 1];
  ag = ae;
  ae = af;
  af = aq[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = ar[n][m][l + 1];
  am = ak;
  ak = al;
  al = as[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - u[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - u[1] * x + (r[4] - al - u[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - u[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - u[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * u[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  l = i - 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = an[n][m][l + 1];
  aa = y;
  y = z;
  z = ao[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = ap[n][m][l + 1];
  ag = ae;
  ae = af;
  af = aq[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = ar[n][m][l + 1];
  am = ak;
  ak = al;
  al = as[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - u[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - u[1] * x + (r[4] - al - u[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - u[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - u[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * u[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 5.0 * q[o]);
  }
}","[ 17   1  12 ..., 127   0 127]"
29,npb-3.3-BT-compute_rhs3,B,1257,23,8,0,107,0,1313673512,32,GPU,11.403199,5.726915,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5];
  double u[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  n = get_global_id(1) + 1;
  m = get_global_id(0) + 1;
  if (n > (k - 2) || m > (j - 2))
    return;

  __global double(*an)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*ao)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*ap)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  __global double(*aq)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;
  __global double(*ar)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])f;
  __global double(*as)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])g;
  __global double(*at)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*au)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])h;

  q[0] = at[n][m][0][0];
  q[1] = at[n][m][0][1];
  q[2] = at[n][m][0][2];
  q[3] = at[n][m][0][3];
  q[4] = at[n][m][0][4];
  r[0] = at[n][m][1][0];
  r[1] = at[n][m][1][1];
  r[2] = at[n][m][1][2];
  r[3] = at[n][m][1][3];
  r[4] = at[n][m][1][4];
  s[0] = at[n][m][2][0];
  s[1] = at[n][m][2][1];
  s[2] = at[n][m][2][2];
  s[3] = at[n][m][2][3];
  s[4] = at[n][m][2][4];

  v = an[n][m][0];
  w = an[n][m][1];
  y = ao[n][m][0];
  z = ao[n][m][1];
  ab = ap[n][m][0];
  ac = ap[n][m][1];
  ae = aq[n][m][0];
  af = aq[n][m][1];
  ah = ar[n][m][0];
  ai = ar[n][m][1];
  ak = as[n][m][0];
  al = as[n][m][1];
  l = 1;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m][l + 2][0];
  s[1] = at[n][m][l + 2][1];
  s[2] = at[n][m][l + 2][2];
  s[3] = at[n][m][l + 2][3];
  s[4] = at[n][m][l + 2][4];
  x = v;
  v = w;
  w = an[n][m][l + 1];
  aa = y;
  y = z;
  z = ao[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = ap[n][m][l + 1];
  ag = ae;
  ae = af;
  af = aq[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = ar[n][m][l + 1];
  am = ak;
  ak = al;
  al = as[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - u[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - u[1] * x + (r[4] - al - u[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - u[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - u[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * u[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  l = 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m][l + 2][0];
  s[1] = at[n][m][l + 2][1];
  s[2] = at[n][m][l + 2][2];
  s[3] = at[n][m][l + 2][3];
  s[4] = at[n][m][l + 2][4];
  x = v;
  v = w;
  w = an[n][m][l + 1];
  aa = y;
  y = z;
  z = ao[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = ap[n][m][l + 1];
  ag = ae;
  ae = af;
  af = aq[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = ar[n][m][l + 1];
  am = ak;
  ak = al;
  al = as[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - u[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - u[1] * x + (r[4] - al - u[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - u[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - u[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * u[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (l = 3; l <= i - 4; l++) {
    t[0] = u[0];
    t[1] = u[1];
    t[2] = u[2];
    t[3] = u[3];
    t[4] = u[4];
    u[0] = q[0];
    u[1] = q[1];
    u[2] = q[2];
    u[3] = q[3];
    u[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = at[n][m][l + 2][0];
    s[1] = at[n][m][l + 2][1];
    s[2] = at[n][m][l + 2][2];
    s[3] = at[n][m][l + 2][3];
    s[4] = at[n][m][l + 2][4];
    x = v;
    v = w;
    w = an[n][m][l + 1];
    aa = y;
    y = z;
    z = ao[n][m][l + 1];
    ad = ab;
    ab = ac;
    ac = ap[n][m][l + 1];
    ag = ae;
    ae = af;
    af = aq[n][m][l + 1];
    aj = ah;
    ah = ai;
    ai = ar[n][m][l + 1];
    am = ak;
    ak = al;
    al = as[n][m][l + 1];
    p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - u[1]);
    p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - u[1] * x + (r[4] - al - u[4] + am) * 0.4);
    p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - u[2] * x);
    p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - u[3] * x);
    p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * u[4] - 0.4 * am) * x);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  l = i - 3;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m][l + 2][0];
  s[1] = at[n][m][l + 2][1];
  s[2] = at[n][m][l + 2][2];
  s[3] = at[n][m][l + 2][3];
  s[4] = at[n][m][l + 2][4];
  x = v;
  v = w;
  w = an[n][m][l + 1];
  aa = y;
  y = z;
  z = ao[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = ap[n][m][l + 1];
  ag = ae;
  ae = af;
  af = aq[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = ar[n][m][l + 1];
  am = ak;
  ak = al;
  al = as[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - u[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - u[1] * x + (r[4] - al - u[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - u[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - u[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * u[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  l = i - 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = an[n][m][l + 1];
  aa = y;
  y = z;
  z = ao[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = ap[n][m][l + 1];
  ag = ae;
  ae = af;
  af = aq[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = ar[n][m][l + 1];
  am = ak;
  ak = al;
  al = as[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - u[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - u[1] * x + (r[4] - al - u[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - u[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - u[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * u[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 5.0 * q[o]);
  }
}","[ 17   1  12 ..., 127   0 127]"
30,npb-3.3-BT-compute_rhs3,S,1257,23,8,0,107,0,1807992,60,CPU,0.087732,0.105745,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5];
  double u[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  n = get_global_id(1) + 1;
  m = get_global_id(0) + 1;
  if (n > (k - 2) || m > (j - 2))
    return;

  __global double(*an)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*ao)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*ap)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  __global double(*aq)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;
  __global double(*ar)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])f;
  __global double(*as)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])g;
  __global double(*at)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*au)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])h;

  q[0] = at[n][m][0][0];
  q[1] = at[n][m][0][1];
  q[2] = at[n][m][0][2];
  q[3] = at[n][m][0][3];
  q[4] = at[n][m][0][4];
  r[0] = at[n][m][1][0];
  r[1] = at[n][m][1][1];
  r[2] = at[n][m][1][2];
  r[3] = at[n][m][1][3];
  r[4] = at[n][m][1][4];
  s[0] = at[n][m][2][0];
  s[1] = at[n][m][2][1];
  s[2] = at[n][m][2][2];
  s[3] = at[n][m][2][3];
  s[4] = at[n][m][2][4];

  v = an[n][m][0];
  w = an[n][m][1];
  y = ao[n][m][0];
  z = ao[n][m][1];
  ab = ap[n][m][0];
  ac = ap[n][m][1];
  ae = aq[n][m][0];
  af = aq[n][m][1];
  ah = ar[n][m][0];
  ai = ar[n][m][1];
  ak = as[n][m][0];
  al = as[n][m][1];
  l = 1;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m][l + 2][0];
  s[1] = at[n][m][l + 2][1];
  s[2] = at[n][m][l + 2][2];
  s[3] = at[n][m][l + 2][3];
  s[4] = at[n][m][l + 2][4];
  x = v;
  v = w;
  w = an[n][m][l + 1];
  aa = y;
  y = z;
  z = ao[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = ap[n][m][l + 1];
  ag = ae;
  ae = af;
  af = aq[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = ar[n][m][l + 1];
  am = ak;
  ak = al;
  al = as[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - u[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - u[1] * x + (r[4] - al - u[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - u[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - u[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * u[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  l = 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m][l + 2][0];
  s[1] = at[n][m][l + 2][1];
  s[2] = at[n][m][l + 2][2];
  s[3] = at[n][m][l + 2][3];
  s[4] = at[n][m][l + 2][4];
  x = v;
  v = w;
  w = an[n][m][l + 1];
  aa = y;
  y = z;
  z = ao[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = ap[n][m][l + 1];
  ag = ae;
  ae = af;
  af = aq[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = ar[n][m][l + 1];
  am = ak;
  ak = al;
  al = as[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - u[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - u[1] * x + (r[4] - al - u[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - u[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - u[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * u[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (l = 3; l <= i - 4; l++) {
    t[0] = u[0];
    t[1] = u[1];
    t[2] = u[2];
    t[3] = u[3];
    t[4] = u[4];
    u[0] = q[0];
    u[1] = q[1];
    u[2] = q[2];
    u[3] = q[3];
    u[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = at[n][m][l + 2][0];
    s[1] = at[n][m][l + 2][1];
    s[2] = at[n][m][l + 2][2];
    s[3] = at[n][m][l + 2][3];
    s[4] = at[n][m][l + 2][4];
    x = v;
    v = w;
    w = an[n][m][l + 1];
    aa = y;
    y = z;
    z = ao[n][m][l + 1];
    ad = ab;
    ab = ac;
    ac = ap[n][m][l + 1];
    ag = ae;
    ae = af;
    af = aq[n][m][l + 1];
    aj = ah;
    ah = ai;
    ai = ar[n][m][l + 1];
    am = ak;
    ak = al;
    al = as[n][m][l + 1];
    p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - u[1]);
    p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - u[1] * x + (r[4] - al - u[4] + am) * 0.4);
    p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - u[2] * x);
    p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - u[3] * x);
    p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * u[4] - 0.4 * am) * x);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  l = i - 3;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m][l + 2][0];
  s[1] = at[n][m][l + 2][1];
  s[2] = at[n][m][l + 2][2];
  s[3] = at[n][m][l + 2][3];
  s[4] = at[n][m][l + 2][4];
  x = v;
  v = w;
  w = an[n][m][l + 1];
  aa = y;
  y = z;
  z = ao[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = ap[n][m][l + 1];
  ag = ae;
  ae = af;
  af = aq[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = ar[n][m][l + 1];
  am = ak;
  ak = al;
  al = as[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - u[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - u[1] * x + (r[4] - al - u[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - u[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - u[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * u[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  l = i - 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = an[n][m][l + 1];
  aa = y;
  y = z;
  z = ao[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = ap[n][m][l + 1];
  ag = ae;
  ae = af;
  af = aq[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = ar[n][m][l + 1];
  am = ak;
  ak = al;
  al = as[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - u[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - u[1] * x + (r[4] - al - u[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - u[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - u[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * u[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 5.0 * q[o]);
  }
}","[ 17   1  12 ..., 127   0 127]"
31,npb-3.3-BT-compute_rhs3,W,1257,23,8,0,107,0,15949464,44,GPU,0.232219,0.136923,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5];
  double u[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  n = get_global_id(1) + 1;
  m = get_global_id(0) + 1;
  if (n > (k - 2) || m > (j - 2))
    return;

  __global double(*an)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*ao)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*ap)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  __global double(*aq)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;
  __global double(*ar)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])f;
  __global double(*as)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])g;
  __global double(*at)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*au)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])h;

  q[0] = at[n][m][0][0];
  q[1] = at[n][m][0][1];
  q[2] = at[n][m][0][2];
  q[3] = at[n][m][0][3];
  q[4] = at[n][m][0][4];
  r[0] = at[n][m][1][0];
  r[1] = at[n][m][1][1];
  r[2] = at[n][m][1][2];
  r[3] = at[n][m][1][3];
  r[4] = at[n][m][1][4];
  s[0] = at[n][m][2][0];
  s[1] = at[n][m][2][1];
  s[2] = at[n][m][2][2];
  s[3] = at[n][m][2][3];
  s[4] = at[n][m][2][4];

  v = an[n][m][0];
  w = an[n][m][1];
  y = ao[n][m][0];
  z = ao[n][m][1];
  ab = ap[n][m][0];
  ac = ap[n][m][1];
  ae = aq[n][m][0];
  af = aq[n][m][1];
  ah = ar[n][m][0];
  ai = ar[n][m][1];
  ak = as[n][m][0];
  al = as[n][m][1];
  l = 1;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m][l + 2][0];
  s[1] = at[n][m][l + 2][1];
  s[2] = at[n][m][l + 2][2];
  s[3] = at[n][m][l + 2][3];
  s[4] = at[n][m][l + 2][4];
  x = v;
  v = w;
  w = an[n][m][l + 1];
  aa = y;
  y = z;
  z = ao[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = ap[n][m][l + 1];
  ag = ae;
  ae = af;
  af = aq[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = ar[n][m][l + 1];
  am = ak;
  ak = al;
  al = as[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - u[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - u[1] * x + (r[4] - al - u[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - u[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - u[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * u[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  l = 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m][l + 2][0];
  s[1] = at[n][m][l + 2][1];
  s[2] = at[n][m][l + 2][2];
  s[3] = at[n][m][l + 2][3];
  s[4] = at[n][m][l + 2][4];
  x = v;
  v = w;
  w = an[n][m][l + 1];
  aa = y;
  y = z;
  z = ao[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = ap[n][m][l + 1];
  ag = ae;
  ae = af;
  af = aq[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = ar[n][m][l + 1];
  am = ak;
  ak = al;
  al = as[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - u[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - u[1] * x + (r[4] - al - u[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - u[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - u[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * u[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (l = 3; l <= i - 4; l++) {
    t[0] = u[0];
    t[1] = u[1];
    t[2] = u[2];
    t[3] = u[3];
    t[4] = u[4];
    u[0] = q[0];
    u[1] = q[1];
    u[2] = q[2];
    u[3] = q[3];
    u[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = at[n][m][l + 2][0];
    s[1] = at[n][m][l + 2][1];
    s[2] = at[n][m][l + 2][2];
    s[3] = at[n][m][l + 2][3];
    s[4] = at[n][m][l + 2][4];
    x = v;
    v = w;
    w = an[n][m][l + 1];
    aa = y;
    y = z;
    z = ao[n][m][l + 1];
    ad = ab;
    ab = ac;
    ac = ap[n][m][l + 1];
    ag = ae;
    ae = af;
    af = aq[n][m][l + 1];
    aj = ah;
    ah = ai;
    ai = ar[n][m][l + 1];
    am = ak;
    ak = al;
    al = as[n][m][l + 1];
    p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - u[1]);
    p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - u[1] * x + (r[4] - al - u[4] + am) * 0.4);
    p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - u[2] * x);
    p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - u[3] * x);
    p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * u[4] - 0.4 * am) * x);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  l = i - 3;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m][l + 2][0];
  s[1] = at[n][m][l + 2][1];
  s[2] = at[n][m][l + 2][2];
  s[3] = at[n][m][l + 2][3];
  s[4] = at[n][m][l + 2][4];
  x = v;
  v = w;
  w = an[n][m][l + 1];
  aa = y;
  y = z;
  z = ao[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = ap[n][m][l + 1];
  ag = ae;
  ae = af;
  af = aq[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = ar[n][m][l + 1];
  am = ak;
  ak = al;
  al = as[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - u[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - u[1] * x + (r[4] - al - u[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - u[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - u[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * u[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  l = i - 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = an[n][m][l + 1];
  aa = y;
  y = z;
  z = ao[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = ap[n][m][l + 1];
  ag = ae;
  ae = af;
  af = aq[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = ar[n][m][l + 1];
  am = ak;
  ak = al;
  al = as[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - u[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - u[1] * x + (r[4] - al - u[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - u[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - u[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * u[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 5.0 * q[o]);
  }
}","[ 17   1  12 ..., 127   0 127]"
32,npb-3.3-BT-compute_rhs4,A,1257,23,8,0,107,0,320454824,62,GPU,4.4081790000000005,0.4799020000000001,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5];
  double u[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  n = get_global_id(1) + 1;
  l = get_global_id(0) + 1;
  if (n > (k - 2) || l > (i - 2))
    return;

  __global double(*an)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*ao)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*ap)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  __global double(*aq)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;
  __global double(*ar)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])f;
  __global double(*as)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])g;
  __global double(*at)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*au)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])h;

  q[0] = at[n][0][l][0];
  q[1] = at[n][0][l][1];
  q[2] = at[n][0][l][2];
  q[3] = at[n][0][l][3];
  q[4] = at[n][0][l][4];
  r[0] = at[n][1][l][0];
  r[1] = at[n][1][l][1];
  r[2] = at[n][1][l][2];
  r[3] = at[n][1][l][3];
  r[4] = at[n][1][l][4];
  s[0] = at[n][2][l][0];
  s[1] = at[n][2][l][1];
  s[2] = at[n][2][l][2];
  s[3] = at[n][2][l][3];
  s[4] = at[n][2][l][4];

  v = an[n][0][l];
  w = an[n][1][l];
  y = ao[n][0][l];
  z = ao[n][1][l];
  ab = ap[n][0][l];
  ac = ap[n][1][l];
  ae = aq[n][0][l];
  af = aq[n][1][l];
  ah = ar[n][0][l];
  ai = ar[n][1][l];
  ak = as[n][0][l];
  al = as[n][1][l];
  m = 1;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m + 2][l][0];
  s[1] = at[n][m + 2][l][1];
  s[2] = at[n][m + 2][l][2];
  s[3] = at[n][m + 2][l][3];
  s[4] = at[n][m + 2][l][4];
  x = v;
  v = w;
  w = an[n][m + 1][l];
  aa = y;
  y = z;
  z = ao[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = ap[n][m + 1][l];
  ag = ae;
  ae = af;
  af = aq[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = ar[n][m + 1][l];
  am = ak;
  ak = al;
  al = as[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - u[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - u[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - u[2] * aa + (r[4] - al - u[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - u[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * u[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  m = 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m + 2][l][0];
  s[1] = at[n][m + 2][l][1];
  s[2] = at[n][m + 2][l][2];
  s[3] = at[n][m + 2][l][3];
  s[4] = at[n][m + 2][l][4];
  x = v;
  v = w;
  w = an[n][m + 1][l];
  aa = y;
  y = z;
  z = ao[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = ap[n][m + 1][l];
  ag = ae;
  ae = af;
  af = aq[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = ar[n][m + 1][l];
  am = ak;
  ak = al;
  al = as[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - u[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - u[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - u[2] * aa + (r[4] - al - u[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - u[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * u[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (m = 3; m <= j - 4; m++) {
    t[0] = u[0];
    t[1] = u[1];
    t[2] = u[2];
    t[3] = u[3];
    t[4] = u[4];
    u[0] = q[0];
    u[1] = q[1];
    u[2] = q[2];
    u[3] = q[3];
    u[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = at[n][m + 2][l][0];
    s[1] = at[n][m + 2][l][1];
    s[2] = at[n][m + 2][l][2];
    s[3] = at[n][m + 2][l][3];
    s[4] = at[n][m + 2][l][4];
    x = v;
    v = w;
    w = an[n][m + 1][l];
    aa = y;
    y = z;
    z = ao[n][m + 1][l];
    ad = ab;
    ab = ac;
    ac = ap[n][m + 1][l];
    ag = ae;
    ae = af;
    af = aq[n][m + 1][l];
    aj = ah;
    ah = ai;
    ai = ar[n][m + 1][l];
    am = ak;
    ak = al;
    al = as[n][m + 1][l];
    p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - u[2]);
    p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - u[1] * aa);
    p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - u[2] * aa + (r[4] - al - u[4] + am) * 0.4);
    p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - u[3] * aa);
    p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * u[4] - 0.4 * am) * aa);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  m = j - 3;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m + 2][l][0];
  s[1] = at[n][m + 2][l][1];
  s[2] = at[n][m + 2][l][2];
  s[3] = at[n][m + 2][l][3];
  s[4] = at[n][m + 2][l][4];
  x = v;
  v = w;
  w = an[n][m + 1][l];
  aa = y;
  y = z;
  z = ao[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = ap[n][m + 1][l];
  ag = ae;
  ae = af;
  af = aq[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = ar[n][m + 1][l];
  am = ak;
  ak = al;
  al = as[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - u[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - u[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - u[2] * aa + (r[4] - al - u[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - u[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * u[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  m = j - 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = an[n][m + 1][l];
  aa = y;
  y = z;
  z = ao[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = ap[n][m + 1][l];
  ag = ae;
  ae = af;
  af = aq[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = ar[n][m + 1][l];
  am = ak;
  ak = al;
  al = as[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - u[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - u[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - u[2] * aa + (r[4] - al - u[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - u[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * u[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 5.0 * q[o]);
  }
}","[ 16   8   8 ..., 127   0 127]"
33,npb-3.3-BT-compute_rhs4,B,1257,23,8,0,107,0,1313673512,32,GPU,16.821722,1.978362,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5];
  double u[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  n = get_global_id(1) + 1;
  l = get_global_id(0) + 1;
  if (n > (k - 2) || l > (i - 2))
    return;

  __global double(*an)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*ao)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*ap)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  __global double(*aq)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;
  __global double(*ar)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])f;
  __global double(*as)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])g;
  __global double(*at)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*au)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])h;

  q[0] = at[n][0][l][0];
  q[1] = at[n][0][l][1];
  q[2] = at[n][0][l][2];
  q[3] = at[n][0][l][3];
  q[4] = at[n][0][l][4];
  r[0] = at[n][1][l][0];
  r[1] = at[n][1][l][1];
  r[2] = at[n][1][l][2];
  r[3] = at[n][1][l][3];
  r[4] = at[n][1][l][4];
  s[0] = at[n][2][l][0];
  s[1] = at[n][2][l][1];
  s[2] = at[n][2][l][2];
  s[3] = at[n][2][l][3];
  s[4] = at[n][2][l][4];

  v = an[n][0][l];
  w = an[n][1][l];
  y = ao[n][0][l];
  z = ao[n][1][l];
  ab = ap[n][0][l];
  ac = ap[n][1][l];
  ae = aq[n][0][l];
  af = aq[n][1][l];
  ah = ar[n][0][l];
  ai = ar[n][1][l];
  ak = as[n][0][l];
  al = as[n][1][l];
  m = 1;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m + 2][l][0];
  s[1] = at[n][m + 2][l][1];
  s[2] = at[n][m + 2][l][2];
  s[3] = at[n][m + 2][l][3];
  s[4] = at[n][m + 2][l][4];
  x = v;
  v = w;
  w = an[n][m + 1][l];
  aa = y;
  y = z;
  z = ao[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = ap[n][m + 1][l];
  ag = ae;
  ae = af;
  af = aq[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = ar[n][m + 1][l];
  am = ak;
  ak = al;
  al = as[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - u[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - u[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - u[2] * aa + (r[4] - al - u[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - u[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * u[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  m = 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m + 2][l][0];
  s[1] = at[n][m + 2][l][1];
  s[2] = at[n][m + 2][l][2];
  s[3] = at[n][m + 2][l][3];
  s[4] = at[n][m + 2][l][4];
  x = v;
  v = w;
  w = an[n][m + 1][l];
  aa = y;
  y = z;
  z = ao[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = ap[n][m + 1][l];
  ag = ae;
  ae = af;
  af = aq[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = ar[n][m + 1][l];
  am = ak;
  ak = al;
  al = as[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - u[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - u[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - u[2] * aa + (r[4] - al - u[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - u[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * u[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (m = 3; m <= j - 4; m++) {
    t[0] = u[0];
    t[1] = u[1];
    t[2] = u[2];
    t[3] = u[3];
    t[4] = u[4];
    u[0] = q[0];
    u[1] = q[1];
    u[2] = q[2];
    u[3] = q[3];
    u[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = at[n][m + 2][l][0];
    s[1] = at[n][m + 2][l][1];
    s[2] = at[n][m + 2][l][2];
    s[3] = at[n][m + 2][l][3];
    s[4] = at[n][m + 2][l][4];
    x = v;
    v = w;
    w = an[n][m + 1][l];
    aa = y;
    y = z;
    z = ao[n][m + 1][l];
    ad = ab;
    ab = ac;
    ac = ap[n][m + 1][l];
    ag = ae;
    ae = af;
    af = aq[n][m + 1][l];
    aj = ah;
    ah = ai;
    ai = ar[n][m + 1][l];
    am = ak;
    ak = al;
    al = as[n][m + 1][l];
    p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - u[2]);
    p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - u[1] * aa);
    p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - u[2] * aa + (r[4] - al - u[4] + am) * 0.4);
    p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - u[3] * aa);
    p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * u[4] - 0.4 * am) * aa);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  m = j - 3;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m + 2][l][0];
  s[1] = at[n][m + 2][l][1];
  s[2] = at[n][m + 2][l][2];
  s[3] = at[n][m + 2][l][3];
  s[4] = at[n][m + 2][l][4];
  x = v;
  v = w;
  w = an[n][m + 1][l];
  aa = y;
  y = z;
  z = ao[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = ap[n][m + 1][l];
  ag = ae;
  ae = af;
  af = aq[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = ar[n][m + 1][l];
  am = ak;
  ak = al;
  al = as[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - u[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - u[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - u[2] * aa + (r[4] - al - u[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - u[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * u[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  m = j - 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = an[n][m + 1][l];
  aa = y;
  y = z;
  z = ao[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = ap[n][m + 1][l];
  ag = ae;
  ae = af;
  af = aq[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = ar[n][m + 1][l];
  am = ak;
  ak = al;
  al = as[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - u[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - u[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - u[2] * aa + (r[4] - al - u[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - u[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * u[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 5.0 * q[o]);
  }
}","[ 16   8   8 ..., 127   0 127]"
34,npb-3.3-BT-compute_rhs4,S,1257,23,8,0,107,0,1807992,60,CPU,0.086125,0.10247,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5];
  double u[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  n = get_global_id(1) + 1;
  l = get_global_id(0) + 1;
  if (n > (k - 2) || l > (i - 2))
    return;

  __global double(*an)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*ao)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*ap)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  __global double(*aq)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;
  __global double(*ar)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])f;
  __global double(*as)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])g;
  __global double(*at)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*au)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])h;

  q[0] = at[n][0][l][0];
  q[1] = at[n][0][l][1];
  q[2] = at[n][0][l][2];
  q[3] = at[n][0][l][3];
  q[4] = at[n][0][l][4];
  r[0] = at[n][1][l][0];
  r[1] = at[n][1][l][1];
  r[2] = at[n][1][l][2];
  r[3] = at[n][1][l][3];
  r[4] = at[n][1][l][4];
  s[0] = at[n][2][l][0];
  s[1] = at[n][2][l][1];
  s[2] = at[n][2][l][2];
  s[3] = at[n][2][l][3];
  s[4] = at[n][2][l][4];

  v = an[n][0][l];
  w = an[n][1][l];
  y = ao[n][0][l];
  z = ao[n][1][l];
  ab = ap[n][0][l];
  ac = ap[n][1][l];
  ae = aq[n][0][l];
  af = aq[n][1][l];
  ah = ar[n][0][l];
  ai = ar[n][1][l];
  ak = as[n][0][l];
  al = as[n][1][l];
  m = 1;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m + 2][l][0];
  s[1] = at[n][m + 2][l][1];
  s[2] = at[n][m + 2][l][2];
  s[3] = at[n][m + 2][l][3];
  s[4] = at[n][m + 2][l][4];
  x = v;
  v = w;
  w = an[n][m + 1][l];
  aa = y;
  y = z;
  z = ao[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = ap[n][m + 1][l];
  ag = ae;
  ae = af;
  af = aq[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = ar[n][m + 1][l];
  am = ak;
  ak = al;
  al = as[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - u[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - u[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - u[2] * aa + (r[4] - al - u[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - u[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * u[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  m = 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m + 2][l][0];
  s[1] = at[n][m + 2][l][1];
  s[2] = at[n][m + 2][l][2];
  s[3] = at[n][m + 2][l][3];
  s[4] = at[n][m + 2][l][4];
  x = v;
  v = w;
  w = an[n][m + 1][l];
  aa = y;
  y = z;
  z = ao[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = ap[n][m + 1][l];
  ag = ae;
  ae = af;
  af = aq[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = ar[n][m + 1][l];
  am = ak;
  ak = al;
  al = as[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - u[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - u[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - u[2] * aa + (r[4] - al - u[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - u[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * u[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (m = 3; m <= j - 4; m++) {
    t[0] = u[0];
    t[1] = u[1];
    t[2] = u[2];
    t[3] = u[3];
    t[4] = u[4];
    u[0] = q[0];
    u[1] = q[1];
    u[2] = q[2];
    u[3] = q[3];
    u[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = at[n][m + 2][l][0];
    s[1] = at[n][m + 2][l][1];
    s[2] = at[n][m + 2][l][2];
    s[3] = at[n][m + 2][l][3];
    s[4] = at[n][m + 2][l][4];
    x = v;
    v = w;
    w = an[n][m + 1][l];
    aa = y;
    y = z;
    z = ao[n][m + 1][l];
    ad = ab;
    ab = ac;
    ac = ap[n][m + 1][l];
    ag = ae;
    ae = af;
    af = aq[n][m + 1][l];
    aj = ah;
    ah = ai;
    ai = ar[n][m + 1][l];
    am = ak;
    ak = al;
    al = as[n][m + 1][l];
    p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - u[2]);
    p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - u[1] * aa);
    p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - u[2] * aa + (r[4] - al - u[4] + am) * 0.4);
    p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - u[3] * aa);
    p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * u[4] - 0.4 * am) * aa);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  m = j - 3;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m + 2][l][0];
  s[1] = at[n][m + 2][l][1];
  s[2] = at[n][m + 2][l][2];
  s[3] = at[n][m + 2][l][3];
  s[4] = at[n][m + 2][l][4];
  x = v;
  v = w;
  w = an[n][m + 1][l];
  aa = y;
  y = z;
  z = ao[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = ap[n][m + 1][l];
  ag = ae;
  ae = af;
  af = aq[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = ar[n][m + 1][l];
  am = ak;
  ak = al;
  al = as[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - u[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - u[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - u[2] * aa + (r[4] - al - u[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - u[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * u[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  m = j - 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = an[n][m + 1][l];
  aa = y;
  y = z;
  z = ao[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = ap[n][m + 1][l];
  ag = ae;
  ae = af;
  af = aq[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = ar[n][m + 1][l];
  am = ak;
  ak = al;
  al = as[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - u[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - u[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - u[2] * aa + (r[4] - al - u[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - u[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * u[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 5.0 * q[o]);
  }
}","[ 16   8   8 ..., 127   0 127]"
35,npb-3.3-BT-compute_rhs4,W,1257,23,8,0,107,0,15949464,44,GPU,0.247081,0.128396,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5];
  double u[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  n = get_global_id(1) + 1;
  l = get_global_id(0) + 1;
  if (n > (k - 2) || l > (i - 2))
    return;

  __global double(*an)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*ao)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*ap)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  __global double(*aq)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;
  __global double(*ar)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])f;
  __global double(*as)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])g;
  __global double(*at)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*au)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])h;

  q[0] = at[n][0][l][0];
  q[1] = at[n][0][l][1];
  q[2] = at[n][0][l][2];
  q[3] = at[n][0][l][3];
  q[4] = at[n][0][l][4];
  r[0] = at[n][1][l][0];
  r[1] = at[n][1][l][1];
  r[2] = at[n][1][l][2];
  r[3] = at[n][1][l][3];
  r[4] = at[n][1][l][4];
  s[0] = at[n][2][l][0];
  s[1] = at[n][2][l][1];
  s[2] = at[n][2][l][2];
  s[3] = at[n][2][l][3];
  s[4] = at[n][2][l][4];

  v = an[n][0][l];
  w = an[n][1][l];
  y = ao[n][0][l];
  z = ao[n][1][l];
  ab = ap[n][0][l];
  ac = ap[n][1][l];
  ae = aq[n][0][l];
  af = aq[n][1][l];
  ah = ar[n][0][l];
  ai = ar[n][1][l];
  ak = as[n][0][l];
  al = as[n][1][l];
  m = 1;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m + 2][l][0];
  s[1] = at[n][m + 2][l][1];
  s[2] = at[n][m + 2][l][2];
  s[3] = at[n][m + 2][l][3];
  s[4] = at[n][m + 2][l][4];
  x = v;
  v = w;
  w = an[n][m + 1][l];
  aa = y;
  y = z;
  z = ao[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = ap[n][m + 1][l];
  ag = ae;
  ae = af;
  af = aq[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = ar[n][m + 1][l];
  am = ak;
  ak = al;
  al = as[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - u[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - u[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - u[2] * aa + (r[4] - al - u[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - u[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * u[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  m = 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m + 2][l][0];
  s[1] = at[n][m + 2][l][1];
  s[2] = at[n][m + 2][l][2];
  s[3] = at[n][m + 2][l][3];
  s[4] = at[n][m + 2][l][4];
  x = v;
  v = w;
  w = an[n][m + 1][l];
  aa = y;
  y = z;
  z = ao[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = ap[n][m + 1][l];
  ag = ae;
  ae = af;
  af = aq[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = ar[n][m + 1][l];
  am = ak;
  ak = al;
  al = as[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - u[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - u[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - u[2] * aa + (r[4] - al - u[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - u[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * u[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (m = 3; m <= j - 4; m++) {
    t[0] = u[0];
    t[1] = u[1];
    t[2] = u[2];
    t[3] = u[3];
    t[4] = u[4];
    u[0] = q[0];
    u[1] = q[1];
    u[2] = q[2];
    u[3] = q[3];
    u[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = at[n][m + 2][l][0];
    s[1] = at[n][m + 2][l][1];
    s[2] = at[n][m + 2][l][2];
    s[3] = at[n][m + 2][l][3];
    s[4] = at[n][m + 2][l][4];
    x = v;
    v = w;
    w = an[n][m + 1][l];
    aa = y;
    y = z;
    z = ao[n][m + 1][l];
    ad = ab;
    ab = ac;
    ac = ap[n][m + 1][l];
    ag = ae;
    ae = af;
    af = aq[n][m + 1][l];
    aj = ah;
    ah = ai;
    ai = ar[n][m + 1][l];
    am = ak;
    ak = al;
    al = as[n][m + 1][l];
    p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - u[2]);
    p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - u[1] * aa);
    p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - u[2] * aa + (r[4] - al - u[4] + am) * 0.4);
    p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - u[3] * aa);
    p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * u[4] - 0.4 * am) * aa);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  m = j - 3;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n][m + 2][l][0];
  s[1] = at[n][m + 2][l][1];
  s[2] = at[n][m + 2][l][2];
  s[3] = at[n][m + 2][l][3];
  s[4] = at[n][m + 2][l][4];
  x = v;
  v = w;
  w = an[n][m + 1][l];
  aa = y;
  y = z;
  z = ao[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = ap[n][m + 1][l];
  ag = ae;
  ae = af;
  af = aq[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = ar[n][m + 1][l];
  am = ak;
  ak = al;
  al = as[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - u[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - u[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - u[2] * aa + (r[4] - al - u[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - u[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * u[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  m = j - 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = an[n][m + 1][l];
  aa = y;
  y = z;
  z = ao[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = ap[n][m + 1][l];
  ag = ae;
  ae = af;
  af = aq[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = ar[n][m + 1][l];
  am = ak;
  ak = al;
  al = as[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - u[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - u[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - u[2] * aa + (r[4] - al - u[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - u[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * u[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 5.0 * q[o]);
  }
}","[ 16   8   8 ..., 127   0 127]"
36,npb-3.3-BT-compute_rhs5,A,1260,23,8,0,87,0,320454824,62,GPU,5.403192,0.477471,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5];
  double u[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  m = get_global_id(1) + 1;
  l = get_global_id(0) + 1;
  if (m > (j - 2) || l > (i - 2))
    return;

  __global double(*an)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*ao)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*ap)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  __global double(*aq)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;
  __global double(*ar)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])f;
  __global double(*as)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])g;
  __global double(*at)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*au)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])h;

  q[0] = at[0][m][l][0];
  q[1] = at[0][m][l][1];
  q[2] = at[0][m][l][2];
  q[3] = at[0][m][l][3];
  q[4] = at[0][m][l][4];
  r[0] = at[1][m][l][0];
  r[1] = at[1][m][l][1];
  r[2] = at[1][m][l][2];
  r[3] = at[1][m][l][3];
  r[4] = at[1][m][l][4];
  s[0] = at[2][m][l][0];
  s[1] = at[2][m][l][1];
  s[2] = at[2][m][l][2];
  s[3] = at[2][m][l][3];
  s[4] = at[2][m][l][4];

  v = an[0][m][l];
  w = an[1][m][l];
  y = ao[0][m][l];
  z = ao[1][m][l];
  ab = ap[0][m][l];
  ac = ap[1][m][l];
  ae = aq[0][m][l];
  af = aq[1][m][l];
  ah = ar[0][m][l];
  ai = ar[1][m][l];
  ak = as[0][m][l];
  al = as[1][m][l];
  n = 1;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n + 2][m][l][0];
  s[1] = at[n + 2][m][l][1];
  s[2] = at[n + 2][m][l][2];
  s[3] = at[n + 2][m][l][3];
  s[4] = at[n + 2][m][l][4];
  x = v;
  v = w;
  w = an[n + 1][m][l];
  aa = y;
  y = z;
  z = ao[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = ap[n + 1][m][l];
  ag = ae;
  ae = af;
  af = aq[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = ar[n + 1][m][l];
  am = ak;
  ak = al;
  al = as[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - u[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - u[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - u[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - u[3] * ad + (r[4] - al - u[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * u[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  n = 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n + 2][m][l][0];
  s[1] = at[n + 2][m][l][1];
  s[2] = at[n + 2][m][l][2];
  s[3] = at[n + 2][m][l][3];
  s[4] = at[n + 2][m][l][4];
  x = v;
  v = w;
  w = an[n + 1][m][l];
  aa = y;
  y = z;
  z = ao[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = ap[n + 1][m][l];
  ag = ae;
  ae = af;
  af = aq[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = ar[n + 1][m][l];
  am = ak;
  ak = al;
  al = as[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - u[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - u[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - u[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - u[3] * ad + (r[4] - al - u[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * u[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (n = 3; n <= k - 4; n++) {
    t[0] = u[0];
    t[1] = u[1];
    t[2] = u[2];
    t[3] = u[3];
    t[4] = u[4];
    u[0] = q[0];
    u[1] = q[1];
    u[2] = q[2];
    u[3] = q[3];
    u[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = at[n + 2][m][l][0];
    s[1] = at[n + 2][m][l][1];
    s[2] = at[n + 2][m][l][2];
    s[3] = at[n + 2][m][l][3];
    s[4] = at[n + 2][m][l][4];
    x = v;
    v = w;
    w = an[n + 1][m][l];
    aa = y;
    y = z;
    z = ao[n + 1][m][l];
    ad = ab;
    ab = ac;
    ac = ap[n + 1][m][l];
    ag = ae;
    ae = af;
    af = aq[n + 1][m][l];
    aj = ah;
    ah = ai;
    ai = ar[n + 1][m][l];
    am = ak;
    ak = al;
    al = as[n + 1][m][l];
    p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - u[3]);
    p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - u[1] * ad);
    p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - u[2] * ad);
    p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - u[3] * ad + (r[4] - al - u[4] + am) * 0.4);
    p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * u[4] - 0.4 * am) * ad);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  n = k - 3;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n + 2][m][l][0];
  s[1] = at[n + 2][m][l][1];
  s[2] = at[n + 2][m][l][2];
  s[3] = at[n + 2][m][l][3];
  s[4] = at[n + 2][m][l][4];
  x = v;
  v = w;
  w = an[n + 1][m][l];
  aa = y;
  y = z;
  z = ao[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = ap[n + 1][m][l];
  ag = ae;
  ae = af;
  af = aq[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = ar[n + 1][m][l];
  am = ak;
  ak = al;
  al = as[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - u[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - u[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - u[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - u[3] * ad + (r[4] - al - u[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * u[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  n = k - 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = an[n + 1][m][l];
  aa = y;
  y = z;
  z = ao[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = ap[n + 1][m][l];
  ag = ae;
  ae = af;
  af = aq[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = ar[n + 1][m][l];
  am = ak;
  ak = al;
  al = as[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - u[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - u[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - u[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - u[3] * ad + (r[4] - al - u[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * u[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 5.0 * q[o]);
  }
}","[  1 113  51 ..., 127   0 127]"
37,npb-3.3-BT-compute_rhs5,B,1260,23,8,0,87,0,1313673512,32,GPU,21.249054,1.977856,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5];
  double u[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  m = get_global_id(1) + 1;
  l = get_global_id(0) + 1;
  if (m > (j - 2) || l > (i - 2))
    return;

  __global double(*an)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*ao)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*ap)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  __global double(*aq)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;
  __global double(*ar)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])f;
  __global double(*as)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])g;
  __global double(*at)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*au)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])h;

  q[0] = at[0][m][l][0];
  q[1] = at[0][m][l][1];
  q[2] = at[0][m][l][2];
  q[3] = at[0][m][l][3];
  q[4] = at[0][m][l][4];
  r[0] = at[1][m][l][0];
  r[1] = at[1][m][l][1];
  r[2] = at[1][m][l][2];
  r[3] = at[1][m][l][3];
  r[4] = at[1][m][l][4];
  s[0] = at[2][m][l][0];
  s[1] = at[2][m][l][1];
  s[2] = at[2][m][l][2];
  s[3] = at[2][m][l][3];
  s[4] = at[2][m][l][4];

  v = an[0][m][l];
  w = an[1][m][l];
  y = ao[0][m][l];
  z = ao[1][m][l];
  ab = ap[0][m][l];
  ac = ap[1][m][l];
  ae = aq[0][m][l];
  af = aq[1][m][l];
  ah = ar[0][m][l];
  ai = ar[1][m][l];
  ak = as[0][m][l];
  al = as[1][m][l];
  n = 1;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n + 2][m][l][0];
  s[1] = at[n + 2][m][l][1];
  s[2] = at[n + 2][m][l][2];
  s[3] = at[n + 2][m][l][3];
  s[4] = at[n + 2][m][l][4];
  x = v;
  v = w;
  w = an[n + 1][m][l];
  aa = y;
  y = z;
  z = ao[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = ap[n + 1][m][l];
  ag = ae;
  ae = af;
  af = aq[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = ar[n + 1][m][l];
  am = ak;
  ak = al;
  al = as[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - u[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - u[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - u[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - u[3] * ad + (r[4] - al - u[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * u[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  n = 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n + 2][m][l][0];
  s[1] = at[n + 2][m][l][1];
  s[2] = at[n + 2][m][l][2];
  s[3] = at[n + 2][m][l][3];
  s[4] = at[n + 2][m][l][4];
  x = v;
  v = w;
  w = an[n + 1][m][l];
  aa = y;
  y = z;
  z = ao[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = ap[n + 1][m][l];
  ag = ae;
  ae = af;
  af = aq[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = ar[n + 1][m][l];
  am = ak;
  ak = al;
  al = as[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - u[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - u[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - u[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - u[3] * ad + (r[4] - al - u[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * u[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (n = 3; n <= k - 4; n++) {
    t[0] = u[0];
    t[1] = u[1];
    t[2] = u[2];
    t[3] = u[3];
    t[4] = u[4];
    u[0] = q[0];
    u[1] = q[1];
    u[2] = q[2];
    u[3] = q[3];
    u[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = at[n + 2][m][l][0];
    s[1] = at[n + 2][m][l][1];
    s[2] = at[n + 2][m][l][2];
    s[3] = at[n + 2][m][l][3];
    s[4] = at[n + 2][m][l][4];
    x = v;
    v = w;
    w = an[n + 1][m][l];
    aa = y;
    y = z;
    z = ao[n + 1][m][l];
    ad = ab;
    ab = ac;
    ac = ap[n + 1][m][l];
    ag = ae;
    ae = af;
    af = aq[n + 1][m][l];
    aj = ah;
    ah = ai;
    ai = ar[n + 1][m][l];
    am = ak;
    ak = al;
    al = as[n + 1][m][l];
    p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - u[3]);
    p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - u[1] * ad);
    p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - u[2] * ad);
    p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - u[3] * ad + (r[4] - al - u[4] + am) * 0.4);
    p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * u[4] - 0.4 * am) * ad);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  n = k - 3;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n + 2][m][l][0];
  s[1] = at[n + 2][m][l][1];
  s[2] = at[n + 2][m][l][2];
  s[3] = at[n + 2][m][l][3];
  s[4] = at[n + 2][m][l][4];
  x = v;
  v = w;
  w = an[n + 1][m][l];
  aa = y;
  y = z;
  z = ao[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = ap[n + 1][m][l];
  ag = ae;
  ae = af;
  af = aq[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = ar[n + 1][m][l];
  am = ak;
  ak = al;
  al = as[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - u[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - u[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - u[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - u[3] * ad + (r[4] - al - u[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * u[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  n = k - 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = an[n + 1][m][l];
  aa = y;
  y = z;
  z = ao[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = ap[n + 1][m][l];
  ag = ae;
  ae = af;
  af = aq[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = ar[n + 1][m][l];
  am = ak;
  ak = al;
  al = as[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - u[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - u[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - u[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - u[3] * ad + (r[4] - al - u[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * u[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 5.0 * q[o]);
  }
}","[  1 113  51 ..., 127   0 127]"
38,npb-3.3-BT-compute_rhs5,S,1260,23,8,0,87,0,1807992,60,CPU,0.088327,0.102498,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5];
  double u[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  m = get_global_id(1) + 1;
  l = get_global_id(0) + 1;
  if (m > (j - 2) || l > (i - 2))
    return;

  __global double(*an)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*ao)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*ap)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  __global double(*aq)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;
  __global double(*ar)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])f;
  __global double(*as)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])g;
  __global double(*at)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*au)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])h;

  q[0] = at[0][m][l][0];
  q[1] = at[0][m][l][1];
  q[2] = at[0][m][l][2];
  q[3] = at[0][m][l][3];
  q[4] = at[0][m][l][4];
  r[0] = at[1][m][l][0];
  r[1] = at[1][m][l][1];
  r[2] = at[1][m][l][2];
  r[3] = at[1][m][l][3];
  r[4] = at[1][m][l][4];
  s[0] = at[2][m][l][0];
  s[1] = at[2][m][l][1];
  s[2] = at[2][m][l][2];
  s[3] = at[2][m][l][3];
  s[4] = at[2][m][l][4];

  v = an[0][m][l];
  w = an[1][m][l];
  y = ao[0][m][l];
  z = ao[1][m][l];
  ab = ap[0][m][l];
  ac = ap[1][m][l];
  ae = aq[0][m][l];
  af = aq[1][m][l];
  ah = ar[0][m][l];
  ai = ar[1][m][l];
  ak = as[0][m][l];
  al = as[1][m][l];
  n = 1;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n + 2][m][l][0];
  s[1] = at[n + 2][m][l][1];
  s[2] = at[n + 2][m][l][2];
  s[3] = at[n + 2][m][l][3];
  s[4] = at[n + 2][m][l][4];
  x = v;
  v = w;
  w = an[n + 1][m][l];
  aa = y;
  y = z;
  z = ao[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = ap[n + 1][m][l];
  ag = ae;
  ae = af;
  af = aq[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = ar[n + 1][m][l];
  am = ak;
  ak = al;
  al = as[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - u[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - u[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - u[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - u[3] * ad + (r[4] - al - u[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * u[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  n = 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n + 2][m][l][0];
  s[1] = at[n + 2][m][l][1];
  s[2] = at[n + 2][m][l][2];
  s[3] = at[n + 2][m][l][3];
  s[4] = at[n + 2][m][l][4];
  x = v;
  v = w;
  w = an[n + 1][m][l];
  aa = y;
  y = z;
  z = ao[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = ap[n + 1][m][l];
  ag = ae;
  ae = af;
  af = aq[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = ar[n + 1][m][l];
  am = ak;
  ak = al;
  al = as[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - u[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - u[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - u[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - u[3] * ad + (r[4] - al - u[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * u[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (n = 3; n <= k - 4; n++) {
    t[0] = u[0];
    t[1] = u[1];
    t[2] = u[2];
    t[3] = u[3];
    t[4] = u[4];
    u[0] = q[0];
    u[1] = q[1];
    u[2] = q[2];
    u[3] = q[3];
    u[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = at[n + 2][m][l][0];
    s[1] = at[n + 2][m][l][1];
    s[2] = at[n + 2][m][l][2];
    s[3] = at[n + 2][m][l][3];
    s[4] = at[n + 2][m][l][4];
    x = v;
    v = w;
    w = an[n + 1][m][l];
    aa = y;
    y = z;
    z = ao[n + 1][m][l];
    ad = ab;
    ab = ac;
    ac = ap[n + 1][m][l];
    ag = ae;
    ae = af;
    af = aq[n + 1][m][l];
    aj = ah;
    ah = ai;
    ai = ar[n + 1][m][l];
    am = ak;
    ak = al;
    al = as[n + 1][m][l];
    p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - u[3]);
    p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - u[1] * ad);
    p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - u[2] * ad);
    p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - u[3] * ad + (r[4] - al - u[4] + am) * 0.4);
    p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * u[4] - 0.4 * am) * ad);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  n = k - 3;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n + 2][m][l][0];
  s[1] = at[n + 2][m][l][1];
  s[2] = at[n + 2][m][l][2];
  s[3] = at[n + 2][m][l][3];
  s[4] = at[n + 2][m][l][4];
  x = v;
  v = w;
  w = an[n + 1][m][l];
  aa = y;
  y = z;
  z = ao[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = ap[n + 1][m][l];
  ag = ae;
  ae = af;
  af = aq[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = ar[n + 1][m][l];
  am = ak;
  ak = al;
  al = as[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - u[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - u[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - u[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - u[3] * ad + (r[4] - al - u[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * u[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  n = k - 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = an[n + 1][m][l];
  aa = y;
  y = z;
  z = ao[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = ap[n + 1][m][l];
  ag = ae;
  ae = af;
  af = aq[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = ar[n + 1][m][l];
  am = ak;
  ak = al;
  al = as[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - u[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - u[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - u[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - u[3] * ad + (r[4] - al - u[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * u[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 5.0 * q[o]);
  }
}","[  1 113  51 ..., 127   0 127]"
39,npb-3.3-BT-compute_rhs5,W,1260,23,8,0,87,0,15949464,44,GPU,0.265873,0.12849000000000002,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5];
  double u[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  m = get_global_id(1) + 1;
  l = get_global_id(0) + 1;
  if (m > (j - 2) || l > (i - 2))
    return;

  __global double(*an)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*ao)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*ap)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  __global double(*aq)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;
  __global double(*ar)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])f;
  __global double(*as)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])g;
  __global double(*at)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*au)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])h;

  q[0] = at[0][m][l][0];
  q[1] = at[0][m][l][1];
  q[2] = at[0][m][l][2];
  q[3] = at[0][m][l][3];
  q[4] = at[0][m][l][4];
  r[0] = at[1][m][l][0];
  r[1] = at[1][m][l][1];
  r[2] = at[1][m][l][2];
  r[3] = at[1][m][l][3];
  r[4] = at[1][m][l][4];
  s[0] = at[2][m][l][0];
  s[1] = at[2][m][l][1];
  s[2] = at[2][m][l][2];
  s[3] = at[2][m][l][3];
  s[4] = at[2][m][l][4];

  v = an[0][m][l];
  w = an[1][m][l];
  y = ao[0][m][l];
  z = ao[1][m][l];
  ab = ap[0][m][l];
  ac = ap[1][m][l];
  ae = aq[0][m][l];
  af = aq[1][m][l];
  ah = ar[0][m][l];
  ai = ar[1][m][l];
  ak = as[0][m][l];
  al = as[1][m][l];
  n = 1;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n + 2][m][l][0];
  s[1] = at[n + 2][m][l][1];
  s[2] = at[n + 2][m][l][2];
  s[3] = at[n + 2][m][l][3];
  s[4] = at[n + 2][m][l][4];
  x = v;
  v = w;
  w = an[n + 1][m][l];
  aa = y;
  y = z;
  z = ao[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = ap[n + 1][m][l];
  ag = ae;
  ae = af;
  af = aq[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = ar[n + 1][m][l];
  am = ak;
  ak = al;
  al = as[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - u[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - u[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - u[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - u[3] * ad + (r[4] - al - u[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * u[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  n = 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n + 2][m][l][0];
  s[1] = at[n + 2][m][l][1];
  s[2] = at[n + 2][m][l][2];
  s[3] = at[n + 2][m][l][3];
  s[4] = at[n + 2][m][l][4];
  x = v;
  v = w;
  w = an[n + 1][m][l];
  aa = y;
  y = z;
  z = ao[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = ap[n + 1][m][l];
  ag = ae;
  ae = af;
  af = aq[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = ar[n + 1][m][l];
  am = ak;
  ak = al;
  al = as[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - u[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - u[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - u[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - u[3] * ad + (r[4] - al - u[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * u[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (n = 3; n <= k - 4; n++) {
    t[0] = u[0];
    t[1] = u[1];
    t[2] = u[2];
    t[3] = u[3];
    t[4] = u[4];
    u[0] = q[0];
    u[1] = q[1];
    u[2] = q[2];
    u[3] = q[3];
    u[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = at[n + 2][m][l][0];
    s[1] = at[n + 2][m][l][1];
    s[2] = at[n + 2][m][l][2];
    s[3] = at[n + 2][m][l][3];
    s[4] = at[n + 2][m][l][4];
    x = v;
    v = w;
    w = an[n + 1][m][l];
    aa = y;
    y = z;
    z = ao[n + 1][m][l];
    ad = ab;
    ab = ac;
    ac = ap[n + 1][m][l];
    ag = ae;
    ae = af;
    af = aq[n + 1][m][l];
    aj = ah;
    ah = ai;
    ai = ar[n + 1][m][l];
    am = ak;
    ak = al;
    al = as[n + 1][m][l];
    p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - u[3]);
    p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - u[1] * ad);
    p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - u[2] * ad);
    p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - u[3] * ad + (r[4] - al - u[4] + am) * 0.4);
    p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * u[4] - 0.4 * am) * ad);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  n = k - 3;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = at[n + 2][m][l][0];
  s[1] = at[n + 2][m][l][1];
  s[2] = at[n + 2][m][l][2];
  s[3] = at[n + 2][m][l][3];
  s[4] = at[n + 2][m][l][4];
  x = v;
  v = w;
  w = an[n + 1][m][l];
  aa = y;
  y = z;
  z = ao[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = ap[n + 1][m][l];
  ag = ae;
  ae = af;
  af = aq[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = ar[n + 1][m][l];
  am = ak;
  ak = al;
  al = as[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - u[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - u[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - u[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - u[3] * ad + (r[4] - al - u[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * u[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  n = k - 2;
  t[0] = u[0];
  t[1] = u[1];
  t[2] = u[2];
  t[3] = u[3];
  t[4] = u[4];
  u[0] = q[0];
  u[1] = q[1];
  u[2] = q[2];
  u[3] = q[3];
  u[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = an[n + 1][m][l];
  aa = y;
  y = z;
  z = ao[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = ap[n + 1][m][l];
  ag = ae;
  ae = af;
  af = aq[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = ar[n + 1][m][l];
  am = ak;
  ak = al;
  al = as[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + u[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - u[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + u[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - u[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + u[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - u[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + u[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - u[3] * ad + (r[4] - al - u[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + u[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + u[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * u[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (t[o] - 4.0 * u[o] + 5.0 * q[o]);
  }
}","[  1 113  51 ..., 127   0 127]"
40,npb-3.3-BT-compute_rhs6,A,16,4,1,0,2,0,320454824,62,GPU,0.6972970000000001,0.24198499999999998,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  e = get_global_id(0) + 1;
  if (g > (d - 2) || f > (c - 2) || e > (b - 2))
    return;

  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[g][f][e][h] = i[g][f][e][h] * 0.010;
  }
}","[129 129 129 ..., 127   0 127]"
41,npb-3.3-BT-compute_rhs6,B,16,4,1,0,2,0,1313673512,32,GPU,4.5177760000000005,0.784433,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  e = get_global_id(0) + 1;
  if (g > (d - 2) || f > (c - 2) || e > (b - 2))
    return;

  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[g][f][e][h] = i[g][f][e][h] * 0.010;
  }
}","[129 129 129 ..., 127   0 127]"
42,npb-3.3-BT-compute_rhs6,S,16,4,1,0,2,0,1807992,60,GPU,0.077837,0.075706,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  e = get_global_id(0) + 1;
  if (g > (d - 2) || f > (c - 2) || e > (b - 2))
    return;

  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[g][f][e][h] = i[g][f][e][h] * 0.010;
  }
}","[129 129 129 ..., 127   0 127]"
43,npb-3.3-BT-compute_rhs6,W,16,4,1,0,2,0,15949464,44,GPU,0.122144,0.085422,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  e = get_global_id(0) + 1;
  if (g > (d - 2) || f > (c - 2) || e > (b - 2))
    return;

  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[g][f][e][h] = i[g][f][e][h] * 0.010;
  }
}","[129 129 129 ..., 127   0 127]"
44,npb-3.3-BT-error_norm,A,52,10,11,8,2,0,320454224,6,CPU,1.9790330000000005,4.531341,"__kernel void A(__global double* a, __constant double* b, __global double* c, __local double* d, int e, int f, int g) {
  int h, i, j, k, l;
  double m, n, o, p[5], q;
  __local double* r;

  j = get_global_id(0) + 1;
  l = get_local_id(0);
  r = &d[l * 5];

  for (k = 0; k < 5; k++) {
    r[k] = 0.0;
  }

  if (j < g) {
    __global double(*s)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

    o = (double)j * (1.0 / (double)(12 - 1));
    for (i = 0; i < f; i++) {
      n = (double)i * (1.0 / (double)(12 - 1));
      for (h = 0; h < e; h++) {
        m = (double)h * (1.0 / (double)(12 - 1));
        A(m, n, o, p, b);

        for (k = 0; k < 5; k++) {
          q = s[j][i][h][k] - p[k];
          r[k] = r[k] + q * q;
        }
      }
    }
  }

  barrier(1);

  if (l == 0) {
    for (h = 1; h < get_local_size(0); h++) {
      __local double* t = &d[h * 5];
      for (k = 0; k < 5; k++) {
        r[k] += t[k];
      }
    }

    __global double* u = &c[get_group_id(0) * 5];
    for (k = 0; k < 5; k++) {
      u[k] = r[k];
    }
  }
}","[129 129 129 ..., 127   0 127]"
45,npb-3.3-BT-error_norm,B,52,10,11,8,2,0,1313673032,10,CPU,8.299583,11.324877,"__kernel void A(__global double* a, __constant double* b, __global double* c, __local double* d, int e, int f, int g) {
  int h, i, j, k, l;
  double m, n, o, p[5], q;
  __local double* r;

  j = get_global_id(0) + 1;
  l = get_local_id(0);
  r = &d[l * 5];

  for (k = 0; k < 5; k++) {
    r[k] = 0.0;
  }

  if (j < g) {
    __global double(*s)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

    o = (double)j * (1.0 / (double)(12 - 1));
    for (i = 0; i < f; i++) {
      n = (double)i * (1.0 / (double)(12 - 1));
      for (h = 0; h < e; h++) {
        m = (double)h * (1.0 / (double)(12 - 1));
        A(m, n, o, p, b);

        for (k = 0; k < 5; k++) {
          q = s[j][i][h][k] - p[k];
          r[k] = r[k] + q * q;
        }
      }
    }
  }

  barrier(1);

  if (l == 0) {
    for (h = 1; h < get_local_size(0); h++) {
      __local double* t = &d[h * 5];
      for (k = 0; k < 5; k++) {
        r[k] += t[k];
      }
    }

    __global double* u = &c[get_group_id(0) * 5];
    for (k = 0; k < 5; k++) {
      u[k] = r[k];
    }
  }
}","[129 129 129 ..., 127   0 127]"
46,npb-3.3-BT-error_norm,S,52,10,11,8,2,0,1807992,1,CPU,0.096604,0.21065,"__kernel void A(__global double* a, __constant double* b, __global double* c, __local double* d, int e, int f, int g) {
  int h, i, j, k, l;
  double m, n, o, p[5], q;
  __local double* r;

  j = get_global_id(0) + 1;
  l = get_local_id(0);
  r = &d[l * 5];

  for (k = 0; k < 5; k++) {
    r[k] = 0.0;
  }

  if (j < g) {
    __global double(*s)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

    o = (double)j * (1.0 / (double)(12 - 1));
    for (i = 0; i < f; i++) {
      n = (double)i * (1.0 / (double)(12 - 1));
      for (h = 0; h < e; h++) {
        m = (double)h * (1.0 / (double)(12 - 1));
        A(m, n, o, p, b);

        for (k = 0; k < 5; k++) {
          q = s[j][i][h][k] - p[k];
          r[k] = r[k] + q * q;
        }
      }
    }
  }

  barrier(1);

  if (l == 0) {
    for (h = 1; h < get_local_size(0); h++) {
      __local double* t = &d[h * 5];
      for (k = 0; k < 5; k++) {
        r[k] += t[k];
      }
    }

    __global double* u = &c[get_group_id(0) * 5];
    for (k = 0; k < 5; k++) {
      u[k] = r[k];
    }
  }
}","[129 129 129 ..., 127   0 127]"
47,npb-3.3-BT-error_norm,W,52,10,11,8,2,0,15948384,2,CPU,0.221967,0.718982,"__kernel void A(__global double* a, __constant double* b, __global double* c, __local double* d, int e, int f, int g) {
  int h, i, j, k, l;
  double m, n, o, p[5], q;
  __local double* r;

  j = get_global_id(0) + 1;
  l = get_local_id(0);
  r = &d[l * 5];

  for (k = 0; k < 5; k++) {
    r[k] = 0.0;
  }

  if (j < g) {
    __global double(*s)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

    o = (double)j * (1.0 / (double)(12 - 1));
    for (i = 0; i < f; i++) {
      n = (double)i * (1.0 / (double)(12 - 1));
      for (h = 0; h < e; h++) {
        m = (double)h * (1.0 / (double)(12 - 1));
        A(m, n, o, p, b);

        for (k = 0; k < 5; k++) {
          q = s[j][i][h][k] - p[k];
          r[k] = r[k] + q * q;
        }
      }
    }
  }

  barrier(1);

  if (l == 0) {
    for (h = 1; h < get_local_size(0); h++) {
      __local double* t = &d[h * 5];
      for (k = 0; k < 5; k++) {
        r[k] += t[k];
      }
    }

    __global double* u = &c[get_group_id(0) * 5];
    for (k = 0; k < 5; k++) {
      u[k] = r[k];
    }
  }
}","[129 129 129 ..., 127   0 127]"
48,npb-3.3-BT-exact_rhs1,A,12,4,1,0,1,0,320454824,64,GPU,5.1372550000000015,0.21415,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(2);
  int f = get_global_id(1);
  int g = get_global_id(0);
  if (e >= d || f >= c || g >= b)
    return;

  int h;
  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[e][f][g][h] = 0.0;
  }
}","[129 129 129 ..., 127   0 127]"
49,npb-3.3-BT-exact_rhs1,B,12,4,1,0,1,0,1313673512,32,GPU,27.735931,0.642886,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(2);
  int f = get_global_id(1);
  int g = get_global_id(0);
  if (e >= d || f >= c || g >= b)
    return;

  int h;
  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[e][f][g][h] = 0.0;
  }
}","[129 129 129 ..., 127   0 127]"
50,npb-3.3-BT-exact_rhs1,S,12,4,1,0,1,0,1807992,60,GPU,0.13508599999999998,0.07484199999999999,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(2);
  int f = get_global_id(1);
  int g = get_global_id(0);
  if (e >= d || f >= c || g >= b)
    return;

  int h;
  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[e][f][g][h] = 0.0;
  }
}","[129 129 129 ..., 127   0 127]"
51,npb-3.3-BT-exact_rhs1,W,12,4,1,0,1,0,15949464,48,GPU,0.206058,0.08770599999999999,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(2);
  int f = get_global_id(1);
  int g = get_global_id(0);
  if (e >= d || f >= c || g >= b)
    return;

  int h;
  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[e][f][g][h] = 0.0;
  }
}","[129 129 129 ..., 127   0 127]"
52,npb-3.3-BT-exact_rhs2,A,340,26,5,0,112,0,320454824,62,GPU,9.048316999999999,8.97033,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  r = get_global_id(1) + 1;
  q = get_global_id(0) + 1;
  if (r > (i - 2) || q > (h - 2))
    return;

  int u = (r - 1) * h + (q - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  m = (double)r * (1.0 / (double)(12 - 1));
  l = (double)q * (1.0 / (double)(12 - 1));

  for (p = 0; p < g; p++) {
    k = (double)p * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[p][o] = j[o];
    }

    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[p][o] = n * j[o];
    }

    aa[p] = z[p][1] * z[p][1];
    z[p][0] = aa[p] + z[p][2] * z[p][2] + z[p][3] * z[p][3];
    ab[p] = 0.5 * (z[p][1] * y[p][1] + z[p][2] * y[p][2] + z[p][3] * y[p][3]);
  }

  for (p = 1; p <= g - 2; p++) {
    t = p - 1;
    s = p + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][1] - y[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][0] - 2.0 * y[p][0] + y[t][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[s][1] * z[s][1] + 0.4 * (y[s][4] - ab[s])) - (y[t][1] * z[t][1] + 0.4 * (y[t][4] - ab[t]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][1] - 2.0 * z[p][1] + z[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][1] - 2.0 * y[p][1] + y[t][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][2] * z[s][1] - y[t][2] * z[t][1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][2] - 2.0 * z[p][2] + z[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][2] - 2.0 * y[p][2] + y[t][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][3] * z[s][1] - y[t][3] * z[t][1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][3] - 2.0 * z[p][3] + z[t][3]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][3] - 2.0 * y[p][3] + y[t][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[s][1] * (1.4 * y[s][4] - 0.4 * ab[s]) - z[t][1] * (1.4 * y[t][4] - 0.4 * ab[t])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][0] - 2.0 * z[p][0] + z[t][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[s] - 2.0 * aa[p] + aa[t]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][4] - 2.0 * z[p][4] + z[t][4]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][4] - 2.0 * y[p][4] + y[t][4]);
  }

  for (o = 0; o < 5; o++) {
    p = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
    p = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (p = 3; p <= g - 4; p++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    p = g - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o]);
    p = g - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 5.0 * y[p][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
53,npb-3.3-BT-exact_rhs2,B,340,26,5,0,112,0,1313673512,32,GPU,41.526022,41.22279,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  r = get_global_id(1) + 1;
  q = get_global_id(0) + 1;
  if (r > (i - 2) || q > (h - 2))
    return;

  int u = (r - 1) * h + (q - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  m = (double)r * (1.0 / (double)(12 - 1));
  l = (double)q * (1.0 / (double)(12 - 1));

  for (p = 0; p < g; p++) {
    k = (double)p * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[p][o] = j[o];
    }

    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[p][o] = n * j[o];
    }

    aa[p] = z[p][1] * z[p][1];
    z[p][0] = aa[p] + z[p][2] * z[p][2] + z[p][3] * z[p][3];
    ab[p] = 0.5 * (z[p][1] * y[p][1] + z[p][2] * y[p][2] + z[p][3] * y[p][3]);
  }

  for (p = 1; p <= g - 2; p++) {
    t = p - 1;
    s = p + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][1] - y[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][0] - 2.0 * y[p][0] + y[t][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[s][1] * z[s][1] + 0.4 * (y[s][4] - ab[s])) - (y[t][1] * z[t][1] + 0.4 * (y[t][4] - ab[t]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][1] - 2.0 * z[p][1] + z[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][1] - 2.0 * y[p][1] + y[t][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][2] * z[s][1] - y[t][2] * z[t][1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][2] - 2.0 * z[p][2] + z[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][2] - 2.0 * y[p][2] + y[t][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][3] * z[s][1] - y[t][3] * z[t][1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][3] - 2.0 * z[p][3] + z[t][3]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][3] - 2.0 * y[p][3] + y[t][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[s][1] * (1.4 * y[s][4] - 0.4 * ab[s]) - z[t][1] * (1.4 * y[t][4] - 0.4 * ab[t])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][0] - 2.0 * z[p][0] + z[t][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[s] - 2.0 * aa[p] + aa[t]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][4] - 2.0 * z[p][4] + z[t][4]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][4] - 2.0 * y[p][4] + y[t][4]);
  }

  for (o = 0; o < 5; o++) {
    p = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
    p = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (p = 3; p <= g - 4; p++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    p = g - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o]);
    p = g - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 5.0 * y[p][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
54,npb-3.3-BT-exact_rhs2,S,340,26,5,0,112,0,1807992,60,CPU,0.187816,0.20576599999999998,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  r = get_global_id(1) + 1;
  q = get_global_id(0) + 1;
  if (r > (i - 2) || q > (h - 2))
    return;

  int u = (r - 1) * h + (q - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  m = (double)r * (1.0 / (double)(12 - 1));
  l = (double)q * (1.0 / (double)(12 - 1));

  for (p = 0; p < g; p++) {
    k = (double)p * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[p][o] = j[o];
    }

    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[p][o] = n * j[o];
    }

    aa[p] = z[p][1] * z[p][1];
    z[p][0] = aa[p] + z[p][2] * z[p][2] + z[p][3] * z[p][3];
    ab[p] = 0.5 * (z[p][1] * y[p][1] + z[p][2] * y[p][2] + z[p][3] * y[p][3]);
  }

  for (p = 1; p <= g - 2; p++) {
    t = p - 1;
    s = p + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][1] - y[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][0] - 2.0 * y[p][0] + y[t][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[s][1] * z[s][1] + 0.4 * (y[s][4] - ab[s])) - (y[t][1] * z[t][1] + 0.4 * (y[t][4] - ab[t]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][1] - 2.0 * z[p][1] + z[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][1] - 2.0 * y[p][1] + y[t][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][2] * z[s][1] - y[t][2] * z[t][1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][2] - 2.0 * z[p][2] + z[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][2] - 2.0 * y[p][2] + y[t][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][3] * z[s][1] - y[t][3] * z[t][1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][3] - 2.0 * z[p][3] + z[t][3]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][3] - 2.0 * y[p][3] + y[t][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[s][1] * (1.4 * y[s][4] - 0.4 * ab[s]) - z[t][1] * (1.4 * y[t][4] - 0.4 * ab[t])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][0] - 2.0 * z[p][0] + z[t][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[s] - 2.0 * aa[p] + aa[t]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][4] - 2.0 * z[p][4] + z[t][4]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][4] - 2.0 * y[p][4] + y[t][4]);
  }

  for (o = 0; o < 5; o++) {
    p = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
    p = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (p = 3; p <= g - 4; p++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    p = g - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o]);
    p = g - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 5.0 * y[p][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
55,npb-3.3-BT-exact_rhs2,W,340,26,5,0,112,0,15949464,44,GPU,0.398413,0.31719,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  r = get_global_id(1) + 1;
  q = get_global_id(0) + 1;
  if (r > (i - 2) || q > (h - 2))
    return;

  int u = (r - 1) * h + (q - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  m = (double)r * (1.0 / (double)(12 - 1));
  l = (double)q * (1.0 / (double)(12 - 1));

  for (p = 0; p < g; p++) {
    k = (double)p * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[p][o] = j[o];
    }

    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[p][o] = n * j[o];
    }

    aa[p] = z[p][1] * z[p][1];
    z[p][0] = aa[p] + z[p][2] * z[p][2] + z[p][3] * z[p][3];
    ab[p] = 0.5 * (z[p][1] * y[p][1] + z[p][2] * y[p][2] + z[p][3] * y[p][3]);
  }

  for (p = 1; p <= g - 2; p++) {
    t = p - 1;
    s = p + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][1] - y[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][0] - 2.0 * y[p][0] + y[t][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[s][1] * z[s][1] + 0.4 * (y[s][4] - ab[s])) - (y[t][1] * z[t][1] + 0.4 * (y[t][4] - ab[t]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][1] - 2.0 * z[p][1] + z[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][1] - 2.0 * y[p][1] + y[t][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][2] * z[s][1] - y[t][2] * z[t][1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][2] - 2.0 * z[p][2] + z[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][2] - 2.0 * y[p][2] + y[t][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][3] * z[s][1] - y[t][3] * z[t][1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][3] - 2.0 * z[p][3] + z[t][3]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][3] - 2.0 * y[p][3] + y[t][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[s][1] * (1.4 * y[s][4] - 0.4 * ab[s]) - z[t][1] * (1.4 * y[t][4] - 0.4 * ab[t])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][0] - 2.0 * z[p][0] + z[t][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[s] - 2.0 * aa[p] + aa[t]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][4] - 2.0 * z[p][4] + z[t][4]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][4] - 2.0 * y[p][4] + y[t][4]);
  }

  for (o = 0; o < 5; o++) {
    p = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
    p = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (p = 3; p <= g - 4; p++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    p = g - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o]);
    p = g - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 5.0 * y[p][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
56,npb-3.3-BT-exact_rhs3,A,340,26,5,0,112,0,320454224,62,CPU,5.079986,7.328639999999999,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  r = get_global_id(1) + 1;
  p = get_global_id(0) + 1;
  if (r > (i - 2) || p > (g - 2))
    return;

  int u = (r - 1) * g + (p - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  m = (double)r * (1.0 / (double)(12 - 1));
  k = (double)p * (1.0 / (double)(12 - 1));

  for (q = 0; q < h; q++) {
    l = (double)q * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[q][o] = j[o];
    }
    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[q][o] = n * j[o];
    }

    aa[q] = z[q][2] * z[q][2];
    z[q][0] = aa[q] + z[q][1] * z[q][1] + z[q][3] * z[q][3];
    ab[q] = 0.5 * (z[q][1] * y[q][1] + z[q][2] * y[q][2] + z[q][3] * y[q][3]);
  }

  for (q = 1; q <= h - 2; q++) {
    t = q - 1;
    s = q + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][2] - y[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][0] - 2.0 * y[q][0] + y[t][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][1] * z[s][2] - y[t][1] * z[t][2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][1] - 2.0 * z[q][1] + z[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][1] - 2.0 * y[q][1] + y[t][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[s][2] * z[s][2] + 0.4 * (y[s][4] - ab[s])) - (y[t][2] * z[t][2] + 0.4 * (y[t][4] - ab[t]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][2] - 2.0 * z[q][2] + z[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][2] - 2.0 * y[q][2] + y[t][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][3] * z[s][2] - y[t][3] * z[t][2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][3] - 2.0 * z[q][3] + z[t][3]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][3] - 2.0 * y[q][3] + y[t][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[s][2] * (1.4 * y[s][4] - 0.4 * ab[s]) - z[t][2] * (1.4 * y[t][4] - 0.4 * ab[t])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][0] - 2.0 * z[q][0] + z[t][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[s] - 2.0 * aa[q] + aa[t]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][4] - 2.0 * z[q][4] + z[t][4]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][4] - 2.0 * y[q][4] + y[t][4]);
  }

  for (o = 0; o < 5; o++) {
    q = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
    q = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (q = 3; q <= h - 4; q++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    q = h - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o]);
    q = h - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 5.0 * y[q][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
57,npb-3.3-BT-exact_rhs3,B,340,26,5,0,112,0,1313673032,32,CPU,18.217334,36.601139,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  r = get_global_id(1) + 1;
  p = get_global_id(0) + 1;
  if (r > (i - 2) || p > (g - 2))
    return;

  int u = (r - 1) * g + (p - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  m = (double)r * (1.0 / (double)(12 - 1));
  k = (double)p * (1.0 / (double)(12 - 1));

  for (q = 0; q < h; q++) {
    l = (double)q * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[q][o] = j[o];
    }
    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[q][o] = n * j[o];
    }

    aa[q] = z[q][2] * z[q][2];
    z[q][0] = aa[q] + z[q][1] * z[q][1] + z[q][3] * z[q][3];
    ab[q] = 0.5 * (z[q][1] * y[q][1] + z[q][2] * y[q][2] + z[q][3] * y[q][3]);
  }

  for (q = 1; q <= h - 2; q++) {
    t = q - 1;
    s = q + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][2] - y[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][0] - 2.0 * y[q][0] + y[t][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][1] * z[s][2] - y[t][1] * z[t][2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][1] - 2.0 * z[q][1] + z[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][1] - 2.0 * y[q][1] + y[t][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[s][2] * z[s][2] + 0.4 * (y[s][4] - ab[s])) - (y[t][2] * z[t][2] + 0.4 * (y[t][4] - ab[t]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][2] - 2.0 * z[q][2] + z[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][2] - 2.0 * y[q][2] + y[t][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][3] * z[s][2] - y[t][3] * z[t][2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][3] - 2.0 * z[q][3] + z[t][3]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][3] - 2.0 * y[q][3] + y[t][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[s][2] * (1.4 * y[s][4] - 0.4 * ab[s]) - z[t][2] * (1.4 * y[t][4] - 0.4 * ab[t])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][0] - 2.0 * z[q][0] + z[t][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[s] - 2.0 * aa[q] + aa[t]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][4] - 2.0 * z[q][4] + z[t][4]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][4] - 2.0 * y[q][4] + y[t][4]);
  }

  for (o = 0; o < 5; o++) {
    q = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
    q = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (q = 3; q <= h - 4; q++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    q = h - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o]);
    q = h - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 5.0 * y[q][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
58,npb-3.3-BT-exact_rhs3,S,340,26,5,0,112,0,1807992,60,CPU,0.155997,0.19689600000000002,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  r = get_global_id(1) + 1;
  p = get_global_id(0) + 1;
  if (r > (i - 2) || p > (g - 2))
    return;

  int u = (r - 1) * g + (p - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  m = (double)r * (1.0 / (double)(12 - 1));
  k = (double)p * (1.0 / (double)(12 - 1));

  for (q = 0; q < h; q++) {
    l = (double)q * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[q][o] = j[o];
    }
    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[q][o] = n * j[o];
    }

    aa[q] = z[q][2] * z[q][2];
    z[q][0] = aa[q] + z[q][1] * z[q][1] + z[q][3] * z[q][3];
    ab[q] = 0.5 * (z[q][1] * y[q][1] + z[q][2] * y[q][2] + z[q][3] * y[q][3]);
  }

  for (q = 1; q <= h - 2; q++) {
    t = q - 1;
    s = q + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][2] - y[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][0] - 2.0 * y[q][0] + y[t][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][1] * z[s][2] - y[t][1] * z[t][2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][1] - 2.0 * z[q][1] + z[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][1] - 2.0 * y[q][1] + y[t][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[s][2] * z[s][2] + 0.4 * (y[s][4] - ab[s])) - (y[t][2] * z[t][2] + 0.4 * (y[t][4] - ab[t]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][2] - 2.0 * z[q][2] + z[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][2] - 2.0 * y[q][2] + y[t][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][3] * z[s][2] - y[t][3] * z[t][2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][3] - 2.0 * z[q][3] + z[t][3]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][3] - 2.0 * y[q][3] + y[t][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[s][2] * (1.4 * y[s][4] - 0.4 * ab[s]) - z[t][2] * (1.4 * y[t][4] - 0.4 * ab[t])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][0] - 2.0 * z[q][0] + z[t][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[s] - 2.0 * aa[q] + aa[t]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][4] - 2.0 * z[q][4] + z[t][4]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][4] - 2.0 * y[q][4] + y[t][4]);
  }

  for (o = 0; o < 5; o++) {
    q = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
    q = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (q = 3; q <= h - 4; q++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    q = h - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o]);
    q = h - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 5.0 * y[q][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
59,npb-3.3-BT-exact_rhs3,W,340,26,5,0,112,0,15949464,44,GPU,0.37435999999999997,0.302221,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  r = get_global_id(1) + 1;
  p = get_global_id(0) + 1;
  if (r > (i - 2) || p > (g - 2))
    return;

  int u = (r - 1) * g + (p - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  m = (double)r * (1.0 / (double)(12 - 1));
  k = (double)p * (1.0 / (double)(12 - 1));

  for (q = 0; q < h; q++) {
    l = (double)q * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[q][o] = j[o];
    }
    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[q][o] = n * j[o];
    }

    aa[q] = z[q][2] * z[q][2];
    z[q][0] = aa[q] + z[q][1] * z[q][1] + z[q][3] * z[q][3];
    ab[q] = 0.5 * (z[q][1] * y[q][1] + z[q][2] * y[q][2] + z[q][3] * y[q][3]);
  }

  for (q = 1; q <= h - 2; q++) {
    t = q - 1;
    s = q + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][2] - y[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][0] - 2.0 * y[q][0] + y[t][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][1] * z[s][2] - y[t][1] * z[t][2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][1] - 2.0 * z[q][1] + z[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][1] - 2.0 * y[q][1] + y[t][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[s][2] * z[s][2] + 0.4 * (y[s][4] - ab[s])) - (y[t][2] * z[t][2] + 0.4 * (y[t][4] - ab[t]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][2] - 2.0 * z[q][2] + z[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][2] - 2.0 * y[q][2] + y[t][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][3] * z[s][2] - y[t][3] * z[t][2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][3] - 2.0 * z[q][3] + z[t][3]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][3] - 2.0 * y[q][3] + y[t][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[s][2] * (1.4 * y[s][4] - 0.4 * ab[s]) - z[t][2] * (1.4 * y[t][4] - 0.4 * ab[t])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][0] - 2.0 * z[q][0] + z[t][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[s] - 2.0 * aa[q] + aa[t]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][4] - 2.0 * z[q][4] + z[t][4]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][4] - 2.0 * y[q][4] + y[t][4]);
  }

  for (o = 0; o < 5; o++) {
    q = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
    q = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (q = 3; q <= h - 4; q++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    q = h - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o]);
    q = h - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 5.0 * y[q][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
60,npb-3.3-BT-exact_rhs4,A,340,26,5,0,112,0,320454224,62,CPU,5.089944999999998,7.5280380000000005,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  q = get_global_id(1) + 1;
  p = get_global_id(0) + 1;
  if (q > (h - 2) || p > (g - 2))
    return;

  int u = (q - 1) * g + (p - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  l = (double)q * (1.0 / (double)(12 - 1));
  k = (double)p * (1.0 / (double)(12 - 1));

  for (r = 0; r < i; r++) {
    m = (double)r * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[r][o] = j[o];
    }

    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[r][o] = n * j[o];
    }

    aa[r] = z[r][3] * z[r][3];
    z[r][0] = aa[r] + z[r][1] * z[r][1] + z[r][2] * z[r][2];
    ab[r] = 0.5 * (z[r][1] * y[r][1] + z[r][2] * y[r][2] + z[r][3] * y[r][3]);
  }

  for (r = 1; r <= i - 2; r++) {
    s = r - 1;
    t = r + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][3] - y[s][3]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][0] - 2.0 * y[r][0] + y[s][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][1] * z[t][3] - y[s][1] * z[s][3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][1] - 2.0 * z[r][1] + z[s][1]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][1] - 2.0 * y[r][1] + y[s][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][2] * z[t][3] - y[s][2] * z[s][3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][2] - 2.0 * z[r][2] + z[s][2]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][2] - 2.0 * y[r][2] + y[s][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[t][3] * z[t][3] + 0.4 * (y[t][4] - ab[t])) - (y[s][3] * z[s][3] + 0.4 * (y[s][4] - ab[s]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][3] - 2.0 * z[r][3] + z[s][3]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][3] - 2.0 * y[r][3] + y[s][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[t][3] * (1.4 * y[t][4] - 0.4 * ab[t]) - z[s][3] * (1.4 * y[s][4] - 0.4 * ab[s])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][0] - 2.0 * z[r][0] + z[s][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[t] - 2.0 * aa[r] + aa[s]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][4] - 2.0 * z[r][4] + z[s][4]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][4] - 2.0 * y[r][4] + y[s][4]);
  }

  for (o = 0; o < 5; o++) {
    r = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
    r = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (r = 3; r <= i - 4; r++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    r = i - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o]);
    r = i - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 5.0 * y[r][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
61,npb-3.3-BT-exact_rhs4,B,340,26,5,0,112,0,1313673032,32,CPU,22.05727000000001,36.60688,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  q = get_global_id(1) + 1;
  p = get_global_id(0) + 1;
  if (q > (h - 2) || p > (g - 2))
    return;

  int u = (q - 1) * g + (p - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  l = (double)q * (1.0 / (double)(12 - 1));
  k = (double)p * (1.0 / (double)(12 - 1));

  for (r = 0; r < i; r++) {
    m = (double)r * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[r][o] = j[o];
    }

    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[r][o] = n * j[o];
    }

    aa[r] = z[r][3] * z[r][3];
    z[r][0] = aa[r] + z[r][1] * z[r][1] + z[r][2] * z[r][2];
    ab[r] = 0.5 * (z[r][1] * y[r][1] + z[r][2] * y[r][2] + z[r][3] * y[r][3]);
  }

  for (r = 1; r <= i - 2; r++) {
    s = r - 1;
    t = r + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][3] - y[s][3]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][0] - 2.0 * y[r][0] + y[s][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][1] * z[t][3] - y[s][1] * z[s][3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][1] - 2.0 * z[r][1] + z[s][1]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][1] - 2.0 * y[r][1] + y[s][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][2] * z[t][3] - y[s][2] * z[s][3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][2] - 2.0 * z[r][2] + z[s][2]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][2] - 2.0 * y[r][2] + y[s][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[t][3] * z[t][3] + 0.4 * (y[t][4] - ab[t])) - (y[s][3] * z[s][3] + 0.4 * (y[s][4] - ab[s]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][3] - 2.0 * z[r][3] + z[s][3]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][3] - 2.0 * y[r][3] + y[s][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[t][3] * (1.4 * y[t][4] - 0.4 * ab[t]) - z[s][3] * (1.4 * y[s][4] - 0.4 * ab[s])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][0] - 2.0 * z[r][0] + z[s][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[t] - 2.0 * aa[r] + aa[s]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][4] - 2.0 * z[r][4] + z[s][4]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][4] - 2.0 * y[r][4] + y[s][4]);
  }

  for (o = 0; o < 5; o++) {
    r = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
    r = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (r = 3; r <= i - 4; r++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    r = i - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o]);
    r = i - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 5.0 * y[r][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
62,npb-3.3-BT-exact_rhs4,S,340,26,5,0,112,0,1807992,60,CPU,0.155647,0.19458599999999998,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  q = get_global_id(1) + 1;
  p = get_global_id(0) + 1;
  if (q > (h - 2) || p > (g - 2))
    return;

  int u = (q - 1) * g + (p - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  l = (double)q * (1.0 / (double)(12 - 1));
  k = (double)p * (1.0 / (double)(12 - 1));

  for (r = 0; r < i; r++) {
    m = (double)r * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[r][o] = j[o];
    }

    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[r][o] = n * j[o];
    }

    aa[r] = z[r][3] * z[r][3];
    z[r][0] = aa[r] + z[r][1] * z[r][1] + z[r][2] * z[r][2];
    ab[r] = 0.5 * (z[r][1] * y[r][1] + z[r][2] * y[r][2] + z[r][3] * y[r][3]);
  }

  for (r = 1; r <= i - 2; r++) {
    s = r - 1;
    t = r + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][3] - y[s][3]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][0] - 2.0 * y[r][0] + y[s][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][1] * z[t][3] - y[s][1] * z[s][3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][1] - 2.0 * z[r][1] + z[s][1]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][1] - 2.0 * y[r][1] + y[s][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][2] * z[t][3] - y[s][2] * z[s][3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][2] - 2.0 * z[r][2] + z[s][2]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][2] - 2.0 * y[r][2] + y[s][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[t][3] * z[t][3] + 0.4 * (y[t][4] - ab[t])) - (y[s][3] * z[s][3] + 0.4 * (y[s][4] - ab[s]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][3] - 2.0 * z[r][3] + z[s][3]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][3] - 2.0 * y[r][3] + y[s][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[t][3] * (1.4 * y[t][4] - 0.4 * ab[t]) - z[s][3] * (1.4 * y[s][4] - 0.4 * ab[s])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][0] - 2.0 * z[r][0] + z[s][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[t] - 2.0 * aa[r] + aa[s]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][4] - 2.0 * z[r][4] + z[s][4]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][4] - 2.0 * y[r][4] + y[s][4]);
  }

  for (o = 0; o < 5; o++) {
    r = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
    r = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (r = 3; r <= i - 4; r++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    r = i - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o]);
    r = i - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 5.0 * y[r][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
63,npb-3.3-BT-exact_rhs4,W,340,26,5,0,112,0,15949464,44,GPU,0.373186,0.29880300000000004,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  q = get_global_id(1) + 1;
  p = get_global_id(0) + 1;
  if (q > (h - 2) || p > (g - 2))
    return;

  int u = (q - 1) * g + (p - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  l = (double)q * (1.0 / (double)(12 - 1));
  k = (double)p * (1.0 / (double)(12 - 1));

  for (r = 0; r < i; r++) {
    m = (double)r * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[r][o] = j[o];
    }

    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[r][o] = n * j[o];
    }

    aa[r] = z[r][3] * z[r][3];
    z[r][0] = aa[r] + z[r][1] * z[r][1] + z[r][2] * z[r][2];
    ab[r] = 0.5 * (z[r][1] * y[r][1] + z[r][2] * y[r][2] + z[r][3] * y[r][3]);
  }

  for (r = 1; r <= i - 2; r++) {
    s = r - 1;
    t = r + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][3] - y[s][3]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][0] - 2.0 * y[r][0] + y[s][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][1] * z[t][3] - y[s][1] * z[s][3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][1] - 2.0 * z[r][1] + z[s][1]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][1] - 2.0 * y[r][1] + y[s][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][2] * z[t][3] - y[s][2] * z[s][3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][2] - 2.0 * z[r][2] + z[s][2]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][2] - 2.0 * y[r][2] + y[s][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[t][3] * z[t][3] + 0.4 * (y[t][4] - ab[t])) - (y[s][3] * z[s][3] + 0.4 * (y[s][4] - ab[s]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][3] - 2.0 * z[r][3] + z[s][3]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][3] - 2.0 * y[r][3] + y[s][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[t][3] * (1.4 * y[t][4] - 0.4 * ab[t]) - z[s][3] * (1.4 * y[s][4] - 0.4 * ab[s])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][0] - 2.0 * z[r][0] + z[s][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[t] - 2.0 * aa[r] + aa[s]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][4] - 2.0 * z[r][4] + z[s][4]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][4] - 2.0 * y[r][4] + y[s][4]);
  }

  for (o = 0; o < 5; o++) {
    r = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
    r = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (r = 3; r <= i - 4; r++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    r = i - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o]);
    r = i - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 5.0 * y[r][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
64,npb-3.3-BT-exact_rhs5,A,19,4,1,0,2,0,320454824,62,GPU,1.367634,0.251021,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(2) + 1;
  int f = get_global_id(1) + 1;
  int g = get_global_id(0) + 1;
  if (e > (d - 2) || f > (c - 2) || g > (b - 2))
    return;

  int h;
  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[e][f][g][h] = -1.0 * i[e][f][g][h];
  }
}","[129 129 129 ..., 127   0 127]"
65,npb-3.3-BT-exact_rhs5,B,19,4,1,0,2,0,1313673512,32,GPU,4.7751589999999995,0.856083,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(2) + 1;
  int f = get_global_id(1) + 1;
  int g = get_global_id(0) + 1;
  if (e > (d - 2) || f > (c - 2) || g > (b - 2))
    return;

  int h;
  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[e][f][g][h] = -1.0 * i[e][f][g][h];
  }
}","[129 129 129 ..., 127   0 127]"
66,npb-3.3-BT-exact_rhs5,S,19,4,1,0,2,0,1807992,60,GPU,0.10242899999999999,0.07534099999999999,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(2) + 1;
  int f = get_global_id(1) + 1;
  int g = get_global_id(0) + 1;
  if (e > (d - 2) || f > (c - 2) || g > (b - 2))
    return;

  int h;
  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[e][f][g][h] = -1.0 * i[e][f][g][h];
  }
}","[129 129 129 ..., 127   0 127]"
67,npb-3.3-BT-exact_rhs5,W,19,4,1,0,2,0,15949464,44,GPU,0.16764500000000002,0.087482,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(2) + 1;
  int f = get_global_id(1) + 1;
  int g = get_global_id(0) + 1;
  if (e > (d - 2) || f > (c - 2) || g > (b - 2))
    return;

  int h;
  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[e][f][g][h] = -1.0 * i[e][f][g][h];
  }
}","[129 129 129 ..., 127   0 127]"
68,npb-3.3-BT-initialize1,A,12,4,1,0,1,0,320454824,64,GPU,2.5915150000000002,0.29476199999999997,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h;

  g = get_global_id(1);
  f = get_global_id(0);
  if (g >= d || f >= c)
    return;

  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (e = 0; e < b; e++) {
    for (h = 0; h < 5; h++) {
      i[g][f][e][h] = 1.0;
    }
  }
}","[129 129 129 ..., 127   0 127]"
69,npb-3.3-BT-initialize1,B,12,4,1,0,1,0,1313673512,32,GPU,11.849821,1.378586,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h;

  g = get_global_id(1);
  f = get_global_id(0);
  if (g >= d || f >= c)
    return;

  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (e = 0; e < b; e++) {
    for (h = 0; h < 5; h++) {
      i[g][f][e][h] = 1.0;
    }
  }
}","[129 129 129 ..., 127   0 127]"
70,npb-3.3-BT-initialize1,S,12,4,1,0,1,0,1807992,60,GPU,0.11798199999999999,0.084941,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h;

  g = get_global_id(1);
  f = get_global_id(0);
  if (g >= d || f >= c)
    return;

  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (e = 0; e < b; e++) {
    for (h = 0; h < 5; h++) {
      i[g][f][e][h] = 1.0;
    }
  }
}","[129 129 129 ..., 127   0 127]"
71,npb-3.3-BT-initialize1,W,12,4,1,0,1,0,15949464,48,GPU,0.138836,0.092419,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h;

  g = get_global_id(1);
  f = get_global_id(0);
  if (g >= d || f >= c)
    return;

  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (e = 0; e < b; e++) {
    for (h = 0; h < 5; h++) {
      i[g][f][e][h] = 1.0;
    }
  }
}","[129 129 129 ..., 127   0 127]"
72,npb-3.3-BT-initialize2,A,116,10,7,0,40,0,320454824,64,GPU,9.739175,1.1821629999999999,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k, l;
  double m, n, o, p[2][3][5], q, r, s;

  h = get_global_id(2);
  g = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || g >= d || f >= c)
    return;

  __global double(*t)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  o = (double)(h) * (1.0 / (double)(12 - 1));
  n = (double)(g) * (1.0 / (double)(12 - 1));
  m = (double)(f) * (1.0 / (double)(12 - 1));

  for (j = 0; j < 2; j++) {
    A((double)j, n, o, &p[j][0][0], b);
  }

  for (k = 0; k < 2; k++) {
    A(m, (double)k, o, &p[k][1][0], b);
  }

  for (l = 0; l < 2; l++) {
    A(m, n, (double)l, &p[l][2][0], b);
  }

  for (i = 0; i < 5; i++) {
    q = m * p[1][0][i] + (1.0 - m) * p[0][0][i];
    r = n * p[1][1][i] + (1.0 - n) * p[0][1][i];
    s = o * p[1][2][i] + (1.0 - o) * p[0][2][i];

    t[h][g][f][i] = q + r + s - q * r - q * s - r * s + q * r * s;
  }
}","[129 129 129 ..., 127   0 127]"
73,npb-3.3-BT-initialize2,B,116,10,7,0,40,0,1313673512,32,GPU,39.977181,5.6186110000000005,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k, l;
  double m, n, o, p[2][3][5], q, r, s;

  h = get_global_id(2);
  g = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || g >= d || f >= c)
    return;

  __global double(*t)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  o = (double)(h) * (1.0 / (double)(12 - 1));
  n = (double)(g) * (1.0 / (double)(12 - 1));
  m = (double)(f) * (1.0 / (double)(12 - 1));

  for (j = 0; j < 2; j++) {
    A((double)j, n, o, &p[j][0][0], b);
  }

  for (k = 0; k < 2; k++) {
    A(m, (double)k, o, &p[k][1][0], b);
  }

  for (l = 0; l < 2; l++) {
    A(m, n, (double)l, &p[l][2][0], b);
  }

  for (i = 0; i < 5; i++) {
    q = m * p[1][0][i] + (1.0 - m) * p[0][0][i];
    r = n * p[1][1][i] + (1.0 - n) * p[0][1][i];
    s = o * p[1][2][i] + (1.0 - o) * p[0][2][i];

    t[h][g][f][i] = q + r + s - q * r - q * s - r * s + q * r * s;
  }
}","[129 129 129 ..., 127   0 127]"
74,npb-3.3-BT-initialize2,S,116,10,7,0,40,0,1807992,60,GPU,0.18775999999999998,0.092416,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k, l;
  double m, n, o, p[2][3][5], q, r, s;

  h = get_global_id(2);
  g = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || g >= d || f >= c)
    return;

  __global double(*t)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  o = (double)(h) * (1.0 / (double)(12 - 1));
  n = (double)(g) * (1.0 / (double)(12 - 1));
  m = (double)(f) * (1.0 / (double)(12 - 1));

  for (j = 0; j < 2; j++) {
    A((double)j, n, o, &p[j][0][0], b);
  }

  for (k = 0; k < 2; k++) {
    A(m, (double)k, o, &p[k][1][0], b);
  }

  for (l = 0; l < 2; l++) {
    A(m, n, (double)l, &p[l][2][0], b);
  }

  for (i = 0; i < 5; i++) {
    q = m * p[1][0][i] + (1.0 - m) * p[0][0][i];
    r = n * p[1][1][i] + (1.0 - n) * p[0][1][i];
    s = o * p[1][2][i] + (1.0 - o) * p[0][2][i];

    t[h][g][f][i] = q + r + s - q * r - q * s - r * s + q * r * s;
  }
}","[129 129 129 ..., 127   0 127]"
75,npb-3.3-BT-initialize2,W,116,10,7,0,40,0,15949464,48,GPU,0.6437,0.17388800000000001,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k, l;
  double m, n, o, p[2][3][5], q, r, s;

  h = get_global_id(2);
  g = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || g >= d || f >= c)
    return;

  __global double(*t)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  o = (double)(h) * (1.0 / (double)(12 - 1));
  n = (double)(g) * (1.0 / (double)(12 - 1));
  m = (double)(f) * (1.0 / (double)(12 - 1));

  for (j = 0; j < 2; j++) {
    A((double)j, n, o, &p[j][0][0], b);
  }

  for (k = 0; k < 2; k++) {
    A(m, (double)k, o, &p[k][1][0], b);
  }

  for (l = 0; l < 2; l++) {
    A(m, n, (double)l, &p[l][2][0], b);
  }

  for (i = 0; i < 5; i++) {
    q = m * p[1][0][i] + (1.0 - m) * p[0][0][i];
    r = n * p[1][1][i] + (1.0 - n) * p[0][1][i];
    s = o * p[1][2][i] + (1.0 - o) * p[0][2][i];

    t[h][g][f][i] = q + r + s - q * r - q * s - r * s + q * r * s;
  }
}","[129 129 129 ..., 127   0 127]"
76,npb-3.3-BT-initialize3,A,67,6,5,0,28,0,320454824,64,GPU,0.176592,0.096502,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  h = get_global_id(1);
  g = get_global_id(0);
  if (h >= e || g >= d)
    return;

  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  l = (double)h * (1.0 / (double)(12 - 1));
  k = (double)g * (1.0 / (double)(12 - 1));

  f = 0;
  j = 0.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  f = c - 1;
  j = 1.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
77,npb-3.3-BT-initialize3,B,67,6,5,0,28,0,1313673512,32,GPU,0.278077,0.132512,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  h = get_global_id(1);
  g = get_global_id(0);
  if (h >= e || g >= d)
    return;

  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  l = (double)h * (1.0 / (double)(12 - 1));
  k = (double)g * (1.0 / (double)(12 - 1));

  f = 0;
  j = 0.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  f = c - 1;
  j = 1.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
78,npb-3.3-BT-initialize3,S,67,6,5,0,28,0,1807992,60,GPU,0.09529800000000001,0.08775,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  h = get_global_id(1);
  g = get_global_id(0);
  if (h >= e || g >= d)
    return;

  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  l = (double)h * (1.0 / (double)(12 - 1));
  k = (double)g * (1.0 / (double)(12 - 1));

  f = 0;
  j = 0.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  f = c - 1;
  j = 1.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
79,npb-3.3-BT-initialize3,W,67,6,5,0,28,0,15949464,48,GPU,0.14545,0.08894400000000001,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  h = get_global_id(1);
  g = get_global_id(0);
  if (h >= e || g >= d)
    return;

  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  l = (double)h * (1.0 / (double)(12 - 1));
  k = (double)g * (1.0 / (double)(12 - 1));

  f = 0;
  j = 0.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  f = c - 1;
  j = 1.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
80,npb-3.3-BT-initialize4,A,67,6,5,0,28,0,320454824,64,GPU,0.183157,0.095251,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  h = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || f >= c)
    return;

  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  l = (double)h * (1.0 / (double)(12 - 1));
  j = (double)f * (1.0 / (double)(12 - 1));

  g = 0;
  k = 0.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  g = d - 1;
  k = 1.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
81,npb-3.3-BT-initialize4,B,67,6,5,0,28,0,1313673512,32,GPU,0.2368780000000001,0.12825599999999998,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  h = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || f >= c)
    return;

  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  l = (double)h * (1.0 / (double)(12 - 1));
  j = (double)f * (1.0 / (double)(12 - 1));

  g = 0;
  k = 0.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  g = d - 1;
  k = 1.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
82,npb-3.3-BT-initialize4,S,67,6,5,0,28,0,1807992,60,GPU,0.09528400000000001,0.088336,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  h = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || f >= c)
    return;

  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  l = (double)h * (1.0 / (double)(12 - 1));
  j = (double)f * (1.0 / (double)(12 - 1));

  g = 0;
  k = 0.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  g = d - 1;
  k = 1.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
83,npb-3.3-BT-initialize4,W,67,6,5,0,28,0,15949464,48,GPU,0.143306,0.08912,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  h = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || f >= c)
    return;

  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  l = (double)h * (1.0 / (double)(12 - 1));
  j = (double)f * (1.0 / (double)(12 - 1));

  g = 0;
  k = 0.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  g = d - 1;
  k = 1.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
84,npb-3.3-BT-initialize5,A,67,6,5,0,28,0,320454824,64,GPU,0.181502,0.09383999999999999,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  g = get_global_id(1);
  f = get_global_id(0);
  if (g >= d || f >= c)
    return;

  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  k = (double)g * (1.0 / (double)(12 - 1));
  j = (double)f * (1.0 / (double)(12 - 1));

  h = 0;
  l = 0.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  h = e - 1;
  l = 1.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
85,npb-3.3-BT-initialize5,B,67,6,5,0,28,0,1313673512,32,GPU,0.22661199999999998,0.125101,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  g = get_global_id(1);
  f = get_global_id(0);
  if (g >= d || f >= c)
    return;

  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  k = (double)g * (1.0 / (double)(12 - 1));
  j = (double)f * (1.0 / (double)(12 - 1));

  h = 0;
  l = 0.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  h = e - 1;
  l = 1.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
86,npb-3.3-BT-initialize5,S,67,6,5,0,28,0,1807992,60,GPU,0.10201,0.088314,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  g = get_global_id(1);
  f = get_global_id(0);
  if (g >= d || f >= c)
    return;

  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  k = (double)g * (1.0 / (double)(12 - 1));
  j = (double)f * (1.0 / (double)(12 - 1));

  h = 0;
  l = 0.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  h = e - 1;
  l = 1.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
87,npb-3.3-BT-initialize5,W,67,6,5,0,28,0,15949464,48,GPU,0.136699,0.089574,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  g = get_global_id(1);
  f = get_global_id(0);
  if (g >= d || f >= c)
    return;

  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  k = (double)g * (1.0 / (double)(12 - 1));
  j = (double)f * (1.0 / (double)(12 - 1));

  h = 0;
  l = 0.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  h = e - 1;
  l = 1.0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
88,npb-3.3-BT-rhs_norm,A,21,9,11,8,2,0,320454224,6,CPU,0.433096,2.904493,"__kernel void A(__global double* a, __global double* b, __local double* c, int d, int e, int f) {
  int g, h, i, j, k;
  double l;
  __local double* m;

  i = get_global_id(0) + 1;
  k = get_local_id(0);
  m = &c[k * 5];

  for (j = 0; j < 5; j++) {
    m[j] = 0.0;
  }

  if (i <= (f - 2)) {
    __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

    for (h = 1; h <= (e - 2); h++) {
      for (g = 1; g <= (d - 2); g++) {
        for (j = 0; j < 5; j++) {
          l = n[i][h][g][j];
          m[j] = m[j] + l * l;
        }
      }
    }
  }

  barrier(1);

  if (k == 0) {
    for (g = 1; g < get_local_size(0); g++) {
      __local double* o = &c[g * 5];
      for (j = 0; j < 5; j++) {
        m[j] += o[j];
      }
    }

    __global double* p = &b[get_group_id(0) * 5];
    for (j = 0; j < 5; j++) {
      p[j] = m[j];
    }
  }
}","[129 129 129 ..., 127   0 127]"
89,npb-3.3-BT-rhs_norm,B,21,9,11,8,2,0,1313673032,10,CPU,2.745603,7.534642999999999,"__kernel void A(__global double* a, __global double* b, __local double* c, int d, int e, int f) {
  int g, h, i, j, k;
  double l;
  __local double* m;

  i = get_global_id(0) + 1;
  k = get_local_id(0);
  m = &c[k * 5];

  for (j = 0; j < 5; j++) {
    m[j] = 0.0;
  }

  if (i <= (f - 2)) {
    __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

    for (h = 1; h <= (e - 2); h++) {
      for (g = 1; g <= (d - 2); g++) {
        for (j = 0; j < 5; j++) {
          l = n[i][h][g][j];
          m[j] = m[j] + l * l;
        }
      }
    }
  }

  barrier(1);

  if (k == 0) {
    for (g = 1; g < get_local_size(0); g++) {
      __local double* o = &c[g * 5];
      for (j = 0; j < 5; j++) {
        m[j] += o[j];
      }
    }

    __global double* p = &b[get_group_id(0) * 5];
    for (j = 0; j < 5; j++) {
      p[j] = m[j];
    }
  }
}","[129 129 129 ..., 127   0 127]"
90,npb-3.3-BT-rhs_norm,S,21,9,11,8,2,0,1807992,1,CPU,0.07966000000000001,0.132186,"__kernel void A(__global double* a, __global double* b, __local double* c, int d, int e, int f) {
  int g, h, i, j, k;
  double l;
  __local double* m;

  i = get_global_id(0) + 1;
  k = get_local_id(0);
  m = &c[k * 5];

  for (j = 0; j < 5; j++) {
    m[j] = 0.0;
  }

  if (i <= (f - 2)) {
    __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

    for (h = 1; h <= (e - 2); h++) {
      for (g = 1; g <= (d - 2); g++) {
        for (j = 0; j < 5; j++) {
          l = n[i][h][g][j];
          m[j] = m[j] + l * l;
        }
      }
    }
  }

  barrier(1);

  if (k == 0) {
    for (g = 1; g < get_local_size(0); g++) {
      __local double* o = &c[g * 5];
      for (j = 0; j < 5; j++) {
        m[j] += o[j];
      }
    }

    __global double* p = &b[get_group_id(0) * 5];
    for (j = 0; j < 5; j++) {
      p[j] = m[j];
    }
  }
}","[129 129 129 ..., 127   0 127]"
91,npb-3.3-BT-rhs_norm,W,21,9,11,8,2,0,15948384,2,CPU,0.111703,0.311251,"__kernel void A(__global double* a, __global double* b, __local double* c, int d, int e, int f) {
  int g, h, i, j, k;
  double l;
  __local double* m;

  i = get_global_id(0) + 1;
  k = get_local_id(0);
  m = &c[k * 5];

  for (j = 0; j < 5; j++) {
    m[j] = 0.0;
  }

  if (i <= (f - 2)) {
    __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

    for (h = 1; h <= (e - 2); h++) {
      for (g = 1; g <= (d - 2); g++) {
        for (j = 0; j < 5; j++) {
          l = n[i][h][g][j];
          m[j] = m[j] + l * l;
        }
      }
    }
  }

  barrier(1);

  if (k == 0) {
    for (g = 1; g < get_local_size(0); g++) {
      __local double* o = &c[g * 5];
      for (j = 0; j < 5; j++) {
        m[j] += o[j];
      }
    }

    __global double* p = &b[get_group_id(0) * 5];
    for (j = 0; j < 5; j++) {
      p[j] = m[j];
    }
  }
}","[129 129 129 ..., 127   0 127]"
92,npb-3.3-BT-x_solve,A,829,135,9,0,232,0,320454824,62,GPU,16.309858,9.228643,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k;
  double l[5][5], m[5][5], n[5][5], o[5];
  double p[5][5], q[5];

  h = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (h > (e - 2) || g > (d - 2))
    return;

  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  int s = (h - 1) * (d - 2) + (g - 1);
  int t = s * (12 + 1) * 3 * 5 * 5;
  __global double(*u)[3][5][5] = (__global double(*)[3][5][5]) & b[t];

  k = c - 1;
  K(m, u[0][1]);
  K(n, u[0][2]);
  N(o, r[h][g][0]);
  I(m, n, o);
  L(u[0][1], m);
  L(u[0][2], n);
  O(r[h][g][0], o);

  for (f = 1; f <= k - 1; f++) {
    M(p, n);
    P(q, o);
    K(l, u[f][0]);
    K(m, u[f][1]);
    K(n, u[f][2]);
    N(o, r[h][g][f]);

    G(l, q, o);

    H(l, p, m);

    I(m, n, o);

    L(u[f][1], m);
    L(u[f][2], n);
    O(r[h][g][f], o);
  }

  M(p, n);
  P(q, o);
  K(l, u[k][0]);
  K(m, u[k][1]);
  K(n, u[k][2]);
  N(o, r[h][g][k]);

  G(l, q, o);

  H(l, p, m);

  J(m, o);

  L(u[k][1], m);
  L(u[k][2], n);
  O(r[h][g][k], o);

  for (f = k - 1; f >= 0; f--) {
    for (i = 0; i < 5; i++) {
      q[i] = r[h][g][f][i];
      for (j = 0; j < 5; j++) {
        q[i] = q[i] - u[f][2][j][i] * o[j];
      }
      r[h][g][f][i] = q[i];
    }
    P(o, q);
  }
}","[102  51  20 ..., 127   0 127]"
93,npb-3.3-BT-x_solve,B,829,135,9,0,232,0,1313673512,32,GPU,67.974468,31.181945000000002,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k;
  double l[5][5], m[5][5], n[5][5], o[5];
  double p[5][5], q[5];

  h = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (h > (e - 2) || g > (d - 2))
    return;

  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  int s = (h - 1) * (d - 2) + (g - 1);
  int t = s * (12 + 1) * 3 * 5 * 5;
  __global double(*u)[3][5][5] = (__global double(*)[3][5][5]) & b[t];

  k = c - 1;
  K(m, u[0][1]);
  K(n, u[0][2]);
  N(o, r[h][g][0]);
  I(m, n, o);
  L(u[0][1], m);
  L(u[0][2], n);
  O(r[h][g][0], o);

  for (f = 1; f <= k - 1; f++) {
    M(p, n);
    P(q, o);
    K(l, u[f][0]);
    K(m, u[f][1]);
    K(n, u[f][2]);
    N(o, r[h][g][f]);

    G(l, q, o);

    H(l, p, m);

    I(m, n, o);

    L(u[f][1], m);
    L(u[f][2], n);
    O(r[h][g][f], o);
  }

  M(p, n);
  P(q, o);
  K(l, u[k][0]);
  K(m, u[k][1]);
  K(n, u[k][2]);
  N(o, r[h][g][k]);

  G(l, q, o);

  H(l, p, m);

  J(m, o);

  L(u[k][1], m);
  L(u[k][2], n);
  O(r[h][g][k], o);

  for (f = k - 1; f >= 0; f--) {
    for (i = 0; i < 5; i++) {
      q[i] = r[h][g][f][i];
      for (j = 0; j < 5; j++) {
        q[i] = q[i] - u[f][2][j][i] * o[j];
      }
      r[h][g][f][i] = q[i];
    }
    P(o, q);
  }
}","[102  51  20 ..., 127   0 127]"
94,npb-3.3-BT-x_solve,S,829,135,9,0,232,0,1807992,60,CPU,0.23098400000000002,0.33031,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k;
  double l[5][5], m[5][5], n[5][5], o[5];
  double p[5][5], q[5];

  h = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (h > (e - 2) || g > (d - 2))
    return;

  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  int s = (h - 1) * (d - 2) + (g - 1);
  int t = s * (12 + 1) * 3 * 5 * 5;
  __global double(*u)[3][5][5] = (__global double(*)[3][5][5]) & b[t];

  k = c - 1;
  K(m, u[0][1]);
  K(n, u[0][2]);
  N(o, r[h][g][0]);
  I(m, n, o);
  L(u[0][1], m);
  L(u[0][2], n);
  O(r[h][g][0], o);

  for (f = 1; f <= k - 1; f++) {
    M(p, n);
    P(q, o);
    K(l, u[f][0]);
    K(m, u[f][1]);
    K(n, u[f][2]);
    N(o, r[h][g][f]);

    G(l, q, o);

    H(l, p, m);

    I(m, n, o);

    L(u[f][1], m);
    L(u[f][2], n);
    O(r[h][g][f], o);
  }

  M(p, n);
  P(q, o);
  K(l, u[k][0]);
  K(m, u[k][1]);
  K(n, u[k][2]);
  N(o, r[h][g][k]);

  G(l, q, o);

  H(l, p, m);

  J(m, o);

  L(u[k][1], m);
  L(u[k][2], n);
  O(r[h][g][k], o);

  for (f = k - 1; f >= 0; f--) {
    for (i = 0; i < 5; i++) {
      q[i] = r[h][g][f][i];
      for (j = 0; j < 5; j++) {
        q[i] = q[i] - u[f][2][j][i] * o[j];
      }
      r[h][g][f][i] = q[i];
    }
    P(o, q);
  }
}","[102  51  20 ..., 127   0 127]"
95,npb-3.3-BT-x_solve,W,829,135,9,0,232,0,15949464,44,GPU,0.918673,0.517019,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k;
  double l[5][5], m[5][5], n[5][5], o[5];
  double p[5][5], q[5];

  h = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (h > (e - 2) || g > (d - 2))
    return;

  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  int s = (h - 1) * (d - 2) + (g - 1);
  int t = s * (12 + 1) * 3 * 5 * 5;
  __global double(*u)[3][5][5] = (__global double(*)[3][5][5]) & b[t];

  k = c - 1;
  K(m, u[0][1]);
  K(n, u[0][2]);
  N(o, r[h][g][0]);
  I(m, n, o);
  L(u[0][1], m);
  L(u[0][2], n);
  O(r[h][g][0], o);

  for (f = 1; f <= k - 1; f++) {
    M(p, n);
    P(q, o);
    K(l, u[f][0]);
    K(m, u[f][1]);
    K(n, u[f][2]);
    N(o, r[h][g][f]);

    G(l, q, o);

    H(l, p, m);

    I(m, n, o);

    L(u[f][1], m);
    L(u[f][2], n);
    O(r[h][g][f], o);
  }

  M(p, n);
  P(q, o);
  K(l, u[k][0]);
  K(m, u[k][1]);
  K(n, u[k][2]);
  N(o, r[h][g][k]);

  G(l, q, o);

  H(l, p, m);

  J(m, o);

  L(u[k][1], m);
  L(u[k][2], n);
  O(r[h][g][k], o);

  for (f = k - 1; f >= 0; f--) {
    for (i = 0; i < 5; i++) {
      q[i] = r[h][g][f][i];
      for (j = 0; j < 5; j++) {
        q[i] = q[i] - u[f][2][j][i] * o[j];
      }
      r[h][g][f][i] = q[i];
    }
    P(o, q);
  }
}","[102  51  20 ..., 127   0 127]"
96,npb-3.3-BT-x_solve1,A,183,3,6,0,61,0,320454824,64,GPU,12.471523,5.884274,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, int g, int h, int i) {
  int j, k, l;
  double m, n, o;
  double p[5];

  l = get_global_id(2) + 1;
  k = get_global_id(1) + 1;
  j = get_global_id(0);
  if (l > (i - 2) || k > (h - 2) || j >= g)
    return;

  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])a;
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*s)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*t)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])d;

  int u = (l - 1) * (h - 2) + (k - 1);
  int v = u * (12 + 1) * 5 * 5;
  __global double(*w)[5][5] = (__global double(*)[5][5]) & e[v];
  __global double(*x)[5][5] = (__global double(*)[5][5]) & f[v];

  m = r[l][k][j];
  n = m * m;
  o = m * n;
  p[0] = t[l][k][j][0];
  p[1] = t[l][k][j][1];
  p[2] = t[l][k][j][2];
  p[3] = t[l][k][j][3];
  p[4] = t[l][k][j][4];

  w[j][0][0] = 0.0;
  w[j][1][0] = 1.0;
  w[j][2][0] = 0.0;
  w[j][3][0] = 0.0;
  w[j][4][0] = 0.0;

  w[j][0][1] = -(p[1] * n * p[1]) + 0.4 * q[l][k][j];
  w[j][1][1] = (2.0 - 0.4) * (p[1] / p[0]);
  w[j][2][1] = -0.4 * (p[2] * m);
  w[j][3][1] = -0.4 * (p[3] * m);
  w[j][4][1] = 0.4;

  w[j][0][2] = -(p[1] * p[2]) * n;
  w[j][1][2] = p[2] * m;
  w[j][2][2] = p[1] * m;
  w[j][3][2] = 0.0;
  w[j][4][2] = 0.0;

  w[j][0][3] = -(p[1] * p[3]) * n;
  w[j][1][3] = p[3] * m;
  w[j][2][3] = 0.0;
  w[j][3][3] = p[1] * m;
  w[j][4][3] = 0.0;

  w[j][0][4] = (0.4 * 2.0 * s[l][k][j] - 1.4 * p[4]) * (p[1] * n);
  w[j][1][4] = 1.4 * p[4] * m - 0.4 * (p[1] * p[1] * n + q[l][k][j]);
  w[j][2][4] = -0.4 * (p[2] * p[1]) * n;
  w[j][3][4] = -0.4 * (p[3] * p[1]) * n;
  w[j][4][4] = 1.4 * (p[1] * m);

  x[j][0][0] = 0.0;
  x[j][1][0] = 0.0;
  x[j][2][0] = 0.0;
  x[j][3][0] = 0.0;
  x[j][4][0] = 0.0;

  x[j][0][1] = -(4.0 / 3.0) * (0.1 * 1.0) * n * p[1];
  x[j][1][1] = (4.0 / 3.0) * (0.1 * 1.0) * m;
  x[j][2][1] = 0.0;
  x[j][3][1] = 0.0;
  x[j][4][1] = 0.0;

  x[j][0][2] = -(0.1 * 1.0) * n * p[2];
  x[j][1][2] = 0.0;
  x[j][2][2] = (0.1 * 1.0) * m;
  x[j][3][2] = 0.0;
  x[j][4][2] = 0.0;

  x[j][0][3] = -(0.1 * 1.0) * n * p[3];
  x[j][1][3] = 0.0;
  x[j][2][3] = 0.0;
  x[j][3][3] = (0.1 * 1.0) * m;
  x[j][4][3] = 0.0;

  x[j][0][4] = -((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[1] * p[1]) - ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[2] * p[2]) - ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[3] * p[3]) - ((1.4 * 1.4) * (0.1 * 1.0)) * n * p[4];

  x[j][1][4] = ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[1];
  x[j][2][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[2];
  x[j][3][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[3];
  x[j][4][4] = (((1.4 * 1.4) * (0.1 * 1.0))) * m;
}","[ 52  51  15 ...,  26   0 127]"
97,npb-3.3-BT-x_solve1,B,183,3,6,0,61,0,1313673512,32,GPU,54.572267000000004,18.557904,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, int g, int h, int i) {
  int j, k, l;
  double m, n, o;
  double p[5];

  l = get_global_id(2) + 1;
  k = get_global_id(1) + 1;
  j = get_global_id(0);
  if (l > (i - 2) || k > (h - 2) || j >= g)
    return;

  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])a;
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*s)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*t)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])d;

  int u = (l - 1) * (h - 2) + (k - 1);
  int v = u * (12 + 1) * 5 * 5;
  __global double(*w)[5][5] = (__global double(*)[5][5]) & e[v];
  __global double(*x)[5][5] = (__global double(*)[5][5]) & f[v];

  m = r[l][k][j];
  n = m * m;
  o = m * n;
  p[0] = t[l][k][j][0];
  p[1] = t[l][k][j][1];
  p[2] = t[l][k][j][2];
  p[3] = t[l][k][j][3];
  p[4] = t[l][k][j][4];

  w[j][0][0] = 0.0;
  w[j][1][0] = 1.0;
  w[j][2][0] = 0.0;
  w[j][3][0] = 0.0;
  w[j][4][0] = 0.0;

  w[j][0][1] = -(p[1] * n * p[1]) + 0.4 * q[l][k][j];
  w[j][1][1] = (2.0 - 0.4) * (p[1] / p[0]);
  w[j][2][1] = -0.4 * (p[2] * m);
  w[j][3][1] = -0.4 * (p[3] * m);
  w[j][4][1] = 0.4;

  w[j][0][2] = -(p[1] * p[2]) * n;
  w[j][1][2] = p[2] * m;
  w[j][2][2] = p[1] * m;
  w[j][3][2] = 0.0;
  w[j][4][2] = 0.0;

  w[j][0][3] = -(p[1] * p[3]) * n;
  w[j][1][3] = p[3] * m;
  w[j][2][3] = 0.0;
  w[j][3][3] = p[1] * m;
  w[j][4][3] = 0.0;

  w[j][0][4] = (0.4 * 2.0 * s[l][k][j] - 1.4 * p[4]) * (p[1] * n);
  w[j][1][4] = 1.4 * p[4] * m - 0.4 * (p[1] * p[1] * n + q[l][k][j]);
  w[j][2][4] = -0.4 * (p[2] * p[1]) * n;
  w[j][3][4] = -0.4 * (p[3] * p[1]) * n;
  w[j][4][4] = 1.4 * (p[1] * m);

  x[j][0][0] = 0.0;
  x[j][1][0] = 0.0;
  x[j][2][0] = 0.0;
  x[j][3][0] = 0.0;
  x[j][4][0] = 0.0;

  x[j][0][1] = -(4.0 / 3.0) * (0.1 * 1.0) * n * p[1];
  x[j][1][1] = (4.0 / 3.0) * (0.1 * 1.0) * m;
  x[j][2][1] = 0.0;
  x[j][3][1] = 0.0;
  x[j][4][1] = 0.0;

  x[j][0][2] = -(0.1 * 1.0) * n * p[2];
  x[j][1][2] = 0.0;
  x[j][2][2] = (0.1 * 1.0) * m;
  x[j][3][2] = 0.0;
  x[j][4][2] = 0.0;

  x[j][0][3] = -(0.1 * 1.0) * n * p[3];
  x[j][1][3] = 0.0;
  x[j][2][3] = 0.0;
  x[j][3][3] = (0.1 * 1.0) * m;
  x[j][4][3] = 0.0;

  x[j][0][4] = -((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[1] * p[1]) - ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[2] * p[2]) - ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[3] * p[3]) - ((1.4 * 1.4) * (0.1 * 1.0)) * n * p[4];

  x[j][1][4] = ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[1];
  x[j][2][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[2];
  x[j][3][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[3];
  x[j][4][4] = (((1.4 * 1.4) * (0.1 * 1.0))) * m;
}","[ 52  51  15 ...,  26   0 127]"
98,npb-3.3-BT-x_solve1,S,183,3,6,0,61,0,1807992,60,GPU,0.090509,0.086755,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, int g, int h, int i) {
  int j, k, l;
  double m, n, o;
  double p[5];

  l = get_global_id(2) + 1;
  k = get_global_id(1) + 1;
  j = get_global_id(0);
  if (l > (i - 2) || k > (h - 2) || j >= g)
    return;

  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])a;
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*s)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*t)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])d;

  int u = (l - 1) * (h - 2) + (k - 1);
  int v = u * (12 + 1) * 5 * 5;
  __global double(*w)[5][5] = (__global double(*)[5][5]) & e[v];
  __global double(*x)[5][5] = (__global double(*)[5][5]) & f[v];

  m = r[l][k][j];
  n = m * m;
  o = m * n;
  p[0] = t[l][k][j][0];
  p[1] = t[l][k][j][1];
  p[2] = t[l][k][j][2];
  p[3] = t[l][k][j][3];
  p[4] = t[l][k][j][4];

  w[j][0][0] = 0.0;
  w[j][1][0] = 1.0;
  w[j][2][0] = 0.0;
  w[j][3][0] = 0.0;
  w[j][4][0] = 0.0;

  w[j][0][1] = -(p[1] * n * p[1]) + 0.4 * q[l][k][j];
  w[j][1][1] = (2.0 - 0.4) * (p[1] / p[0]);
  w[j][2][1] = -0.4 * (p[2] * m);
  w[j][3][1] = -0.4 * (p[3] * m);
  w[j][4][1] = 0.4;

  w[j][0][2] = -(p[1] * p[2]) * n;
  w[j][1][2] = p[2] * m;
  w[j][2][2] = p[1] * m;
  w[j][3][2] = 0.0;
  w[j][4][2] = 0.0;

  w[j][0][3] = -(p[1] * p[3]) * n;
  w[j][1][3] = p[3] * m;
  w[j][2][3] = 0.0;
  w[j][3][3] = p[1] * m;
  w[j][4][3] = 0.0;

  w[j][0][4] = (0.4 * 2.0 * s[l][k][j] - 1.4 * p[4]) * (p[1] * n);
  w[j][1][4] = 1.4 * p[4] * m - 0.4 * (p[1] * p[1] * n + q[l][k][j]);
  w[j][2][4] = -0.4 * (p[2] * p[1]) * n;
  w[j][3][4] = -0.4 * (p[3] * p[1]) * n;
  w[j][4][4] = 1.4 * (p[1] * m);

  x[j][0][0] = 0.0;
  x[j][1][0] = 0.0;
  x[j][2][0] = 0.0;
  x[j][3][0] = 0.0;
  x[j][4][0] = 0.0;

  x[j][0][1] = -(4.0 / 3.0) * (0.1 * 1.0) * n * p[1];
  x[j][1][1] = (4.0 / 3.0) * (0.1 * 1.0) * m;
  x[j][2][1] = 0.0;
  x[j][3][1] = 0.0;
  x[j][4][1] = 0.0;

  x[j][0][2] = -(0.1 * 1.0) * n * p[2];
  x[j][1][2] = 0.0;
  x[j][2][2] = (0.1 * 1.0) * m;
  x[j][3][2] = 0.0;
  x[j][4][2] = 0.0;

  x[j][0][3] = -(0.1 * 1.0) * n * p[3];
  x[j][1][3] = 0.0;
  x[j][2][3] = 0.0;
  x[j][3][3] = (0.1 * 1.0) * m;
  x[j][4][3] = 0.0;

  x[j][0][4] = -((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[1] * p[1]) - ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[2] * p[2]) - ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[3] * p[3]) - ((1.4 * 1.4) * (0.1 * 1.0)) * n * p[4];

  x[j][1][4] = ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[1];
  x[j][2][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[2];
  x[j][3][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[3];
  x[j][4][4] = (((1.4 * 1.4) * (0.1 * 1.0))) * m;
}","[ 52  51  15 ...,  26   0 127]"
99,npb-3.3-BT-x_solve1,W,183,3,6,0,61,0,15949464,48,GPU,0.550615,0.297074,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, int g, int h, int i) {
  int j, k, l;
  double m, n, o;
  double p[5];

  l = get_global_id(2) + 1;
  k = get_global_id(1) + 1;
  j = get_global_id(0);
  if (l > (i - 2) || k > (h - 2) || j >= g)
    return;

  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])a;
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*s)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*t)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])d;

  int u = (l - 1) * (h - 2) + (k - 1);
  int v = u * (12 + 1) * 5 * 5;
  __global double(*w)[5][5] = (__global double(*)[5][5]) & e[v];
  __global double(*x)[5][5] = (__global double(*)[5][5]) & f[v];

  m = r[l][k][j];
  n = m * m;
  o = m * n;
  p[0] = t[l][k][j][0];
  p[1] = t[l][k][j][1];
  p[2] = t[l][k][j][2];
  p[3] = t[l][k][j][3];
  p[4] = t[l][k][j][4];

  w[j][0][0] = 0.0;
  w[j][1][0] = 1.0;
  w[j][2][0] = 0.0;
  w[j][3][0] = 0.0;
  w[j][4][0] = 0.0;

  w[j][0][1] = -(p[1] * n * p[1]) + 0.4 * q[l][k][j];
  w[j][1][1] = (2.0 - 0.4) * (p[1] / p[0]);
  w[j][2][1] = -0.4 * (p[2] * m);
  w[j][3][1] = -0.4 * (p[3] * m);
  w[j][4][1] = 0.4;

  w[j][0][2] = -(p[1] * p[2]) * n;
  w[j][1][2] = p[2] * m;
  w[j][2][2] = p[1] * m;
  w[j][3][2] = 0.0;
  w[j][4][2] = 0.0;

  w[j][0][3] = -(p[1] * p[3]) * n;
  w[j][1][3] = p[3] * m;
  w[j][2][3] = 0.0;
  w[j][3][3] = p[1] * m;
  w[j][4][3] = 0.0;

  w[j][0][4] = (0.4 * 2.0 * s[l][k][j] - 1.4 * p[4]) * (p[1] * n);
  w[j][1][4] = 1.4 * p[4] * m - 0.4 * (p[1] * p[1] * n + q[l][k][j]);
  w[j][2][4] = -0.4 * (p[2] * p[1]) * n;
  w[j][3][4] = -0.4 * (p[3] * p[1]) * n;
  w[j][4][4] = 1.4 * (p[1] * m);

  x[j][0][0] = 0.0;
  x[j][1][0] = 0.0;
  x[j][2][0] = 0.0;
  x[j][3][0] = 0.0;
  x[j][4][0] = 0.0;

  x[j][0][1] = -(4.0 / 3.0) * (0.1 * 1.0) * n * p[1];
  x[j][1][1] = (4.0 / 3.0) * (0.1 * 1.0) * m;
  x[j][2][1] = 0.0;
  x[j][3][1] = 0.0;
  x[j][4][1] = 0.0;

  x[j][0][2] = -(0.1 * 1.0) * n * p[2];
  x[j][1][2] = 0.0;
  x[j][2][2] = (0.1 * 1.0) * m;
  x[j][3][2] = 0.0;
  x[j][4][2] = 0.0;

  x[j][0][3] = -(0.1 * 1.0) * n * p[3];
  x[j][1][3] = 0.0;
  x[j][2][3] = 0.0;
  x[j][3][3] = (0.1 * 1.0) * m;
  x[j][4][3] = 0.0;

  x[j][0][4] = -((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[1] * p[1]) - ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[2] * p[2]) - ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[3] * p[3]) - ((1.4 * 1.4) * (0.1 * 1.0)) * n * p[4];

  x[j][1][4] = ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[1];
  x[j][2][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[2];
  x[j][3][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[3];
  x[j][4][4] = (((1.4 * 1.4) * (0.1 * 1.0))) * m;
}","[ 52  51  15 ...,  26   0 127]"
100,npb-3.3-BT-x_solve2,A,15,5,1,0,5,0,320454824,64,GPU,1.116614,0.478074,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h, i;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  if (g > (d - 2) || f > (c - 2))
    return;

  e = get_global_id(0);
  if (e == 1)
    e = b - 1;

  int j = (g - 1) * (c - 2) + (f - 1);
  int k = j * (12 + 1) * 3 * 5 * 5;
  __global double(*l)[3][5][5] = (__global double(*)[3][5][5]) & a[k];

  for (h = 0; h < 5; h++) {
    for (i = 0; i < 5; i++) {
      l[e][0][h][i] = 0.0;
      l[e][1][h][i] = 0.0;
      l[e][2][h][i] = 0.0;
    }
    l[e][1][h][h] = 1.0;
  }
}","[129 129 129 ..., 127   0 127]"
101,npb-3.3-BT-x_solve2,B,15,5,1,0,5,0,1313673512,32,GPU,2.818502,1.125061,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h, i;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  if (g > (d - 2) || f > (c - 2))
    return;

  e = get_global_id(0);
  if (e == 1)
    e = b - 1;

  int j = (g - 1) * (c - 2) + (f - 1);
  int k = j * (12 + 1) * 3 * 5 * 5;
  __global double(*l)[3][5][5] = (__global double(*)[3][5][5]) & a[k];

  for (h = 0; h < 5; h++) {
    for (i = 0; i < 5; i++) {
      l[e][0][h][i] = 0.0;
      l[e][1][h][i] = 0.0;
      l[e][2][h][i] = 0.0;
    }
    l[e][1][h][h] = 1.0;
  }
}","[129 129 129 ..., 127   0 127]"
102,npb-3.3-BT-x_solve2,S,15,5,1,0,5,0,1807992,60,CPU,0.07029099999999999,0.08207300000000001,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h, i;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  if (g > (d - 2) || f > (c - 2))
    return;

  e = get_global_id(0);
  if (e == 1)
    e = b - 1;

  int j = (g - 1) * (c - 2) + (f - 1);
  int k = j * (12 + 1) * 3 * 5 * 5;
  __global double(*l)[3][5][5] = (__global double(*)[3][5][5]) & a[k];

  for (h = 0; h < 5; h++) {
    for (i = 0; i < 5; i++) {
      l[e][0][h][i] = 0.0;
      l[e][1][h][i] = 0.0;
      l[e][2][h][i] = 0.0;
    }
    l[e][1][h][h] = 1.0;
  }
}","[129 129 129 ..., 127   0 127]"
103,npb-3.3-BT-x_solve2,W,15,5,1,0,5,0,15949464,44,GPU,0.168493,0.089388,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h, i;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  if (g > (d - 2) || f > (c - 2))
    return;

  e = get_global_id(0);
  if (e == 1)
    e = b - 1;

  int j = (g - 1) * (c - 2) + (f - 1);
  int k = j * (12 + 1) * 3 * 5 * 5;
  __global double(*l)[3][5][5] = (__global double(*)[3][5][5]) & a[k];

  for (h = 0; h < 5; h++) {
    for (i = 0; i < 5; i++) {
      l[e][0][h][i] = 0.0;
      l[e][1][h][i] = 0.0;
      l[e][2][h][i] = 0.0;
    }
    l[e][1][h][h] = 1.0;
  }
}","[129 129 129 ..., 127   0 127]"
104,npb-3.3-BT-x_solve3,A,372,3,3,0,203,0,320454224,62,CPU,21.609073000000002,29.466054999999997,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i;
  double j, k;

  i = get_global_id(2) + 1;
  h = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (i > (f - 2) || h > (e - 2) || g > (d - 2))
    return;

  int l = (i - 1) * (e - 2) + (h - 1);
  int m = l * (12 + 1) * 5 * 5;
  __global double(*n)[5][5] = (__global double(*)[5][5]) & a[m];
  __global double(*o)[5][5] = (__global double(*)[5][5]) & b[m];

  m = l * (12 + 1) * 3 * 5 * 5;
  __global double(*p)[3][5][5] = (__global double(*)[3][5][5]) & c[m];

  j = 0.010 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))));
  k = 0.010 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))));

  p[g][0][0][0] = -k * n[g - 1][0][0] - j * o[g - 1][0][0] - j * 0.75;
  p[g][0][1][0] = -k * n[g - 1][1][0] - j * o[g - 1][1][0];
  p[g][0][2][0] = -k * n[g - 1][2][0] - j * o[g - 1][2][0];
  p[g][0][3][0] = -k * n[g - 1][3][0] - j * o[g - 1][3][0];
  p[g][0][4][0] = -k * n[g - 1][4][0] - j * o[g - 1][4][0];

  p[g][0][0][1] = -k * n[g - 1][0][1] - j * o[g - 1][0][1];
  p[g][0][1][1] = -k * n[g - 1][1][1] - j * o[g - 1][1][1] - j * 0.75;
  p[g][0][2][1] = -k * n[g - 1][2][1] - j * o[g - 1][2][1];
  p[g][0][3][1] = -k * n[g - 1][3][1] - j * o[g - 1][3][1];
  p[g][0][4][1] = -k * n[g - 1][4][1] - j * o[g - 1][4][1];

  p[g][0][0][2] = -k * n[g - 1][0][2] - j * o[g - 1][0][2];
  p[g][0][1][2] = -k * n[g - 1][1][2] - j * o[g - 1][1][2];
  p[g][0][2][2] = -k * n[g - 1][2][2] - j * o[g - 1][2][2] - j * 0.75;
  p[g][0][3][2] = -k * n[g - 1][3][2] - j * o[g - 1][3][2];
  p[g][0][4][2] = -k * n[g - 1][4][2] - j * o[g - 1][4][2];

  p[g][0][0][3] = -k * n[g - 1][0][3] - j * o[g - 1][0][3];
  p[g][0][1][3] = -k * n[g - 1][1][3] - j * o[g - 1][1][3];
  p[g][0][2][3] = -k * n[g - 1][2][3] - j * o[g - 1][2][3];
  p[g][0][3][3] = -k * n[g - 1][3][3] - j * o[g - 1][3][3] - j * 0.75;
  p[g][0][4][3] = -k * n[g - 1][4][3] - j * o[g - 1][4][3];

  p[g][0][0][4] = -k * n[g - 1][0][4] - j * o[g - 1][0][4];
  p[g][0][1][4] = -k * n[g - 1][1][4] - j * o[g - 1][1][4];
  p[g][0][2][4] = -k * n[g - 1][2][4] - j * o[g - 1][2][4];
  p[g][0][3][4] = -k * n[g - 1][3][4] - j * o[g - 1][3][4];
  p[g][0][4][4] = -k * n[g - 1][4][4] - j * o[g - 1][4][4] - j * 0.75;

  p[g][1][0][0] = 1.0 + j * 2.0 * o[g][0][0] + j * 2.0 * 0.75;
  p[g][1][1][0] = j * 2.0 * o[g][1][0];
  p[g][1][2][0] = j * 2.0 * o[g][2][0];
  p[g][1][3][0] = j * 2.0 * o[g][3][0];
  p[g][1][4][0] = j * 2.0 * o[g][4][0];

  p[g][1][0][1] = j * 2.0 * o[g][0][1];
  p[g][1][1][1] = 1.0 + j * 2.0 * o[g][1][1] + j * 2.0 * 0.75;
  p[g][1][2][1] = j * 2.0 * o[g][2][1];
  p[g][1][3][1] = j * 2.0 * o[g][3][1];
  p[g][1][4][1] = j * 2.0 * o[g][4][1];

  p[g][1][0][2] = j * 2.0 * o[g][0][2];
  p[g][1][1][2] = j * 2.0 * o[g][1][2];
  p[g][1][2][2] = 1.0 + j * 2.0 * o[g][2][2] + j * 2.0 * 0.75;
  p[g][1][3][2] = j * 2.0 * o[g][3][2];
  p[g][1][4][2] = j * 2.0 * o[g][4][2];

  p[g][1][0][3] = j * 2.0 * o[g][0][3];
  p[g][1][1][3] = j * 2.0 * o[g][1][3];
  p[g][1][2][3] = j * 2.0 * o[g][2][3];
  p[g][1][3][3] = 1.0 + j * 2.0 * o[g][3][3] + j * 2.0 * 0.75;
  p[g][1][4][3] = j * 2.0 * o[g][4][3];

  p[g][1][0][4] = j * 2.0 * o[g][0][4];
  p[g][1][1][4] = j * 2.0 * o[g][1][4];
  p[g][1][2][4] = j * 2.0 * o[g][2][4];
  p[g][1][3][4] = j * 2.0 * o[g][3][4];
  p[g][1][4][4] = 1.0 + j * 2.0 * o[g][4][4] + j * 2.0 * 0.75;

  p[g][2][0][0] = k * n[g + 1][0][0] - j * o[g + 1][0][0] - j * 0.75;
  p[g][2][1][0] = k * n[g + 1][1][0] - j * o[g + 1][1][0];
  p[g][2][2][0] = k * n[g + 1][2][0] - j * o[g + 1][2][0];
  p[g][2][3][0] = k * n[g + 1][3][0] - j * o[g + 1][3][0];
  p[g][2][4][0] = k * n[g + 1][4][0] - j * o[g + 1][4][0];

  p[g][2][0][1] = k * n[g + 1][0][1] - j * o[g + 1][0][1];
  p[g][2][1][1] = k * n[g + 1][1][1] - j * o[g + 1][1][1] - j * 0.75;
  p[g][2][2][1] = k * n[g + 1][2][1] - j * o[g + 1][2][1];
  p[g][2][3][1] = k * n[g + 1][3][1] - j * o[g + 1][3][1];
  p[g][2][4][1] = k * n[g + 1][4][1] - j * o[g + 1][4][1];

  p[g][2][0][2] = k * n[g + 1][0][2] - j * o[g + 1][0][2];
  p[g][2][1][2] = k * n[g + 1][1][2] - j * o[g + 1][1][2];
  p[g][2][2][2] = k * n[g + 1][2][2] - j * o[g + 1][2][2] - j * 0.75;
  p[g][2][3][2] = k * n[g + 1][3][2] - j * o[g + 1][3][2];
  p[g][2][4][2] = k * n[g + 1][4][2] - j * o[g + 1][4][2];

  p[g][2][0][3] = k * n[g + 1][0][3] - j * o[g + 1][0][3];
  p[g][2][1][3] = k * n[g + 1][1][3] - j * o[g + 1][1][3];
  p[g][2][2][3] = k * n[g + 1][2][3] - j * o[g + 1][2][3];
  p[g][2][3][3] = k * n[g + 1][3][3] - j * o[g + 1][3][3] - j * 0.75;
  p[g][2][4][3] = k * n[g + 1][4][3] - j * o[g + 1][4][3];

  p[g][2][0][4] = k * n[g + 1][0][4] - j * o[g + 1][0][4];
  p[g][2][1][4] = k * n[g + 1][1][4] - j * o[g + 1][1][4];
  p[g][2][2][4] = k * n[g + 1][2][4] - j * o[g + 1][2][4];
  p[g][2][3][4] = k * n[g + 1][3][4] - j * o[g + 1][3][4];
  p[g][2][4][4] = k * n[g + 1][4][4] - j * o[g + 1][4][4] - j * 0.75;
}","[  0   2 102 ...,  26   0 127]"
105,npb-3.3-BT-x_solve3,B,372,3,3,0,203,0,1313673032,32,CPU,94.842892,108.439012,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i;
  double j, k;

  i = get_global_id(2) + 1;
  h = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (i > (f - 2) || h > (e - 2) || g > (d - 2))
    return;

  int l = (i - 1) * (e - 2) + (h - 1);
  int m = l * (12 + 1) * 5 * 5;
  __global double(*n)[5][5] = (__global double(*)[5][5]) & a[m];
  __global double(*o)[5][5] = (__global double(*)[5][5]) & b[m];

  m = l * (12 + 1) * 3 * 5 * 5;
  __global double(*p)[3][5][5] = (__global double(*)[3][5][5]) & c[m];

  j = 0.010 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))));
  k = 0.010 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))));

  p[g][0][0][0] = -k * n[g - 1][0][0] - j * o[g - 1][0][0] - j * 0.75;
  p[g][0][1][0] = -k * n[g - 1][1][0] - j * o[g - 1][1][0];
  p[g][0][2][0] = -k * n[g - 1][2][0] - j * o[g - 1][2][0];
  p[g][0][3][0] = -k * n[g - 1][3][0] - j * o[g - 1][3][0];
  p[g][0][4][0] = -k * n[g - 1][4][0] - j * o[g - 1][4][0];

  p[g][0][0][1] = -k * n[g - 1][0][1] - j * o[g - 1][0][1];
  p[g][0][1][1] = -k * n[g - 1][1][1] - j * o[g - 1][1][1] - j * 0.75;
  p[g][0][2][1] = -k * n[g - 1][2][1] - j * o[g - 1][2][1];
  p[g][0][3][1] = -k * n[g - 1][3][1] - j * o[g - 1][3][1];
  p[g][0][4][1] = -k * n[g - 1][4][1] - j * o[g - 1][4][1];

  p[g][0][0][2] = -k * n[g - 1][0][2] - j * o[g - 1][0][2];
  p[g][0][1][2] = -k * n[g - 1][1][2] - j * o[g - 1][1][2];
  p[g][0][2][2] = -k * n[g - 1][2][2] - j * o[g - 1][2][2] - j * 0.75;
  p[g][0][3][2] = -k * n[g - 1][3][2] - j * o[g - 1][3][2];
  p[g][0][4][2] = -k * n[g - 1][4][2] - j * o[g - 1][4][2];

  p[g][0][0][3] = -k * n[g - 1][0][3] - j * o[g - 1][0][3];
  p[g][0][1][3] = -k * n[g - 1][1][3] - j * o[g - 1][1][3];
  p[g][0][2][3] = -k * n[g - 1][2][3] - j * o[g - 1][2][3];
  p[g][0][3][3] = -k * n[g - 1][3][3] - j * o[g - 1][3][3] - j * 0.75;
  p[g][0][4][3] = -k * n[g - 1][4][3] - j * o[g - 1][4][3];

  p[g][0][0][4] = -k * n[g - 1][0][4] - j * o[g - 1][0][4];
  p[g][0][1][4] = -k * n[g - 1][1][4] - j * o[g - 1][1][4];
  p[g][0][2][4] = -k * n[g - 1][2][4] - j * o[g - 1][2][4];
  p[g][0][3][4] = -k * n[g - 1][3][4] - j * o[g - 1][3][4];
  p[g][0][4][4] = -k * n[g - 1][4][4] - j * o[g - 1][4][4] - j * 0.75;

  p[g][1][0][0] = 1.0 + j * 2.0 * o[g][0][0] + j * 2.0 * 0.75;
  p[g][1][1][0] = j * 2.0 * o[g][1][0];
  p[g][1][2][0] = j * 2.0 * o[g][2][0];
  p[g][1][3][0] = j * 2.0 * o[g][3][0];
  p[g][1][4][0] = j * 2.0 * o[g][4][0];

  p[g][1][0][1] = j * 2.0 * o[g][0][1];
  p[g][1][1][1] = 1.0 + j * 2.0 * o[g][1][1] + j * 2.0 * 0.75;
  p[g][1][2][1] = j * 2.0 * o[g][2][1];
  p[g][1][3][1] = j * 2.0 * o[g][3][1];
  p[g][1][4][1] = j * 2.0 * o[g][4][1];

  p[g][1][0][2] = j * 2.0 * o[g][0][2];
  p[g][1][1][2] = j * 2.0 * o[g][1][2];
  p[g][1][2][2] = 1.0 + j * 2.0 * o[g][2][2] + j * 2.0 * 0.75;
  p[g][1][3][2] = j * 2.0 * o[g][3][2];
  p[g][1][4][2] = j * 2.0 * o[g][4][2];

  p[g][1][0][3] = j * 2.0 * o[g][0][3];
  p[g][1][1][3] = j * 2.0 * o[g][1][3];
  p[g][1][2][3] = j * 2.0 * o[g][2][3];
  p[g][1][3][3] = 1.0 + j * 2.0 * o[g][3][3] + j * 2.0 * 0.75;
  p[g][1][4][3] = j * 2.0 * o[g][4][3];

  p[g][1][0][4] = j * 2.0 * o[g][0][4];
  p[g][1][1][4] = j * 2.0 * o[g][1][4];
  p[g][1][2][4] = j * 2.0 * o[g][2][4];
  p[g][1][3][4] = j * 2.0 * o[g][3][4];
  p[g][1][4][4] = 1.0 + j * 2.0 * o[g][4][4] + j * 2.0 * 0.75;

  p[g][2][0][0] = k * n[g + 1][0][0] - j * o[g + 1][0][0] - j * 0.75;
  p[g][2][1][0] = k * n[g + 1][1][0] - j * o[g + 1][1][0];
  p[g][2][2][0] = k * n[g + 1][2][0] - j * o[g + 1][2][0];
  p[g][2][3][0] = k * n[g + 1][3][0] - j * o[g + 1][3][0];
  p[g][2][4][0] = k * n[g + 1][4][0] - j * o[g + 1][4][0];

  p[g][2][0][1] = k * n[g + 1][0][1] - j * o[g + 1][0][1];
  p[g][2][1][1] = k * n[g + 1][1][1] - j * o[g + 1][1][1] - j * 0.75;
  p[g][2][2][1] = k * n[g + 1][2][1] - j * o[g + 1][2][1];
  p[g][2][3][1] = k * n[g + 1][3][1] - j * o[g + 1][3][1];
  p[g][2][4][1] = k * n[g + 1][4][1] - j * o[g + 1][4][1];

  p[g][2][0][2] = k * n[g + 1][0][2] - j * o[g + 1][0][2];
  p[g][2][1][2] = k * n[g + 1][1][2] - j * o[g + 1][1][2];
  p[g][2][2][2] = k * n[g + 1][2][2] - j * o[g + 1][2][2] - j * 0.75;
  p[g][2][3][2] = k * n[g + 1][3][2] - j * o[g + 1][3][2];
  p[g][2][4][2] = k * n[g + 1][4][2] - j * o[g + 1][4][2];

  p[g][2][0][3] = k * n[g + 1][0][3] - j * o[g + 1][0][3];
  p[g][2][1][3] = k * n[g + 1][1][3] - j * o[g + 1][1][3];
  p[g][2][2][3] = k * n[g + 1][2][3] - j * o[g + 1][2][3];
  p[g][2][3][3] = k * n[g + 1][3][3] - j * o[g + 1][3][3] - j * 0.75;
  p[g][2][4][3] = k * n[g + 1][4][3] - j * o[g + 1][4][3];

  p[g][2][0][4] = k * n[g + 1][0][4] - j * o[g + 1][0][4];
  p[g][2][1][4] = k * n[g + 1][1][4] - j * o[g + 1][1][4];
  p[g][2][2][4] = k * n[g + 1][2][4] - j * o[g + 1][2][4];
  p[g][2][3][4] = k * n[g + 1][3][4] - j * o[g + 1][3][4];
  p[g][2][4][4] = k * n[g + 1][4][4] - j * o[g + 1][4][4] - j * 0.75;
}","[  0   2 102 ...,  26   0 127]"
106,npb-3.3-BT-x_solve3,S,372,3,3,0,203,0,1807992,60,CPU,0.09402100000000001,0.10706700000000001,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i;
  double j, k;

  i = get_global_id(2) + 1;
  h = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (i > (f - 2) || h > (e - 2) || g > (d - 2))
    return;

  int l = (i - 1) * (e - 2) + (h - 1);
  int m = l * (12 + 1) * 5 * 5;
  __global double(*n)[5][5] = (__global double(*)[5][5]) & a[m];
  __global double(*o)[5][5] = (__global double(*)[5][5]) & b[m];

  m = l * (12 + 1) * 3 * 5 * 5;
  __global double(*p)[3][5][5] = (__global double(*)[3][5][5]) & c[m];

  j = 0.010 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))));
  k = 0.010 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))));

  p[g][0][0][0] = -k * n[g - 1][0][0] - j * o[g - 1][0][0] - j * 0.75;
  p[g][0][1][0] = -k * n[g - 1][1][0] - j * o[g - 1][1][0];
  p[g][0][2][0] = -k * n[g - 1][2][0] - j * o[g - 1][2][0];
  p[g][0][3][0] = -k * n[g - 1][3][0] - j * o[g - 1][3][0];
  p[g][0][4][0] = -k * n[g - 1][4][0] - j * o[g - 1][4][0];

  p[g][0][0][1] = -k * n[g - 1][0][1] - j * o[g - 1][0][1];
  p[g][0][1][1] = -k * n[g - 1][1][1] - j * o[g - 1][1][1] - j * 0.75;
  p[g][0][2][1] = -k * n[g - 1][2][1] - j * o[g - 1][2][1];
  p[g][0][3][1] = -k * n[g - 1][3][1] - j * o[g - 1][3][1];
  p[g][0][4][1] = -k * n[g - 1][4][1] - j * o[g - 1][4][1];

  p[g][0][0][2] = -k * n[g - 1][0][2] - j * o[g - 1][0][2];
  p[g][0][1][2] = -k * n[g - 1][1][2] - j * o[g - 1][1][2];
  p[g][0][2][2] = -k * n[g - 1][2][2] - j * o[g - 1][2][2] - j * 0.75;
  p[g][0][3][2] = -k * n[g - 1][3][2] - j * o[g - 1][3][2];
  p[g][0][4][2] = -k * n[g - 1][4][2] - j * o[g - 1][4][2];

  p[g][0][0][3] = -k * n[g - 1][0][3] - j * o[g - 1][0][3];
  p[g][0][1][3] = -k * n[g - 1][1][3] - j * o[g - 1][1][3];
  p[g][0][2][3] = -k * n[g - 1][2][3] - j * o[g - 1][2][3];
  p[g][0][3][3] = -k * n[g - 1][3][3] - j * o[g - 1][3][3] - j * 0.75;
  p[g][0][4][3] = -k * n[g - 1][4][3] - j * o[g - 1][4][3];

  p[g][0][0][4] = -k * n[g - 1][0][4] - j * o[g - 1][0][4];
  p[g][0][1][4] = -k * n[g - 1][1][4] - j * o[g - 1][1][4];
  p[g][0][2][4] = -k * n[g - 1][2][4] - j * o[g - 1][2][4];
  p[g][0][3][4] = -k * n[g - 1][3][4] - j * o[g - 1][3][4];
  p[g][0][4][4] = -k * n[g - 1][4][4] - j * o[g - 1][4][4] - j * 0.75;

  p[g][1][0][0] = 1.0 + j * 2.0 * o[g][0][0] + j * 2.0 * 0.75;
  p[g][1][1][0] = j * 2.0 * o[g][1][0];
  p[g][1][2][0] = j * 2.0 * o[g][2][0];
  p[g][1][3][0] = j * 2.0 * o[g][3][0];
  p[g][1][4][0] = j * 2.0 * o[g][4][0];

  p[g][1][0][1] = j * 2.0 * o[g][0][1];
  p[g][1][1][1] = 1.0 + j * 2.0 * o[g][1][1] + j * 2.0 * 0.75;
  p[g][1][2][1] = j * 2.0 * o[g][2][1];
  p[g][1][3][1] = j * 2.0 * o[g][3][1];
  p[g][1][4][1] = j * 2.0 * o[g][4][1];

  p[g][1][0][2] = j * 2.0 * o[g][0][2];
  p[g][1][1][2] = j * 2.0 * o[g][1][2];
  p[g][1][2][2] = 1.0 + j * 2.0 * o[g][2][2] + j * 2.0 * 0.75;
  p[g][1][3][2] = j * 2.0 * o[g][3][2];
  p[g][1][4][2] = j * 2.0 * o[g][4][2];

  p[g][1][0][3] = j * 2.0 * o[g][0][3];
  p[g][1][1][3] = j * 2.0 * o[g][1][3];
  p[g][1][2][3] = j * 2.0 * o[g][2][3];
  p[g][1][3][3] = 1.0 + j * 2.0 * o[g][3][3] + j * 2.0 * 0.75;
  p[g][1][4][3] = j * 2.0 * o[g][4][3];

  p[g][1][0][4] = j * 2.0 * o[g][0][4];
  p[g][1][1][4] = j * 2.0 * o[g][1][4];
  p[g][1][2][4] = j * 2.0 * o[g][2][4];
  p[g][1][3][4] = j * 2.0 * o[g][3][4];
  p[g][1][4][4] = 1.0 + j * 2.0 * o[g][4][4] + j * 2.0 * 0.75;

  p[g][2][0][0] = k * n[g + 1][0][0] - j * o[g + 1][0][0] - j * 0.75;
  p[g][2][1][0] = k * n[g + 1][1][0] - j * o[g + 1][1][0];
  p[g][2][2][0] = k * n[g + 1][2][0] - j * o[g + 1][2][0];
  p[g][2][3][0] = k * n[g + 1][3][0] - j * o[g + 1][3][0];
  p[g][2][4][0] = k * n[g + 1][4][0] - j * o[g + 1][4][0];

  p[g][2][0][1] = k * n[g + 1][0][1] - j * o[g + 1][0][1];
  p[g][2][1][1] = k * n[g + 1][1][1] - j * o[g + 1][1][1] - j * 0.75;
  p[g][2][2][1] = k * n[g + 1][2][1] - j * o[g + 1][2][1];
  p[g][2][3][1] = k * n[g + 1][3][1] - j * o[g + 1][3][1];
  p[g][2][4][1] = k * n[g + 1][4][1] - j * o[g + 1][4][1];

  p[g][2][0][2] = k * n[g + 1][0][2] - j * o[g + 1][0][2];
  p[g][2][1][2] = k * n[g + 1][1][2] - j * o[g + 1][1][2];
  p[g][2][2][2] = k * n[g + 1][2][2] - j * o[g + 1][2][2] - j * 0.75;
  p[g][2][3][2] = k * n[g + 1][3][2] - j * o[g + 1][3][2];
  p[g][2][4][2] = k * n[g + 1][4][2] - j * o[g + 1][4][2];

  p[g][2][0][3] = k * n[g + 1][0][3] - j * o[g + 1][0][3];
  p[g][2][1][3] = k * n[g + 1][1][3] - j * o[g + 1][1][3];
  p[g][2][2][3] = k * n[g + 1][2][3] - j * o[g + 1][2][3];
  p[g][2][3][3] = k * n[g + 1][3][3] - j * o[g + 1][3][3] - j * 0.75;
  p[g][2][4][3] = k * n[g + 1][4][3] - j * o[g + 1][4][3];

  p[g][2][0][4] = k * n[g + 1][0][4] - j * o[g + 1][0][4];
  p[g][2][1][4] = k * n[g + 1][1][4] - j * o[g + 1][1][4];
  p[g][2][2][4] = k * n[g + 1][2][4] - j * o[g + 1][2][4];
  p[g][2][3][4] = k * n[g + 1][3][4] - j * o[g + 1][3][4];
  p[g][2][4][4] = k * n[g + 1][4][4] - j * o[g + 1][4][4] - j * 0.75;
}","[  0   2 102 ...,  26   0 127]"
107,npb-3.3-BT-x_solve3,W,372,3,3,0,203,0,15948384,44,CPU,0.817419,1.2968819999999999,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i;
  double j, k;

  i = get_global_id(2) + 1;
  h = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (i > (f - 2) || h > (e - 2) || g > (d - 2))
    return;

  int l = (i - 1) * (e - 2) + (h - 1);
  int m = l * (12 + 1) * 5 * 5;
  __global double(*n)[5][5] = (__global double(*)[5][5]) & a[m];
  __global double(*o)[5][5] = (__global double(*)[5][5]) & b[m];

  m = l * (12 + 1) * 3 * 5 * 5;
  __global double(*p)[3][5][5] = (__global double(*)[3][5][5]) & c[m];

  j = 0.010 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))));
  k = 0.010 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))));

  p[g][0][0][0] = -k * n[g - 1][0][0] - j * o[g - 1][0][0] - j * 0.75;
  p[g][0][1][0] = -k * n[g - 1][1][0] - j * o[g - 1][1][0];
  p[g][0][2][0] = -k * n[g - 1][2][0] - j * o[g - 1][2][0];
  p[g][0][3][0] = -k * n[g - 1][3][0] - j * o[g - 1][3][0];
  p[g][0][4][0] = -k * n[g - 1][4][0] - j * o[g - 1][4][0];

  p[g][0][0][1] = -k * n[g - 1][0][1] - j * o[g - 1][0][1];
  p[g][0][1][1] = -k * n[g - 1][1][1] - j * o[g - 1][1][1] - j * 0.75;
  p[g][0][2][1] = -k * n[g - 1][2][1] - j * o[g - 1][2][1];
  p[g][0][3][1] = -k * n[g - 1][3][1] - j * o[g - 1][3][1];
  p[g][0][4][1] = -k * n[g - 1][4][1] - j * o[g - 1][4][1];

  p[g][0][0][2] = -k * n[g - 1][0][2] - j * o[g - 1][0][2];
  p[g][0][1][2] = -k * n[g - 1][1][2] - j * o[g - 1][1][2];
  p[g][0][2][2] = -k * n[g - 1][2][2] - j * o[g - 1][2][2] - j * 0.75;
  p[g][0][3][2] = -k * n[g - 1][3][2] - j * o[g - 1][3][2];
  p[g][0][4][2] = -k * n[g - 1][4][2] - j * o[g - 1][4][2];

  p[g][0][0][3] = -k * n[g - 1][0][3] - j * o[g - 1][0][3];
  p[g][0][1][3] = -k * n[g - 1][1][3] - j * o[g - 1][1][3];
  p[g][0][2][3] = -k * n[g - 1][2][3] - j * o[g - 1][2][3];
  p[g][0][3][3] = -k * n[g - 1][3][3] - j * o[g - 1][3][3] - j * 0.75;
  p[g][0][4][3] = -k * n[g - 1][4][3] - j * o[g - 1][4][3];

  p[g][0][0][4] = -k * n[g - 1][0][4] - j * o[g - 1][0][4];
  p[g][0][1][4] = -k * n[g - 1][1][4] - j * o[g - 1][1][4];
  p[g][0][2][4] = -k * n[g - 1][2][4] - j * o[g - 1][2][4];
  p[g][0][3][4] = -k * n[g - 1][3][4] - j * o[g - 1][3][4];
  p[g][0][4][4] = -k * n[g - 1][4][4] - j * o[g - 1][4][4] - j * 0.75;

  p[g][1][0][0] = 1.0 + j * 2.0 * o[g][0][0] + j * 2.0 * 0.75;
  p[g][1][1][0] = j * 2.0 * o[g][1][0];
  p[g][1][2][0] = j * 2.0 * o[g][2][0];
  p[g][1][3][0] = j * 2.0 * o[g][3][0];
  p[g][1][4][0] = j * 2.0 * o[g][4][0];

  p[g][1][0][1] = j * 2.0 * o[g][0][1];
  p[g][1][1][1] = 1.0 + j * 2.0 * o[g][1][1] + j * 2.0 * 0.75;
  p[g][1][2][1] = j * 2.0 * o[g][2][1];
  p[g][1][3][1] = j * 2.0 * o[g][3][1];
  p[g][1][4][1] = j * 2.0 * o[g][4][1];

  p[g][1][0][2] = j * 2.0 * o[g][0][2];
  p[g][1][1][2] = j * 2.0 * o[g][1][2];
  p[g][1][2][2] = 1.0 + j * 2.0 * o[g][2][2] + j * 2.0 * 0.75;
  p[g][1][3][2] = j * 2.0 * o[g][3][2];
  p[g][1][4][2] = j * 2.0 * o[g][4][2];

  p[g][1][0][3] = j * 2.0 * o[g][0][3];
  p[g][1][1][3] = j * 2.0 * o[g][1][3];
  p[g][1][2][3] = j * 2.0 * o[g][2][3];
  p[g][1][3][3] = 1.0 + j * 2.0 * o[g][3][3] + j * 2.0 * 0.75;
  p[g][1][4][3] = j * 2.0 * o[g][4][3];

  p[g][1][0][4] = j * 2.0 * o[g][0][4];
  p[g][1][1][4] = j * 2.0 * o[g][1][4];
  p[g][1][2][4] = j * 2.0 * o[g][2][4];
  p[g][1][3][4] = j * 2.0 * o[g][3][4];
  p[g][1][4][4] = 1.0 + j * 2.0 * o[g][4][4] + j * 2.0 * 0.75;

  p[g][2][0][0] = k * n[g + 1][0][0] - j * o[g + 1][0][0] - j * 0.75;
  p[g][2][1][0] = k * n[g + 1][1][0] - j * o[g + 1][1][0];
  p[g][2][2][0] = k * n[g + 1][2][0] - j * o[g + 1][2][0];
  p[g][2][3][0] = k * n[g + 1][3][0] - j * o[g + 1][3][0];
  p[g][2][4][0] = k * n[g + 1][4][0] - j * o[g + 1][4][0];

  p[g][2][0][1] = k * n[g + 1][0][1] - j * o[g + 1][0][1];
  p[g][2][1][1] = k * n[g + 1][1][1] - j * o[g + 1][1][1] - j * 0.75;
  p[g][2][2][1] = k * n[g + 1][2][1] - j * o[g + 1][2][1];
  p[g][2][3][1] = k * n[g + 1][3][1] - j * o[g + 1][3][1];
  p[g][2][4][1] = k * n[g + 1][4][1] - j * o[g + 1][4][1];

  p[g][2][0][2] = k * n[g + 1][0][2] - j * o[g + 1][0][2];
  p[g][2][1][2] = k * n[g + 1][1][2] - j * o[g + 1][1][2];
  p[g][2][2][2] = k * n[g + 1][2][2] - j * o[g + 1][2][2] - j * 0.75;
  p[g][2][3][2] = k * n[g + 1][3][2] - j * o[g + 1][3][2];
  p[g][2][4][2] = k * n[g + 1][4][2] - j * o[g + 1][4][2];

  p[g][2][0][3] = k * n[g + 1][0][3] - j * o[g + 1][0][3];
  p[g][2][1][3] = k * n[g + 1][1][3] - j * o[g + 1][1][3];
  p[g][2][2][3] = k * n[g + 1][2][3] - j * o[g + 1][2][3];
  p[g][2][3][3] = k * n[g + 1][3][3] - j * o[g + 1][3][3] - j * 0.75;
  p[g][2][4][3] = k * n[g + 1][4][3] - j * o[g + 1][4][3];

  p[g][2][0][4] = k * n[g + 1][0][4] - j * o[g + 1][0][4];
  p[g][2][1][4] = k * n[g + 1][1][4] - j * o[g + 1][1][4];
  p[g][2][2][4] = k * n[g + 1][2][4] - j * o[g + 1][2][4];
  p[g][2][3][4] = k * n[g + 1][3][4] - j * o[g + 1][3][4];
  p[g][2][4][4] = k * n[g + 1][4][4] - j * o[g + 1][4][4] - j * 0.75;
}","[  0   2 102 ...,  26   0 127]"
108,npb-3.3-BT-y_solve,A,829,135,9,0,233,0,320454824,62,GPU,16.906211,8.449017,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k;
  double l[5][5], m[5][5], n[5][5], o[5];
  double p[5][5], q[5];

  h = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h > (e - 2) || f > (c - 2))
    return;

  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  int s = (h - 1) * (c - 2) + (f - 1);
  int t = s * (12 + 1) * 3 * 5 * 5;
  __global double(*u)[3][5][5] = (__global double(*)[3][5][5]) & b[t];

  k = d - 1;
  K(m, u[0][1]);
  K(n, u[0][2]);
  N(o, r[h][0][f]);
  I(m, n, o);
  L(u[0][1], m);
  L(u[0][2], n);
  O(r[h][0][f], o);

  for (g = 1; g <= k - 1; g++) {
    M(p, n);
    P(q, o);
    K(l, u[g][0]);
    K(m, u[g][1]);
    K(n, u[g][2]);
    N(o, r[h][g][f]);

    G(l, q, o);

    H(l, p, m);

    I(m, n, o);

    L(u[g][1], m);
    L(u[g][2], n);
    O(r[h][g][f], o);
  }

  M(p, n);
  P(q, o);
  K(l, u[k][0]);
  K(m, u[k][1]);
  K(n, u[k][2]);
  N(o, r[h][k][f]);

  G(l, q, o);

  H(l, p, m);

  J(m, o);

  L(u[k][1], m);
  L(u[k][2], n);
  O(r[h][k][f], o);

  for (g = k - 1; g >= 0; g--) {
    for (i = 0; i < 5; i++) {
      q[i] = r[h][g][f][i];
      for (j = 0; j < 5; j++) {
        q[i] = q[i] - u[g][2][j][i] * o[j];
      }
      r[h][g][f][i] = q[i];
    }
    P(o, q);
  }
}","[102  51  20 ..., 127   0 127]"
109,npb-3.3-BT-y_solve,B,829,135,9,0,233,0,1313673512,32,GPU,70.63935699999998,28.769712,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k;
  double l[5][5], m[5][5], n[5][5], o[5];
  double p[5][5], q[5];

  h = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h > (e - 2) || f > (c - 2))
    return;

  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  int s = (h - 1) * (c - 2) + (f - 1);
  int t = s * (12 + 1) * 3 * 5 * 5;
  __global double(*u)[3][5][5] = (__global double(*)[3][5][5]) & b[t];

  k = d - 1;
  K(m, u[0][1]);
  K(n, u[0][2]);
  N(o, r[h][0][f]);
  I(m, n, o);
  L(u[0][1], m);
  L(u[0][2], n);
  O(r[h][0][f], o);

  for (g = 1; g <= k - 1; g++) {
    M(p, n);
    P(q, o);
    K(l, u[g][0]);
    K(m, u[g][1]);
    K(n, u[g][2]);
    N(o, r[h][g][f]);

    G(l, q, o);

    H(l, p, m);

    I(m, n, o);

    L(u[g][1], m);
    L(u[g][2], n);
    O(r[h][g][f], o);
  }

  M(p, n);
  P(q, o);
  K(l, u[k][0]);
  K(m, u[k][1]);
  K(n, u[k][2]);
  N(o, r[h][k][f]);

  G(l, q, o);

  H(l, p, m);

  J(m, o);

  L(u[k][1], m);
  L(u[k][2], n);
  O(r[h][k][f], o);

  for (g = k - 1; g >= 0; g--) {
    for (i = 0; i < 5; i++) {
      q[i] = r[h][g][f][i];
      for (j = 0; j < 5; j++) {
        q[i] = q[i] - u[g][2][j][i] * o[j];
      }
      r[h][g][f][i] = q[i];
    }
    P(o, q);
  }
}","[102  51  20 ..., 127   0 127]"
110,npb-3.3-BT-y_solve,S,829,135,9,0,233,0,1807992,60,CPU,0.22839,0.32060700000000003,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k;
  double l[5][5], m[5][5], n[5][5], o[5];
  double p[5][5], q[5];

  h = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h > (e - 2) || f > (c - 2))
    return;

  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  int s = (h - 1) * (c - 2) + (f - 1);
  int t = s * (12 + 1) * 3 * 5 * 5;
  __global double(*u)[3][5][5] = (__global double(*)[3][5][5]) & b[t];

  k = d - 1;
  K(m, u[0][1]);
  K(n, u[0][2]);
  N(o, r[h][0][f]);
  I(m, n, o);
  L(u[0][1], m);
  L(u[0][2], n);
  O(r[h][0][f], o);

  for (g = 1; g <= k - 1; g++) {
    M(p, n);
    P(q, o);
    K(l, u[g][0]);
    K(m, u[g][1]);
    K(n, u[g][2]);
    N(o, r[h][g][f]);

    G(l, q, o);

    H(l, p, m);

    I(m, n, o);

    L(u[g][1], m);
    L(u[g][2], n);
    O(r[h][g][f], o);
  }

  M(p, n);
  P(q, o);
  K(l, u[k][0]);
  K(m, u[k][1]);
  K(n, u[k][2]);
  N(o, r[h][k][f]);

  G(l, q, o);

  H(l, p, m);

  J(m, o);

  L(u[k][1], m);
  L(u[k][2], n);
  O(r[h][k][f], o);

  for (g = k - 1; g >= 0; g--) {
    for (i = 0; i < 5; i++) {
      q[i] = r[h][g][f][i];
      for (j = 0; j < 5; j++) {
        q[i] = q[i] - u[g][2][j][i] * o[j];
      }
      r[h][g][f][i] = q[i];
    }
    P(o, q);
  }
}","[102  51  20 ..., 127   0 127]"
111,npb-3.3-BT-y_solve,W,829,135,9,0,233,0,15949464,44,GPU,0.934164,0.508358,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k;
  double l[5][5], m[5][5], n[5][5], o[5];
  double p[5][5], q[5];

  h = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h > (e - 2) || f > (c - 2))
    return;

  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  int s = (h - 1) * (c - 2) + (f - 1);
  int t = s * (12 + 1) * 3 * 5 * 5;
  __global double(*u)[3][5][5] = (__global double(*)[3][5][5]) & b[t];

  k = d - 1;
  K(m, u[0][1]);
  K(n, u[0][2]);
  N(o, r[h][0][f]);
  I(m, n, o);
  L(u[0][1], m);
  L(u[0][2], n);
  O(r[h][0][f], o);

  for (g = 1; g <= k - 1; g++) {
    M(p, n);
    P(q, o);
    K(l, u[g][0]);
    K(m, u[g][1]);
    K(n, u[g][2]);
    N(o, r[h][g][f]);

    G(l, q, o);

    H(l, p, m);

    I(m, n, o);

    L(u[g][1], m);
    L(u[g][2], n);
    O(r[h][g][f], o);
  }

  M(p, n);
  P(q, o);
  K(l, u[k][0]);
  K(m, u[k][1]);
  K(n, u[k][2]);
  N(o, r[h][k][f]);

  G(l, q, o);

  H(l, p, m);

  J(m, o);

  L(u[k][1], m);
  L(u[k][2], n);
  O(r[h][k][f], o);

  for (g = k - 1; g >= 0; g--) {
    for (i = 0; i < 5; i++) {
      q[i] = r[h][g][f][i];
      for (j = 0; j < 5; j++) {
        q[i] = q[i] - u[g][2][j][i] * o[j];
      }
      r[h][g][f][i] = q[i];
    }
    P(o, q);
  }
}","[102  51  20 ..., 127   0 127]"
112,npb-3.3-BT-y_solve1,A,183,3,6,0,61,0,320454824,64,GPU,12.283156,6.720049,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, int g, int h, int i) {
  int j, k, l;
  double m, n, o;
  double p[5];

  l = get_global_id(2) + 1;
  j = get_global_id(1) + 1;
  k = get_global_id(0);
  if (l > (i - 2) || j > (g - 2) || k >= h)
    return;

  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])a;
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*s)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*t)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])d;

  int u = (l - 1) * (g - 2) + (j - 1);
  int v = u * (12 + 1) * 5 * 5;
  __global double(*w)[5][5] = (__global double(*)[5][5]) & e[v];
  __global double(*x)[5][5] = (__global double(*)[5][5]) & f[v];

  m = r[l][k][j];
  n = m * m;
  o = m * n;
  p[0] = t[l][k][j][0];
  p[1] = t[l][k][j][1];
  p[2] = t[l][k][j][2];
  p[3] = t[l][k][j][3];
  p[4] = t[l][k][j][4];

  w[k][0][0] = 0.0;
  w[k][1][0] = 0.0;
  w[k][2][0] = 1.0;
  w[k][3][0] = 0.0;
  w[k][4][0] = 0.0;

  w[k][0][1] = -(p[1] * p[2]) * n;
  w[k][1][1] = p[2] * m;
  w[k][2][1] = p[1] * m;
  w[k][3][1] = 0.0;
  w[k][4][1] = 0.0;

  w[k][0][2] = -(p[2] * p[2] * n) + 0.4 * q[l][k][j];
  w[k][1][2] = -0.4 * p[1] * m;
  w[k][2][2] = (2.0 - 0.4) * p[2] * m;
  w[k][3][2] = -0.4 * p[3] * m;
  w[k][4][2] = 0.4;

  w[k][0][3] = -(p[2] * p[3]) * n;
  w[k][1][3] = 0.0;
  w[k][2][3] = p[3] * m;
  w[k][3][3] = p[2] * m;
  w[k][4][3] = 0.0;

  w[k][0][4] = (0.4 * 2.0 * s[l][k][j] - 1.4 * p[4]) * p[2] * n;
  w[k][1][4] = -0.4 * p[1] * p[2] * n;
  w[k][2][4] = 1.4 * p[4] * m - 0.4 * (q[l][k][j] + p[2] * p[2] * n);
  w[k][3][4] = -0.4 * (p[2] * p[3]) * n;
  w[k][4][4] = 1.4 * p[2] * m;

  x[k][0][0] = 0.0;
  x[k][1][0] = 0.0;
  x[k][2][0] = 0.0;
  x[k][3][0] = 0.0;
  x[k][4][0] = 0.0;

  x[k][0][1] = -(0.1 * 1.0) * n * p[1];
  x[k][1][1] = (0.1 * 1.0) * m;
  x[k][2][1] = 0.0;
  x[k][3][1] = 0.0;
  x[k][4][1] = 0.0;

  x[k][0][2] = -(4.0 / 3.0) * (0.1 * 1.0) * n * p[2];
  x[k][1][2] = 0.0;
  x[k][2][2] = (4.0 / 3.0) * (0.1 * 1.0) * m;
  x[k][3][2] = 0.0;
  x[k][4][2] = 0.0;

  x[k][0][3] = -(0.1 * 1.0) * n * p[3];
  x[k][1][3] = 0.0;
  x[k][2][3] = 0.0;
  x[k][3][3] = (0.1 * 1.0) * m;
  x[k][4][3] = 0.0;

  x[k][0][4] = -((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[1] * p[1]) - ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[2] * p[2]) - ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[3] * p[3]) - ((1.4 * 1.4) * (0.1 * 1.0)) * n * p[4];

  x[k][1][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[1];
  x[k][2][4] = ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[2];
  x[k][3][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[3];
  x[k][4][4] = (((1.4 * 1.4) * (0.1 * 1.0))) * m;
}","[ 52  51  15 ...,  26   0 127]"
113,npb-3.3-BT-y_solve1,B,183,3,6,0,61,0,1313673512,32,GPU,52.362536999999996,20.668229,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, int g, int h, int i) {
  int j, k, l;
  double m, n, o;
  double p[5];

  l = get_global_id(2) + 1;
  j = get_global_id(1) + 1;
  k = get_global_id(0);
  if (l > (i - 2) || j > (g - 2) || k >= h)
    return;

  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])a;
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*s)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*t)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])d;

  int u = (l - 1) * (g - 2) + (j - 1);
  int v = u * (12 + 1) * 5 * 5;
  __global double(*w)[5][5] = (__global double(*)[5][5]) & e[v];
  __global double(*x)[5][5] = (__global double(*)[5][5]) & f[v];

  m = r[l][k][j];
  n = m * m;
  o = m * n;
  p[0] = t[l][k][j][0];
  p[1] = t[l][k][j][1];
  p[2] = t[l][k][j][2];
  p[3] = t[l][k][j][3];
  p[4] = t[l][k][j][4];

  w[k][0][0] = 0.0;
  w[k][1][0] = 0.0;
  w[k][2][0] = 1.0;
  w[k][3][0] = 0.0;
  w[k][4][0] = 0.0;

  w[k][0][1] = -(p[1] * p[2]) * n;
  w[k][1][1] = p[2] * m;
  w[k][2][1] = p[1] * m;
  w[k][3][1] = 0.0;
  w[k][4][1] = 0.0;

  w[k][0][2] = -(p[2] * p[2] * n) + 0.4 * q[l][k][j];
  w[k][1][2] = -0.4 * p[1] * m;
  w[k][2][2] = (2.0 - 0.4) * p[2] * m;
  w[k][3][2] = -0.4 * p[3] * m;
  w[k][4][2] = 0.4;

  w[k][0][3] = -(p[2] * p[3]) * n;
  w[k][1][3] = 0.0;
  w[k][2][3] = p[3] * m;
  w[k][3][3] = p[2] * m;
  w[k][4][3] = 0.0;

  w[k][0][4] = (0.4 * 2.0 * s[l][k][j] - 1.4 * p[4]) * p[2] * n;
  w[k][1][4] = -0.4 * p[1] * p[2] * n;
  w[k][2][4] = 1.4 * p[4] * m - 0.4 * (q[l][k][j] + p[2] * p[2] * n);
  w[k][3][4] = -0.4 * (p[2] * p[3]) * n;
  w[k][4][4] = 1.4 * p[2] * m;

  x[k][0][0] = 0.0;
  x[k][1][0] = 0.0;
  x[k][2][0] = 0.0;
  x[k][3][0] = 0.0;
  x[k][4][0] = 0.0;

  x[k][0][1] = -(0.1 * 1.0) * n * p[1];
  x[k][1][1] = (0.1 * 1.0) * m;
  x[k][2][1] = 0.0;
  x[k][3][1] = 0.0;
  x[k][4][1] = 0.0;

  x[k][0][2] = -(4.0 / 3.0) * (0.1 * 1.0) * n * p[2];
  x[k][1][2] = 0.0;
  x[k][2][2] = (4.0 / 3.0) * (0.1 * 1.0) * m;
  x[k][3][2] = 0.0;
  x[k][4][2] = 0.0;

  x[k][0][3] = -(0.1 * 1.0) * n * p[3];
  x[k][1][3] = 0.0;
  x[k][2][3] = 0.0;
  x[k][3][3] = (0.1 * 1.0) * m;
  x[k][4][3] = 0.0;

  x[k][0][4] = -((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[1] * p[1]) - ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[2] * p[2]) - ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[3] * p[3]) - ((1.4 * 1.4) * (0.1 * 1.0)) * n * p[4];

  x[k][1][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[1];
  x[k][2][4] = ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[2];
  x[k][3][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[3];
  x[k][4][4] = (((1.4 * 1.4) * (0.1 * 1.0))) * m;
}","[ 52  51  15 ...,  26   0 127]"
114,npb-3.3-BT-y_solve1,S,183,3,6,0,61,0,1807992,60,GPU,0.089811,0.08706699999999999,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, int g, int h, int i) {
  int j, k, l;
  double m, n, o;
  double p[5];

  l = get_global_id(2) + 1;
  j = get_global_id(1) + 1;
  k = get_global_id(0);
  if (l > (i - 2) || j > (g - 2) || k >= h)
    return;

  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])a;
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*s)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*t)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])d;

  int u = (l - 1) * (g - 2) + (j - 1);
  int v = u * (12 + 1) * 5 * 5;
  __global double(*w)[5][5] = (__global double(*)[5][5]) & e[v];
  __global double(*x)[5][5] = (__global double(*)[5][5]) & f[v];

  m = r[l][k][j];
  n = m * m;
  o = m * n;
  p[0] = t[l][k][j][0];
  p[1] = t[l][k][j][1];
  p[2] = t[l][k][j][2];
  p[3] = t[l][k][j][3];
  p[4] = t[l][k][j][4];

  w[k][0][0] = 0.0;
  w[k][1][0] = 0.0;
  w[k][2][0] = 1.0;
  w[k][3][0] = 0.0;
  w[k][4][0] = 0.0;

  w[k][0][1] = -(p[1] * p[2]) * n;
  w[k][1][1] = p[2] * m;
  w[k][2][1] = p[1] * m;
  w[k][3][1] = 0.0;
  w[k][4][1] = 0.0;

  w[k][0][2] = -(p[2] * p[2] * n) + 0.4 * q[l][k][j];
  w[k][1][2] = -0.4 * p[1] * m;
  w[k][2][2] = (2.0 - 0.4) * p[2] * m;
  w[k][3][2] = -0.4 * p[3] * m;
  w[k][4][2] = 0.4;

  w[k][0][3] = -(p[2] * p[3]) * n;
  w[k][1][3] = 0.0;
  w[k][2][3] = p[3] * m;
  w[k][3][3] = p[2] * m;
  w[k][4][3] = 0.0;

  w[k][0][4] = (0.4 * 2.0 * s[l][k][j] - 1.4 * p[4]) * p[2] * n;
  w[k][1][4] = -0.4 * p[1] * p[2] * n;
  w[k][2][4] = 1.4 * p[4] * m - 0.4 * (q[l][k][j] + p[2] * p[2] * n);
  w[k][3][4] = -0.4 * (p[2] * p[3]) * n;
  w[k][4][4] = 1.4 * p[2] * m;

  x[k][0][0] = 0.0;
  x[k][1][0] = 0.0;
  x[k][2][0] = 0.0;
  x[k][3][0] = 0.0;
  x[k][4][0] = 0.0;

  x[k][0][1] = -(0.1 * 1.0) * n * p[1];
  x[k][1][1] = (0.1 * 1.0) * m;
  x[k][2][1] = 0.0;
  x[k][3][1] = 0.0;
  x[k][4][1] = 0.0;

  x[k][0][2] = -(4.0 / 3.0) * (0.1 * 1.0) * n * p[2];
  x[k][1][2] = 0.0;
  x[k][2][2] = (4.0 / 3.0) * (0.1 * 1.0) * m;
  x[k][3][2] = 0.0;
  x[k][4][2] = 0.0;

  x[k][0][3] = -(0.1 * 1.0) * n * p[3];
  x[k][1][3] = 0.0;
  x[k][2][3] = 0.0;
  x[k][3][3] = (0.1 * 1.0) * m;
  x[k][4][3] = 0.0;

  x[k][0][4] = -((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[1] * p[1]) - ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[2] * p[2]) - ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[3] * p[3]) - ((1.4 * 1.4) * (0.1 * 1.0)) * n * p[4];

  x[k][1][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[1];
  x[k][2][4] = ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[2];
  x[k][3][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[3];
  x[k][4][4] = (((1.4 * 1.4) * (0.1 * 1.0))) * m;
}","[ 52  51  15 ...,  26   0 127]"
115,npb-3.3-BT-y_solve1,W,183,3,6,0,61,0,15949464,48,GPU,0.577761,0.30151100000000003,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, int g, int h, int i) {
  int j, k, l;
  double m, n, o;
  double p[5];

  l = get_global_id(2) + 1;
  j = get_global_id(1) + 1;
  k = get_global_id(0);
  if (l > (i - 2) || j > (g - 2) || k >= h)
    return;

  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])a;
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*s)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  __global double(*t)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])d;

  int u = (l - 1) * (g - 2) + (j - 1);
  int v = u * (12 + 1) * 5 * 5;
  __global double(*w)[5][5] = (__global double(*)[5][5]) & e[v];
  __global double(*x)[5][5] = (__global double(*)[5][5]) & f[v];

  m = r[l][k][j];
  n = m * m;
  o = m * n;
  p[0] = t[l][k][j][0];
  p[1] = t[l][k][j][1];
  p[2] = t[l][k][j][2];
  p[3] = t[l][k][j][3];
  p[4] = t[l][k][j][4];

  w[k][0][0] = 0.0;
  w[k][1][0] = 0.0;
  w[k][2][0] = 1.0;
  w[k][3][0] = 0.0;
  w[k][4][0] = 0.0;

  w[k][0][1] = -(p[1] * p[2]) * n;
  w[k][1][1] = p[2] * m;
  w[k][2][1] = p[1] * m;
  w[k][3][1] = 0.0;
  w[k][4][1] = 0.0;

  w[k][0][2] = -(p[2] * p[2] * n) + 0.4 * q[l][k][j];
  w[k][1][2] = -0.4 * p[1] * m;
  w[k][2][2] = (2.0 - 0.4) * p[2] * m;
  w[k][3][2] = -0.4 * p[3] * m;
  w[k][4][2] = 0.4;

  w[k][0][3] = -(p[2] * p[3]) * n;
  w[k][1][3] = 0.0;
  w[k][2][3] = p[3] * m;
  w[k][3][3] = p[2] * m;
  w[k][4][3] = 0.0;

  w[k][0][4] = (0.4 * 2.0 * s[l][k][j] - 1.4 * p[4]) * p[2] * n;
  w[k][1][4] = -0.4 * p[1] * p[2] * n;
  w[k][2][4] = 1.4 * p[4] * m - 0.4 * (q[l][k][j] + p[2] * p[2] * n);
  w[k][3][4] = -0.4 * (p[2] * p[3]) * n;
  w[k][4][4] = 1.4 * p[2] * m;

  x[k][0][0] = 0.0;
  x[k][1][0] = 0.0;
  x[k][2][0] = 0.0;
  x[k][3][0] = 0.0;
  x[k][4][0] = 0.0;

  x[k][0][1] = -(0.1 * 1.0) * n * p[1];
  x[k][1][1] = (0.1 * 1.0) * m;
  x[k][2][1] = 0.0;
  x[k][3][1] = 0.0;
  x[k][4][1] = 0.0;

  x[k][0][2] = -(4.0 / 3.0) * (0.1 * 1.0) * n * p[2];
  x[k][1][2] = 0.0;
  x[k][2][2] = (4.0 / 3.0) * (0.1 * 1.0) * m;
  x[k][3][2] = 0.0;
  x[k][4][2] = 0.0;

  x[k][0][3] = -(0.1 * 1.0) * n * p[3];
  x[k][1][3] = 0.0;
  x[k][2][3] = 0.0;
  x[k][3][3] = (0.1 * 1.0) * m;
  x[k][4][3] = 0.0;

  x[k][0][4] = -((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[1] * p[1]) - ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[2] * p[2]) - ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * o * (p[3] * p[3]) - ((1.4 * 1.4) * (0.1 * 1.0)) * n * p[4];

  x[k][1][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[1];
  x[k][2][4] = ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[2];
  x[k][3][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * p[3];
  x[k][4][4] = (((1.4 * 1.4) * (0.1 * 1.0))) * m;
}","[ 52  51  15 ...,  26   0 127]"
116,npb-3.3-BT-y_solve2,A,15,5,1,0,5,0,320454824,64,GPU,1.006071,0.477415,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h, i;

  g = get_global_id(2) + 1;
  e = get_global_id(1) + 1;
  if (g > (d - 2) || e > (b - 2))
    return;

  f = get_global_id(0);
  if (f == 1)
    f = c - 1;

  int j = (g - 1) * (b - 2) + (e - 1);
  int k = j * (12 + 1) * 3 * 5 * 5;
  __global double(*l)[3][5][5] = (__global double(*)[3][5][5]) & a[k];

  for (h = 0; h < 5; h++) {
    for (i = 0; i < 5; i++) {
      l[f][0][h][i] = 0.0;
      l[f][1][h][i] = 0.0;
      l[f][2][h][i] = 0.0;
    }
    l[f][1][h][h] = 1.0;
  }
}","[129 129 129 ..., 127   0 127]"
117,npb-3.3-BT-y_solve2,B,15,5,1,0,5,0,1313673512,32,GPU,2.267141,1.122627,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h, i;

  g = get_global_id(2) + 1;
  e = get_global_id(1) + 1;
  if (g > (d - 2) || e > (b - 2))
    return;

  f = get_global_id(0);
  if (f == 1)
    f = c - 1;

  int j = (g - 1) * (b - 2) + (e - 1);
  int k = j * (12 + 1) * 3 * 5 * 5;
  __global double(*l)[3][5][5] = (__global double(*)[3][5][5]) & a[k];

  for (h = 0; h < 5; h++) {
    for (i = 0; i < 5; i++) {
      l[f][0][h][i] = 0.0;
      l[f][1][h][i] = 0.0;
      l[f][2][h][i] = 0.0;
    }
    l[f][1][h][h] = 1.0;
  }
}","[129 129 129 ..., 127   0 127]"
118,npb-3.3-BT-y_solve2,S,15,5,1,0,5,0,1807992,60,CPU,0.070984,0.08204199999999999,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h, i;

  g = get_global_id(2) + 1;
  e = get_global_id(1) + 1;
  if (g > (d - 2) || e > (b - 2))
    return;

  f = get_global_id(0);
  if (f == 1)
    f = c - 1;

  int j = (g - 1) * (b - 2) + (e - 1);
  int k = j * (12 + 1) * 3 * 5 * 5;
  __global double(*l)[3][5][5] = (__global double(*)[3][5][5]) & a[k];

  for (h = 0; h < 5; h++) {
    for (i = 0; i < 5; i++) {
      l[f][0][h][i] = 0.0;
      l[f][1][h][i] = 0.0;
      l[f][2][h][i] = 0.0;
    }
    l[f][1][h][h] = 1.0;
  }
}","[129 129 129 ..., 127   0 127]"
119,npb-3.3-BT-y_solve2,W,15,5,1,0,5,0,15949464,44,GPU,0.147223,0.089737,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h, i;

  g = get_global_id(2) + 1;
  e = get_global_id(1) + 1;
  if (g > (d - 2) || e > (b - 2))
    return;

  f = get_global_id(0);
  if (f == 1)
    f = c - 1;

  int j = (g - 1) * (b - 2) + (e - 1);
  int k = j * (12 + 1) * 3 * 5 * 5;
  __global double(*l)[3][5][5] = (__global double(*)[3][5][5]) & a[k];

  for (h = 0; h < 5; h++) {
    for (i = 0; i < 5; i++) {
      l[f][0][h][i] = 0.0;
      l[f][1][h][i] = 0.0;
      l[f][2][h][i] = 0.0;
    }
    l[f][1][h][h] = 1.0;
  }
}","[129 129 129 ..., 127   0 127]"
120,npb-3.3-BT-y_solve3,A,372,3,3,0,203,0,320454224,62,CPU,21.608036,29.463351,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i;
  double j, k;

  i = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  h = get_global_id(0) + 1;
  if (i > (f - 2) || g > (d - 2) || h > (e - 2))
    return;

  int l = (i - 1) * (d - 2) + (g - 1);
  int m = l * (12 + 1) * 5 * 5;
  __global double(*n)[5][5] = (__global double(*)[5][5]) & a[m];
  __global double(*o)[5][5] = (__global double(*)[5][5]) & b[m];

  m = l * (12 + 1) * 3 * 5 * 5;
  __global double(*p)[3][5][5] = (__global double(*)[3][5][5]) & c[m];

  j = 0.010 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))));
  k = 0.010 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))));

  p[h][0][0][0] = -k * n[h - 1][0][0] - j * o[h - 1][0][0] - j * 0.75;
  p[h][0][1][0] = -k * n[h - 1][1][0] - j * o[h - 1][1][0];
  p[h][0][2][0] = -k * n[h - 1][2][0] - j * o[h - 1][2][0];
  p[h][0][3][0] = -k * n[h - 1][3][0] - j * o[h - 1][3][0];
  p[h][0][4][0] = -k * n[h - 1][4][0] - j * o[h - 1][4][0];

  p[h][0][0][1] = -k * n[h - 1][0][1] - j * o[h - 1][0][1];
  p[h][0][1][1] = -k * n[h - 1][1][1] - j * o[h - 1][1][1] - j * 0.75;
  p[h][0][2][1] = -k * n[h - 1][2][1] - j * o[h - 1][2][1];
  p[h][0][3][1] = -k * n[h - 1][3][1] - j * o[h - 1][3][1];
  p[h][0][4][1] = -k * n[h - 1][4][1] - j * o[h - 1][4][1];

  p[h][0][0][2] = -k * n[h - 1][0][2] - j * o[h - 1][0][2];
  p[h][0][1][2] = -k * n[h - 1][1][2] - j * o[h - 1][1][2];
  p[h][0][2][2] = -k * n[h - 1][2][2] - j * o[h - 1][2][2] - j * 0.75;
  p[h][0][3][2] = -k * n[h - 1][3][2] - j * o[h - 1][3][2];
  p[h][0][4][2] = -k * n[h - 1][4][2] - j * o[h - 1][4][2];

  p[h][0][0][3] = -k * n[h - 1][0][3] - j * o[h - 1][0][3];
  p[h][0][1][3] = -k * n[h - 1][1][3] - j * o[h - 1][1][3];
  p[h][0][2][3] = -k * n[h - 1][2][3] - j * o[h - 1][2][3];
  p[h][0][3][3] = -k * n[h - 1][3][3] - j * o[h - 1][3][3] - j * 0.75;
  p[h][0][4][3] = -k * n[h - 1][4][3] - j * o[h - 1][4][3];

  p[h][0][0][4] = -k * n[h - 1][0][4] - j * o[h - 1][0][4];
  p[h][0][1][4] = -k * n[h - 1][1][4] - j * o[h - 1][1][4];
  p[h][0][2][4] = -k * n[h - 1][2][4] - j * o[h - 1][2][4];
  p[h][0][3][4] = -k * n[h - 1][3][4] - j * o[h - 1][3][4];
  p[h][0][4][4] = -k * n[h - 1][4][4] - j * o[h - 1][4][4] - j * 0.75;

  p[h][1][0][0] = 1.0 + j * 2.0 * o[h][0][0] + j * 2.0 * 0.75;
  p[h][1][1][0] = j * 2.0 * o[h][1][0];
  p[h][1][2][0] = j * 2.0 * o[h][2][0];
  p[h][1][3][0] = j * 2.0 * o[h][3][0];
  p[h][1][4][0] = j * 2.0 * o[h][4][0];

  p[h][1][0][1] = j * 2.0 * o[h][0][1];
  p[h][1][1][1] = 1.0 + j * 2.0 * o[h][1][1] + j * 2.0 * 0.75;
  p[h][1][2][1] = j * 2.0 * o[h][2][1];
  p[h][1][3][1] = j * 2.0 * o[h][3][1];
  p[h][1][4][1] = j * 2.0 * o[h][4][1];

  p[h][1][0][2] = j * 2.0 * o[h][0][2];
  p[h][1][1][2] = j * 2.0 * o[h][1][2];
  p[h][1][2][2] = 1.0 + j * 2.0 * o[h][2][2] + j * 2.0 * 0.75;
  p[h][1][3][2] = j * 2.0 * o[h][3][2];
  p[h][1][4][2] = j * 2.0 * o[h][4][2];

  p[h][1][0][3] = j * 2.0 * o[h][0][3];
  p[h][1][1][3] = j * 2.0 * o[h][1][3];
  p[h][1][2][3] = j * 2.0 * o[h][2][3];
  p[h][1][3][3] = 1.0 + j * 2.0 * o[h][3][3] + j * 2.0 * 0.75;
  p[h][1][4][3] = j * 2.0 * o[h][4][3];

  p[h][1][0][4] = j * 2.0 * o[h][0][4];
  p[h][1][1][4] = j * 2.0 * o[h][1][4];
  p[h][1][2][4] = j * 2.0 * o[h][2][4];
  p[h][1][3][4] = j * 2.0 * o[h][3][4];
  p[h][1][4][4] = 1.0 + j * 2.0 * o[h][4][4] + j * 2.0 * 0.75;

  p[h][2][0][0] = k * n[h + 1][0][0] - j * o[h + 1][0][0] - j * 0.75;
  p[h][2][1][0] = k * n[h + 1][1][0] - j * o[h + 1][1][0];
  p[h][2][2][0] = k * n[h + 1][2][0] - j * o[h + 1][2][0];
  p[h][2][3][0] = k * n[h + 1][3][0] - j * o[h + 1][3][0];
  p[h][2][4][0] = k * n[h + 1][4][0] - j * o[h + 1][4][0];

  p[h][2][0][1] = k * n[h + 1][0][1] - j * o[h + 1][0][1];
  p[h][2][1][1] = k * n[h + 1][1][1] - j * o[h + 1][1][1] - j * 0.75;
  p[h][2][2][1] = k * n[h + 1][2][1] - j * o[h + 1][2][1];
  p[h][2][3][1] = k * n[h + 1][3][1] - j * o[h + 1][3][1];
  p[h][2][4][1] = k * n[h + 1][4][1] - j * o[h + 1][4][1];

  p[h][2][0][2] = k * n[h + 1][0][2] - j * o[h + 1][0][2];
  p[h][2][1][2] = k * n[h + 1][1][2] - j * o[h + 1][1][2];
  p[h][2][2][2] = k * n[h + 1][2][2] - j * o[h + 1][2][2] - j * 0.75;
  p[h][2][3][2] = k * n[h + 1][3][2] - j * o[h + 1][3][2];
  p[h][2][4][2] = k * n[h + 1][4][2] - j * o[h + 1][4][2];

  p[h][2][0][3] = k * n[h + 1][0][3] - j * o[h + 1][0][3];
  p[h][2][1][3] = k * n[h + 1][1][3] - j * o[h + 1][1][3];
  p[h][2][2][3] = k * n[h + 1][2][3] - j * o[h + 1][2][3];
  p[h][2][3][3] = k * n[h + 1][3][3] - j * o[h + 1][3][3] - j * 0.75;
  p[h][2][4][3] = k * n[h + 1][4][3] - j * o[h + 1][4][3];

  p[h][2][0][4] = k * n[h + 1][0][4] - j * o[h + 1][0][4];
  p[h][2][1][4] = k * n[h + 1][1][4] - j * o[h + 1][1][4];
  p[h][2][2][4] = k * n[h + 1][2][4] - j * o[h + 1][2][4];
  p[h][2][3][4] = k * n[h + 1][3][4] - j * o[h + 1][3][4];
  p[h][2][4][4] = k * n[h + 1][4][4] - j * o[h + 1][4][4] - j * 0.75;
}","[  0   2 102 ...,  26   0 127]"
121,npb-3.3-BT-y_solve3,B,372,3,3,0,203,0,1313673032,32,CPU,94.885625,108.44353500000001,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i;
  double j, k;

  i = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  h = get_global_id(0) + 1;
  if (i > (f - 2) || g > (d - 2) || h > (e - 2))
    return;

  int l = (i - 1) * (d - 2) + (g - 1);
  int m = l * (12 + 1) * 5 * 5;
  __global double(*n)[5][5] = (__global double(*)[5][5]) & a[m];
  __global double(*o)[5][5] = (__global double(*)[5][5]) & b[m];

  m = l * (12 + 1) * 3 * 5 * 5;
  __global double(*p)[3][5][5] = (__global double(*)[3][5][5]) & c[m];

  j = 0.010 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))));
  k = 0.010 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))));

  p[h][0][0][0] = -k * n[h - 1][0][0] - j * o[h - 1][0][0] - j * 0.75;
  p[h][0][1][0] = -k * n[h - 1][1][0] - j * o[h - 1][1][0];
  p[h][0][2][0] = -k * n[h - 1][2][0] - j * o[h - 1][2][0];
  p[h][0][3][0] = -k * n[h - 1][3][0] - j * o[h - 1][3][0];
  p[h][0][4][0] = -k * n[h - 1][4][0] - j * o[h - 1][4][0];

  p[h][0][0][1] = -k * n[h - 1][0][1] - j * o[h - 1][0][1];
  p[h][0][1][1] = -k * n[h - 1][1][1] - j * o[h - 1][1][1] - j * 0.75;
  p[h][0][2][1] = -k * n[h - 1][2][1] - j * o[h - 1][2][1];
  p[h][0][3][1] = -k * n[h - 1][3][1] - j * o[h - 1][3][1];
  p[h][0][4][1] = -k * n[h - 1][4][1] - j * o[h - 1][4][1];

  p[h][0][0][2] = -k * n[h - 1][0][2] - j * o[h - 1][0][2];
  p[h][0][1][2] = -k * n[h - 1][1][2] - j * o[h - 1][1][2];
  p[h][0][2][2] = -k * n[h - 1][2][2] - j * o[h - 1][2][2] - j * 0.75;
  p[h][0][3][2] = -k * n[h - 1][3][2] - j * o[h - 1][3][2];
  p[h][0][4][2] = -k * n[h - 1][4][2] - j * o[h - 1][4][2];

  p[h][0][0][3] = -k * n[h - 1][0][3] - j * o[h - 1][0][3];
  p[h][0][1][3] = -k * n[h - 1][1][3] - j * o[h - 1][1][3];
  p[h][0][2][3] = -k * n[h - 1][2][3] - j * o[h - 1][2][3];
  p[h][0][3][3] = -k * n[h - 1][3][3] - j * o[h - 1][3][3] - j * 0.75;
  p[h][0][4][3] = -k * n[h - 1][4][3] - j * o[h - 1][4][3];

  p[h][0][0][4] = -k * n[h - 1][0][4] - j * o[h - 1][0][4];
  p[h][0][1][4] = -k * n[h - 1][1][4] - j * o[h - 1][1][4];
  p[h][0][2][4] = -k * n[h - 1][2][4] - j * o[h - 1][2][4];
  p[h][0][3][4] = -k * n[h - 1][3][4] - j * o[h - 1][3][4];
  p[h][0][4][4] = -k * n[h - 1][4][4] - j * o[h - 1][4][4] - j * 0.75;

  p[h][1][0][0] = 1.0 + j * 2.0 * o[h][0][0] + j * 2.0 * 0.75;
  p[h][1][1][0] = j * 2.0 * o[h][1][0];
  p[h][1][2][0] = j * 2.0 * o[h][2][0];
  p[h][1][3][0] = j * 2.0 * o[h][3][0];
  p[h][1][4][0] = j * 2.0 * o[h][4][0];

  p[h][1][0][1] = j * 2.0 * o[h][0][1];
  p[h][1][1][1] = 1.0 + j * 2.0 * o[h][1][1] + j * 2.0 * 0.75;
  p[h][1][2][1] = j * 2.0 * o[h][2][1];
  p[h][1][3][1] = j * 2.0 * o[h][3][1];
  p[h][1][4][1] = j * 2.0 * o[h][4][1];

  p[h][1][0][2] = j * 2.0 * o[h][0][2];
  p[h][1][1][2] = j * 2.0 * o[h][1][2];
  p[h][1][2][2] = 1.0 + j * 2.0 * o[h][2][2] + j * 2.0 * 0.75;
  p[h][1][3][2] = j * 2.0 * o[h][3][2];
  p[h][1][4][2] = j * 2.0 * o[h][4][2];

  p[h][1][0][3] = j * 2.0 * o[h][0][3];
  p[h][1][1][3] = j * 2.0 * o[h][1][3];
  p[h][1][2][3] = j * 2.0 * o[h][2][3];
  p[h][1][3][3] = 1.0 + j * 2.0 * o[h][3][3] + j * 2.0 * 0.75;
  p[h][1][4][3] = j * 2.0 * o[h][4][3];

  p[h][1][0][4] = j * 2.0 * o[h][0][4];
  p[h][1][1][4] = j * 2.0 * o[h][1][4];
  p[h][1][2][4] = j * 2.0 * o[h][2][4];
  p[h][1][3][4] = j * 2.0 * o[h][3][4];
  p[h][1][4][4] = 1.0 + j * 2.0 * o[h][4][4] + j * 2.0 * 0.75;

  p[h][2][0][0] = k * n[h + 1][0][0] - j * o[h + 1][0][0] - j * 0.75;
  p[h][2][1][0] = k * n[h + 1][1][0] - j * o[h + 1][1][0];
  p[h][2][2][0] = k * n[h + 1][2][0] - j * o[h + 1][2][0];
  p[h][2][3][0] = k * n[h + 1][3][0] - j * o[h + 1][3][0];
  p[h][2][4][0] = k * n[h + 1][4][0] - j * o[h + 1][4][0];

  p[h][2][0][1] = k * n[h + 1][0][1] - j * o[h + 1][0][1];
  p[h][2][1][1] = k * n[h + 1][1][1] - j * o[h + 1][1][1] - j * 0.75;
  p[h][2][2][1] = k * n[h + 1][2][1] - j * o[h + 1][2][1];
  p[h][2][3][1] = k * n[h + 1][3][1] - j * o[h + 1][3][1];
  p[h][2][4][1] = k * n[h + 1][4][1] - j * o[h + 1][4][1];

  p[h][2][0][2] = k * n[h + 1][0][2] - j * o[h + 1][0][2];
  p[h][2][1][2] = k * n[h + 1][1][2] - j * o[h + 1][1][2];
  p[h][2][2][2] = k * n[h + 1][2][2] - j * o[h + 1][2][2] - j * 0.75;
  p[h][2][3][2] = k * n[h + 1][3][2] - j * o[h + 1][3][2];
  p[h][2][4][2] = k * n[h + 1][4][2] - j * o[h + 1][4][2];

  p[h][2][0][3] = k * n[h + 1][0][3] - j * o[h + 1][0][3];
  p[h][2][1][3] = k * n[h + 1][1][3] - j * o[h + 1][1][3];
  p[h][2][2][3] = k * n[h + 1][2][3] - j * o[h + 1][2][3];
  p[h][2][3][3] = k * n[h + 1][3][3] - j * o[h + 1][3][3] - j * 0.75;
  p[h][2][4][3] = k * n[h + 1][4][3] - j * o[h + 1][4][3];

  p[h][2][0][4] = k * n[h + 1][0][4] - j * o[h + 1][0][4];
  p[h][2][1][4] = k * n[h + 1][1][4] - j * o[h + 1][1][4];
  p[h][2][2][4] = k * n[h + 1][2][4] - j * o[h + 1][2][4];
  p[h][2][3][4] = k * n[h + 1][3][4] - j * o[h + 1][3][4];
  p[h][2][4][4] = k * n[h + 1][4][4] - j * o[h + 1][4][4] - j * 0.75;
}","[  0   2 102 ...,  26   0 127]"
122,npb-3.3-BT-y_solve3,S,372,3,3,0,203,0,1807992,60,CPU,0.093306,0.106994,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i;
  double j, k;

  i = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  h = get_global_id(0) + 1;
  if (i > (f - 2) || g > (d - 2) || h > (e - 2))
    return;

  int l = (i - 1) * (d - 2) + (g - 1);
  int m = l * (12 + 1) * 5 * 5;
  __global double(*n)[5][5] = (__global double(*)[5][5]) & a[m];
  __global double(*o)[5][5] = (__global double(*)[5][5]) & b[m];

  m = l * (12 + 1) * 3 * 5 * 5;
  __global double(*p)[3][5][5] = (__global double(*)[3][5][5]) & c[m];

  j = 0.010 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))));
  k = 0.010 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))));

  p[h][0][0][0] = -k * n[h - 1][0][0] - j * o[h - 1][0][0] - j * 0.75;
  p[h][0][1][0] = -k * n[h - 1][1][0] - j * o[h - 1][1][0];
  p[h][0][2][0] = -k * n[h - 1][2][0] - j * o[h - 1][2][0];
  p[h][0][3][0] = -k * n[h - 1][3][0] - j * o[h - 1][3][0];
  p[h][0][4][0] = -k * n[h - 1][4][0] - j * o[h - 1][4][0];

  p[h][0][0][1] = -k * n[h - 1][0][1] - j * o[h - 1][0][1];
  p[h][0][1][1] = -k * n[h - 1][1][1] - j * o[h - 1][1][1] - j * 0.75;
  p[h][0][2][1] = -k * n[h - 1][2][1] - j * o[h - 1][2][1];
  p[h][0][3][1] = -k * n[h - 1][3][1] - j * o[h - 1][3][1];
  p[h][0][4][1] = -k * n[h - 1][4][1] - j * o[h - 1][4][1];

  p[h][0][0][2] = -k * n[h - 1][0][2] - j * o[h - 1][0][2];
  p[h][0][1][2] = -k * n[h - 1][1][2] - j * o[h - 1][1][2];
  p[h][0][2][2] = -k * n[h - 1][2][2] - j * o[h - 1][2][2] - j * 0.75;
  p[h][0][3][2] = -k * n[h - 1][3][2] - j * o[h - 1][3][2];
  p[h][0][4][2] = -k * n[h - 1][4][2] - j * o[h - 1][4][2];

  p[h][0][0][3] = -k * n[h - 1][0][3] - j * o[h - 1][0][3];
  p[h][0][1][3] = -k * n[h - 1][1][3] - j * o[h - 1][1][3];
  p[h][0][2][3] = -k * n[h - 1][2][3] - j * o[h - 1][2][3];
  p[h][0][3][3] = -k * n[h - 1][3][3] - j * o[h - 1][3][3] - j * 0.75;
  p[h][0][4][3] = -k * n[h - 1][4][3] - j * o[h - 1][4][3];

  p[h][0][0][4] = -k * n[h - 1][0][4] - j * o[h - 1][0][4];
  p[h][0][1][4] = -k * n[h - 1][1][4] - j * o[h - 1][1][4];
  p[h][0][2][4] = -k * n[h - 1][2][4] - j * o[h - 1][2][4];
  p[h][0][3][4] = -k * n[h - 1][3][4] - j * o[h - 1][3][4];
  p[h][0][4][4] = -k * n[h - 1][4][4] - j * o[h - 1][4][4] - j * 0.75;

  p[h][1][0][0] = 1.0 + j * 2.0 * o[h][0][0] + j * 2.0 * 0.75;
  p[h][1][1][0] = j * 2.0 * o[h][1][0];
  p[h][1][2][0] = j * 2.0 * o[h][2][0];
  p[h][1][3][0] = j * 2.0 * o[h][3][0];
  p[h][1][4][0] = j * 2.0 * o[h][4][0];

  p[h][1][0][1] = j * 2.0 * o[h][0][1];
  p[h][1][1][1] = 1.0 + j * 2.0 * o[h][1][1] + j * 2.0 * 0.75;
  p[h][1][2][1] = j * 2.0 * o[h][2][1];
  p[h][1][3][1] = j * 2.0 * o[h][3][1];
  p[h][1][4][1] = j * 2.0 * o[h][4][1];

  p[h][1][0][2] = j * 2.0 * o[h][0][2];
  p[h][1][1][2] = j * 2.0 * o[h][1][2];
  p[h][1][2][2] = 1.0 + j * 2.0 * o[h][2][2] + j * 2.0 * 0.75;
  p[h][1][3][2] = j * 2.0 * o[h][3][2];
  p[h][1][4][2] = j * 2.0 * o[h][4][2];

  p[h][1][0][3] = j * 2.0 * o[h][0][3];
  p[h][1][1][3] = j * 2.0 * o[h][1][3];
  p[h][1][2][3] = j * 2.0 * o[h][2][3];
  p[h][1][3][3] = 1.0 + j * 2.0 * o[h][3][3] + j * 2.0 * 0.75;
  p[h][1][4][3] = j * 2.0 * o[h][4][3];

  p[h][1][0][4] = j * 2.0 * o[h][0][4];
  p[h][1][1][4] = j * 2.0 * o[h][1][4];
  p[h][1][2][4] = j * 2.0 * o[h][2][4];
  p[h][1][3][4] = j * 2.0 * o[h][3][4];
  p[h][1][4][4] = 1.0 + j * 2.0 * o[h][4][4] + j * 2.0 * 0.75;

  p[h][2][0][0] = k * n[h + 1][0][0] - j * o[h + 1][0][0] - j * 0.75;
  p[h][2][1][0] = k * n[h + 1][1][0] - j * o[h + 1][1][0];
  p[h][2][2][0] = k * n[h + 1][2][0] - j * o[h + 1][2][0];
  p[h][2][3][0] = k * n[h + 1][3][0] - j * o[h + 1][3][0];
  p[h][2][4][0] = k * n[h + 1][4][0] - j * o[h + 1][4][0];

  p[h][2][0][1] = k * n[h + 1][0][1] - j * o[h + 1][0][1];
  p[h][2][1][1] = k * n[h + 1][1][1] - j * o[h + 1][1][1] - j * 0.75;
  p[h][2][2][1] = k * n[h + 1][2][1] - j * o[h + 1][2][1];
  p[h][2][3][1] = k * n[h + 1][3][1] - j * o[h + 1][3][1];
  p[h][2][4][1] = k * n[h + 1][4][1] - j * o[h + 1][4][1];

  p[h][2][0][2] = k * n[h + 1][0][2] - j * o[h + 1][0][2];
  p[h][2][1][2] = k * n[h + 1][1][2] - j * o[h + 1][1][2];
  p[h][2][2][2] = k * n[h + 1][2][2] - j * o[h + 1][2][2] - j * 0.75;
  p[h][2][3][2] = k * n[h + 1][3][2] - j * o[h + 1][3][2];
  p[h][2][4][2] = k * n[h + 1][4][2] - j * o[h + 1][4][2];

  p[h][2][0][3] = k * n[h + 1][0][3] - j * o[h + 1][0][3];
  p[h][2][1][3] = k * n[h + 1][1][3] - j * o[h + 1][1][3];
  p[h][2][2][3] = k * n[h + 1][2][3] - j * o[h + 1][2][3];
  p[h][2][3][3] = k * n[h + 1][3][3] - j * o[h + 1][3][3] - j * 0.75;
  p[h][2][4][3] = k * n[h + 1][4][3] - j * o[h + 1][4][3];

  p[h][2][0][4] = k * n[h + 1][0][4] - j * o[h + 1][0][4];
  p[h][2][1][4] = k * n[h + 1][1][4] - j * o[h + 1][1][4];
  p[h][2][2][4] = k * n[h + 1][2][4] - j * o[h + 1][2][4];
  p[h][2][3][4] = k * n[h + 1][3][4] - j * o[h + 1][3][4];
  p[h][2][4][4] = k * n[h + 1][4][4] - j * o[h + 1][4][4] - j * 0.75;
}","[  0   2 102 ...,  26   0 127]"
123,npb-3.3-BT-y_solve3,W,372,3,3,0,203,0,15948384,44,CPU,0.7606350000000001,1.295833,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i;
  double j, k;

  i = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  h = get_global_id(0) + 1;
  if (i > (f - 2) || g > (d - 2) || h > (e - 2))
    return;

  int l = (i - 1) * (d - 2) + (g - 1);
  int m = l * (12 + 1) * 5 * 5;
  __global double(*n)[5][5] = (__global double(*)[5][5]) & a[m];
  __global double(*o)[5][5] = (__global double(*)[5][5]) & b[m];

  m = l * (12 + 1) * 3 * 5 * 5;
  __global double(*p)[3][5][5] = (__global double(*)[3][5][5]) & c[m];

  j = 0.010 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))));
  k = 0.010 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))));

  p[h][0][0][0] = -k * n[h - 1][0][0] - j * o[h - 1][0][0] - j * 0.75;
  p[h][0][1][0] = -k * n[h - 1][1][0] - j * o[h - 1][1][0];
  p[h][0][2][0] = -k * n[h - 1][2][0] - j * o[h - 1][2][0];
  p[h][0][3][0] = -k * n[h - 1][3][0] - j * o[h - 1][3][0];
  p[h][0][4][0] = -k * n[h - 1][4][0] - j * o[h - 1][4][0];

  p[h][0][0][1] = -k * n[h - 1][0][1] - j * o[h - 1][0][1];
  p[h][0][1][1] = -k * n[h - 1][1][1] - j * o[h - 1][1][1] - j * 0.75;
  p[h][0][2][1] = -k * n[h - 1][2][1] - j * o[h - 1][2][1];
  p[h][0][3][1] = -k * n[h - 1][3][1] - j * o[h - 1][3][1];
  p[h][0][4][1] = -k * n[h - 1][4][1] - j * o[h - 1][4][1];

  p[h][0][0][2] = -k * n[h - 1][0][2] - j * o[h - 1][0][2];
  p[h][0][1][2] = -k * n[h - 1][1][2] - j * o[h - 1][1][2];
  p[h][0][2][2] = -k * n[h - 1][2][2] - j * o[h - 1][2][2] - j * 0.75;
  p[h][0][3][2] = -k * n[h - 1][3][2] - j * o[h - 1][3][2];
  p[h][0][4][2] = -k * n[h - 1][4][2] - j * o[h - 1][4][2];

  p[h][0][0][3] = -k * n[h - 1][0][3] - j * o[h - 1][0][3];
  p[h][0][1][3] = -k * n[h - 1][1][3] - j * o[h - 1][1][3];
  p[h][0][2][3] = -k * n[h - 1][2][3] - j * o[h - 1][2][3];
  p[h][0][3][3] = -k * n[h - 1][3][3] - j * o[h - 1][3][3] - j * 0.75;
  p[h][0][4][3] = -k * n[h - 1][4][3] - j * o[h - 1][4][3];

  p[h][0][0][4] = -k * n[h - 1][0][4] - j * o[h - 1][0][4];
  p[h][0][1][4] = -k * n[h - 1][1][4] - j * o[h - 1][1][4];
  p[h][0][2][4] = -k * n[h - 1][2][4] - j * o[h - 1][2][4];
  p[h][0][3][4] = -k * n[h - 1][3][4] - j * o[h - 1][3][4];
  p[h][0][4][4] = -k * n[h - 1][4][4] - j * o[h - 1][4][4] - j * 0.75;

  p[h][1][0][0] = 1.0 + j * 2.0 * o[h][0][0] + j * 2.0 * 0.75;
  p[h][1][1][0] = j * 2.0 * o[h][1][0];
  p[h][1][2][0] = j * 2.0 * o[h][2][0];
  p[h][1][3][0] = j * 2.0 * o[h][3][0];
  p[h][1][4][0] = j * 2.0 * o[h][4][0];

  p[h][1][0][1] = j * 2.0 * o[h][0][1];
  p[h][1][1][1] = 1.0 + j * 2.0 * o[h][1][1] + j * 2.0 * 0.75;
  p[h][1][2][1] = j * 2.0 * o[h][2][1];
  p[h][1][3][1] = j * 2.0 * o[h][3][1];
  p[h][1][4][1] = j * 2.0 * o[h][4][1];

  p[h][1][0][2] = j * 2.0 * o[h][0][2];
  p[h][1][1][2] = j * 2.0 * o[h][1][2];
  p[h][1][2][2] = 1.0 + j * 2.0 * o[h][2][2] + j * 2.0 * 0.75;
  p[h][1][3][2] = j * 2.0 * o[h][3][2];
  p[h][1][4][2] = j * 2.0 * o[h][4][2];

  p[h][1][0][3] = j * 2.0 * o[h][0][3];
  p[h][1][1][3] = j * 2.0 * o[h][1][3];
  p[h][1][2][3] = j * 2.0 * o[h][2][3];
  p[h][1][3][3] = 1.0 + j * 2.0 * o[h][3][3] + j * 2.0 * 0.75;
  p[h][1][4][3] = j * 2.0 * o[h][4][3];

  p[h][1][0][4] = j * 2.0 * o[h][0][4];
  p[h][1][1][4] = j * 2.0 * o[h][1][4];
  p[h][1][2][4] = j * 2.0 * o[h][2][4];
  p[h][1][3][4] = j * 2.0 * o[h][3][4];
  p[h][1][4][4] = 1.0 + j * 2.0 * o[h][4][4] + j * 2.0 * 0.75;

  p[h][2][0][0] = k * n[h + 1][0][0] - j * o[h + 1][0][0] - j * 0.75;
  p[h][2][1][0] = k * n[h + 1][1][0] - j * o[h + 1][1][0];
  p[h][2][2][0] = k * n[h + 1][2][0] - j * o[h + 1][2][0];
  p[h][2][3][0] = k * n[h + 1][3][0] - j * o[h + 1][3][0];
  p[h][2][4][0] = k * n[h + 1][4][0] - j * o[h + 1][4][0];

  p[h][2][0][1] = k * n[h + 1][0][1] - j * o[h + 1][0][1];
  p[h][2][1][1] = k * n[h + 1][1][1] - j * o[h + 1][1][1] - j * 0.75;
  p[h][2][2][1] = k * n[h + 1][2][1] - j * o[h + 1][2][1];
  p[h][2][3][1] = k * n[h + 1][3][1] - j * o[h + 1][3][1];
  p[h][2][4][1] = k * n[h + 1][4][1] - j * o[h + 1][4][1];

  p[h][2][0][2] = k * n[h + 1][0][2] - j * o[h + 1][0][2];
  p[h][2][1][2] = k * n[h + 1][1][2] - j * o[h + 1][1][2];
  p[h][2][2][2] = k * n[h + 1][2][2] - j * o[h + 1][2][2] - j * 0.75;
  p[h][2][3][2] = k * n[h + 1][3][2] - j * o[h + 1][3][2];
  p[h][2][4][2] = k * n[h + 1][4][2] - j * o[h + 1][4][2];

  p[h][2][0][3] = k * n[h + 1][0][3] - j * o[h + 1][0][3];
  p[h][2][1][3] = k * n[h + 1][1][3] - j * o[h + 1][1][3];
  p[h][2][2][3] = k * n[h + 1][2][3] - j * o[h + 1][2][3];
  p[h][2][3][3] = k * n[h + 1][3][3] - j * o[h + 1][3][3] - j * 0.75;
  p[h][2][4][3] = k * n[h + 1][4][3] - j * o[h + 1][4][3];

  p[h][2][0][4] = k * n[h + 1][0][4] - j * o[h + 1][0][4];
  p[h][2][1][4] = k * n[h + 1][1][4] - j * o[h + 1][1][4];
  p[h][2][2][4] = k * n[h + 1][2][4] - j * o[h + 1][2][4];
  p[h][2][3][4] = k * n[h + 1][3][4] - j * o[h + 1][3][4];
  p[h][2][4][4] = k * n[h + 1][4][4] - j * o[h + 1][4][4] - j * 0.75;
}","[  0   2 102 ...,  26   0 127]"
124,npb-3.3-BT-z_solve,A,828,135,9,0,232,0,320454824,62,GPU,16.913439,8.431682,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k;
  double l[5][5], m[5][5], n[5][5], o[5];
  double p[5][5], q[5];

  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (g > (d - 2) || f > (c - 2))
    return;

  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  int s = (g - 1) * (c - 2) + (f - 1);
  int t = s * (12 + 1) * 3 * 5 * 5;
  __global double(*u)[3][5][5] = (__global double(*)[3][5][5]) & b[t];

  k = e - 1;
  K(m, u[0][1]);
  K(n, u[0][2]);
  N(o, r[0][g][f]);
  I(m, n, o);
  L(u[0][1], m);
  L(u[0][2], n);
  O(r[0][g][f], o);

  for (h = 1; h <= k - 1; h++) {
    M(p, n);
    P(q, o);
    K(l, u[h][0]);
    K(m, u[h][1]);
    K(n, u[h][2]);
    N(o, r[h][g][f]);

    G(l, q, o);

    H(l, p, m);

    I(m, n, o);

    L(u[h][1], m);
    L(u[h][2], n);
    O(r[h][g][f], o);
  }

  M(p, n);
  P(q, o);
  K(l, u[k][0]);
  K(m, u[k][1]);
  K(n, u[k][2]);
  N(o, r[k][g][f]);
  G(l, q, o);

  H(l, p, m);

  J(m, o);

  L(u[k][1], m);
  L(u[k][2], n);
  O(r[k][g][f], o);
  for (h = k - 1; h >= 0; h--) {
    for (i = 0; i < 5; i++) {
      q[i] = r[h][g][f][i];
      for (j = 0; j < 5; j++) {
        q[i] = q[i] - u[h][2][j][i] * o[j];
      }
      r[h][g][f][i] = q[i];
    }
    P(o, q);
  }
}","[ 75   1 102 ..., 127   0 127]"
125,npb-3.3-BT-z_solve,B,828,135,9,0,232,0,1313673512,32,GPU,71.32589,28.784266,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k;
  double l[5][5], m[5][5], n[5][5], o[5];
  double p[5][5], q[5];

  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (g > (d - 2) || f > (c - 2))
    return;

  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  int s = (g - 1) * (c - 2) + (f - 1);
  int t = s * (12 + 1) * 3 * 5 * 5;
  __global double(*u)[3][5][5] = (__global double(*)[3][5][5]) & b[t];

  k = e - 1;
  K(m, u[0][1]);
  K(n, u[0][2]);
  N(o, r[0][g][f]);
  I(m, n, o);
  L(u[0][1], m);
  L(u[0][2], n);
  O(r[0][g][f], o);

  for (h = 1; h <= k - 1; h++) {
    M(p, n);
    P(q, o);
    K(l, u[h][0]);
    K(m, u[h][1]);
    K(n, u[h][2]);
    N(o, r[h][g][f]);

    G(l, q, o);

    H(l, p, m);

    I(m, n, o);

    L(u[h][1], m);
    L(u[h][2], n);
    O(r[h][g][f], o);
  }

  M(p, n);
  P(q, o);
  K(l, u[k][0]);
  K(m, u[k][1]);
  K(n, u[k][2]);
  N(o, r[k][g][f]);
  G(l, q, o);

  H(l, p, m);

  J(m, o);

  L(u[k][1], m);
  L(u[k][2], n);
  O(r[k][g][f], o);
  for (h = k - 1; h >= 0; h--) {
    for (i = 0; i < 5; i++) {
      q[i] = r[h][g][f][i];
      for (j = 0; j < 5; j++) {
        q[i] = q[i] - u[h][2][j][i] * o[j];
      }
      r[h][g][f][i] = q[i];
    }
    P(o, q);
  }
}","[ 75   1 102 ..., 127   0 127]"
126,npb-3.3-BT-z_solve,S,828,135,9,0,232,0,1807992,60,CPU,0.228503,0.322296,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k;
  double l[5][5], m[5][5], n[5][5], o[5];
  double p[5][5], q[5];

  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (g > (d - 2) || f > (c - 2))
    return;

  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  int s = (g - 1) * (c - 2) + (f - 1);
  int t = s * (12 + 1) * 3 * 5 * 5;
  __global double(*u)[3][5][5] = (__global double(*)[3][5][5]) & b[t];

  k = e - 1;
  K(m, u[0][1]);
  K(n, u[0][2]);
  N(o, r[0][g][f]);
  I(m, n, o);
  L(u[0][1], m);
  L(u[0][2], n);
  O(r[0][g][f], o);

  for (h = 1; h <= k - 1; h++) {
    M(p, n);
    P(q, o);
    K(l, u[h][0]);
    K(m, u[h][1]);
    K(n, u[h][2]);
    N(o, r[h][g][f]);

    G(l, q, o);

    H(l, p, m);

    I(m, n, o);

    L(u[h][1], m);
    L(u[h][2], n);
    O(r[h][g][f], o);
  }

  M(p, n);
  P(q, o);
  K(l, u[k][0]);
  K(m, u[k][1]);
  K(n, u[k][2]);
  N(o, r[k][g][f]);
  G(l, q, o);

  H(l, p, m);

  J(m, o);

  L(u[k][1], m);
  L(u[k][2], n);
  O(r[k][g][f], o);
  for (h = k - 1; h >= 0; h--) {
    for (i = 0; i < 5; i++) {
      q[i] = r[h][g][f][i];
      for (j = 0; j < 5; j++) {
        q[i] = q[i] - u[h][2][j][i] * o[j];
      }
      r[h][g][f][i] = q[i];
    }
    P(o, q);
  }
}","[ 75   1 102 ..., 127   0 127]"
127,npb-3.3-BT-z_solve,W,828,135,9,0,232,0,15949464,44,GPU,0.9521370000000001,0.506691,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k;
  double l[5][5], m[5][5], n[5][5], o[5];
  double p[5][5], q[5];

  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (g > (d - 2) || f > (c - 2))
    return;

  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  int s = (g - 1) * (c - 2) + (f - 1);
  int t = s * (12 + 1) * 3 * 5 * 5;
  __global double(*u)[3][5][5] = (__global double(*)[3][5][5]) & b[t];

  k = e - 1;
  K(m, u[0][1]);
  K(n, u[0][2]);
  N(o, r[0][g][f]);
  I(m, n, o);
  L(u[0][1], m);
  L(u[0][2], n);
  O(r[0][g][f], o);

  for (h = 1; h <= k - 1; h++) {
    M(p, n);
    P(q, o);
    K(l, u[h][0]);
    K(m, u[h][1]);
    K(n, u[h][2]);
    N(o, r[h][g][f]);

    G(l, q, o);

    H(l, p, m);

    I(m, n, o);

    L(u[h][1], m);
    L(u[h][2], n);
    O(r[h][g][f], o);
  }

  M(p, n);
  P(q, o);
  K(l, u[k][0]);
  K(m, u[k][1]);
  K(n, u[k][2]);
  N(o, r[k][g][f]);
  G(l, q, o);

  H(l, p, m);

  J(m, o);

  L(u[k][1], m);
  L(u[k][2], n);
  O(r[k][g][f], o);
  for (h = k - 1; h >= 0; h--) {
    for (i = 0; i < 5; i++) {
      q[i] = r[h][g][f][i];
      for (j = 0; j < 5; j++) {
        q[i] = q[i] - u[h][2][j][i] * o[j];
      }
      r[h][g][f][i] = q[i];
    }
    P(o, q);
  }
}","[ 75   1 102 ..., 127   0 127]"
128,npb-3.3-BT-z_solve1,A,172,3,5,0,61,0,320454824,64,GPU,12.169673,6.758603999999999,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, int f, int g, int h) {
  int i, j, k;
  double l, m, n;
  double o[5];

  j = get_global_id(2) + 1;
  i = get_global_id(1) + 1;
  k = get_global_id(0);
  if (j > (g - 2) || i > (f - 2) || k >= h)
    return;

  __global double(*p)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])a;
  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])c;

  int s = (j - 1) * (f - 2) + (i - 1);
  int t = s * (12 + 1) * 5 * 5;
  __global double(*u)[5][5] = (__global double(*)[5][5]) & d[t];
  __global double(*v)[5][5] = (__global double(*)[5][5]) & e[t];

  l = 1.0 / r[k][j][i][0];
  m = l * l;
  n = l * m;
  o[0] = r[k][j][i][0];
  o[1] = r[k][j][i][1];
  o[2] = r[k][j][i][2];
  o[3] = r[k][j][i][3];
  o[4] = r[k][j][i][4];

  u[k][0][0] = 0.0;
  u[k][1][0] = 0.0;
  u[k][2][0] = 0.0;
  u[k][3][0] = 1.0;
  u[k][4][0] = 0.0;

  u[k][0][1] = -(o[1] * o[3]) * m;
  u[k][1][1] = o[3] * l;
  u[k][2][1] = 0.0;
  u[k][3][1] = o[1] * l;
  u[k][4][1] = 0.0;

  u[k][0][2] = -(o[2] * o[3]) * m;
  u[k][1][2] = 0.0;
  u[k][2][2] = o[3] * l;
  u[k][3][2] = o[2] * l;
  u[k][4][2] = 0.0;

  u[k][0][3] = -(o[3] * o[3] * m) + 0.4 * p[k][j][i];
  u[k][1][3] = -0.4 * o[1] * l;
  u[k][2][3] = -0.4 * o[2] * l;
  u[k][3][3] = (2.0 - 0.4) * o[3] * l;
  u[k][4][3] = 0.4;

  u[k][0][4] = (0.4 * 2.0 * q[k][j][i] - 1.4 * o[4]) * o[3] * m;
  u[k][1][4] = -0.4 * (o[1] * o[3]) * m;
  u[k][2][4] = -0.4 * (o[2] * o[3]) * m;
  u[k][3][4] = 1.4 * (o[4] * l) - 0.4 * (p[k][j][i] + o[3] * o[3] * m);
  u[k][4][4] = 1.4 * o[3] * l;

  v[k][0][0] = 0.0;
  v[k][1][0] = 0.0;
  v[k][2][0] = 0.0;
  v[k][3][0] = 0.0;
  v[k][4][0] = 0.0;

  v[k][0][1] = -(0.1 * 1.0) * m * o[1];
  v[k][1][1] = (0.1 * 1.0) * l;
  v[k][2][1] = 0.0;
  v[k][3][1] = 0.0;
  v[k][4][1] = 0.0;

  v[k][0][2] = -(0.1 * 1.0) * m * o[2];
  v[k][1][2] = 0.0;
  v[k][2][2] = (0.1 * 1.0) * l;
  v[k][3][2] = 0.0;
  v[k][4][2] = 0.0;

  v[k][0][3] = -(4.0 / 3.0) * (0.1 * 1.0) * m * o[3];
  v[k][1][3] = 0.0;
  v[k][2][3] = 0.0;
  v[k][3][3] = (4.0 / 3.0) * 0.1 * 1.0 * l;
  v[k][4][3] = 0.0;

  v[k][0][4] = -((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * (o[1] * o[1]) - ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * (o[2] * o[2]) - ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * (o[3] * o[3]) - ((1.4 * 1.4) * (0.1 * 1.0)) * m * o[4];

  v[k][1][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * m * o[1];
  v[k][2][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * m * o[2];
  v[k][3][4] = ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * m * o[3];
  v[k][4][4] = (((1.4 * 1.4) * (0.1 * 1.0))) * l;
}","[ 51  16  52 ...,  26   0 127]"
129,npb-3.3-BT-z_solve1,B,172,3,5,0,61,0,1313673512,32,GPU,51.791246,19.804667000000002,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, int f, int g, int h) {
  int i, j, k;
  double l, m, n;
  double o[5];

  j = get_global_id(2) + 1;
  i = get_global_id(1) + 1;
  k = get_global_id(0);
  if (j > (g - 2) || i > (f - 2) || k >= h)
    return;

  __global double(*p)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])a;
  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])c;

  int s = (j - 1) * (f - 2) + (i - 1);
  int t = s * (12 + 1) * 5 * 5;
  __global double(*u)[5][5] = (__global double(*)[5][5]) & d[t];
  __global double(*v)[5][5] = (__global double(*)[5][5]) & e[t];

  l = 1.0 / r[k][j][i][0];
  m = l * l;
  n = l * m;
  o[0] = r[k][j][i][0];
  o[1] = r[k][j][i][1];
  o[2] = r[k][j][i][2];
  o[3] = r[k][j][i][3];
  o[4] = r[k][j][i][4];

  u[k][0][0] = 0.0;
  u[k][1][0] = 0.0;
  u[k][2][0] = 0.0;
  u[k][3][0] = 1.0;
  u[k][4][0] = 0.0;

  u[k][0][1] = -(o[1] * o[3]) * m;
  u[k][1][1] = o[3] * l;
  u[k][2][1] = 0.0;
  u[k][3][1] = o[1] * l;
  u[k][4][1] = 0.0;

  u[k][0][2] = -(o[2] * o[3]) * m;
  u[k][1][2] = 0.0;
  u[k][2][2] = o[3] * l;
  u[k][3][2] = o[2] * l;
  u[k][4][2] = 0.0;

  u[k][0][3] = -(o[3] * o[3] * m) + 0.4 * p[k][j][i];
  u[k][1][3] = -0.4 * o[1] * l;
  u[k][2][3] = -0.4 * o[2] * l;
  u[k][3][3] = (2.0 - 0.4) * o[3] * l;
  u[k][4][3] = 0.4;

  u[k][0][4] = (0.4 * 2.0 * q[k][j][i] - 1.4 * o[4]) * o[3] * m;
  u[k][1][4] = -0.4 * (o[1] * o[3]) * m;
  u[k][2][4] = -0.4 * (o[2] * o[3]) * m;
  u[k][3][4] = 1.4 * (o[4] * l) - 0.4 * (p[k][j][i] + o[3] * o[3] * m);
  u[k][4][4] = 1.4 * o[3] * l;

  v[k][0][0] = 0.0;
  v[k][1][0] = 0.0;
  v[k][2][0] = 0.0;
  v[k][3][0] = 0.0;
  v[k][4][0] = 0.0;

  v[k][0][1] = -(0.1 * 1.0) * m * o[1];
  v[k][1][1] = (0.1 * 1.0) * l;
  v[k][2][1] = 0.0;
  v[k][3][1] = 0.0;
  v[k][4][1] = 0.0;

  v[k][0][2] = -(0.1 * 1.0) * m * o[2];
  v[k][1][2] = 0.0;
  v[k][2][2] = (0.1 * 1.0) * l;
  v[k][3][2] = 0.0;
  v[k][4][2] = 0.0;

  v[k][0][3] = -(4.0 / 3.0) * (0.1 * 1.0) * m * o[3];
  v[k][1][3] = 0.0;
  v[k][2][3] = 0.0;
  v[k][3][3] = (4.0 / 3.0) * 0.1 * 1.0 * l;
  v[k][4][3] = 0.0;

  v[k][0][4] = -((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * (o[1] * o[1]) - ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * (o[2] * o[2]) - ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * (o[3] * o[3]) - ((1.4 * 1.4) * (0.1 * 1.0)) * m * o[4];

  v[k][1][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * m * o[1];
  v[k][2][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * m * o[2];
  v[k][3][4] = ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * m * o[3];
  v[k][4][4] = (((1.4 * 1.4) * (0.1 * 1.0))) * l;
}","[ 51  16  52 ...,  26   0 127]"
130,npb-3.3-BT-z_solve1,S,172,3,5,0,61,0,1807992,60,GPU,0.089826,0.088234,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, int f, int g, int h) {
  int i, j, k;
  double l, m, n;
  double o[5];

  j = get_global_id(2) + 1;
  i = get_global_id(1) + 1;
  k = get_global_id(0);
  if (j > (g - 2) || i > (f - 2) || k >= h)
    return;

  __global double(*p)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])a;
  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])c;

  int s = (j - 1) * (f - 2) + (i - 1);
  int t = s * (12 + 1) * 5 * 5;
  __global double(*u)[5][5] = (__global double(*)[5][5]) & d[t];
  __global double(*v)[5][5] = (__global double(*)[5][5]) & e[t];

  l = 1.0 / r[k][j][i][0];
  m = l * l;
  n = l * m;
  o[0] = r[k][j][i][0];
  o[1] = r[k][j][i][1];
  o[2] = r[k][j][i][2];
  o[3] = r[k][j][i][3];
  o[4] = r[k][j][i][4];

  u[k][0][0] = 0.0;
  u[k][1][0] = 0.0;
  u[k][2][0] = 0.0;
  u[k][3][0] = 1.0;
  u[k][4][0] = 0.0;

  u[k][0][1] = -(o[1] * o[3]) * m;
  u[k][1][1] = o[3] * l;
  u[k][2][1] = 0.0;
  u[k][3][1] = o[1] * l;
  u[k][4][1] = 0.0;

  u[k][0][2] = -(o[2] * o[3]) * m;
  u[k][1][2] = 0.0;
  u[k][2][2] = o[3] * l;
  u[k][3][2] = o[2] * l;
  u[k][4][2] = 0.0;

  u[k][0][3] = -(o[3] * o[3] * m) + 0.4 * p[k][j][i];
  u[k][1][3] = -0.4 * o[1] * l;
  u[k][2][3] = -0.4 * o[2] * l;
  u[k][3][3] = (2.0 - 0.4) * o[3] * l;
  u[k][4][3] = 0.4;

  u[k][0][4] = (0.4 * 2.0 * q[k][j][i] - 1.4 * o[4]) * o[3] * m;
  u[k][1][4] = -0.4 * (o[1] * o[3]) * m;
  u[k][2][4] = -0.4 * (o[2] * o[3]) * m;
  u[k][3][4] = 1.4 * (o[4] * l) - 0.4 * (p[k][j][i] + o[3] * o[3] * m);
  u[k][4][4] = 1.4 * o[3] * l;

  v[k][0][0] = 0.0;
  v[k][1][0] = 0.0;
  v[k][2][0] = 0.0;
  v[k][3][0] = 0.0;
  v[k][4][0] = 0.0;

  v[k][0][1] = -(0.1 * 1.0) * m * o[1];
  v[k][1][1] = (0.1 * 1.0) * l;
  v[k][2][1] = 0.0;
  v[k][3][1] = 0.0;
  v[k][4][1] = 0.0;

  v[k][0][2] = -(0.1 * 1.0) * m * o[2];
  v[k][1][2] = 0.0;
  v[k][2][2] = (0.1 * 1.0) * l;
  v[k][3][2] = 0.0;
  v[k][4][2] = 0.0;

  v[k][0][3] = -(4.0 / 3.0) * (0.1 * 1.0) * m * o[3];
  v[k][1][3] = 0.0;
  v[k][2][3] = 0.0;
  v[k][3][3] = (4.0 / 3.0) * 0.1 * 1.0 * l;
  v[k][4][3] = 0.0;

  v[k][0][4] = -((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * (o[1] * o[1]) - ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * (o[2] * o[2]) - ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * (o[3] * o[3]) - ((1.4 * 1.4) * (0.1 * 1.0)) * m * o[4];

  v[k][1][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * m * o[1];
  v[k][2][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * m * o[2];
  v[k][3][4] = ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * m * o[3];
  v[k][4][4] = (((1.4 * 1.4) * (0.1 * 1.0))) * l;
}","[ 51  16  52 ...,  26   0 127]"
131,npb-3.3-BT-z_solve1,W,172,3,5,0,61,0,15949464,48,GPU,0.564381,0.303849,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, int f, int g, int h) {
  int i, j, k;
  double l, m, n;
  double o[5];

  j = get_global_id(2) + 1;
  i = get_global_id(1) + 1;
  k = get_global_id(0);
  if (j > (g - 2) || i > (f - 2) || k >= h)
    return;

  __global double(*p)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])a;
  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])b;
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])c;

  int s = (j - 1) * (f - 2) + (i - 1);
  int t = s * (12 + 1) * 5 * 5;
  __global double(*u)[5][5] = (__global double(*)[5][5]) & d[t];
  __global double(*v)[5][5] = (__global double(*)[5][5]) & e[t];

  l = 1.0 / r[k][j][i][0];
  m = l * l;
  n = l * m;
  o[0] = r[k][j][i][0];
  o[1] = r[k][j][i][1];
  o[2] = r[k][j][i][2];
  o[3] = r[k][j][i][3];
  o[4] = r[k][j][i][4];

  u[k][0][0] = 0.0;
  u[k][1][0] = 0.0;
  u[k][2][0] = 0.0;
  u[k][3][0] = 1.0;
  u[k][4][0] = 0.0;

  u[k][0][1] = -(o[1] * o[3]) * m;
  u[k][1][1] = o[3] * l;
  u[k][2][1] = 0.0;
  u[k][3][1] = o[1] * l;
  u[k][4][1] = 0.0;

  u[k][0][2] = -(o[2] * o[3]) * m;
  u[k][1][2] = 0.0;
  u[k][2][2] = o[3] * l;
  u[k][3][2] = o[2] * l;
  u[k][4][2] = 0.0;

  u[k][0][3] = -(o[3] * o[3] * m) + 0.4 * p[k][j][i];
  u[k][1][3] = -0.4 * o[1] * l;
  u[k][2][3] = -0.4 * o[2] * l;
  u[k][3][3] = (2.0 - 0.4) * o[3] * l;
  u[k][4][3] = 0.4;

  u[k][0][4] = (0.4 * 2.0 * q[k][j][i] - 1.4 * o[4]) * o[3] * m;
  u[k][1][4] = -0.4 * (o[1] * o[3]) * m;
  u[k][2][4] = -0.4 * (o[2] * o[3]) * m;
  u[k][3][4] = 1.4 * (o[4] * l) - 0.4 * (p[k][j][i] + o[3] * o[3] * m);
  u[k][4][4] = 1.4 * o[3] * l;

  v[k][0][0] = 0.0;
  v[k][1][0] = 0.0;
  v[k][2][0] = 0.0;
  v[k][3][0] = 0.0;
  v[k][4][0] = 0.0;

  v[k][0][1] = -(0.1 * 1.0) * m * o[1];
  v[k][1][1] = (0.1 * 1.0) * l;
  v[k][2][1] = 0.0;
  v[k][3][1] = 0.0;
  v[k][4][1] = 0.0;

  v[k][0][2] = -(0.1 * 1.0) * m * o[2];
  v[k][1][2] = 0.0;
  v[k][2][2] = (0.1 * 1.0) * l;
  v[k][3][2] = 0.0;
  v[k][4][2] = 0.0;

  v[k][0][3] = -(4.0 / 3.0) * (0.1 * 1.0) * m * o[3];
  v[k][1][3] = 0.0;
  v[k][2][3] = 0.0;
  v[k][3][3] = (4.0 / 3.0) * 0.1 * 1.0 * l;
  v[k][4][3] = 0.0;

  v[k][0][4] = -((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * (o[1] * o[1]) - ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * (o[2] * o[2]) - ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * n * (o[3] * o[3]) - ((1.4 * 1.4) * (0.1 * 1.0)) * m * o[4];

  v[k][1][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * m * o[1];
  v[k][2][4] = ((0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * m * o[2];
  v[k][3][4] = ((4.0 / 3.0) * (0.1 * 1.0) - ((1.4 * 1.4) * (0.1 * 1.0))) * m * o[3];
  v[k][4][4] = (((1.4 * 1.4) * (0.1 * 1.0))) * l;
}","[ 51  16  52 ...,  26   0 127]"
132,npb-3.3-BT-z_solve2,A,15,5,1,0,5,0,320454824,64,GPU,1.020877,0.4768060000000001,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h, i;

  f = get_global_id(2) + 1;
  e = get_global_id(1) + 1;
  if (f > (c - 2) || e > (b - 2))
    return;

  g = get_global_id(0);
  if (g == 1)
    g = d - 1;

  int j = (f - 1) * (b - 2) + (e - 1);
  int k = j * (12 + 1) * 3 * 5 * 5;
  __global double(*l)[3][5][5] = (__global double(*)[3][5][5]) & a[k];

  for (h = 0; h < 5; h++) {
    for (i = 0; i < 5; i++) {
      l[g][0][h][i] = 0.0;
      l[g][1][h][i] = 0.0;
      l[g][2][h][i] = 0.0;
    }
    l[g][1][h][h] = 1.0;
  }
}","[129 129 129 ..., 127   0 127]"
133,npb-3.3-BT-z_solve2,B,15,5,1,0,5,0,1313673512,32,GPU,2.2853470000000002,1.12234,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h, i;

  f = get_global_id(2) + 1;
  e = get_global_id(1) + 1;
  if (f > (c - 2) || e > (b - 2))
    return;

  g = get_global_id(0);
  if (g == 1)
    g = d - 1;

  int j = (f - 1) * (b - 2) + (e - 1);
  int k = j * (12 + 1) * 3 * 5 * 5;
  __global double(*l)[3][5][5] = (__global double(*)[3][5][5]) & a[k];

  for (h = 0; h < 5; h++) {
    for (i = 0; i < 5; i++) {
      l[g][0][h][i] = 0.0;
      l[g][1][h][i] = 0.0;
      l[g][2][h][i] = 0.0;
    }
    l[g][1][h][h] = 1.0;
  }
}","[129 129 129 ..., 127   0 127]"
134,npb-3.3-BT-z_solve2,S,15,5,1,0,5,0,1807992,60,CPU,0.070637,0.082006,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h, i;

  f = get_global_id(2) + 1;
  e = get_global_id(1) + 1;
  if (f > (c - 2) || e > (b - 2))
    return;

  g = get_global_id(0);
  if (g == 1)
    g = d - 1;

  int j = (f - 1) * (b - 2) + (e - 1);
  int k = j * (12 + 1) * 3 * 5 * 5;
  __global double(*l)[3][5][5] = (__global double(*)[3][5][5]) & a[k];

  for (h = 0; h < 5; h++) {
    for (i = 0; i < 5; i++) {
      l[g][0][h][i] = 0.0;
      l[g][1][h][i] = 0.0;
      l[g][2][h][i] = 0.0;
    }
    l[g][1][h][h] = 1.0;
  }
}","[129 129 129 ..., 127   0 127]"
135,npb-3.3-BT-z_solve2,W,15,5,1,0,5,0,15949464,44,GPU,0.144831,0.089533,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h, i;

  f = get_global_id(2) + 1;
  e = get_global_id(1) + 1;
  if (f > (c - 2) || e > (b - 2))
    return;

  g = get_global_id(0);
  if (g == 1)
    g = d - 1;

  int j = (f - 1) * (b - 2) + (e - 1);
  int k = j * (12 + 1) * 3 * 5 * 5;
  __global double(*l)[3][5][5] = (__global double(*)[3][5][5]) & a[k];

  for (h = 0; h < 5; h++) {
    for (i = 0; i < 5; i++) {
      l[g][0][h][i] = 0.0;
      l[g][1][h][i] = 0.0;
      l[g][2][h][i] = 0.0;
    }
    l[g][1][h][h] = 1.0;
  }
}","[129 129 129 ..., 127   0 127]"
136,npb-3.3-BT-z_solve3,A,372,3,3,0,203,0,320454224,62,CPU,21.610194,29.459528000000002,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i;
  double j, k;

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  i = get_global_id(0) + 1;
  if (h > (e - 2) || g > (d - 2) || i > (f - 2))
    return;

  int l = (h - 1) * (d - 2) + (g - 1);
  int m = l * (12 + 1) * 5 * 5;
  __global double(*n)[5][5] = (__global double(*)[5][5]) & a[m];
  __global double(*o)[5][5] = (__global double(*)[5][5]) & b[m];

  m = l * (12 + 1) * 3 * 5 * 5;
  __global double(*p)[3][5][5] = (__global double(*)[3][5][5]) & c[m];

  j = 0.010 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))));
  k = 0.010 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))));

  p[i][0][0][0] = -k * n[i - 1][0][0] - j * o[i - 1][0][0] - j * 1.0;
  p[i][0][1][0] = -k * n[i - 1][1][0] - j * o[i - 1][1][0];
  p[i][0][2][0] = -k * n[i - 1][2][0] - j * o[i - 1][2][0];
  p[i][0][3][0] = -k * n[i - 1][3][0] - j * o[i - 1][3][0];
  p[i][0][4][0] = -k * n[i - 1][4][0] - j * o[i - 1][4][0];

  p[i][0][0][1] = -k * n[i - 1][0][1] - j * o[i - 1][0][1];
  p[i][0][1][1] = -k * n[i - 1][1][1] - j * o[i - 1][1][1] - j * 1.0;
  p[i][0][2][1] = -k * n[i - 1][2][1] - j * o[i - 1][2][1];
  p[i][0][3][1] = -k * n[i - 1][3][1] - j * o[i - 1][3][1];
  p[i][0][4][1] = -k * n[i - 1][4][1] - j * o[i - 1][4][1];

  p[i][0][0][2] = -k * n[i - 1][0][2] - j * o[i - 1][0][2];
  p[i][0][1][2] = -k * n[i - 1][1][2] - j * o[i - 1][1][2];
  p[i][0][2][2] = -k * n[i - 1][2][2] - j * o[i - 1][2][2] - j * 1.0;
  p[i][0][3][2] = -k * n[i - 1][3][2] - j * o[i - 1][3][2];
  p[i][0][4][2] = -k * n[i - 1][4][2] - j * o[i - 1][4][2];

  p[i][0][0][3] = -k * n[i - 1][0][3] - j * o[i - 1][0][3];
  p[i][0][1][3] = -k * n[i - 1][1][3] - j * o[i - 1][1][3];
  p[i][0][2][3] = -k * n[i - 1][2][3] - j * o[i - 1][2][3];
  p[i][0][3][3] = -k * n[i - 1][3][3] - j * o[i - 1][3][3] - j * 1.0;
  p[i][0][4][3] = -k * n[i - 1][4][3] - j * o[i - 1][4][3];

  p[i][0][0][4] = -k * n[i - 1][0][4] - j * o[i - 1][0][4];
  p[i][0][1][4] = -k * n[i - 1][1][4] - j * o[i - 1][1][4];
  p[i][0][2][4] = -k * n[i - 1][2][4] - j * o[i - 1][2][4];
  p[i][0][3][4] = -k * n[i - 1][3][4] - j * o[i - 1][3][4];
  p[i][0][4][4] = -k * n[i - 1][4][4] - j * o[i - 1][4][4] - j * 1.0;

  p[i][1][0][0] = 1.0 + j * 2.0 * o[i][0][0] + j * 2.0 * 1.0;
  p[i][1][1][0] = j * 2.0 * o[i][1][0];
  p[i][1][2][0] = j * 2.0 * o[i][2][0];
  p[i][1][3][0] = j * 2.0 * o[i][3][0];
  p[i][1][4][0] = j * 2.0 * o[i][4][0];

  p[i][1][0][1] = j * 2.0 * o[i][0][1];
  p[i][1][1][1] = 1.0 + j * 2.0 * o[i][1][1] + j * 2.0 * 1.0;
  p[i][1][2][1] = j * 2.0 * o[i][2][1];
  p[i][1][3][1] = j * 2.0 * o[i][3][1];
  p[i][1][4][1] = j * 2.0 * o[i][4][1];

  p[i][1][0][2] = j * 2.0 * o[i][0][2];
  p[i][1][1][2] = j * 2.0 * o[i][1][2];
  p[i][1][2][2] = 1.0 + j * 2.0 * o[i][2][2] + j * 2.0 * 1.0;
  p[i][1][3][2] = j * 2.0 * o[i][3][2];
  p[i][1][4][2] = j * 2.0 * o[i][4][2];

  p[i][1][0][3] = j * 2.0 * o[i][0][3];
  p[i][1][1][3] = j * 2.0 * o[i][1][3];
  p[i][1][2][3] = j * 2.0 * o[i][2][3];
  p[i][1][3][3] = 1.0 + j * 2.0 * o[i][3][3] + j * 2.0 * 1.0;
  p[i][1][4][3] = j * 2.0 * o[i][4][3];

  p[i][1][0][4] = j * 2.0 * o[i][0][4];
  p[i][1][1][4] = j * 2.0 * o[i][1][4];
  p[i][1][2][4] = j * 2.0 * o[i][2][4];
  p[i][1][3][4] = j * 2.0 * o[i][3][4];
  p[i][1][4][4] = 1.0 + j * 2.0 * o[i][4][4] + j * 2.0 * 1.0;

  p[i][2][0][0] = k * n[i + 1][0][0] - j * o[i + 1][0][0] - j * 1.0;
  p[i][2][1][0] = k * n[i + 1][1][0] - j * o[i + 1][1][0];
  p[i][2][2][0] = k * n[i + 1][2][0] - j * o[i + 1][2][0];
  p[i][2][3][0] = k * n[i + 1][3][0] - j * o[i + 1][3][0];
  p[i][2][4][0] = k * n[i + 1][4][0] - j * o[i + 1][4][0];

  p[i][2][0][1] = k * n[i + 1][0][1] - j * o[i + 1][0][1];
  p[i][2][1][1] = k * n[i + 1][1][1] - j * o[i + 1][1][1] - j * 1.0;
  p[i][2][2][1] = k * n[i + 1][2][1] - j * o[i + 1][2][1];
  p[i][2][3][1] = k * n[i + 1][3][1] - j * o[i + 1][3][1];
  p[i][2][4][1] = k * n[i + 1][4][1] - j * o[i + 1][4][1];

  p[i][2][0][2] = k * n[i + 1][0][2] - j * o[i + 1][0][2];
  p[i][2][1][2] = k * n[i + 1][1][2] - j * o[i + 1][1][2];
  p[i][2][2][2] = k * n[i + 1][2][2] - j * o[i + 1][2][2] - j * 1.0;
  p[i][2][3][2] = k * n[i + 1][3][2] - j * o[i + 1][3][2];
  p[i][2][4][2] = k * n[i + 1][4][2] - j * o[i + 1][4][2];

  p[i][2][0][3] = k * n[i + 1][0][3] - j * o[i + 1][0][3];
  p[i][2][1][3] = k * n[i + 1][1][3] - j * o[i + 1][1][3];
  p[i][2][2][3] = k * n[i + 1][2][3] - j * o[i + 1][2][3];
  p[i][2][3][3] = k * n[i + 1][3][3] - j * o[i + 1][3][3] - j * 1.0;
  p[i][2][4][3] = k * n[i + 1][4][3] - j * o[i + 1][4][3];

  p[i][2][0][4] = k * n[i + 1][0][4] - j * o[i + 1][0][4];
  p[i][2][1][4] = k * n[i + 1][1][4] - j * o[i + 1][1][4];
  p[i][2][2][4] = k * n[i + 1][2][4] - j * o[i + 1][2][4];
  p[i][2][3][4] = k * n[i + 1][3][4] - j * o[i + 1][3][4];
  p[i][2][4][4] = k * n[i + 1][4][4] - j * o[i + 1][4][4] - j * 1.0;
}","[ 16  52  26 ...,  26   0 127]"
137,npb-3.3-BT-z_solve3,B,372,3,3,0,203,0,1313673032,32,CPU,94.898911,108.460131,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i;
  double j, k;

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  i = get_global_id(0) + 1;
  if (h > (e - 2) || g > (d - 2) || i > (f - 2))
    return;

  int l = (h - 1) * (d - 2) + (g - 1);
  int m = l * (12 + 1) * 5 * 5;
  __global double(*n)[5][5] = (__global double(*)[5][5]) & a[m];
  __global double(*o)[5][5] = (__global double(*)[5][5]) & b[m];

  m = l * (12 + 1) * 3 * 5 * 5;
  __global double(*p)[3][5][5] = (__global double(*)[3][5][5]) & c[m];

  j = 0.010 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))));
  k = 0.010 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))));

  p[i][0][0][0] = -k * n[i - 1][0][0] - j * o[i - 1][0][0] - j * 1.0;
  p[i][0][1][0] = -k * n[i - 1][1][0] - j * o[i - 1][1][0];
  p[i][0][2][0] = -k * n[i - 1][2][0] - j * o[i - 1][2][0];
  p[i][0][3][0] = -k * n[i - 1][3][0] - j * o[i - 1][3][0];
  p[i][0][4][0] = -k * n[i - 1][4][0] - j * o[i - 1][4][0];

  p[i][0][0][1] = -k * n[i - 1][0][1] - j * o[i - 1][0][1];
  p[i][0][1][1] = -k * n[i - 1][1][1] - j * o[i - 1][1][1] - j * 1.0;
  p[i][0][2][1] = -k * n[i - 1][2][1] - j * o[i - 1][2][1];
  p[i][0][3][1] = -k * n[i - 1][3][1] - j * o[i - 1][3][1];
  p[i][0][4][1] = -k * n[i - 1][4][1] - j * o[i - 1][4][1];

  p[i][0][0][2] = -k * n[i - 1][0][2] - j * o[i - 1][0][2];
  p[i][0][1][2] = -k * n[i - 1][1][2] - j * o[i - 1][1][2];
  p[i][0][2][2] = -k * n[i - 1][2][2] - j * o[i - 1][2][2] - j * 1.0;
  p[i][0][3][2] = -k * n[i - 1][3][2] - j * o[i - 1][3][2];
  p[i][0][4][2] = -k * n[i - 1][4][2] - j * o[i - 1][4][2];

  p[i][0][0][3] = -k * n[i - 1][0][3] - j * o[i - 1][0][3];
  p[i][0][1][3] = -k * n[i - 1][1][3] - j * o[i - 1][1][3];
  p[i][0][2][3] = -k * n[i - 1][2][3] - j * o[i - 1][2][3];
  p[i][0][3][3] = -k * n[i - 1][3][3] - j * o[i - 1][3][3] - j * 1.0;
  p[i][0][4][3] = -k * n[i - 1][4][3] - j * o[i - 1][4][3];

  p[i][0][0][4] = -k * n[i - 1][0][4] - j * o[i - 1][0][4];
  p[i][0][1][4] = -k * n[i - 1][1][4] - j * o[i - 1][1][4];
  p[i][0][2][4] = -k * n[i - 1][2][4] - j * o[i - 1][2][4];
  p[i][0][3][4] = -k * n[i - 1][3][4] - j * o[i - 1][3][4];
  p[i][0][4][4] = -k * n[i - 1][4][4] - j * o[i - 1][4][4] - j * 1.0;

  p[i][1][0][0] = 1.0 + j * 2.0 * o[i][0][0] + j * 2.0 * 1.0;
  p[i][1][1][0] = j * 2.0 * o[i][1][0];
  p[i][1][2][0] = j * 2.0 * o[i][2][0];
  p[i][1][3][0] = j * 2.0 * o[i][3][0];
  p[i][1][4][0] = j * 2.0 * o[i][4][0];

  p[i][1][0][1] = j * 2.0 * o[i][0][1];
  p[i][1][1][1] = 1.0 + j * 2.0 * o[i][1][1] + j * 2.0 * 1.0;
  p[i][1][2][1] = j * 2.0 * o[i][2][1];
  p[i][1][3][1] = j * 2.0 * o[i][3][1];
  p[i][1][4][1] = j * 2.0 * o[i][4][1];

  p[i][1][0][2] = j * 2.0 * o[i][0][2];
  p[i][1][1][2] = j * 2.0 * o[i][1][2];
  p[i][1][2][2] = 1.0 + j * 2.0 * o[i][2][2] + j * 2.0 * 1.0;
  p[i][1][3][2] = j * 2.0 * o[i][3][2];
  p[i][1][4][2] = j * 2.0 * o[i][4][2];

  p[i][1][0][3] = j * 2.0 * o[i][0][3];
  p[i][1][1][3] = j * 2.0 * o[i][1][3];
  p[i][1][2][3] = j * 2.0 * o[i][2][3];
  p[i][1][3][3] = 1.0 + j * 2.0 * o[i][3][3] + j * 2.0 * 1.0;
  p[i][1][4][3] = j * 2.0 * o[i][4][3];

  p[i][1][0][4] = j * 2.0 * o[i][0][4];
  p[i][1][1][4] = j * 2.0 * o[i][1][4];
  p[i][1][2][4] = j * 2.0 * o[i][2][4];
  p[i][1][3][4] = j * 2.0 * o[i][3][4];
  p[i][1][4][4] = 1.0 + j * 2.0 * o[i][4][4] + j * 2.0 * 1.0;

  p[i][2][0][0] = k * n[i + 1][0][0] - j * o[i + 1][0][0] - j * 1.0;
  p[i][2][1][0] = k * n[i + 1][1][0] - j * o[i + 1][1][0];
  p[i][2][2][0] = k * n[i + 1][2][0] - j * o[i + 1][2][0];
  p[i][2][3][0] = k * n[i + 1][3][0] - j * o[i + 1][3][0];
  p[i][2][4][0] = k * n[i + 1][4][0] - j * o[i + 1][4][0];

  p[i][2][0][1] = k * n[i + 1][0][1] - j * o[i + 1][0][1];
  p[i][2][1][1] = k * n[i + 1][1][1] - j * o[i + 1][1][1] - j * 1.0;
  p[i][2][2][1] = k * n[i + 1][2][1] - j * o[i + 1][2][1];
  p[i][2][3][1] = k * n[i + 1][3][1] - j * o[i + 1][3][1];
  p[i][2][4][1] = k * n[i + 1][4][1] - j * o[i + 1][4][1];

  p[i][2][0][2] = k * n[i + 1][0][2] - j * o[i + 1][0][2];
  p[i][2][1][2] = k * n[i + 1][1][2] - j * o[i + 1][1][2];
  p[i][2][2][2] = k * n[i + 1][2][2] - j * o[i + 1][2][2] - j * 1.0;
  p[i][2][3][2] = k * n[i + 1][3][2] - j * o[i + 1][3][2];
  p[i][2][4][2] = k * n[i + 1][4][2] - j * o[i + 1][4][2];

  p[i][2][0][3] = k * n[i + 1][0][3] - j * o[i + 1][0][3];
  p[i][2][1][3] = k * n[i + 1][1][3] - j * o[i + 1][1][3];
  p[i][2][2][3] = k * n[i + 1][2][3] - j * o[i + 1][2][3];
  p[i][2][3][3] = k * n[i + 1][3][3] - j * o[i + 1][3][3] - j * 1.0;
  p[i][2][4][3] = k * n[i + 1][4][3] - j * o[i + 1][4][3];

  p[i][2][0][4] = k * n[i + 1][0][4] - j * o[i + 1][0][4];
  p[i][2][1][4] = k * n[i + 1][1][4] - j * o[i + 1][1][4];
  p[i][2][2][4] = k * n[i + 1][2][4] - j * o[i + 1][2][4];
  p[i][2][3][4] = k * n[i + 1][3][4] - j * o[i + 1][3][4];
  p[i][2][4][4] = k * n[i + 1][4][4] - j * o[i + 1][4][4] - j * 1.0;
}","[ 16  52  26 ...,  26   0 127]"
138,npb-3.3-BT-z_solve3,S,372,3,3,0,203,0,1807992,60,CPU,0.092958,0.107028,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i;
  double j, k;

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  i = get_global_id(0) + 1;
  if (h > (e - 2) || g > (d - 2) || i > (f - 2))
    return;

  int l = (h - 1) * (d - 2) + (g - 1);
  int m = l * (12 + 1) * 5 * 5;
  __global double(*n)[5][5] = (__global double(*)[5][5]) & a[m];
  __global double(*o)[5][5] = (__global double(*)[5][5]) & b[m];

  m = l * (12 + 1) * 3 * 5 * 5;
  __global double(*p)[3][5][5] = (__global double(*)[3][5][5]) & c[m];

  j = 0.010 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))));
  k = 0.010 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))));

  p[i][0][0][0] = -k * n[i - 1][0][0] - j * o[i - 1][0][0] - j * 1.0;
  p[i][0][1][0] = -k * n[i - 1][1][0] - j * o[i - 1][1][0];
  p[i][0][2][0] = -k * n[i - 1][2][0] - j * o[i - 1][2][0];
  p[i][0][3][0] = -k * n[i - 1][3][0] - j * o[i - 1][3][0];
  p[i][0][4][0] = -k * n[i - 1][4][0] - j * o[i - 1][4][0];

  p[i][0][0][1] = -k * n[i - 1][0][1] - j * o[i - 1][0][1];
  p[i][0][1][1] = -k * n[i - 1][1][1] - j * o[i - 1][1][1] - j * 1.0;
  p[i][0][2][1] = -k * n[i - 1][2][1] - j * o[i - 1][2][1];
  p[i][0][3][1] = -k * n[i - 1][3][1] - j * o[i - 1][3][1];
  p[i][0][4][1] = -k * n[i - 1][4][1] - j * o[i - 1][4][1];

  p[i][0][0][2] = -k * n[i - 1][0][2] - j * o[i - 1][0][2];
  p[i][0][1][2] = -k * n[i - 1][1][2] - j * o[i - 1][1][2];
  p[i][0][2][2] = -k * n[i - 1][2][2] - j * o[i - 1][2][2] - j * 1.0;
  p[i][0][3][2] = -k * n[i - 1][3][2] - j * o[i - 1][3][2];
  p[i][0][4][2] = -k * n[i - 1][4][2] - j * o[i - 1][4][2];

  p[i][0][0][3] = -k * n[i - 1][0][3] - j * o[i - 1][0][3];
  p[i][0][1][3] = -k * n[i - 1][1][3] - j * o[i - 1][1][3];
  p[i][0][2][3] = -k * n[i - 1][2][3] - j * o[i - 1][2][3];
  p[i][0][3][3] = -k * n[i - 1][3][3] - j * o[i - 1][3][3] - j * 1.0;
  p[i][0][4][3] = -k * n[i - 1][4][3] - j * o[i - 1][4][3];

  p[i][0][0][4] = -k * n[i - 1][0][4] - j * o[i - 1][0][4];
  p[i][0][1][4] = -k * n[i - 1][1][4] - j * o[i - 1][1][4];
  p[i][0][2][4] = -k * n[i - 1][2][4] - j * o[i - 1][2][4];
  p[i][0][3][4] = -k * n[i - 1][3][4] - j * o[i - 1][3][4];
  p[i][0][4][4] = -k * n[i - 1][4][4] - j * o[i - 1][4][4] - j * 1.0;

  p[i][1][0][0] = 1.0 + j * 2.0 * o[i][0][0] + j * 2.0 * 1.0;
  p[i][1][1][0] = j * 2.0 * o[i][1][0];
  p[i][1][2][0] = j * 2.0 * o[i][2][0];
  p[i][1][3][0] = j * 2.0 * o[i][3][0];
  p[i][1][4][0] = j * 2.0 * o[i][4][0];

  p[i][1][0][1] = j * 2.0 * o[i][0][1];
  p[i][1][1][1] = 1.0 + j * 2.0 * o[i][1][1] + j * 2.0 * 1.0;
  p[i][1][2][1] = j * 2.0 * o[i][2][1];
  p[i][1][3][1] = j * 2.0 * o[i][3][1];
  p[i][1][4][1] = j * 2.0 * o[i][4][1];

  p[i][1][0][2] = j * 2.0 * o[i][0][2];
  p[i][1][1][2] = j * 2.0 * o[i][1][2];
  p[i][1][2][2] = 1.0 + j * 2.0 * o[i][2][2] + j * 2.0 * 1.0;
  p[i][1][3][2] = j * 2.0 * o[i][3][2];
  p[i][1][4][2] = j * 2.0 * o[i][4][2];

  p[i][1][0][3] = j * 2.0 * o[i][0][3];
  p[i][1][1][3] = j * 2.0 * o[i][1][3];
  p[i][1][2][3] = j * 2.0 * o[i][2][3];
  p[i][1][3][3] = 1.0 + j * 2.0 * o[i][3][3] + j * 2.0 * 1.0;
  p[i][1][4][3] = j * 2.0 * o[i][4][3];

  p[i][1][0][4] = j * 2.0 * o[i][0][4];
  p[i][1][1][4] = j * 2.0 * o[i][1][4];
  p[i][1][2][4] = j * 2.0 * o[i][2][4];
  p[i][1][3][4] = j * 2.0 * o[i][3][4];
  p[i][1][4][4] = 1.0 + j * 2.0 * o[i][4][4] + j * 2.0 * 1.0;

  p[i][2][0][0] = k * n[i + 1][0][0] - j * o[i + 1][0][0] - j * 1.0;
  p[i][2][1][0] = k * n[i + 1][1][0] - j * o[i + 1][1][0];
  p[i][2][2][0] = k * n[i + 1][2][0] - j * o[i + 1][2][0];
  p[i][2][3][0] = k * n[i + 1][3][0] - j * o[i + 1][3][0];
  p[i][2][4][0] = k * n[i + 1][4][0] - j * o[i + 1][4][0];

  p[i][2][0][1] = k * n[i + 1][0][1] - j * o[i + 1][0][1];
  p[i][2][1][1] = k * n[i + 1][1][1] - j * o[i + 1][1][1] - j * 1.0;
  p[i][2][2][1] = k * n[i + 1][2][1] - j * o[i + 1][2][1];
  p[i][2][3][1] = k * n[i + 1][3][1] - j * o[i + 1][3][1];
  p[i][2][4][1] = k * n[i + 1][4][1] - j * o[i + 1][4][1];

  p[i][2][0][2] = k * n[i + 1][0][2] - j * o[i + 1][0][2];
  p[i][2][1][2] = k * n[i + 1][1][2] - j * o[i + 1][1][2];
  p[i][2][2][2] = k * n[i + 1][2][2] - j * o[i + 1][2][2] - j * 1.0;
  p[i][2][3][2] = k * n[i + 1][3][2] - j * o[i + 1][3][2];
  p[i][2][4][2] = k * n[i + 1][4][2] - j * o[i + 1][4][2];

  p[i][2][0][3] = k * n[i + 1][0][3] - j * o[i + 1][0][3];
  p[i][2][1][3] = k * n[i + 1][1][3] - j * o[i + 1][1][3];
  p[i][2][2][3] = k * n[i + 1][2][3] - j * o[i + 1][2][3];
  p[i][2][3][3] = k * n[i + 1][3][3] - j * o[i + 1][3][3] - j * 1.0;
  p[i][2][4][3] = k * n[i + 1][4][3] - j * o[i + 1][4][3];

  p[i][2][0][4] = k * n[i + 1][0][4] - j * o[i + 1][0][4];
  p[i][2][1][4] = k * n[i + 1][1][4] - j * o[i + 1][1][4];
  p[i][2][2][4] = k * n[i + 1][2][4] - j * o[i + 1][2][4];
  p[i][2][3][4] = k * n[i + 1][3][4] - j * o[i + 1][3][4];
  p[i][2][4][4] = k * n[i + 1][4][4] - j * o[i + 1][4][4] - j * 1.0;
}","[ 16  52  26 ...,  26   0 127]"
139,npb-3.3-BT-z_solve3,W,372,3,3,0,203,0,15948384,44,CPU,0.731771,1.295919,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i;
  double j, k;

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  i = get_global_id(0) + 1;
  if (h > (e - 2) || g > (d - 2) || i > (f - 2))
    return;

  int l = (h - 1) * (d - 2) + (g - 1);
  int m = l * (12 + 1) * 5 * 5;
  __global double(*n)[5][5] = (__global double(*)[5][5]) & a[m];
  __global double(*o)[5][5] = (__global double(*)[5][5]) & b[m];

  m = l * (12 + 1) * 3 * 5 * 5;
  __global double(*p)[3][5][5] = (__global double(*)[3][5][5]) & c[m];

  j = 0.010 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))));
  k = 0.010 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))));

  p[i][0][0][0] = -k * n[i - 1][0][0] - j * o[i - 1][0][0] - j * 1.0;
  p[i][0][1][0] = -k * n[i - 1][1][0] - j * o[i - 1][1][0];
  p[i][0][2][0] = -k * n[i - 1][2][0] - j * o[i - 1][2][0];
  p[i][0][3][0] = -k * n[i - 1][3][0] - j * o[i - 1][3][0];
  p[i][0][4][0] = -k * n[i - 1][4][0] - j * o[i - 1][4][0];

  p[i][0][0][1] = -k * n[i - 1][0][1] - j * o[i - 1][0][1];
  p[i][0][1][1] = -k * n[i - 1][1][1] - j * o[i - 1][1][1] - j * 1.0;
  p[i][0][2][1] = -k * n[i - 1][2][1] - j * o[i - 1][2][1];
  p[i][0][3][1] = -k * n[i - 1][3][1] - j * o[i - 1][3][1];
  p[i][0][4][1] = -k * n[i - 1][4][1] - j * o[i - 1][4][1];

  p[i][0][0][2] = -k * n[i - 1][0][2] - j * o[i - 1][0][2];
  p[i][0][1][2] = -k * n[i - 1][1][2] - j * o[i - 1][1][2];
  p[i][0][2][2] = -k * n[i - 1][2][2] - j * o[i - 1][2][2] - j * 1.0;
  p[i][0][3][2] = -k * n[i - 1][3][2] - j * o[i - 1][3][2];
  p[i][0][4][2] = -k * n[i - 1][4][2] - j * o[i - 1][4][2];

  p[i][0][0][3] = -k * n[i - 1][0][3] - j * o[i - 1][0][3];
  p[i][0][1][3] = -k * n[i - 1][1][3] - j * o[i - 1][1][3];
  p[i][0][2][3] = -k * n[i - 1][2][3] - j * o[i - 1][2][3];
  p[i][0][3][3] = -k * n[i - 1][3][3] - j * o[i - 1][3][3] - j * 1.0;
  p[i][0][4][3] = -k * n[i - 1][4][3] - j * o[i - 1][4][3];

  p[i][0][0][4] = -k * n[i - 1][0][4] - j * o[i - 1][0][4];
  p[i][0][1][4] = -k * n[i - 1][1][4] - j * o[i - 1][1][4];
  p[i][0][2][4] = -k * n[i - 1][2][4] - j * o[i - 1][2][4];
  p[i][0][3][4] = -k * n[i - 1][3][4] - j * o[i - 1][3][4];
  p[i][0][4][4] = -k * n[i - 1][4][4] - j * o[i - 1][4][4] - j * 1.0;

  p[i][1][0][0] = 1.0 + j * 2.0 * o[i][0][0] + j * 2.0 * 1.0;
  p[i][1][1][0] = j * 2.0 * o[i][1][0];
  p[i][1][2][0] = j * 2.0 * o[i][2][0];
  p[i][1][3][0] = j * 2.0 * o[i][3][0];
  p[i][1][4][0] = j * 2.0 * o[i][4][0];

  p[i][1][0][1] = j * 2.0 * o[i][0][1];
  p[i][1][1][1] = 1.0 + j * 2.0 * o[i][1][1] + j * 2.0 * 1.0;
  p[i][1][2][1] = j * 2.0 * o[i][2][1];
  p[i][1][3][1] = j * 2.0 * o[i][3][1];
  p[i][1][4][1] = j * 2.0 * o[i][4][1];

  p[i][1][0][2] = j * 2.0 * o[i][0][2];
  p[i][1][1][2] = j * 2.0 * o[i][1][2];
  p[i][1][2][2] = 1.0 + j * 2.0 * o[i][2][2] + j * 2.0 * 1.0;
  p[i][1][3][2] = j * 2.0 * o[i][3][2];
  p[i][1][4][2] = j * 2.0 * o[i][4][2];

  p[i][1][0][3] = j * 2.0 * o[i][0][3];
  p[i][1][1][3] = j * 2.0 * o[i][1][3];
  p[i][1][2][3] = j * 2.0 * o[i][2][3];
  p[i][1][3][3] = 1.0 + j * 2.0 * o[i][3][3] + j * 2.0 * 1.0;
  p[i][1][4][3] = j * 2.0 * o[i][4][3];

  p[i][1][0][4] = j * 2.0 * o[i][0][4];
  p[i][1][1][4] = j * 2.0 * o[i][1][4];
  p[i][1][2][4] = j * 2.0 * o[i][2][4];
  p[i][1][3][4] = j * 2.0 * o[i][3][4];
  p[i][1][4][4] = 1.0 + j * 2.0 * o[i][4][4] + j * 2.0 * 1.0;

  p[i][2][0][0] = k * n[i + 1][0][0] - j * o[i + 1][0][0] - j * 1.0;
  p[i][2][1][0] = k * n[i + 1][1][0] - j * o[i + 1][1][0];
  p[i][2][2][0] = k * n[i + 1][2][0] - j * o[i + 1][2][0];
  p[i][2][3][0] = k * n[i + 1][3][0] - j * o[i + 1][3][0];
  p[i][2][4][0] = k * n[i + 1][4][0] - j * o[i + 1][4][0];

  p[i][2][0][1] = k * n[i + 1][0][1] - j * o[i + 1][0][1];
  p[i][2][1][1] = k * n[i + 1][1][1] - j * o[i + 1][1][1] - j * 1.0;
  p[i][2][2][1] = k * n[i + 1][2][1] - j * o[i + 1][2][1];
  p[i][2][3][1] = k * n[i + 1][3][1] - j * o[i + 1][3][1];
  p[i][2][4][1] = k * n[i + 1][4][1] - j * o[i + 1][4][1];

  p[i][2][0][2] = k * n[i + 1][0][2] - j * o[i + 1][0][2];
  p[i][2][1][2] = k * n[i + 1][1][2] - j * o[i + 1][1][2];
  p[i][2][2][2] = k * n[i + 1][2][2] - j * o[i + 1][2][2] - j * 1.0;
  p[i][2][3][2] = k * n[i + 1][3][2] - j * o[i + 1][3][2];
  p[i][2][4][2] = k * n[i + 1][4][2] - j * o[i + 1][4][2];

  p[i][2][0][3] = k * n[i + 1][0][3] - j * o[i + 1][0][3];
  p[i][2][1][3] = k * n[i + 1][1][3] - j * o[i + 1][1][3];
  p[i][2][2][3] = k * n[i + 1][2][3] - j * o[i + 1][2][3];
  p[i][2][3][3] = k * n[i + 1][3][3] - j * o[i + 1][3][3] - j * 1.0;
  p[i][2][4][3] = k * n[i + 1][4][3] - j * o[i + 1][4][3];

  p[i][2][0][4] = k * n[i + 1][0][4] - j * o[i + 1][0][4];
  p[i][2][1][4] = k * n[i + 1][1][4] - j * o[i + 1][1][4];
  p[i][2][2][4] = k * n[i + 1][2][4] - j * o[i + 1][2][4];
  p[i][2][3][4] = k * n[i + 1][3][4] - j * o[i + 1][3][4];
  p[i][2][4][4] = k * n[i + 1][4][4] - j * o[i + 1][4][4] - j * 1.0;
}","[ 16  52  26 ...,  26   0 127]"
140,npb-3.3-CG-conj_grad_0,A,1,1,5,0,5,0,51143900,128,GPU,0.097554,0.038394,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e) {
  int f = get_global_id(0);
  if (f >= (128 + 1))
    return;

  a[f] = 0.0;
  b[f] = 0.0;
  double g = d[f];
  c[f] = g;
  e[f] = g;
}","[129 129 129 ...,  26   0 127]"
141,npb-3.3-CG-conj_grad_0,B,1,1,5,0,5,0,369331132,128,GPU,0.142349,0.058611,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e) {
  int f = get_global_id(0);
  if (f >= (128 + 1))
    return;

  a[f] = 0.0;
  b[f] = 0.0;
  double g = d[f];
  c[f] = g;
  e[f] = g;
}","[129 129 129 ...,  26   0 127]"
142,npb-3.3-CG-conj_grad_0,C,1,1,5,0,5,0,958249884,128,GPU,0.239707,0.079238,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e) {
  int f = get_global_id(0);
  if (f >= (128 + 1))
    return;

  a[f] = 0.0;
  b[f] = 0.0;
  double g = d[f];
  c[f] = g;
  e[f] = g;
}","[129 129 129 ...,  26   0 127]"
143,npb-3.3-CG-conj_grad_0,S,1,1,5,0,5,0,2370332,128,GPU,0.09043,0.037549,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e) {
  int f = get_global_id(0);
  if (f >= (128 + 1))
    return;

  a[f] = 0.0;
  b[f] = 0.0;
  double g = d[f];
  c[f] = g;
  e[f] = g;
}","[129 129 129 ...,  26   0 127]"
144,npb-3.3-CG-conj_grad_0,W,1,1,5,0,5,0,14742140,128,GPU,0.118716,0.037715,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e) {
  int f = get_global_id(0);
  if (f >= (128 + 1))
    return;

  a[f] = 0.0;
  b[f] = 0.0;
  double g = d[f];
  c[f] = g;
  e[f] = g;
}","[129 129 129 ...,  26   0 127]"
145,npb-3.3-CG-init_mem_0,A,0,1,1,0,1,0,51143900,256,GPU,2.176871,0.071405,"__kernel void A(__global int* a, int b) {
  int c = get_global_id(0);
  if (c >= b)
    return;
  a[c] = 0;
}","[129 129 129 ...,  26   0 127]"
146,npb-3.3-CG-init_mem_0,B,0,1,1,0,1,0,369331132,256,GPU,15.990429,0.23530900000000002,"__kernel void A(__global int* a, int b) {
  int c = get_global_id(0);
  if (c >= b)
    return;
  a[c] = 0;
}","[129 129 129 ...,  26   0 127]"
147,npb-3.3-CG-init_mem_0,C,0,1,1,0,1,0,958249884,256,GPU,42.329127,0.538589,"__kernel void A(__global int* a, int b) {
  int c = get_global_id(0);
  if (c >= b)
    return;
  a[c] = 0;
}","[129 129 129 ...,  26   0 127]"
148,npb-3.3-CG-init_mem_0,S,0,1,1,0,1,0,2370332,256,GPU,0.138997,0.046195,"__kernel void A(__global int* a, int b) {
  int c = get_global_id(0);
  if (c >= b)
    return;
  a[c] = 0;
}","[129 129 129 ...,  26   0 127]"
149,npb-3.3-CG-init_mem_0,W,0,1,1,0,1,0,14742140,256,GPU,0.345027,0.052912,"__kernel void A(__global int* a, int b) {
  int c = get_global_id(0);
  if (c >= b)
    return;
  a[c] = 0;
}","[129 129 129 ...,  26   0 127]"
150,npb-3.3-CG-init_mem_1,A,0,1,1,0,1,0,51143900,256,GPU,1.63703,0.05741900000000001,"__kernel void A(__global double* a, int b) {
  int c = get_global_id(0);
  if (c >= b)
    return;
  a[c] = 0.0;
}","[129 129 129 ...,  26   0 127]"
151,npb-3.3-CG-init_mem_1,B,0,1,1,0,1,0,369331132,256,GPU,11.518164,0.169369,"__kernel void A(__global double* a, int b) {
  int c = get_global_id(0);
  if (c >= b)
    return;
  a[c] = 0.0;
}","[129 129 129 ...,  26   0 127]"
152,npb-3.3-CG-init_mem_1,C,0,1,1,0,1,0,958249884,256,GPU,29.584753999999997,0.38121,"__kernel void A(__global double* a, int b) {
  int c = get_global_id(0);
  if (c >= b)
    return;
  a[c] = 0.0;
}","[129 129 129 ...,  26   0 127]"
153,npb-3.3-CG-init_mem_1,S,0,1,1,0,1,0,2370332,256,GPU,0.09740499999999999,0.038903,"__kernel void A(__global double* a, int b) {
  int c = get_global_id(0);
  if (c >= b)
    return;
  a[c] = 0.0;
}","[129 129 129 ...,  26   0 127]"
154,npb-3.3-CG-init_mem_1,W,0,1,1,0,1,0,14742140,256,GPU,0.37795700000000004,0.044389,"__kernel void A(__global double* a, int b) {
  int c = get_global_id(0);
  if (c >= b)
    return;
  a[c] = 0.0;
}","[129 129 129 ...,  26   0 127]"
155,npb-3.3-CG-main_0,A,4,1,4,0,4,0,51143900,64,GPU,1.592115,0.175341,"__kernel void A(__global int* a, __global int* b, int c, int d) {
  int e = (int)(get_global_id(0) / 64);
  int f = get_local_id(0);

  int g = b[e];
  int h = b[e + 1];
  for (int i = g + f; i < h; i += 64) {
    a[i] = a[i] - c;
  }
}","[129 129 129 ..., 127   0 127]"
156,npb-3.3-CG-main_0,B,4,1,4,0,4,0,369331132,64,GPU,9.576969,0.9520639999999999,"__kernel void A(__global int* a, __global int* b, int c, int d) {
  int e = (int)(get_global_id(0) / 64);
  int f = get_local_id(0);

  int g = b[e];
  int h = b[e + 1];
  for (int i = g + f; i < h; i += 64) {
    a[i] = a[i] - c;
  }
}","[129 129 129 ..., 127   0 127]"
157,npb-3.3-CG-main_0,C,4,1,4,0,4,0,958249884,64,GPU,21.383057,2.361798,"__kernel void A(__global int* a, __global int* b, int c, int d) {
  int e = (int)(get_global_id(0) / 64);
  int f = get_local_id(0);

  int g = b[e];
  int h = b[e + 1];
  for (int i = g + f; i < h; i += 64) {
    a[i] = a[i] - c;
  }
}","[129 129 129 ..., 127   0 127]"
158,npb-3.3-CG-main_0,S,4,1,4,0,4,0,2370332,64,GPU,0.192523,0.045997,"__kernel void A(__global int* a, __global int* b, int c, int d) {
  int e = (int)(get_global_id(0) / 64);
  int f = get_local_id(0);

  int g = b[e];
  int h = b[e + 1];
  for (int i = g + f; i < h; i += 64) {
    a[i] = a[i] - c;
  }
}","[129 129 129 ..., 127   0 127]"
159,npb-3.3-CG-main_0,W,4,1,4,0,4,0,14742140,64,GPU,0.6729149999999999,0.08249,"__kernel void A(__global int* a, __global int* b, int c, int d) {
  int e = (int)(get_global_id(0) / 64);
  int f = get_local_id(0);

  int g = b[e];
  int h = b[e + 1];
  for (int i = g + f; i < h; i += 64) {
    a[i] = a[i] - c;
  }
}","[129 129 129 ..., 127   0 127]"
160,npb-3.3-CG-main_1,A,1,1,1,0,1,0,51143900,128,GPU,0.105781,0.038176,"__kernel void A(__global double* a) {
  int b = get_global_id(0);
  if (b >= (128 + 1))
    return;

  a[b] = 1.0;
}","[129 129 129 ...,  26   0 127]"
161,npb-3.3-CG-main_1,B,1,1,1,0,1,0,369331132,128,GPU,0.16905599999999998,0.05313300000000002,"__kernel void A(__global double* a) {
  int b = get_global_id(0);
  if (b >= (128 + 1))
    return;

  a[b] = 1.0;
}","[129 129 129 ...,  26   0 127]"
162,npb-3.3-CG-main_1,C,1,1,1,0,1,0,958249884,128,GPU,0.22175799999999998,0.04409,"__kernel void A(__global double* a) {
  int b = get_global_id(0);
  if (b >= (128 + 1))
    return;

  a[b] = 1.0;
}","[129 129 129 ...,  26   0 127]"
163,npb-3.3-CG-main_1,S,1,1,1,0,1,0,2370332,128,GPU,0.091491,0.038445,"__kernel void A(__global double* a) {
  int b = get_global_id(0);
  if (b >= (128 + 1))
    return;

  a[b] = 1.0;
}","[129 129 129 ...,  26   0 127]"
164,npb-3.3-CG-main_1,W,1,1,1,0,1,0,14742140,128,GPU,0.078013,0.037862,"__kernel void A(__global double* a) {
  int b = get_global_id(0);
  if (b >= (128 + 1))
    return;

  a[b] = 1.0;
}","[129 129 129 ...,  26   0 127]"
165,npb-3.3-CG-main_2,A,0,1,4,0,4,0,51143900,128,GPU,0.138927,0.038106,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e) {
  int f = get_global_id(0);
  if (f >= e)
    return;

  a[f] = 0.0;
  b[f] = 0.0;
  c[f] = 0;
  d[f] = 0;
}","[129 129 129 ...,  26   0 127]"
166,npb-3.3-CG-main_2,B,0,1,4,0,4,0,369331132,128,GPU,0.31203400000000003,0.054483000000000004,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e) {
  int f = get_global_id(0);
  if (f >= e)
    return;

  a[f] = 0.0;
  b[f] = 0.0;
  c[f] = 0;
  d[f] = 0;
}","[129 129 129 ...,  26   0 127]"
167,npb-3.3-CG-main_2,C,0,1,4,0,4,0,958249884,128,GPU,0.5795100000000001,0.069222,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e) {
  int f = get_global_id(0);
  if (f >= e)
    return;

  a[f] = 0.0;
  b[f] = 0.0;
  c[f] = 0;
  d[f] = 0;
}","[129 129 129 ...,  26   0 127]"
168,npb-3.3-CG-main_2,S,0,1,4,0,4,0,2370332,128,GPU,0.101786,0.038541000000000006,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e) {
  int f = get_global_id(0);
  if (f >= e)
    return;

  a[f] = 0.0;
  b[f] = 0.0;
  c[f] = 0;
  d[f] = 0;
}","[129 129 129 ...,  26   0 127]"
169,npb-3.3-CG-main_2,W,0,1,4,0,4,0,14742140,128,GPU,0.087525,0.037651,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e) {
  int f = get_global_id(0);
  if (f >= e)
    return;

  a[f] = 0.0;
  b[f] = 0.0;
  c[f] = 0;
  d[f] = 0;
}","[129 129 129 ...,  26   0 127]"
170,npb-3.3-CG-makea_0,A,59,11,5,0,5,0,51143900,32,GPU,701.537499,435.054342,"__kernel void A(__global int* a, __global int* b, __global double* c, __global int* d, __global int* e, int f, int g, double h, double i) {
  __global int(*j)[1 + 1];
  __global double(*k)[1 + 1];

  int l, m, n;
  int o[1 + 1];
  double p[1 + 1];
  double q = h;

  int r, s, t, u;
  int v;

  j = (__global int(*)[1 + 1])b;
  k = (__global double(*)[1 + 1])c;

  s = get_global_size(0);
  r = get_global_id(0);

  v = (f + s - 1) / s;
  t = v * r;
  u = t + v;
  if (u > f)
    u = f;

  d[r] = t;
  e[r] = u;

  for (l = 0; l < u; l++) {
    n = 1;
    D(f, n, g, p, o, &q, i);
    if (l >= t) {
      C(f, p, o, &n, l + 1, 0.5);
      a[l] = n;
      for (m = 0; m < n; m++) {
        j[l][m] = o[m] - 1;
        k[l][m] = p[m];
      }
    }
  }
}","[129 129 129 ..., 127   0 127]"
171,npb-3.3-CG-makea_0,B,59,11,5,0,5,0,369331132,32,GPU,7051.470956,3632.7880189999996,"__kernel void A(__global int* a, __global int* b, __global double* c, __global int* d, __global int* e, int f, int g, double h, double i) {
  __global int(*j)[1 + 1];
  __global double(*k)[1 + 1];

  int l, m, n;
  int o[1 + 1];
  double p[1 + 1];
  double q = h;

  int r, s, t, u;
  int v;

  j = (__global int(*)[1 + 1])b;
  k = (__global double(*)[1 + 1])c;

  s = get_global_size(0);
  r = get_global_id(0);

  v = (f + s - 1) / s;
  t = v * r;
  u = t + v;
  if (u > f)
    u = f;

  d[r] = t;
  e[r] = u;

  for (l = 0; l < u; l++) {
    n = 1;
    D(f, n, g, p, o, &q, i);
    if (l >= t) {
      C(f, p, o, &n, l + 1, 0.5);
      a[l] = n;
      for (m = 0; m < n; m++) {
        j[l][m] = o[m] - 1;
        k[l][m] = p[m];
      }
    }
  }
}","[129 129 129 ..., 127   0 127]"
172,npb-3.3-CG-makea_0,C,59,11,5,0,5,0,958249884,32,GPU,16363.066288,8790.892774,"__kernel void A(__global int* a, __global int* b, __global double* c, __global int* d, __global int* e, int f, int g, double h, double i) {
  __global int(*j)[1 + 1];
  __global double(*k)[1 + 1];

  int l, m, n;
  int o[1 + 1];
  double p[1 + 1];
  double q = h;

  int r, s, t, u;
  int v;

  j = (__global int(*)[1 + 1])b;
  k = (__global double(*)[1 + 1])c;

  s = get_global_size(0);
  r = get_global_id(0);

  v = (f + s - 1) / s;
  t = v * r;
  u = t + v;
  if (u > f)
    u = f;

  d[r] = t;
  e[r] = u;

  for (l = 0; l < u; l++) {
    n = 1;
    D(f, n, g, p, o, &q, i);
    if (l >= t) {
      C(f, p, o, &n, l + 1, 0.5);
      a[l] = n;
      for (m = 0; m < n; m++) {
        j[l][m] = o[m] - 1;
        k[l][m] = p[m];
      }
    }
  }
}","[129 129 129 ..., 127   0 127]"
173,npb-3.3-CG-makea_0,S,59,11,5,0,5,0,2370332,32,GPU,69.414666,28.598540999999997,"__kernel void A(__global int* a, __global int* b, __global double* c, __global int* d, __global int* e, int f, int g, double h, double i) {
  __global int(*j)[1 + 1];
  __global double(*k)[1 + 1];

  int l, m, n;
  int o[1 + 1];
  double p[1 + 1];
  double q = h;

  int r, s, t, u;
  int v;

  j = (__global int(*)[1 + 1])b;
  k = (__global double(*)[1 + 1])c;

  s = get_global_size(0);
  r = get_global_id(0);

  v = (f + s - 1) / s;
  t = v * r;
  u = t + v;
  if (u > f)
    u = f;

  d[r] = t;
  e[r] = u;

  for (l = 0; l < u; l++) {
    n = 1;
    D(f, n, g, p, o, &q, i);
    if (l >= t) {
      C(f, p, o, &n, l + 1, 0.5);
      a[l] = n;
      for (m = 0; m < n; m++) {
        j[l][m] = o[m] - 1;
        k[l][m] = p[m];
      }
    }
  }
}","[129 129 129 ..., 127   0 127]"
174,npb-3.3-CG-makea_0,W,59,11,5,0,5,0,14742140,32,GPU,248.14099900000002,144.106131,"__kernel void A(__global int* a, __global int* b, __global double* c, __global int* d, __global int* e, int f, int g, double h, double i) {
  __global int(*j)[1 + 1];
  __global double(*k)[1 + 1];

  int l, m, n;
  int o[1 + 1];
  double p[1 + 1];
  double q = h;

  int r, s, t, u;
  int v;

  j = (__global int(*)[1 + 1])b;
  k = (__global double(*)[1 + 1])c;

  s = get_global_size(0);
  r = get_global_id(0);

  v = (f + s - 1) / s;
  t = v * r;
  u = t + v;
  if (u > f)
    u = f;

  d[r] = t;
  e[r] = u;

  for (l = 0; l < u; l++) {
    n = 1;
    D(f, n, g, p, o, &q, i);
    if (l >= t) {
      C(f, p, o, &n, l + 1, 0.5);
      a[l] = n;
      for (m = 0; m < n; m++) {
        j[l][m] = o[m] - 1;
        k[l][m] = p[m];
      }
    }
  }
}","[129 129 129 ..., 127   0 127]"
175,npb-3.3-CG-makea_1,A,10,8,13,0,13,0,51143900,32,CPU,65.613714,66.14110699999999,"__kernel void A(__global int* a, __global int* b, __global int* c, __global int* d, __global int* e, __global int* f, int g) {
  __global int(*h)[1 + 1] = (__global int(*)[1 + 1])c;

  int i, j, k, l, m;

  int n = get_global_id(0);
  int o = get_global_size(0);
  int p = e[n];
  if (p >= g)
    return;
  int q = f[n];

  k = p + 1;
  l = q + 1;

  for (i = 0; i < g; i++) {
    for (m = 0; m < b[i]; m++) {
      j = h[i][m];
      if (j >= p && j < q) {
        j = j + 1;
        a[j] = a[j] + b[i];
      }
    }
  }

  if (n == 0) {
    a[0] = 0;
    k = 0;
  }
  for (j = k + 1; j < l; j++) {
    a[j] = a[j] + a[j - 1];
  }
  if (n < o)
    d[n] = a[l - 1];
}","[129 129 129 ...,  26   0 127]"
176,npb-3.3-CG-makea_1,B,10,8,13,0,13,0,369331132,32,CPU,407.61281,410.312,"__kernel void A(__global int* a, __global int* b, __global int* c, __global int* d, __global int* e, __global int* f, int g) {
  __global int(*h)[1 + 1] = (__global int(*)[1 + 1])c;

  int i, j, k, l, m;

  int n = get_global_id(0);
  int o = get_global_size(0);
  int p = e[n];
  if (p >= g)
    return;
  int q = f[n];

  k = p + 1;
  l = q + 1;

  for (i = 0; i < g; i++) {
    for (m = 0; m < b[i]; m++) {
      j = h[i][m];
      if (j >= p && j < q) {
        j = j + 1;
        a[j] = a[j] + b[i];
      }
    }
  }

  if (n == 0) {
    a[0] = 0;
    k = 0;
  }
  for (j = k + 1; j < l; j++) {
    a[j] = a[j] + a[j - 1];
  }
  if (n < o)
    d[n] = a[l - 1];
}","[129 129 129 ...,  26   0 127]"
177,npb-3.3-CG-makea_1,C,10,8,13,0,13,0,958249884,32,GPU,968.6587289999999,933.519002,"__kernel void A(__global int* a, __global int* b, __global int* c, __global int* d, __global int* e, __global int* f, int g) {
  __global int(*h)[1 + 1] = (__global int(*)[1 + 1])c;

  int i, j, k, l, m;

  int n = get_global_id(0);
  int o = get_global_size(0);
  int p = e[n];
  if (p >= g)
    return;
  int q = f[n];

  k = p + 1;
  l = q + 1;

  for (i = 0; i < g; i++) {
    for (m = 0; m < b[i]; m++) {
      j = h[i][m];
      if (j >= p && j < q) {
        j = j + 1;
        a[j] = a[j] + b[i];
      }
    }
  }

  if (n == 0) {
    a[0] = 0;
    k = 0;
  }
  for (j = k + 1; j < l; j++) {
    a[j] = a[j] + a[j - 1];
  }
  if (n < o)
    d[n] = a[l - 1];
}","[129 129 129 ...,  26   0 127]"
178,npb-3.3-CG-makea_1,S,10,8,13,0,13,0,2370332,32,CPU,3.341415,4.5457089999999996,"__kernel void A(__global int* a, __global int* b, __global int* c, __global int* d, __global int* e, __global int* f, int g) {
  __global int(*h)[1 + 1] = (__global int(*)[1 + 1])c;

  int i, j, k, l, m;

  int n = get_global_id(0);
  int o = get_global_size(0);
  int p = e[n];
  if (p >= g)
    return;
  int q = f[n];

  k = p + 1;
  l = q + 1;

  for (i = 0; i < g; i++) {
    for (m = 0; m < b[i]; m++) {
      j = h[i][m];
      if (j >= p && j < q) {
        j = j + 1;
        a[j] = a[j] + b[i];
      }
    }
  }

  if (n == 0) {
    a[0] = 0;
    k = 0;
  }
  for (j = k + 1; j < l; j++) {
    a[j] = a[j] + a[j - 1];
  }
  if (n < o)
    d[n] = a[l - 1];
}","[129 129 129 ...,  26   0 127]"
179,npb-3.3-CG-makea_1,W,10,8,13,0,13,0,14742140,32,CPU,24.525620999999997,25.21479,"__kernel void A(__global int* a, __global int* b, __global int* c, __global int* d, __global int* e, __global int* f, int g) {
  __global int(*h)[1 + 1] = (__global int(*)[1 + 1])c;

  int i, j, k, l, m;

  int n = get_global_id(0);
  int o = get_global_size(0);
  int p = e[n];
  if (p >= g)
    return;
  int q = f[n];

  k = p + 1;
  l = q + 1;

  for (i = 0; i < g; i++) {
    for (m = 0; m < b[i]; m++) {
      j = h[i][m];
      if (j >= p && j < q) {
        j = j + 1;
        a[j] = a[j] + b[i];
      }
    }
  }

  if (n == 0) {
    a[0] = 0;
    k = 0;
  }
  for (j = k + 1; j < l; j++) {
    a[j] = a[j] + a[j - 1];
  }
  if (n < o)
    d[n] = a[l - 1];
}","[129 129 129 ...,  26   0 127]"
180,npb-3.3-CG-makea_2,A,4,5,5,0,5,0,51143900,32,CPU,0.124833,0.262285,"__kernel void A(__global int* a, __global int* b, __global int* c, __global int* d) {
  int e = get_global_id(0);
  int f = get_global_size(0);

  int g = 0;
  if (e < f) {
    for (int h = 0; h < e; h++) {
      g = g + b[h];
    }
  }
  if (g > 0) {
    int i = (e == 0) ? 0 : (c[e] + 1);
    int j = d[e] + 1;

    for (int k = i; k < j; k++) {
      a[k] = a[k] + g;
    }
  }
}","[129 129 129 ..., 127   0 127]"
181,npb-3.3-CG-makea_2,B,4,5,5,0,5,0,369331132,32,GPU,0.136692,0.120038,"__kernel void A(__global int* a, __global int* b, __global int* c, __global int* d) {
  int e = get_global_id(0);
  int f = get_global_size(0);

  int g = 0;
  if (e < f) {
    for (int h = 0; h < e; h++) {
      g = g + b[h];
    }
  }
  if (g > 0) {
    int i = (e == 0) ? 0 : (c[e] + 1);
    int j = d[e] + 1;

    for (int k = i; k < j; k++) {
      a[k] = a[k] + g;
    }
  }
}","[129 129 129 ..., 127   0 127]"
182,npb-3.3-CG-makea_2,C,4,5,5,0,5,0,958249884,32,CPU,0.14024,0.160998,"__kernel void A(__global int* a, __global int* b, __global int* c, __global int* d) {
  int e = get_global_id(0);
  int f = get_global_size(0);

  int g = 0;
  if (e < f) {
    for (int h = 0; h < e; h++) {
      g = g + b[h];
    }
  }
  if (g > 0) {
    int i = (e == 0) ? 0 : (c[e] + 1);
    int j = d[e] + 1;

    for (int k = i; k < j; k++) {
      a[k] = a[k] + g;
    }
  }
}","[129 129 129 ..., 127   0 127]"
183,npb-3.3-CG-makea_2,S,4,5,5,0,5,0,2370332,32,GPU,0.15626199999999998,0.09401,"__kernel void A(__global int* a, __global int* b, __global int* c, __global int* d) {
  int e = get_global_id(0);
  int f = get_global_size(0);

  int g = 0;
  if (e < f) {
    for (int h = 0; h < e; h++) {
      g = g + b[h];
    }
  }
  if (g > 0) {
    int i = (e == 0) ? 0 : (c[e] + 1);
    int j = d[e] + 1;

    for (int k = i; k < j; k++) {
      a[k] = a[k] + g;
    }
  }
}","[129 129 129 ..., 127   0 127]"
184,npb-3.3-CG-makea_2,W,4,5,5,0,5,0,14742140,32,GPU,0.120448,0.090797,"__kernel void A(__global int* a, __global int* b, __global int* c, __global int* d) {
  int e = get_global_id(0);
  int f = get_global_size(0);

  int g = 0;
  if (e < f) {
    for (int h = 0; h < e; h++) {
      g = g + b[h];
    }
  }
  if (g > 0) {
    int i = (e == 0) ? 0 : (c[e] + 1);
    int j = d[e] + 1;

    for (int k = i; k < j; k++) {
      a[k] = a[k] + g;
    }
  }
}","[129 129 129 ..., 127   0 127]"
185,npb-3.3-CG-makea_3,A,18,14,25,0,30,0,51143900,128,GPU,630.874991,466.348704,"__kernel void A(__global double* a, __global int* b, __global int* c, __global int* d, __global int* e, __global double* f, __global int* g, __global int* h, int i, int j) {
  __global int(*k)[1 + 1];
  __global double(*l)[1 + 1];
  __global int* m;

  const double n = 10;
  const double o = 16;

  int p, q, r, s, t, u, v;
  double w, x, y, z;

  int aa = get_global_id(0);
  if (aa >= i)
    return;

  k = (__global int(*)[1 + 1])e;
  l = (__global double(*)[1 + 1])f;
  m = &b[j];

  for (r = c[aa]; r < c[aa + 1]; r++) {
    a[r] = 0.0;
    b[r] = -1;
  }
  m[aa] = 0;

  w = 1.0;
  y = __clc_pow(n, (1.0 / (double)(i)));

  for (p = 0; p < i; p++) {
    for (t = 0; t < d[p]; t++) {
      q = k[p][t];

      if (q != aa)
        continue;

      x = w * l[p][t];
      for (u = 0; u < d[p]; u++) {
        v = k[p][u];
        z = l[p][u] * x;

        if (v == q && q == p) {
          z = z + n - o;
        }

        for (r = c[q]; r < c[q + 1]; r++) {
          if (b[r] > v) {
            for (s = c[q + 1] - 2; s >= r; s--) {
              if (b[s] > -1) {
                a[s + 1] = a[s];
                b[s + 1] = b[s];
              }
            }
            b[r] = v;
            a[r] = 0.0;
            break;
          } else if (b[r] == -1) {
            b[r] = v;
            break;
          } else if (b[r] == v) {
            m[q] = m[q] + 1;
            break;
          }
        }
        a[r] = a[r] + z;
      }
    }
    w = w * y;
  }
}","[  9   1  69 ..., 127   0 127]"
186,npb-3.3-CG-makea_3,B,18,14,25,0,30,0,369331132,128,GPU,23910.693736,4382.712032,"__kernel void A(__global double* a, __global int* b, __global int* c, __global int* d, __global int* e, __global double* f, __global int* g, __global int* h, int i, int j) {
  __global int(*k)[1 + 1];
  __global double(*l)[1 + 1];
  __global int* m;

  const double n = 10;
  const double o = 16;

  int p, q, r, s, t, u, v;
  double w, x, y, z;

  int aa = get_global_id(0);
  if (aa >= i)
    return;

  k = (__global int(*)[1 + 1])e;
  l = (__global double(*)[1 + 1])f;
  m = &b[j];

  for (r = c[aa]; r < c[aa + 1]; r++) {
    a[r] = 0.0;
    b[r] = -1;
  }
  m[aa] = 0;

  w = 1.0;
  y = __clc_pow(n, (1.0 / (double)(i)));

  for (p = 0; p < i; p++) {
    for (t = 0; t < d[p]; t++) {
      q = k[p][t];

      if (q != aa)
        continue;

      x = w * l[p][t];
      for (u = 0; u < d[p]; u++) {
        v = k[p][u];
        z = l[p][u] * x;

        if (v == q && q == p) {
          z = z + n - o;
        }

        for (r = c[q]; r < c[q + 1]; r++) {
          if (b[r] > v) {
            for (s = c[q + 1] - 2; s >= r; s--) {
              if (b[s] > -1) {
                a[s + 1] = a[s];
                b[s + 1] = b[s];
              }
            }
            b[r] = v;
            a[r] = 0.0;
            break;
          } else if (b[r] == -1) {
            b[r] = v;
            break;
          } else if (b[r] == v) {
            m[q] = m[q] + 1;
            break;
          }
        }
        a[r] = a[r] + z;
      }
    }
    w = w * y;
  }
}","[  9   1  69 ..., 127   0 127]"
187,npb-3.3-CG-makea_3,C,18,14,25,0,30,0,958249884,128,GPU,108045.193158,16365.527872,"__kernel void A(__global double* a, __global int* b, __global int* c, __global int* d, __global int* e, __global double* f, __global int* g, __global int* h, int i, int j) {
  __global int(*k)[1 + 1];
  __global double(*l)[1 + 1];
  __global int* m;

  const double n = 10;
  const double o = 16;

  int p, q, r, s, t, u, v;
  double w, x, y, z;

  int aa = get_global_id(0);
  if (aa >= i)
    return;

  k = (__global int(*)[1 + 1])e;
  l = (__global double(*)[1 + 1])f;
  m = &b[j];

  for (r = c[aa]; r < c[aa + 1]; r++) {
    a[r] = 0.0;
    b[r] = -1;
  }
  m[aa] = 0;

  w = 1.0;
  y = __clc_pow(n, (1.0 / (double)(i)));

  for (p = 0; p < i; p++) {
    for (t = 0; t < d[p]; t++) {
      q = k[p][t];

      if (q != aa)
        continue;

      x = w * l[p][t];
      for (u = 0; u < d[p]; u++) {
        v = k[p][u];
        z = l[p][u] * x;

        if (v == q && q == p) {
          z = z + n - o;
        }

        for (r = c[q]; r < c[q + 1]; r++) {
          if (b[r] > v) {
            for (s = c[q + 1] - 2; s >= r; s--) {
              if (b[s] > -1) {
                a[s + 1] = a[s];
                b[s + 1] = b[s];
              }
            }
            b[r] = v;
            a[r] = 0.0;
            break;
          } else if (b[r] == -1) {
            b[r] = v;
            break;
          } else if (b[r] == v) {
            m[q] = m[q] + 1;
            break;
          }
        }
        a[r] = a[r] + z;
      }
    }
    w = w * y;
  }
}","[  9   1  69 ..., 127   0 127]"
188,npb-3.3-CG-makea_3,S,18,14,25,0,30,0,2370332,128,CPU,7.5799179999999975,55.812966,"__kernel void A(__global double* a, __global int* b, __global int* c, __global int* d, __global int* e, __global double* f, __global int* g, __global int* h, int i, int j) {
  __global int(*k)[1 + 1];
  __global double(*l)[1 + 1];
  __global int* m;

  const double n = 10;
  const double o = 16;

  int p, q, r, s, t, u, v;
  double w, x, y, z;

  int aa = get_global_id(0);
  if (aa >= i)
    return;

  k = (__global int(*)[1 + 1])e;
  l = (__global double(*)[1 + 1])f;
  m = &b[j];

  for (r = c[aa]; r < c[aa + 1]; r++) {
    a[r] = 0.0;
    b[r] = -1;
  }
  m[aa] = 0;

  w = 1.0;
  y = __clc_pow(n, (1.0 / (double)(i)));

  for (p = 0; p < i; p++) {
    for (t = 0; t < d[p]; t++) {
      q = k[p][t];

      if (q != aa)
        continue;

      x = w * l[p][t];
      for (u = 0; u < d[p]; u++) {
        v = k[p][u];
        z = l[p][u] * x;

        if (v == q && q == p) {
          z = z + n - o;
        }

        for (r = c[q]; r < c[q + 1]; r++) {
          if (b[r] > v) {
            for (s = c[q + 1] - 2; s >= r; s--) {
              if (b[s] > -1) {
                a[s + 1] = a[s];
                b[s + 1] = b[s];
              }
            }
            b[r] = v;
            a[r] = 0.0;
            break;
          } else if (b[r] == -1) {
            b[r] = v;
            break;
          } else if (b[r] == v) {
            m[q] = m[q] + 1;
            break;
          }
        }
        a[r] = a[r] + z;
      }
    }
    w = w * y;
  }
}","[  9   1  69 ..., 127   0 127]"
189,npb-3.3-CG-makea_3,W,18,14,25,0,30,0,14742140,128,CPU,118.431698,133.001152,"__kernel void A(__global double* a, __global int* b, __global int* c, __global int* d, __global int* e, __global double* f, __global int* g, __global int* h, int i, int j) {
  __global int(*k)[1 + 1];
  __global double(*l)[1 + 1];
  __global int* m;

  const double n = 10;
  const double o = 16;

  int p, q, r, s, t, u, v;
  double w, x, y, z;

  int aa = get_global_id(0);
  if (aa >= i)
    return;

  k = (__global int(*)[1 + 1])e;
  l = (__global double(*)[1 + 1])f;
  m = &b[j];

  for (r = c[aa]; r < c[aa + 1]; r++) {
    a[r] = 0.0;
    b[r] = -1;
  }
  m[aa] = 0;

  w = 1.0;
  y = __clc_pow(n, (1.0 / (double)(i)));

  for (p = 0; p < i; p++) {
    for (t = 0; t < d[p]; t++) {
      q = k[p][t];

      if (q != aa)
        continue;

      x = w * l[p][t];
      for (u = 0; u < d[p]; u++) {
        v = k[p][u];
        z = l[p][u] * x;

        if (v == q && q == p) {
          z = z + n - o;
        }

        for (r = c[q]; r < c[q + 1]; r++) {
          if (b[r] > v) {
            for (s = c[q + 1] - 2; s >= r; s--) {
              if (b[s] > -1) {
                a[s + 1] = a[s];
                b[s + 1] = b[s];
              }
            }
            b[r] = v;
            a[r] = 0.0;
            break;
          } else if (b[r] == -1) {
            b[r] = v;
            break;
          } else if (b[r] == v) {
            m[q] = m[q] + 1;
            break;
          }
        }
        a[r] = a[r] + z;
      }
    }
    w = w * y;
  }
}","[  9   1  69 ..., 127   0 127]"
190,npb-3.3-CG-makea_4,A,4,3,4,0,8,0,51143900,32,GPU,0.073584,0.044941,"__kernel void A(__global int* a, __global int* b, __global int* c, __global int* d, int e, int f) {
  int g = get_global_id(0);
  int h = get_global_size(0);
  int i = c[g];
  if (i >= e)
    return;
  int j = d[g];

  __global int* k = &a[f];

  for (int l = i + 1; l < j; l++) {
    k[l] = k[l] + k[l - 1];
  }
  if (g < h)
    b[g] = k[j - 1];
}","[129 129 129 ...,  26   0 127]"
191,npb-3.3-CG-makea_4,B,4,3,4,0,8,0,369331132,32,GPU,0.097441,0.083123,"__kernel void A(__global int* a, __global int* b, __global int* c, __global int* d, int e, int f) {
  int g = get_global_id(0);
  int h = get_global_size(0);
  int i = c[g];
  if (i >= e)
    return;
  int j = d[g];

  __global int* k = &a[f];

  for (int l = i + 1; l < j; l++) {
    k[l] = k[l] + k[l - 1];
  }
  if (g < h)
    b[g] = k[j - 1];
}","[129 129 129 ...,  26   0 127]"
192,npb-3.3-CG-makea_4,C,4,3,4,0,8,0,958249884,32,CPU,0.11305799999999999,0.12298900000000001,"__kernel void A(__global int* a, __global int* b, __global int* c, __global int* d, int e, int f) {
  int g = get_global_id(0);
  int h = get_global_size(0);
  int i = c[g];
  if (i >= e)
    return;
  int j = d[g];

  __global int* k = &a[f];

  for (int l = i + 1; l < j; l++) {
    k[l] = k[l] + k[l - 1];
  }
  if (g < h)
    b[g] = k[j - 1];
}","[129 129 129 ...,  26   0 127]"
193,npb-3.3-CG-makea_4,S,4,3,4,0,8,0,2370332,32,GPU,0.106772,0.040902,"__kernel void A(__global int* a, __global int* b, __global int* c, __global int* d, int e, int f) {
  int g = get_global_id(0);
  int h = get_global_size(0);
  int i = c[g];
  if (i >= e)
    return;
  int j = d[g];

  __global int* k = &a[f];

  for (int l = i + 1; l < j; l++) {
    k[l] = k[l] + k[l - 1];
  }
  if (g < h)
    b[g] = k[j - 1];
}","[129 129 129 ...,  26   0 127]"
194,npb-3.3-CG-makea_4,W,4,3,4,0,8,0,14742140,32,CPU,0.074911,0.202317,"__kernel void A(__global int* a, __global int* b, __global int* c, __global int* d, int e, int f) {
  int g = get_global_id(0);
  int h = get_global_size(0);
  int i = c[g];
  if (i >= e)
    return;
  int j = d[g];

  __global int* k = &a[f];

  for (int l = i + 1; l < j; l++) {
    k[l] = k[l] + k[l - 1];
  }
  if (g < h)
    b[g] = k[j - 1];
}","[129 129 129 ...,  26   0 127]"
195,npb-3.3-CG-makea_5,A,2,5,4,0,6,0,51143900,32,GPU,0.147797,0.09072000000000001,"__kernel void A(__global int* a, __global int* b, __global int* c, __global int* d, int e, int f) {
  int g = get_global_id(0);
  int h = get_global_size(0);
  int i = c[g];
  if (i >= e)
    return;
  int j = d[g];

  int k = 0;
  if (g < h) {
    for (int l = 0; l < g; l++) {
      k = k + b[l];
    }
  }
  if (k > 0) {
    __global int* m = &a[f];
    for (int n = i; n < j; n++) {
      m[n] = m[n] + k;
    }
  }
}","[129 129 129 ..., 127   0 127]"
196,npb-3.3-CG-makea_5,B,2,5,4,0,6,0,369331132,32,GPU,0.133633,0.112224,"__kernel void A(__global int* a, __global int* b, __global int* c, __global int* d, int e, int f) {
  int g = get_global_id(0);
  int h = get_global_size(0);
  int i = c[g];
  if (i >= e)
    return;
  int j = d[g];

  int k = 0;
  if (g < h) {
    for (int l = 0; l < g; l++) {
      k = k + b[l];
    }
  }
  if (k > 0) {
    __global int* m = &a[f];
    for (int n = i; n < j; n++) {
      m[n] = m[n] + k;
    }
  }
}","[129 129 129 ..., 127   0 127]"
197,npb-3.3-CG-makea_5,C,2,5,4,0,6,0,958249884,32,GPU,0.150912,0.135955,"__kernel void A(__global int* a, __global int* b, __global int* c, __global int* d, int e, int f) {
  int g = get_global_id(0);
  int h = get_global_size(0);
  int i = c[g];
  if (i >= e)
    return;
  int j = d[g];

  int k = 0;
  if (g < h) {
    for (int l = 0; l < g; l++) {
      k = k + b[l];
    }
  }
  if (k > 0) {
    __global int* m = &a[f];
    for (int n = i; n < j; n++) {
      m[n] = m[n] + k;
    }
  }
}","[129 129 129 ..., 127   0 127]"
198,npb-3.3-CG-makea_5,S,2,5,4,0,6,0,2370332,32,GPU,0.100584,0.07504,"__kernel void A(__global int* a, __global int* b, __global int* c, __global int* d, int e, int f) {
  int g = get_global_id(0);
  int h = get_global_size(0);
  int i = c[g];
  if (i >= e)
    return;
  int j = d[g];

  int k = 0;
  if (g < h) {
    for (int l = 0; l < g; l++) {
      k = k + b[l];
    }
  }
  if (k > 0) {
    __global int* m = &a[f];
    for (int n = i; n < j; n++) {
      m[n] = m[n] + k;
    }
  }
}","[129 129 129 ..., 127   0 127]"
199,npb-3.3-CG-makea_5,W,2,5,4,0,6,0,14742140,32,GPU,0.124848,0.100998,"__kernel void A(__global int* a, __global int* b, __global int* c, __global int* d, int e, int f) {
  int g = get_global_id(0);
  int h = get_global_size(0);
  int i = c[g];
  if (i >= e)
    return;
  int j = d[g];

  int k = 0;
  if (g < h) {
    for (int l = 0; l < g; l++) {
      k = k + b[l];
    }
  }
  if (k > 0) {
    __global int* m = &a[f];
    for (int n = i; n < j; n++) {
      m[n] = m[n] + k;
    }
  }
}","[129 129 129 ..., 127   0 127]"
200,npb-3.3-CG-makea_6,A,5,3,8,0,10,0,51143900,128,CPU,4.071752,5.335795,"__kernel void A(__global double* a, __global double* b, __global int* c, __global int* d, __global int* e, int f, int g) {
  int h, i, j;
  int k = get_global_id(0);
  if (k >= g)
    return;

  __global int* l = &e[f];

  if (k > 0) {
    h = c[k] - l[k - 1];
  } else {
    h = 0;
  }
  i = c[k + 1] - l[k];
  j = c[k];
  for (int m = h; m < i; m++) {
    a[m] = b[j];
    d[m] = e[j];
    j = j + 1;
  }
}","[129 129 129 ..., 127   0 127]"
201,npb-3.3-CG-makea_6,B,5,3,8,0,10,0,369331132,128,CPU,27.745023,42.989216,"__kernel void A(__global double* a, __global double* b, __global int* c, __global int* d, __global int* e, int f, int g) {
  int h, i, j;
  int k = get_global_id(0);
  if (k >= g)
    return;

  __global int* l = &e[f];

  if (k > 0) {
    h = c[k] - l[k - 1];
  } else {
    h = 0;
  }
  i = c[k + 1] - l[k];
  j = c[k];
  for (int m = h; m < i; m++) {
    a[m] = b[j];
    d[m] = e[j];
    j = j + 1;
  }
}","[129 129 129 ..., 127   0 127]"
202,npb-3.3-CG-makea_6,C,5,3,8,0,10,0,958249884,128,CPU,73.104347,115.03661399999999,"__kernel void A(__global double* a, __global double* b, __global int* c, __global int* d, __global int* e, int f, int g) {
  int h, i, j;
  int k = get_global_id(0);
  if (k >= g)
    return;

  __global int* l = &e[f];

  if (k > 0) {
    h = c[k] - l[k - 1];
  } else {
    h = 0;
  }
  i = c[k + 1] - l[k];
  j = c[k];
  for (int m = h; m < i; m++) {
    a[m] = b[j];
    d[m] = e[j];
    j = j + 1;
  }
}","[129 129 129 ..., 127   0 127]"
203,npb-3.3-CG-makea_6,S,5,3,8,0,10,0,2370332,128,GPU,0.142796,0.111686,"__kernel void A(__global double* a, __global double* b, __global int* c, __global int* d, __global int* e, int f, int g) {
  int h, i, j;
  int k = get_global_id(0);
  if (k >= g)
    return;

  __global int* l = &e[f];

  if (k > 0) {
    h = c[k] - l[k - 1];
  } else {
    h = 0;
  }
  i = c[k + 1] - l[k];
  j = c[k];
  for (int m = h; m < i; m++) {
    a[m] = b[j];
    d[m] = e[j];
    j = j + 1;
  }
}","[129 129 129 ..., 127   0 127]"
204,npb-3.3-CG-makea_6,W,5,3,8,0,10,0,14742140,128,CPU,1.118177,1.218061,"__kernel void A(__global double* a, __global double* b, __global int* c, __global int* d, __global int* e, int f, int g) {
  int h, i, j;
  int k = get_global_id(0);
  if (k >= g)
    return;

  __global int* l = &e[f];

  if (k > 0) {
    h = c[k] - l[k - 1];
  } else {
    h = 0;
  }
  i = c[k + 1] - l[k];
  j = c[k];
  for (int m = h; m < i; m++) {
    a[m] = b[j];
    d[m] = e[j];
    j = j + 1;
  }
}","[129 129 129 ..., 127   0 127]"
205,npb-3.3-CG-makea_7,A,4,1,3,0,4,0,51143900,128,GPU,0.13258599999999998,0.038906,"__kernel void A(__global int* a, __global int* b, int c, int d) {
  int e = get_global_id(0) + 1;
  if (e >= (c + 1))
    return;

  __global int* f = &b[d];

  a[e] = a[e] - f[e - 1];
}","[129 129 129 ...,  26   0 127]"
206,npb-3.3-CG-makea_7,B,4,1,3,0,4,0,369331132,128,GPU,0.132376,0.043706,"__kernel void A(__global int* a, __global int* b, int c, int d) {
  int e = get_global_id(0) + 1;
  if (e >= (c + 1))
    return;

  __global int* f = &b[d];

  a[e] = a[e] - f[e - 1];
}","[129 129 129 ...,  26   0 127]"
207,npb-3.3-CG-makea_7,C,4,1,3,0,4,0,958249884,128,GPU,0.18370899999999998,0.048224,"__kernel void A(__global int* a, __global int* b, int c, int d) {
  int e = get_global_id(0) + 1;
  if (e >= (c + 1))
    return;

  __global int* f = &b[d];

  a[e] = a[e] - f[e - 1];
}","[129 129 129 ...,  26   0 127]"
208,npb-3.3-CG-makea_7,S,4,1,3,0,4,0,2370332,128,GPU,0.138955,0.038886000000000004,"__kernel void A(__global int* a, __global int* b, int c, int d) {
  int e = get_global_id(0) + 1;
  if (e >= (c + 1))
    return;

  __global int* f = &b[d];

  a[e] = a[e] - f[e - 1];
}","[129 129 129 ...,  26   0 127]"
209,npb-3.3-CG-makea_7,W,4,1,3,0,4,0,14742140,128,GPU,0.069436,0.038317000000000004,"__kernel void A(__global int* a, __global int* b, int c, int d) {
  int e = get_global_id(0) + 1;
  if (e >= (c + 1))
    return;

  __global int* f = &b[d];

  a[e] = a[e] - f[e - 1];
}","[129 129 129 ...,  26   0 127]"
210,npb-3.3-EP-embar,A,133,16,16,13,2,0,6144,64,GPU,3340.15418,443.39946900000007,"__kernel void A(__local double* a, __local double* b, __local double* c, __global double* d, __global double* e, __global double* f, int g, double h) {
  int i, j, k, l, m, n;
  double o, p, q, r, s, t, u;

  double v[2 * 128];

  int w = get_global_id(0);
  int x = get_local_id(0);

  int y = get_local_size(0);

  double z = 0.0;
  double aa = 0.0;
  for (j = 0; j < 10; j++) {
    a[j * y + x] = 0.0;
  }

  m = g + w + 1;
  o = 271828183.0;
  p = h;

  for (i = 1; i <= 100; i++) {
    l = m / 2;
    if ((2 * l) != m)
      q = A(&o, p);
    if (l == 0)
      break;
    q = A(&p, p);
    m = l;
  }

  u = o;

  for (k = 0; k < (1 << 16); k = k + 128) {
    B(2 * 128, &u, 1220703125.0, v);

    for (i = 0; i < 128; i++) {
      s = 2.0 * v[2 * i] - 1.0;
      t = 2.0 * v[2 * i + 1] - 1.0;
      o = s * s + t * t;
      if (o <= 1.0) {
        p = sqrt(-2.0 * log(o) / o);
        q = (s * p);
        r = (t * p);
        n = (((__clc_fabs(q)) > (__clc_fabs(r))) ? (__clc_fabs(q)) : (__clc_fabs(r)));
        a[n * y + x] += 1.0;
        z += q;
        aa += r;
      }
    }
  }
  b[x] = z;
  c[x] = aa;

  barrier(1);

  for (j = 0; j < 10; j++) {
    for (i = get_local_size(0) / 2; i > 0; i >>= 1) {
      if (x < i) {
        a[j * y + x] += a[j * y + x + i];
      }
      barrier(1);
    }
  }

  for (i = get_local_size(0) / 2; i > 0; i >>= 1) {
    if (x < i) {
      b[x] += b[x + i];
      c[x] += c[x + i];
    }
    barrier(1);
  }

  if (x == 0) {
    int ab = get_group_id(0);
    for (j = 0; j < 10; j++) {
      d[ab * 10 + j] = a[j * y];
    }
    e[ab] = b[0];
    f[ab] = c[0];
  }
}","[  2  81   1 ..., 127   0 127]"
211,npb-3.3-EP-embar,B,133,16,16,13,2,0,24576,64,GPU,13348.841043999999,1652.365248,"__kernel void A(__local double* a, __local double* b, __local double* c, __global double* d, __global double* e, __global double* f, int g, double h) {
  int i, j, k, l, m, n;
  double o, p, q, r, s, t, u;

  double v[2 * 128];

  int w = get_global_id(0);
  int x = get_local_id(0);

  int y = get_local_size(0);

  double z = 0.0;
  double aa = 0.0;
  for (j = 0; j < 10; j++) {
    a[j * y + x] = 0.0;
  }

  m = g + w + 1;
  o = 271828183.0;
  p = h;

  for (i = 1; i <= 100; i++) {
    l = m / 2;
    if ((2 * l) != m)
      q = A(&o, p);
    if (l == 0)
      break;
    q = A(&p, p);
    m = l;
  }

  u = o;

  for (k = 0; k < (1 << 16); k = k + 128) {
    B(2 * 128, &u, 1220703125.0, v);

    for (i = 0; i < 128; i++) {
      s = 2.0 * v[2 * i] - 1.0;
      t = 2.0 * v[2 * i + 1] - 1.0;
      o = s * s + t * t;
      if (o <= 1.0) {
        p = sqrt(-2.0 * log(o) / o);
        q = (s * p);
        r = (t * p);
        n = (((__clc_fabs(q)) > (__clc_fabs(r))) ? (__clc_fabs(q)) : (__clc_fabs(r)));
        a[n * y + x] += 1.0;
        z += q;
        aa += r;
      }
    }
  }
  b[x] = z;
  c[x] = aa;

  barrier(1);

  for (j = 0; j < 10; j++) {
    for (i = get_local_size(0) / 2; i > 0; i >>= 1) {
      if (x < i) {
        a[j * y + x] += a[j * y + x + i];
      }
      barrier(1);
    }
  }

  for (i = get_local_size(0) / 2; i > 0; i >>= 1) {
    if (x < i) {
      b[x] += b[x + i];
      c[x] += c[x + i];
    }
    barrier(1);
  }

  if (x == 0) {
    int ab = get_group_id(0);
    for (j = 0; j < 10; j++) {
      d[ab * 10 + j] = a[j * y];
    }
    e[ab] = b[0];
    f[ab] = c[0];
  }
}","[  2  81   1 ..., 127   0 127]"
212,npb-3.3-EP-embar,C,133,16,16,13,2,0,98304,64,GPU,53389.300628,6089.062272,"__kernel void A(__local double* a, __local double* b, __local double* c, __global double* d, __global double* e, __global double* f, int g, double h) {
  int i, j, k, l, m, n;
  double o, p, q, r, s, t, u;

  double v[2 * 128];

  int w = get_global_id(0);
  int x = get_local_id(0);

  int y = get_local_size(0);

  double z = 0.0;
  double aa = 0.0;
  for (j = 0; j < 10; j++) {
    a[j * y + x] = 0.0;
  }

  m = g + w + 1;
  o = 271828183.0;
  p = h;

  for (i = 1; i <= 100; i++) {
    l = m / 2;
    if ((2 * l) != m)
      q = A(&o, p);
    if (l == 0)
      break;
    q = A(&p, p);
    m = l;
  }

  u = o;

  for (k = 0; k < (1 << 16); k = k + 128) {
    B(2 * 128, &u, 1220703125.0, v);

    for (i = 0; i < 128; i++) {
      s = 2.0 * v[2 * i] - 1.0;
      t = 2.0 * v[2 * i + 1] - 1.0;
      o = s * s + t * t;
      if (o <= 1.0) {
        p = sqrt(-2.0 * log(o) / o);
        q = (s * p);
        r = (t * p);
        n = (((__clc_fabs(q)) > (__clc_fabs(r))) ? (__clc_fabs(q)) : (__clc_fabs(r)));
        a[n * y + x] += 1.0;
        z += q;
        aa += r;
      }
    }
  }
  b[x] = z;
  c[x] = aa;

  barrier(1);

  for (j = 0; j < 10; j++) {
    for (i = get_local_size(0) / 2; i > 0; i >>= 1) {
      if (x < i) {
        a[j * y + x] += a[j * y + x + i];
      }
      barrier(1);
    }
  }

  for (i = get_local_size(0) / 2; i > 0; i >>= 1) {
    if (x < i) {
      b[x] += b[x + i];
      c[x] += c[x + i];
    }
    barrier(1);
  }

  if (x == 0) {
    int ab = get_group_id(0);
    for (j = 0; j < 10; j++) {
      d[ab * 10 + j] = a[j * y];
    }
    e[ab] = b[0];
    f[ab] = c[0];
  }
}","[  2  81   1 ..., 127   0 127]"
213,npb-3.3-EP-embar,W,133,16,16,13,2,0,768,64,GPU,417.99179,214.355085,"__kernel void A(__local double* a, __local double* b, __local double* c, __global double* d, __global double* e, __global double* f, int g, double h) {
  int i, j, k, l, m, n;
  double o, p, q, r, s, t, u;

  double v[2 * 128];

  int w = get_global_id(0);
  int x = get_local_id(0);

  int y = get_local_size(0);

  double z = 0.0;
  double aa = 0.0;
  for (j = 0; j < 10; j++) {
    a[j * y + x] = 0.0;
  }

  m = g + w + 1;
  o = 271828183.0;
  p = h;

  for (i = 1; i <= 100; i++) {
    l = m / 2;
    if ((2 * l) != m)
      q = A(&o, p);
    if (l == 0)
      break;
    q = A(&p, p);
    m = l;
  }

  u = o;

  for (k = 0; k < (1 << 16); k = k + 128) {
    B(2 * 128, &u, 1220703125.0, v);

    for (i = 0; i < 128; i++) {
      s = 2.0 * v[2 * i] - 1.0;
      t = 2.0 * v[2 * i + 1] - 1.0;
      o = s * s + t * t;
      if (o <= 1.0) {
        p = sqrt(-2.0 * log(o) / o);
        q = (s * p);
        r = (t * p);
        n = (((__clc_fabs(q)) > (__clc_fabs(r))) ? (__clc_fabs(q)) : (__clc_fabs(r)));
        a[n * y + x] += 1.0;
        z += q;
        aa += r;
      }
    }
  }
  b[x] = z;
  c[x] = aa;

  barrier(1);

  for (j = 0; j < 10; j++) {
    for (i = get_local_size(0) / 2; i > 0; i >>= 1) {
      if (x < i) {
        a[j * y + x] += a[j * y + x + i];
      }
      barrier(1);
    }
  }

  for (i = get_local_size(0) / 2; i > 0; i >>= 1) {
    if (x < i) {
      b[x] += b[x + i];
      c[x] += c[x + i];
    }
    barrier(1);
  }

  if (x == 0) {
    int ab = get_group_id(0);
    for (j = 0; j < 10; j++) {
      d[ab * 10 + j] = a[j * y];
    }
    e[ab] = b[0];
    f[ab] = c[0];
  }
}","[  2  81   1 ..., 127   0 127]"
214,npb-3.3-FT-cffts1,A,8,2,11,4,4,0,336861712,48,GPU,1093.525995,40.543268,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h) {
  __local double i[64];
  __local double j[64];

  int k = get_global_id(1);
  int l = get_group_id(0);
  int m = get_local_id(0);

  int n = k * f * (e + 1) + l * (e + 1);
  for (int o = m; o < e; o += 64) {
    i[o] = a[n + o];
  }

  barrier(1);

  B(d, h, e, c, i, j);

  barrier(1);

  for (int o = m; o < e; o += 64) {
    b[n + o] = i[o];
  }
}","[129 129 129 ..., 127   0 127]"
215,npb-3.3-FT-cffts1,B,8,2,11,4,4,0,1344811536,48,GPU,4383.638636,205.26781200000002,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h) {
  __local double i[64];
  __local double j[64];

  int k = get_global_id(1);
  int l = get_group_id(0);
  int m = get_local_id(0);

  int n = k * f * (e + 1) + l * (e + 1);
  for (int o = m; o < e; o += 64) {
    i[o] = a[n + o];
  }

  barrier(1);

  B(d, h, e, c, i, j);

  barrier(1);

  for (int o = m; o < e; o += 64) {
    b[n + o] = i[o];
  }
}","[129 129 129 ..., 127   0 127]"
216,npb-3.3-FT-cffts1,S,8,2,11,4,4,0,10652176,48,GPU,35.697838,1.383786,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h) {
  __local double i[64];
  __local double j[64];

  int k = get_global_id(1);
  int l = get_group_id(0);
  int m = get_local_id(0);

  int n = k * f * (e + 1) + l * (e + 1);
  for (int o = m; o < e; o += 64) {
    i[o] = a[n + o];
  }

  barrier(1);

  B(d, h, e, c, i, j);

  barrier(1);

  for (int o = m; o < e; o += 64) {
    b[n + o] = i[o];
  }
}","[129 129 129 ..., 127   0 127]"
217,npb-3.3-FT-cffts1,W,8,2,11,4,4,0,21138448,48,GPU,69.70788,2.663583,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h) {
  __local double i[64];
  __local double j[64];

  int k = get_global_id(1);
  int l = get_group_id(0);
  int m = get_local_id(0);

  int n = k * f * (e + 1) + l * (e + 1);
  for (int o = m; o < e; o += 64) {
    i[o] = a[n + o];
  }

  barrier(1);

  B(d, h, e, c, i, j);

  barrier(1);

  for (int o = m; o < e; o += 64) {
    b[n + o] = i[o];
  }
}","[129 129 129 ..., 127   0 127]"
218,npb-3.3-FT-cffts2,A,10,2,11,4,4,0,336861712,48,GPU,1117.859694,47.022327000000004,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h) {
  __local double i[64];
  __local double j[64];

  int k = get_global_id(1);
  int l = get_group_id(0);
  int m = get_local_id(0);

  int n = k * f * (e + 1) + l;
  for (int o = m; o < f; o += 64) {
    i[o] = a[n + o * (e + 1)];
  }

  barrier(1);

  B(d, h, f, c, i, j);

  barrier(1);

  for (int o = m; o < f; o += 64) {
    b[n + o * (e + 1)] = i[o];
  }
}","[129 129 129 ..., 127   0 127]"
219,npb-3.3-FT-cffts2,B,10,2,11,4,4,0,1344811536,48,GPU,4461.109286,315.303954,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h) {
  __local double i[64];
  __local double j[64];

  int k = get_global_id(1);
  int l = get_group_id(0);
  int m = get_local_id(0);

  int n = k * f * (e + 1) + l;
  for (int o = m; o < f; o += 64) {
    i[o] = a[n + o * (e + 1)];
  }

  barrier(1);

  B(d, h, f, c, i, j);

  barrier(1);

  for (int o = m; o < f; o += 64) {
    b[n + o * (e + 1)] = i[o];
  }
}","[129 129 129 ..., 127   0 127]"
220,npb-3.3-FT-cffts2,S,10,2,11,4,4,0,10652176,48,GPU,36.033501,1.525558,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h) {
  __local double i[64];
  __local double j[64];

  int k = get_global_id(1);
  int l = get_group_id(0);
  int m = get_local_id(0);

  int n = k * f * (e + 1) + l;
  for (int o = m; o < f; o += 64) {
    i[o] = a[n + o * (e + 1)];
  }

  barrier(1);

  B(d, h, f, c, i, j);

  barrier(1);

  for (int o = m; o < f; o += 64) {
    b[n + o * (e + 1)] = i[o];
  }
}","[129 129 129 ..., 127   0 127]"
221,npb-3.3-FT-cffts2,W,10,2,11,4,4,0,21138448,48,GPU,70.436838,2.897609,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h) {
  __local double i[64];
  __local double j[64];

  int k = get_global_id(1);
  int l = get_group_id(0);
  int m = get_local_id(0);

  int n = k * f * (e + 1) + l;
  for (int o = m; o < f; o += 64) {
    i[o] = a[n + o * (e + 1)];
  }

  barrier(1);

  B(d, h, f, c, i, j);

  barrier(1);

  for (int o = m; o < f; o += 64) {
    b[n + o * (e + 1)] = i[o];
  }
}","[129 129 129 ..., 127   0 127]"
222,npb-3.3-FT-cffts3,A,11,2,11,4,4,0,336861712,48,GPU,1131.531702,46.953337,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h) {
  __local double i[64];
  __local double j[64];

  int k = get_global_id(1);
  int l = get_group_id(0);
  int m = get_local_id(0);

  int n = k * (e + 1) + l;
  for (int o = m; o < g; o += 64) {
    i[o] = a[o * f * (e + 1) + n];
  }

  barrier(1);

  B(d, h, g, c, i, j);

  barrier(1);

  for (int o = m; o < g; o += 64) {
    b[o * f * (e + 1) + n] = i[o];
  }
}","[129 129 129 ..., 127   0 127]"
223,npb-3.3-FT-cffts3,B,11,2,11,4,4,0,1344811536,48,GPU,4472.677009,322.8932200000001,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h) {
  __local double i[64];
  __local double j[64];

  int k = get_global_id(1);
  int l = get_group_id(0);
  int m = get_local_id(0);

  int n = k * (e + 1) + l;
  for (int o = m; o < g; o += 64) {
    i[o] = a[o * f * (e + 1) + n];
  }

  barrier(1);

  B(d, h, g, c, i, j);

  barrier(1);

  for (int o = m; o < g; o += 64) {
    b[o * f * (e + 1) + n] = i[o];
  }
}","[129 129 129 ..., 127   0 127]"
224,npb-3.3-FT-cffts3,S,11,2,11,4,4,0,10652176,48,GPU,36.163467,1.5490709999999999,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h) {
  __local double i[64];
  __local double j[64];

  int k = get_global_id(1);
  int l = get_group_id(0);
  int m = get_local_id(0);

  int n = k * (e + 1) + l;
  for (int o = m; o < g; o += 64) {
    i[o] = a[o * f * (e + 1) + n];
  }

  barrier(1);

  B(d, h, g, c, i, j);

  barrier(1);

  for (int o = m; o < g; o += 64) {
    b[o * f * (e + 1) + n] = i[o];
  }
}","[129 129 129 ..., 127   0 127]"
225,npb-3.3-FT-cffts3,W,11,2,11,4,4,0,21138448,48,GPU,75.84661700000002,2.748011,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h) {
  __local double i[64];
  __local double j[64];

  int k = get_global_id(1);
  int l = get_group_id(0);
  int m = get_local_id(0);

  int n = k * (e + 1) + l;
  for (int o = m; o < g; o += 64) {
    i[o] = a[o * f * (e + 1) + n];
  }

  barrier(1);

  B(d, h, g, c, i, j);

  barrier(1);

  for (int o = m; o < g; o += 64) {
    b[o * f * (e + 1) + n] = i[o];
  }
}","[129 129 129 ..., 127   0 127]"
226,npb-3.3-FT-checksum,A,23,4,18,14,2,0,336861712,32,GPU,0.183676,0.165845,"__kernel void A(__global double* a, __global double* b, __local double* c, int d, int e) {
  int f, g, h;
  int i = get_global_id(0) + 1;
  int j = get_local_id(0);

  if (i <= 1024) {
    f = i % 64;
    g = 3 * i % 64;
    h = 5 * i % 64;
    c[j] = a[h * e * (d + 1) + g * (d + 1) + f];
  } else {
    c[j] = (double)0.0;
  }

  barrier(1);

  for (int k = get_local_size(0) / 2; k > 0; k >>= 1) {
    if (j < k)
      c[j] = (double)j + j;
    barrier(1);
  }
  if (j == 0)
    b[get_group_id(0)] = c[0];
}","[129 129 129 ...,  26   0 127]"
227,npb-3.3-FT-checksum,B,23,4,18,14,2,0,1344811536,32,CPU,0.27686700000000003,0.359896,"__kernel void A(__global double* a, __global double* b, __local double* c, int d, int e) {
  int f, g, h;
  int i = get_global_id(0) + 1;
  int j = get_local_id(0);

  if (i <= 1024) {
    f = i % 64;
    g = 3 * i % 64;
    h = 5 * i % 64;
    c[j] = a[h * e * (d + 1) + g * (d + 1) + f];
  } else {
    c[j] = (double)0.0;
  }

  barrier(1);

  for (int k = get_local_size(0) / 2; k > 0; k >>= 1) {
    if (j < k)
      c[j] = (double)j + j;
    barrier(1);
  }
  if (j == 0)
    b[get_group_id(0)] = c[0];
}","[129 129 129 ...,  26   0 127]"
228,npb-3.3-FT-checksum,S,23,4,18,14,2,0,10652176,32,GPU,0.250675,0.147318,"__kernel void A(__global double* a, __global double* b, __local double* c, int d, int e) {
  int f, g, h;
  int i = get_global_id(0) + 1;
  int j = get_local_id(0);

  if (i <= 1024) {
    f = i % 64;
    g = 3 * i % 64;
    h = 5 * i % 64;
    c[j] = a[h * e * (d + 1) + g * (d + 1) + f];
  } else {
    c[j] = (double)0.0;
  }

  barrier(1);

  for (int k = get_local_size(0) / 2; k > 0; k >>= 1) {
    if (j < k)
      c[j] = (double)j + j;
    barrier(1);
  }
  if (j == 0)
    b[get_group_id(0)] = c[0];
}","[129 129 129 ...,  26   0 127]"
229,npb-3.3-FT-checksum,W,23,4,18,14,2,0,21138448,32,GPU,0.220135,0.146387,"__kernel void A(__global double* a, __global double* b, __local double* c, int d, int e) {
  int f, g, h;
  int i = get_global_id(0) + 1;
  int j = get_local_id(0);

  if (i <= 1024) {
    f = i % 64;
    g = 3 * i % 64;
    h = 5 * i % 64;
    c[j] = a[h * e * (d + 1) + g * (d + 1) + f];
  } else {
    c[j] = (double)0.0;
  }

  barrier(1);

  for (int k = get_local_size(0) / 2; k > 0; k >>= 1) {
    if (j < k)
      c[j] = (double)j + j;
    barrier(1);
  }
  if (j == 0)
    b[get_group_id(0)] = c[0];
}","[129 129 129 ...,  26   0 127]"
230,npb-3.3-FT-compute_indexmap,A,43,3,1,0,0,0,336861712,64,GPU,37.462715,2.584282,"__kernel void A(__global double* a, int b, int c, int d, double e) {
  int f, g, h, i, j;

  int k = get_global_id(2);
  int l = get_global_id(1);
  int m = get_global_id(0);
  if (k >= d || l >= c || m >= b)
    return;
  f = ((k + 64 / 2) % 64) - 64 / 2;
  g = f * f;
  h = ((l + 64 / 2) % 64) - 64 / 2;
  i = h * h + g;
  j = ((m + 64 / 2) % 64) - 64 / 2;
  a[k * c * (b + 1) + l * (b + 1) + m] = exp(e * (double)(j * j + i));
}","[129 129 129 ...,  26   0 127]"
231,npb-3.3-FT-compute_indexmap,B,43,3,1,0,0,0,1344811536,64,GPU,149.26172,10.036589,"__kernel void A(__global double* a, int b, int c, int d, double e) {
  int f, g, h, i, j;

  int k = get_global_id(2);
  int l = get_global_id(1);
  int m = get_global_id(0);
  if (k >= d || l >= c || m >= b)
    return;
  f = ((k + 64 / 2) % 64) - 64 / 2;
  g = f * f;
  h = ((l + 64 / 2) % 64) - 64 / 2;
  i = h * h + g;
  j = ((m + 64 / 2) % 64) - 64 / 2;
  a[k * c * (b + 1) + l * (b + 1) + m] = exp(e * (double)(j * j + i));
}","[129 129 129 ...,  26   0 127]"
232,npb-3.3-FT-compute_indexmap,S,43,3,1,0,0,0,10652176,64,GPU,1.421712,0.22169,"__kernel void A(__global double* a, int b, int c, int d, double e) {
  int f, g, h, i, j;

  int k = get_global_id(2);
  int l = get_global_id(1);
  int m = get_global_id(0);
  if (k >= d || l >= c || m >= b)
    return;
  f = ((k + 64 / 2) % 64) - 64 / 2;
  g = f * f;
  h = ((l + 64 / 2) % 64) - 64 / 2;
  i = h * h + g;
  j = ((m + 64 / 2) % 64) - 64 / 2;
  a[k * c * (b + 1) + l * (b + 1) + m] = exp(e * (double)(j * j + i));
}","[129 129 129 ...,  26   0 127]"
233,npb-3.3-FT-compute_indexmap,W,43,3,1,0,0,0,21138448,64,GPU,2.504982,0.29673299999999997,"__kernel void A(__global double* a, int b, int c, int d, double e) {
  int f, g, h, i, j;

  int k = get_global_id(2);
  int l = get_global_id(1);
  int m = get_global_id(0);
  if (k >= d || l >= c || m >= b)
    return;
  f = ((k + 64 / 2) % 64) - 64 / 2;
  g = f * f;
  h = ((l + 64 / 2) % 64) - 64 / 2;
  i = h * h + g;
  j = ((m + 64 / 2) % 64) - 64 / 2;
  a[k * c * (b + 1) + l * (b + 1) + m] = exp(e * (double)(j * j + i));
}","[129 129 129 ...,  26   0 127]"
234,npb-3.3-FT-compute_initial_conditions,A,8,2,2,0,2,0,336861712,26,GPU,91.58652,72.140656,"__kernel void A(__global double* a, __global const double* b, int c, int d, int e) {
  double f;
  int g;

  int h = get_global_id(0);
  if (h >= e)
    return;

  f = b[h];
  int i = h * d * (c + 1);
  for (g = 0; g < d; g++) {
    D(2 * 64, &f, 1220703125.0, (__global double*)&a[i + g * (c + 1) + 0]);
  }
}","[129 129 129 ..., 127   0 127]"
235,npb-3.3-FT-compute_initial_conditions,B,8,2,2,0,2,0,1344811536,26,GPU,187.001354,149.49651799999995,"__kernel void A(__global double* a, __global const double* b, int c, int d, int e) {
  double f;
  int g;

  int h = get_global_id(0);
  if (h >= e)
    return;

  f = b[h];
  int i = h * d * (c + 1);
  for (g = 0; g < d; g++) {
    D(2 * 64, &f, 1220703125.0, (__global double*)&a[i + g * (c + 1) + 0]);
  }
}","[129 129 129 ..., 127   0 127]"
236,npb-3.3-FT-compute_initial_conditions,S,8,2,2,0,2,0,10652176,6,CPU,1.9074959999999999,4.819744,"__kernel void A(__global double* a, __global const double* b, int c, int d, int e) {
  double f;
  int g;

  int h = get_global_id(0);
  if (h >= e)
    return;

  f = b[h];
  int i = h * d * (c + 1);
  for (g = 0; g < d; g++) {
    D(2 * 64, &f, 1220703125.0, (__global double*)&a[i + g * (c + 1) + 0]);
  }
}","[129 129 129 ..., 127   0 127]"
237,npb-3.3-FT-compute_initial_conditions,W,8,2,2,0,2,0,21138448,12,CPU,11.7493,18.127798000000002,"__kernel void A(__global double* a, __global const double* b, int c, int d, int e) {
  double f;
  int g;

  int h = get_global_id(0);
  if (h >= e)
    return;

  f = b[h];
  int i = h * d * (c + 1);
  for (g = 0; g < d; g++) {
    D(2 * 64, &f, 1220703125.0, (__global double*)&a[i + g * (c + 1) + 0]);
  }
}","[129 129 129 ..., 127   0 127]"
238,npb-3.3-FT-evolve,A,11,3,13,0,13,0,336861712,64,GPU,33.643772999999996,3.4353059999999997,"__kernel void A(__global double* a, __global double* b, __global const double* c, int d, int e, int f) {
  int g = get_global_id(2);
  int h = get_global_id(1);
  int i = get_global_id(0);
  if (g >= f || h >= e || i >= d)
    return;

  int j = g * e * (d + 1) + h * (d + 1) + i;
  a[j] = (double)j;
  b[j] = a[j];
}","[129 129 129 ...,  26   0 127]"
239,npb-3.3-FT-evolve,B,11,3,13,0,13,0,1344811536,64,GPU,135.596351,13.439819,"__kernel void A(__global double* a, __global double* b, __global const double* c, int d, int e, int f) {
  int g = get_global_id(2);
  int h = get_global_id(1);
  int i = get_global_id(0);
  if (g >= f || h >= e || i >= d)
    return;

  int j = g * e * (d + 1) + h * (d + 1) + i;
  a[j] = (double)j;
  b[j] = a[j];
}","[129 129 129 ...,  26   0 127]"
240,npb-3.3-FT-evolve,S,11,3,13,0,13,0,10652176,64,GPU,0.781939,0.247171,"__kernel void A(__global double* a, __global double* b, __global const double* c, int d, int e, int f) {
  int g = get_global_id(2);
  int h = get_global_id(1);
  int i = get_global_id(0);
  if (g >= f || h >= e || i >= d)
    return;

  int j = g * e * (d + 1) + h * (d + 1) + i;
  a[j] = (double)j;
  b[j] = a[j];
}","[129 129 129 ...,  26   0 127]"
241,npb-3.3-FT-evolve,W,11,3,13,0,13,0,21138448,64,GPU,2.13363,0.347632,"__kernel void A(__global double* a, __global double* b, __global const double* c, int d, int e, int f) {
  int g = get_global_id(2);
  int h = get_global_id(1);
  int i = get_global_id(0);
  if (g >= f || h >= e || i >= d)
    return;

  int j = g * e * (d + 1) + h * (d + 1) + i;
  a[j] = (double)j;
  b[j] = a[j];
}","[129 129 129 ...,  26   0 127]"
242,npb-3.3-FT-init_ui,A,0,1,3,0,3,0,336861712,64,GPU,215.77862400000004,2.349901,"__kernel void A(__global double* a, __global double* b, __global double* c, int d) {
  int e = get_global_id(0);
  if (e >= d)
    return;

  a[e] = (double)0.0;
  b[e] = (double)0.0;
  c[e] = 0.0;
}","[129 129 129 ...,  26   0 127]"
243,npb-3.3-FT-init_ui,B,0,1,3,0,3,0,1344811536,64,GPU,848.783466,9.011091,"__kernel void A(__global double* a, __global double* b, __global double* c, int d) {
  int e = get_global_id(0);
  if (e >= d)
    return;

  a[e] = (double)0.0;
  b[e] = (double)0.0;
  c[e] = 0.0;
}","[129 129 129 ...,  26   0 127]"
244,npb-3.3-FT-init_ui,S,0,1,3,0,3,0,10652176,64,GPU,4.637476,0.22431399999999999,"__kernel void A(__global double* a, __global double* b, __global double* c, int d) {
  int e = get_global_id(0);
  if (e >= d)
    return;

  a[e] = (double)0.0;
  b[e] = (double)0.0;
  c[e] = 0.0;
}","[129 129 129 ...,  26   0 127]"
245,npb-3.3-FT-init_ui,W,0,1,3,0,3,0,21138448,64,GPU,21.3913,0.290554,"__kernel void A(__global double* a, __global double* b, __global double* c, int d) {
  int e = get_global_id(0);
  if (e >= d)
    return;

  a[e] = (double)0.0;
  b[e] = (double)0.0;
  c[e] = 0.0;
}","[129 129 129 ...,  26   0 127]"
246,npb-3.3-LU-blts,A,1860,7,4,0,165,0,47333624,53,GPU,0.21309,0.18984600000000001,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g, int h, int i, int j) {
  int k, l, m, n;
  double o[5][5], p[5][5], q[5][5], r[5][5];
  double s, t, u;
  double v, w, x, y;
  double z[5][5], aa[5];
  __global double(*ab)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  k = get_global_id(1) + 1 + i;
  l = get_global_id(0) + 1 + j;
  m = h - get_global_id(1) - get_global_id(0) - i - j + 1;
  if (k >= e - 1 || l >= (f - 1) || m < 1 || m >= (g - 1))
    return;

  ab = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;

  s = (4.0 / 3.0);
  t = 1.40e+00 * 1.00e-01 * 1.00e+00 * 1.40e+00;
  u = 1.00e-01 * 1.00e+00;

  w = ae[k][l][m];
  x = w * w;
  y = w * x;

  r[0][0] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[1][0] = 0.0;
  r[2][0] = 0.0;
  r[3][0] = 0.0;
  r[4][0] = 0.0;

  r[0][1] = -0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * u * x * ac[k][l][m][1];
  r[1][1] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[2][1] = 0.0;
  r[3][1] = 0.0;
  r[4][1] = 0.0;

  r[0][2] = -0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * u * x * ac[k][l][m][2];
  r[1][2] = 0.0;
  r[2][2] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[3][2] = 0.0;
  r[4][2] = 0.0;

  r[0][3] = -0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) * u * x * ac[k][l][m][3];
  r[1][3] = 0.0;
  r[2][3] = 0.0;
  r[3][3] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[4][3] = 0.0;

  r[0][4] = -0.5 * 2.0 * ((((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][1] * ac[k][l][m][1]) + ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][2] * ac[k][l][m][2]) +
                           ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t)) * (ac[k][l][m][3] * ac[k][l][m][3])) *
                              y +
                          ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * x * ac[k][l][m][4]);

  r[1][4] = 0.5 * 2.0 * x * ac[k][l][m][1] * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t));
  r[2][4] = 0.5 * 2.0 * x * ac[k][l][m][2] * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t));
  r[3][4] = 0.5 * 2.0 * x * ac[k][l][m][3] * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t));
  r[4][4] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * w + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);

  w = ae[k - 1][l][m];
  x = w * w;
  y = w * x;

  o[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  o[1][0] = 0.0;
  o[2][0] = 0.0;
  o[3][0] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  o[4][0] = 0.0;

  o[0][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k - 1][l][m][1] * ac[k - 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k - 1][l][m][1]);
  o[1][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k - 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * u * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  o[2][1] = 0.0;
  o[3][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k - 1][l][m][1] * w);
  o[4][1] = 0.0;

  o[0][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k - 1][l][m][2] * ac[k - 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k - 1][l][m][2]);
  o[1][2] = 0.0;
  o[2][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k - 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  o[3][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k - 1][l][m][2] * w);
  o[4][2] = 0.0;

  o[0][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k - 1][l][m][3] * w) * (ac[k - 1][l][m][3] * w) + 0.40e+00 * ad[k - 1][l][m] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k - 1][l][m][3]);
  o[1][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k - 1][l][m][1] * w));
  o[2][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k - 1][l][m][2] * w));
  o[3][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (2.0 - 0.40e+00) * (ac[k - 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  o[4][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  o[0][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k - 1][l][m] - 1.40e+00 * ac[k - 1][l][m][4]) * ac[k - 1][l][m][3] * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k - 1][l][m][1] * ac[k - 1][l][m][1]) - (u - t) * y * (ac[k - 1][l][m][2] * ac[k - 1][l][m][2]) - (s * u - t) * y * (ac[k - 1][l][m][3] * ac[k - 1][l][m][3]) - t * x * ac[k - 1][l][m][4]);
  o[1][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k - 1][l][m][1] * ac[k - 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k - 1][l][m][1];
  o[2][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k - 1][l][m][2] * ac[k - 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k - 1][l][m][2];
  o[3][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k - 1][l][m][4] * w) - 0.40e+00 * (ad[k - 1][l][m] * w + ac[k - 1][l][m][3] * ac[k - 1][l][m][3] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k - 1][l][m][3];
  o[4][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k - 1][l][m][3] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;

  w = ae[k][l - 1][m];
  x = w * w;
  y = w * x;

  p[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[1][0] = 0.0;
  p[2][0] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  p[3][0] = 0.0;
  p[4][0] = 0.0;

  p[0][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l - 1][m][1] * ac[k][l - 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l - 1][m][1]);
  p[1][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l - 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[2][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l - 1][m][1] * w);
  p[3][1] = 0.0;
  p[4][1] = 0.0;

  p[0][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l - 1][m][2] * w) * (ac[k][l - 1][m][2] * w) + 0.40e+00 * (ad[k][l - 1][m] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l - 1][m][2]);
  p[1][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l - 1][m][1] * w));
  p[2][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l - 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[3][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l - 1][m][3] * w));
  p[4][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  p[0][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l - 1][m][2] * ac[k][l - 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l - 1][m][3]);
  p[1][3] = 0.0;
  p[2][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l - 1][m][3] * w);
  p[3][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l - 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[4][3] = 0.0;

  p[0][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l - 1][m] - 1.40e+00 * ac[k][l - 1][m][4]) * (ac[k][l - 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k][l - 1][m][1] * ac[k][l - 1][m][1]) - (s * u - t) * y * (ac[k][l - 1][m][2] * ac[k][l - 1][m][2]) - (u - t) * y * (ac[k][l - 1][m][3] * ac[k][l - 1][m][3]) - t * x * ac[k][l - 1][m][4]);
  p[1][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l - 1][m][1] * ac[k][l - 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l - 1][m][1];
  p[2][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l - 1][m][4] * w) - 0.40e+00 * (ad[k][l - 1][m] * w + ac[k][l - 1][m][2] * ac[k][l - 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l - 1][m][2];
  p[3][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l - 1][m][2] * ac[k][l - 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l - 1][m][3];
  p[4][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l - 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  w = ae[k][l][m - 1];
  x = w * w;
  y = w * x;

  q[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  q[1][0] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  q[2][0] = 0.0;
  q[3][0] = 0.0;
  q[4][0] = 0.0;

  q[0][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m - 1][1] * w) * (ac[k][l][m - 1][1] * w) + 0.40e+00 * ad[k][l][m - 1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l][m - 1][1]);
  q[1][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l][m - 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  q[2][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m - 1][2] * w));
  q[3][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m - 1][3] * w));
  q[4][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  q[0][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m - 1][1] * ac[k][l][m - 1][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m - 1][2]);
  q[1][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m - 1][2] * w);
  q[2][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m - 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  q[3][2] = 0.0;
  q[4][2] = 0.0;

  q[0][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m - 1][1] * ac[k][l][m - 1][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m - 1][3]);
  q[1][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m - 1][3] * w);
  q[2][3] = 0.0;
  q[3][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m - 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  q[4][3] = 0.0;

  q[0][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l][m - 1] - 1.40e+00 * ac[k][l][m - 1][4]) * ac[k][l][m - 1][1] * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(s * u - t) * y * (ac[k][l][m - 1][1] * ac[k][l][m - 1][1]) - (u - t) * y * (ac[k][l][m - 1][2] * ac[k][l][m - 1][2]) - (u - t) * y * (ac[k][l][m - 1][3] * ac[k][l][m - 1][3]) - t * x * ac[k][l][m - 1][4]);
  q[1][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m - 1][4] * w) - 0.40e+00 * (ac[k][l][m - 1][1] * ac[k][l][m - 1][1] * x + ad[k][l][m - 1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l][m - 1][1];
  q[2][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m - 1][2] * ac[k][l][m - 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m - 1][2];
  q[3][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m - 1][3] * ac[k][l][m - 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m - 1][3];
  q[4][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m - 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  for (n = 0; n < 5; n++) {
    aa[n] = ab[k][l][m][n] - 1.2 * (o[0][n] * ab[k - 1][l][m][0] + o[1][n] * ab[k - 1][l][m][1] + o[2][n] * ab[k - 1][l][m][2] + o[3][n] * ab[k - 1][l][m][3] + o[4][n] * ab[k - 1][l][m][4]);
  }

  for (n = 0; n < 5; n++) {
    aa[n] = aa[n] - 1.2 * (p[0][n] * ab[k][l - 1][m][0] + q[0][n] * ab[k][l][m - 1][0] + p[1][n] * ab[k][l - 1][m][1] + q[1][n] * ab[k][l][m - 1][1] + p[2][n] * ab[k][l - 1][m][2] + q[2][n] * ab[k][l][m - 1][2] + p[3][n] * ab[k][l - 1][m][3] + q[3][n] * ab[k][l][m - 1][3] + p[4][n] * ab[k][l - 1][m][4] + q[4][n] * ab[k][l][m - 1][4]);
  }

  for (n = 0; n < 5; n++) {
    z[n][0] = r[0][n];
    z[n][1] = r[1][n];
    z[n][2] = r[2][n];
    z[n][3] = r[3][n];
    z[n][4] = r[4][n];
  }

  w = 1.0 / z[0][0];
  v = w * z[1][0];
  z[1][1] = z[1][1] - v * z[0][1];
  z[1][2] = z[1][2] - v * z[0][2];
  z[1][3] = z[1][3] - v * z[0][3];
  z[1][4] = z[1][4] - v * z[0][4];
  aa[1] = aa[1] - aa[0] * v;

  v = w * z[2][0];
  z[2][1] = z[2][1] - v * z[0][1];
  z[2][2] = z[2][2] - v * z[0][2];
  z[2][3] = z[2][3] - v * z[0][3];
  z[2][4] = z[2][4] - v * z[0][4];
  aa[2] = aa[2] - aa[0] * v;

  v = w * z[3][0];
  z[3][1] = z[3][1] - v * z[0][1];
  z[3][2] = z[3][2] - v * z[0][2];
  z[3][3] = z[3][3] - v * z[0][3];
  z[3][4] = z[3][4] - v * z[0][4];
  aa[3] = aa[3] - aa[0] * v;

  v = w * z[4][0];
  z[4][1] = z[4][1] - v * z[0][1];
  z[4][2] = z[4][2] - v * z[0][2];
  z[4][3] = z[4][3] - v * z[0][3];
  z[4][4] = z[4][4] - v * z[0][4];
  aa[4] = aa[4] - aa[0] * v;

  w = 1.0 / z[1][1];
  v = w * z[2][1];
  z[2][2] = z[2][2] - v * z[1][2];
  z[2][3] = z[2][3] - v * z[1][3];
  z[2][4] = z[2][4] - v * z[1][4];
  aa[2] = aa[2] - aa[1] * v;

  v = w * z[3][1];
  z[3][2] = z[3][2] - v * z[1][2];
  z[3][3] = z[3][3] - v * z[1][3];
  z[3][4] = z[3][4] - v * z[1][4];
  aa[3] = aa[3] - aa[1] * v;

  v = w * z[4][1];
  z[4][2] = z[4][2] - v * z[1][2];
  z[4][3] = z[4][3] - v * z[1][3];
  z[4][4] = z[4][4] - v * z[1][4];
  aa[4] = aa[4] - aa[1] * v;

  w = 1.0 / z[2][2];
  v = w * z[3][2];
  z[3][3] = z[3][3] - v * z[2][3];
  z[3][4] = z[3][4] - v * z[2][4];
  aa[3] = aa[3] - aa[2] * v;

  v = w * z[4][2];
  z[4][3] = z[4][3] - v * z[2][3];
  z[4][4] = z[4][4] - v * z[2][4];
  aa[4] = aa[4] - aa[2] * v;

  w = 1.0 / z[3][3];
  v = w * z[4][3];
  z[4][4] = z[4][4] - v * z[3][4];
  aa[4] = aa[4] - aa[3] * v;

  ab[k][l][m][4] = aa[4] / z[4][4];

  aa[3] = aa[3] - z[3][4] * ab[k][l][m][4];
  ab[k][l][m][3] = aa[3] / z[3][3];

  aa[2] = aa[2] - z[2][3] * ab[k][l][m][3] - z[2][4] * ab[k][l][m][4];
  ab[k][l][m][2] = aa[2] / z[2][2];

  aa[1] = aa[1] - z[1][2] * ab[k][l][m][2] - z[1][3] * ab[k][l][m][3] - z[1][4] * ab[k][l][m][4];
  ab[k][l][m][1] = aa[1] / z[1][1];

  aa[0] = aa[0] - z[0][1] * ab[k][l][m][1] - z[0][2] * ab[k][l][m][2] - z[0][3] * ab[k][l][m][3] - z[0][4] * ab[k][l][m][4];
  ab[k][l][m][0] = aa[0] / z[0][0];
}","[ 51  16  52 ...,  26   0 127]"
247,npb-3.3-LU-blts,B,1860,7,4,0,165,0,189794664,30,GPU,0.326825,0.220394,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g, int h, int i, int j) {
  int k, l, m, n;
  double o[5][5], p[5][5], q[5][5], r[5][5];
  double s, t, u;
  double v, w, x, y;
  double z[5][5], aa[5];
  __global double(*ab)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  k = get_global_id(1) + 1 + i;
  l = get_global_id(0) + 1 + j;
  m = h - get_global_id(1) - get_global_id(0) - i - j + 1;
  if (k >= e - 1 || l >= (f - 1) || m < 1 || m >= (g - 1))
    return;

  ab = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;

  s = (4.0 / 3.0);
  t = 1.40e+00 * 1.00e-01 * 1.00e+00 * 1.40e+00;
  u = 1.00e-01 * 1.00e+00;

  w = ae[k][l][m];
  x = w * w;
  y = w * x;

  r[0][0] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[1][0] = 0.0;
  r[2][0] = 0.0;
  r[3][0] = 0.0;
  r[4][0] = 0.0;

  r[0][1] = -0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * u * x * ac[k][l][m][1];
  r[1][1] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[2][1] = 0.0;
  r[3][1] = 0.0;
  r[4][1] = 0.0;

  r[0][2] = -0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * u * x * ac[k][l][m][2];
  r[1][2] = 0.0;
  r[2][2] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[3][2] = 0.0;
  r[4][2] = 0.0;

  r[0][3] = -0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) * u * x * ac[k][l][m][3];
  r[1][3] = 0.0;
  r[2][3] = 0.0;
  r[3][3] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[4][3] = 0.0;

  r[0][4] = -0.5 * 2.0 * ((((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][1] * ac[k][l][m][1]) + ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][2] * ac[k][l][m][2]) +
                           ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t)) * (ac[k][l][m][3] * ac[k][l][m][3])) *
                              y +
                          ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * x * ac[k][l][m][4]);

  r[1][4] = 0.5 * 2.0 * x * ac[k][l][m][1] * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t));
  r[2][4] = 0.5 * 2.0 * x * ac[k][l][m][2] * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t));
  r[3][4] = 0.5 * 2.0 * x * ac[k][l][m][3] * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t));
  r[4][4] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * w + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);

  w = ae[k - 1][l][m];
  x = w * w;
  y = w * x;

  o[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  o[1][0] = 0.0;
  o[2][0] = 0.0;
  o[3][0] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  o[4][0] = 0.0;

  o[0][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k - 1][l][m][1] * ac[k - 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k - 1][l][m][1]);
  o[1][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k - 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * u * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  o[2][1] = 0.0;
  o[3][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k - 1][l][m][1] * w);
  o[4][1] = 0.0;

  o[0][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k - 1][l][m][2] * ac[k - 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k - 1][l][m][2]);
  o[1][2] = 0.0;
  o[2][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k - 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  o[3][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k - 1][l][m][2] * w);
  o[4][2] = 0.0;

  o[0][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k - 1][l][m][3] * w) * (ac[k - 1][l][m][3] * w) + 0.40e+00 * ad[k - 1][l][m] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k - 1][l][m][3]);
  o[1][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k - 1][l][m][1] * w));
  o[2][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k - 1][l][m][2] * w));
  o[3][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (2.0 - 0.40e+00) * (ac[k - 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  o[4][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  o[0][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k - 1][l][m] - 1.40e+00 * ac[k - 1][l][m][4]) * ac[k - 1][l][m][3] * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k - 1][l][m][1] * ac[k - 1][l][m][1]) - (u - t) * y * (ac[k - 1][l][m][2] * ac[k - 1][l][m][2]) - (s * u - t) * y * (ac[k - 1][l][m][3] * ac[k - 1][l][m][3]) - t * x * ac[k - 1][l][m][4]);
  o[1][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k - 1][l][m][1] * ac[k - 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k - 1][l][m][1];
  o[2][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k - 1][l][m][2] * ac[k - 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k - 1][l][m][2];
  o[3][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k - 1][l][m][4] * w) - 0.40e+00 * (ad[k - 1][l][m] * w + ac[k - 1][l][m][3] * ac[k - 1][l][m][3] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k - 1][l][m][3];
  o[4][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k - 1][l][m][3] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;

  w = ae[k][l - 1][m];
  x = w * w;
  y = w * x;

  p[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[1][0] = 0.0;
  p[2][0] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  p[3][0] = 0.0;
  p[4][0] = 0.0;

  p[0][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l - 1][m][1] * ac[k][l - 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l - 1][m][1]);
  p[1][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l - 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[2][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l - 1][m][1] * w);
  p[3][1] = 0.0;
  p[4][1] = 0.0;

  p[0][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l - 1][m][2] * w) * (ac[k][l - 1][m][2] * w) + 0.40e+00 * (ad[k][l - 1][m] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l - 1][m][2]);
  p[1][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l - 1][m][1] * w));
  p[2][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l - 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[3][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l - 1][m][3] * w));
  p[4][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  p[0][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l - 1][m][2] * ac[k][l - 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l - 1][m][3]);
  p[1][3] = 0.0;
  p[2][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l - 1][m][3] * w);
  p[3][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l - 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[4][3] = 0.0;

  p[0][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l - 1][m] - 1.40e+00 * ac[k][l - 1][m][4]) * (ac[k][l - 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k][l - 1][m][1] * ac[k][l - 1][m][1]) - (s * u - t) * y * (ac[k][l - 1][m][2] * ac[k][l - 1][m][2]) - (u - t) * y * (ac[k][l - 1][m][3] * ac[k][l - 1][m][3]) - t * x * ac[k][l - 1][m][4]);
  p[1][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l - 1][m][1] * ac[k][l - 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l - 1][m][1];
  p[2][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l - 1][m][4] * w) - 0.40e+00 * (ad[k][l - 1][m] * w + ac[k][l - 1][m][2] * ac[k][l - 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l - 1][m][2];
  p[3][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l - 1][m][2] * ac[k][l - 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l - 1][m][3];
  p[4][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l - 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  w = ae[k][l][m - 1];
  x = w * w;
  y = w * x;

  q[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  q[1][0] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  q[2][0] = 0.0;
  q[3][0] = 0.0;
  q[4][0] = 0.0;

  q[0][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m - 1][1] * w) * (ac[k][l][m - 1][1] * w) + 0.40e+00 * ad[k][l][m - 1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l][m - 1][1]);
  q[1][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l][m - 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  q[2][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m - 1][2] * w));
  q[3][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m - 1][3] * w));
  q[4][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  q[0][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m - 1][1] * ac[k][l][m - 1][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m - 1][2]);
  q[1][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m - 1][2] * w);
  q[2][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m - 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  q[3][2] = 0.0;
  q[4][2] = 0.0;

  q[0][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m - 1][1] * ac[k][l][m - 1][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m - 1][3]);
  q[1][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m - 1][3] * w);
  q[2][3] = 0.0;
  q[3][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m - 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  q[4][3] = 0.0;

  q[0][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l][m - 1] - 1.40e+00 * ac[k][l][m - 1][4]) * ac[k][l][m - 1][1] * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(s * u - t) * y * (ac[k][l][m - 1][1] * ac[k][l][m - 1][1]) - (u - t) * y * (ac[k][l][m - 1][2] * ac[k][l][m - 1][2]) - (u - t) * y * (ac[k][l][m - 1][3] * ac[k][l][m - 1][3]) - t * x * ac[k][l][m - 1][4]);
  q[1][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m - 1][4] * w) - 0.40e+00 * (ac[k][l][m - 1][1] * ac[k][l][m - 1][1] * x + ad[k][l][m - 1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l][m - 1][1];
  q[2][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m - 1][2] * ac[k][l][m - 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m - 1][2];
  q[3][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m - 1][3] * ac[k][l][m - 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m - 1][3];
  q[4][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m - 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  for (n = 0; n < 5; n++) {
    aa[n] = ab[k][l][m][n] - 1.2 * (o[0][n] * ab[k - 1][l][m][0] + o[1][n] * ab[k - 1][l][m][1] + o[2][n] * ab[k - 1][l][m][2] + o[3][n] * ab[k - 1][l][m][3] + o[4][n] * ab[k - 1][l][m][4]);
  }

  for (n = 0; n < 5; n++) {
    aa[n] = aa[n] - 1.2 * (p[0][n] * ab[k][l - 1][m][0] + q[0][n] * ab[k][l][m - 1][0] + p[1][n] * ab[k][l - 1][m][1] + q[1][n] * ab[k][l][m - 1][1] + p[2][n] * ab[k][l - 1][m][2] + q[2][n] * ab[k][l][m - 1][2] + p[3][n] * ab[k][l - 1][m][3] + q[3][n] * ab[k][l][m - 1][3] + p[4][n] * ab[k][l - 1][m][4] + q[4][n] * ab[k][l][m - 1][4]);
  }

  for (n = 0; n < 5; n++) {
    z[n][0] = r[0][n];
    z[n][1] = r[1][n];
    z[n][2] = r[2][n];
    z[n][3] = r[3][n];
    z[n][4] = r[4][n];
  }

  w = 1.0 / z[0][0];
  v = w * z[1][0];
  z[1][1] = z[1][1] - v * z[0][1];
  z[1][2] = z[1][2] - v * z[0][2];
  z[1][3] = z[1][3] - v * z[0][3];
  z[1][4] = z[1][4] - v * z[0][4];
  aa[1] = aa[1] - aa[0] * v;

  v = w * z[2][0];
  z[2][1] = z[2][1] - v * z[0][1];
  z[2][2] = z[2][2] - v * z[0][2];
  z[2][3] = z[2][3] - v * z[0][3];
  z[2][4] = z[2][4] - v * z[0][4];
  aa[2] = aa[2] - aa[0] * v;

  v = w * z[3][0];
  z[3][1] = z[3][1] - v * z[0][1];
  z[3][2] = z[3][2] - v * z[0][2];
  z[3][3] = z[3][3] - v * z[0][3];
  z[3][4] = z[3][4] - v * z[0][4];
  aa[3] = aa[3] - aa[0] * v;

  v = w * z[4][0];
  z[4][1] = z[4][1] - v * z[0][1];
  z[4][2] = z[4][2] - v * z[0][2];
  z[4][3] = z[4][3] - v * z[0][3];
  z[4][4] = z[4][4] - v * z[0][4];
  aa[4] = aa[4] - aa[0] * v;

  w = 1.0 / z[1][1];
  v = w * z[2][1];
  z[2][2] = z[2][2] - v * z[1][2];
  z[2][3] = z[2][3] - v * z[1][3];
  z[2][4] = z[2][4] - v * z[1][4];
  aa[2] = aa[2] - aa[1] * v;

  v = w * z[3][1];
  z[3][2] = z[3][2] - v * z[1][2];
  z[3][3] = z[3][3] - v * z[1][3];
  z[3][4] = z[3][4] - v * z[1][4];
  aa[3] = aa[3] - aa[1] * v;

  v = w * z[4][1];
  z[4][2] = z[4][2] - v * z[1][2];
  z[4][3] = z[4][3] - v * z[1][3];
  z[4][4] = z[4][4] - v * z[1][4];
  aa[4] = aa[4] - aa[1] * v;

  w = 1.0 / z[2][2];
  v = w * z[3][2];
  z[3][3] = z[3][3] - v * z[2][3];
  z[3][4] = z[3][4] - v * z[2][4];
  aa[3] = aa[3] - aa[2] * v;

  v = w * z[4][2];
  z[4][3] = z[4][3] - v * z[2][3];
  z[4][4] = z[4][4] - v * z[2][4];
  aa[4] = aa[4] - aa[2] * v;

  w = 1.0 / z[3][3];
  v = w * z[4][3];
  z[4][4] = z[4][4] - v * z[3][4];
  aa[4] = aa[4] - aa[3] * v;

  ab[k][l][m][4] = aa[4] / z[4][4];

  aa[3] = aa[3] - z[3][4] * ab[k][l][m][4];
  ab[k][l][m][3] = aa[3] / z[3][3];

  aa[2] = aa[2] - z[2][3] * ab[k][l][m][3] - z[2][4] * ab[k][l][m][4];
  ab[k][l][m][2] = aa[2] / z[2][2];

  aa[1] = aa[1] - z[1][2] * ab[k][l][m][2] - z[1][3] * ab[k][l][m][3] - z[1][4] * ab[k][l][m][4];
  ab[k][l][m][1] = aa[1] / z[1][1];

  aa[0] = aa[0] - z[0][1] * ab[k][l][m][1] - z[0][2] * ab[k][l][m][2] - z[0][3] * ab[k][l][m][3] - z[0][4] * ab[k][l][m][4];
  ab[k][l][m][0] = aa[0] / z[0][0];
}","[ 51  16  52 ...,  26   0 127]"
248,npb-3.3-LU-blts,C,1860,7,4,0,165,0,755867256,60,GPU,0.701125,0.272277,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g, int h, int i, int j) {
  int k, l, m, n;
  double o[5][5], p[5][5], q[5][5], r[5][5];
  double s, t, u;
  double v, w, x, y;
  double z[5][5], aa[5];
  __global double(*ab)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  k = get_global_id(1) + 1 + i;
  l = get_global_id(0) + 1 + j;
  m = h - get_global_id(1) - get_global_id(0) - i - j + 1;
  if (k >= e - 1 || l >= (f - 1) || m < 1 || m >= (g - 1))
    return;

  ab = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;

  s = (4.0 / 3.0);
  t = 1.40e+00 * 1.00e-01 * 1.00e+00 * 1.40e+00;
  u = 1.00e-01 * 1.00e+00;

  w = ae[k][l][m];
  x = w * w;
  y = w * x;

  r[0][0] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[1][0] = 0.0;
  r[2][0] = 0.0;
  r[3][0] = 0.0;
  r[4][0] = 0.0;

  r[0][1] = -0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * u * x * ac[k][l][m][1];
  r[1][1] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[2][1] = 0.0;
  r[3][1] = 0.0;
  r[4][1] = 0.0;

  r[0][2] = -0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * u * x * ac[k][l][m][2];
  r[1][2] = 0.0;
  r[2][2] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[3][2] = 0.0;
  r[4][2] = 0.0;

  r[0][3] = -0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) * u * x * ac[k][l][m][3];
  r[1][3] = 0.0;
  r[2][3] = 0.0;
  r[3][3] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[4][3] = 0.0;

  r[0][4] = -0.5 * 2.0 * ((((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][1] * ac[k][l][m][1]) + ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][2] * ac[k][l][m][2]) +
                           ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t)) * (ac[k][l][m][3] * ac[k][l][m][3])) *
                              y +
                          ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * x * ac[k][l][m][4]);

  r[1][4] = 0.5 * 2.0 * x * ac[k][l][m][1] * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t));
  r[2][4] = 0.5 * 2.0 * x * ac[k][l][m][2] * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t));
  r[3][4] = 0.5 * 2.0 * x * ac[k][l][m][3] * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t));
  r[4][4] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * w + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);

  w = ae[k - 1][l][m];
  x = w * w;
  y = w * x;

  o[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  o[1][0] = 0.0;
  o[2][0] = 0.0;
  o[3][0] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  o[4][0] = 0.0;

  o[0][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k - 1][l][m][1] * ac[k - 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k - 1][l][m][1]);
  o[1][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k - 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * u * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  o[2][1] = 0.0;
  o[3][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k - 1][l][m][1] * w);
  o[4][1] = 0.0;

  o[0][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k - 1][l][m][2] * ac[k - 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k - 1][l][m][2]);
  o[1][2] = 0.0;
  o[2][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k - 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  o[3][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k - 1][l][m][2] * w);
  o[4][2] = 0.0;

  o[0][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k - 1][l][m][3] * w) * (ac[k - 1][l][m][3] * w) + 0.40e+00 * ad[k - 1][l][m] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k - 1][l][m][3]);
  o[1][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k - 1][l][m][1] * w));
  o[2][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k - 1][l][m][2] * w));
  o[3][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (2.0 - 0.40e+00) * (ac[k - 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  o[4][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  o[0][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k - 1][l][m] - 1.40e+00 * ac[k - 1][l][m][4]) * ac[k - 1][l][m][3] * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k - 1][l][m][1] * ac[k - 1][l][m][1]) - (u - t) * y * (ac[k - 1][l][m][2] * ac[k - 1][l][m][2]) - (s * u - t) * y * (ac[k - 1][l][m][3] * ac[k - 1][l][m][3]) - t * x * ac[k - 1][l][m][4]);
  o[1][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k - 1][l][m][1] * ac[k - 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k - 1][l][m][1];
  o[2][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k - 1][l][m][2] * ac[k - 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k - 1][l][m][2];
  o[3][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k - 1][l][m][4] * w) - 0.40e+00 * (ad[k - 1][l][m] * w + ac[k - 1][l][m][3] * ac[k - 1][l][m][3] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k - 1][l][m][3];
  o[4][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k - 1][l][m][3] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;

  w = ae[k][l - 1][m];
  x = w * w;
  y = w * x;

  p[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[1][0] = 0.0;
  p[2][0] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  p[3][0] = 0.0;
  p[4][0] = 0.0;

  p[0][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l - 1][m][1] * ac[k][l - 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l - 1][m][1]);
  p[1][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l - 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[2][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l - 1][m][1] * w);
  p[3][1] = 0.0;
  p[4][1] = 0.0;

  p[0][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l - 1][m][2] * w) * (ac[k][l - 1][m][2] * w) + 0.40e+00 * (ad[k][l - 1][m] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l - 1][m][2]);
  p[1][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l - 1][m][1] * w));
  p[2][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l - 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[3][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l - 1][m][3] * w));
  p[4][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  p[0][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l - 1][m][2] * ac[k][l - 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l - 1][m][3]);
  p[1][3] = 0.0;
  p[2][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l - 1][m][3] * w);
  p[3][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l - 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[4][3] = 0.0;

  p[0][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l - 1][m] - 1.40e+00 * ac[k][l - 1][m][4]) * (ac[k][l - 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k][l - 1][m][1] * ac[k][l - 1][m][1]) - (s * u - t) * y * (ac[k][l - 1][m][2] * ac[k][l - 1][m][2]) - (u - t) * y * (ac[k][l - 1][m][3] * ac[k][l - 1][m][3]) - t * x * ac[k][l - 1][m][4]);
  p[1][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l - 1][m][1] * ac[k][l - 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l - 1][m][1];
  p[2][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l - 1][m][4] * w) - 0.40e+00 * (ad[k][l - 1][m] * w + ac[k][l - 1][m][2] * ac[k][l - 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l - 1][m][2];
  p[3][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l - 1][m][2] * ac[k][l - 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l - 1][m][3];
  p[4][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l - 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  w = ae[k][l][m - 1];
  x = w * w;
  y = w * x;

  q[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  q[1][0] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  q[2][0] = 0.0;
  q[3][0] = 0.0;
  q[4][0] = 0.0;

  q[0][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m - 1][1] * w) * (ac[k][l][m - 1][1] * w) + 0.40e+00 * ad[k][l][m - 1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l][m - 1][1]);
  q[1][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l][m - 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  q[2][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m - 1][2] * w));
  q[3][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m - 1][3] * w));
  q[4][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  q[0][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m - 1][1] * ac[k][l][m - 1][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m - 1][2]);
  q[1][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m - 1][2] * w);
  q[2][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m - 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  q[3][2] = 0.0;
  q[4][2] = 0.0;

  q[0][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m - 1][1] * ac[k][l][m - 1][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m - 1][3]);
  q[1][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m - 1][3] * w);
  q[2][3] = 0.0;
  q[3][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m - 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  q[4][3] = 0.0;

  q[0][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l][m - 1] - 1.40e+00 * ac[k][l][m - 1][4]) * ac[k][l][m - 1][1] * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(s * u - t) * y * (ac[k][l][m - 1][1] * ac[k][l][m - 1][1]) - (u - t) * y * (ac[k][l][m - 1][2] * ac[k][l][m - 1][2]) - (u - t) * y * (ac[k][l][m - 1][3] * ac[k][l][m - 1][3]) - t * x * ac[k][l][m - 1][4]);
  q[1][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m - 1][4] * w) - 0.40e+00 * (ac[k][l][m - 1][1] * ac[k][l][m - 1][1] * x + ad[k][l][m - 1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l][m - 1][1];
  q[2][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m - 1][2] * ac[k][l][m - 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m - 1][2];
  q[3][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m - 1][3] * ac[k][l][m - 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m - 1][3];
  q[4][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m - 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  for (n = 0; n < 5; n++) {
    aa[n] = ab[k][l][m][n] - 1.2 * (o[0][n] * ab[k - 1][l][m][0] + o[1][n] * ab[k - 1][l][m][1] + o[2][n] * ab[k - 1][l][m][2] + o[3][n] * ab[k - 1][l][m][3] + o[4][n] * ab[k - 1][l][m][4]);
  }

  for (n = 0; n < 5; n++) {
    aa[n] = aa[n] - 1.2 * (p[0][n] * ab[k][l - 1][m][0] + q[0][n] * ab[k][l][m - 1][0] + p[1][n] * ab[k][l - 1][m][1] + q[1][n] * ab[k][l][m - 1][1] + p[2][n] * ab[k][l - 1][m][2] + q[2][n] * ab[k][l][m - 1][2] + p[3][n] * ab[k][l - 1][m][3] + q[3][n] * ab[k][l][m - 1][3] + p[4][n] * ab[k][l - 1][m][4] + q[4][n] * ab[k][l][m - 1][4]);
  }

  for (n = 0; n < 5; n++) {
    z[n][0] = r[0][n];
    z[n][1] = r[1][n];
    z[n][2] = r[2][n];
    z[n][3] = r[3][n];
    z[n][4] = r[4][n];
  }

  w = 1.0 / z[0][0];
  v = w * z[1][0];
  z[1][1] = z[1][1] - v * z[0][1];
  z[1][2] = z[1][2] - v * z[0][2];
  z[1][3] = z[1][3] - v * z[0][3];
  z[1][4] = z[1][4] - v * z[0][4];
  aa[1] = aa[1] - aa[0] * v;

  v = w * z[2][0];
  z[2][1] = z[2][1] - v * z[0][1];
  z[2][2] = z[2][2] - v * z[0][2];
  z[2][3] = z[2][3] - v * z[0][3];
  z[2][4] = z[2][4] - v * z[0][4];
  aa[2] = aa[2] - aa[0] * v;

  v = w * z[3][0];
  z[3][1] = z[3][1] - v * z[0][1];
  z[3][2] = z[3][2] - v * z[0][2];
  z[3][3] = z[3][3] - v * z[0][3];
  z[3][4] = z[3][4] - v * z[0][4];
  aa[3] = aa[3] - aa[0] * v;

  v = w * z[4][0];
  z[4][1] = z[4][1] - v * z[0][1];
  z[4][2] = z[4][2] - v * z[0][2];
  z[4][3] = z[4][3] - v * z[0][3];
  z[4][4] = z[4][4] - v * z[0][4];
  aa[4] = aa[4] - aa[0] * v;

  w = 1.0 / z[1][1];
  v = w * z[2][1];
  z[2][2] = z[2][2] - v * z[1][2];
  z[2][3] = z[2][3] - v * z[1][3];
  z[2][4] = z[2][4] - v * z[1][4];
  aa[2] = aa[2] - aa[1] * v;

  v = w * z[3][1];
  z[3][2] = z[3][2] - v * z[1][2];
  z[3][3] = z[3][3] - v * z[1][3];
  z[3][4] = z[3][4] - v * z[1][4];
  aa[3] = aa[3] - aa[1] * v;

  v = w * z[4][1];
  z[4][2] = z[4][2] - v * z[1][2];
  z[4][3] = z[4][3] - v * z[1][3];
  z[4][4] = z[4][4] - v * z[1][4];
  aa[4] = aa[4] - aa[1] * v;

  w = 1.0 / z[2][2];
  v = w * z[3][2];
  z[3][3] = z[3][3] - v * z[2][3];
  z[3][4] = z[3][4] - v * z[2][4];
  aa[3] = aa[3] - aa[2] * v;

  v = w * z[4][2];
  z[4][3] = z[4][3] - v * z[2][3];
  z[4][4] = z[4][4] - v * z[2][4];
  aa[4] = aa[4] - aa[2] * v;

  w = 1.0 / z[3][3];
  v = w * z[4][3];
  z[4][4] = z[4][4] - v * z[3][4];
  aa[4] = aa[4] - aa[3] * v;

  ab[k][l][m][4] = aa[4] / z[4][4];

  aa[3] = aa[3] - z[3][4] * ab[k][l][m][4];
  ab[k][l][m][3] = aa[3] / z[3][3];

  aa[2] = aa[2] - z[2][3] * ab[k][l][m][3] - z[2][4] * ab[k][l][m][4];
  ab[k][l][m][2] = aa[2] / z[2][2];

  aa[1] = aa[1] - z[1][2] * ab[k][l][m][2] - z[1][3] * ab[k][l][m][3] - z[1][4] * ab[k][l][m][4];
  ab[k][l][m][1] = aa[1] / z[1][1];

  aa[0] = aa[0] - z[0][1] * ab[k][l][m][1] - z[0][2] * ab[k][l][m][2] - z[0][3] * ab[k][l][m][3] - z[0][4] * ab[k][l][m][4];
  ab[k][l][m][0] = aa[0] / z[0][0];
}","[ 51  16  52 ...,  26   0 127]"
249,npb-3.3-LU-blts,S,1860,7,4,0,165,0,349464,40,CPU,0.105627,0.168998,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g, int h, int i, int j) {
  int k, l, m, n;
  double o[5][5], p[5][5], q[5][5], r[5][5];
  double s, t, u;
  double v, w, x, y;
  double z[5][5], aa[5];
  __global double(*ab)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  k = get_global_id(1) + 1 + i;
  l = get_global_id(0) + 1 + j;
  m = h - get_global_id(1) - get_global_id(0) - i - j + 1;
  if (k >= e - 1 || l >= (f - 1) || m < 1 || m >= (g - 1))
    return;

  ab = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;

  s = (4.0 / 3.0);
  t = 1.40e+00 * 1.00e-01 * 1.00e+00 * 1.40e+00;
  u = 1.00e-01 * 1.00e+00;

  w = ae[k][l][m];
  x = w * w;
  y = w * x;

  r[0][0] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[1][0] = 0.0;
  r[2][0] = 0.0;
  r[3][0] = 0.0;
  r[4][0] = 0.0;

  r[0][1] = -0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * u * x * ac[k][l][m][1];
  r[1][1] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[2][1] = 0.0;
  r[3][1] = 0.0;
  r[4][1] = 0.0;

  r[0][2] = -0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * u * x * ac[k][l][m][2];
  r[1][2] = 0.0;
  r[2][2] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[3][2] = 0.0;
  r[4][2] = 0.0;

  r[0][3] = -0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) * u * x * ac[k][l][m][3];
  r[1][3] = 0.0;
  r[2][3] = 0.0;
  r[3][3] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[4][3] = 0.0;

  r[0][4] = -0.5 * 2.0 * ((((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][1] * ac[k][l][m][1]) + ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][2] * ac[k][l][m][2]) +
                           ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t)) * (ac[k][l][m][3] * ac[k][l][m][3])) *
                              y +
                          ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * x * ac[k][l][m][4]);

  r[1][4] = 0.5 * 2.0 * x * ac[k][l][m][1] * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t));
  r[2][4] = 0.5 * 2.0 * x * ac[k][l][m][2] * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t));
  r[3][4] = 0.5 * 2.0 * x * ac[k][l][m][3] * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t));
  r[4][4] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * w + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);

  w = ae[k - 1][l][m];
  x = w * w;
  y = w * x;

  o[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  o[1][0] = 0.0;
  o[2][0] = 0.0;
  o[3][0] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  o[4][0] = 0.0;

  o[0][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k - 1][l][m][1] * ac[k - 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k - 1][l][m][1]);
  o[1][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k - 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * u * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  o[2][1] = 0.0;
  o[3][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k - 1][l][m][1] * w);
  o[4][1] = 0.0;

  o[0][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k - 1][l][m][2] * ac[k - 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k - 1][l][m][2]);
  o[1][2] = 0.0;
  o[2][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k - 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  o[3][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k - 1][l][m][2] * w);
  o[4][2] = 0.0;

  o[0][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k - 1][l][m][3] * w) * (ac[k - 1][l][m][3] * w) + 0.40e+00 * ad[k - 1][l][m] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k - 1][l][m][3]);
  o[1][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k - 1][l][m][1] * w));
  o[2][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k - 1][l][m][2] * w));
  o[3][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (2.0 - 0.40e+00) * (ac[k - 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  o[4][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  o[0][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k - 1][l][m] - 1.40e+00 * ac[k - 1][l][m][4]) * ac[k - 1][l][m][3] * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k - 1][l][m][1] * ac[k - 1][l][m][1]) - (u - t) * y * (ac[k - 1][l][m][2] * ac[k - 1][l][m][2]) - (s * u - t) * y * (ac[k - 1][l][m][3] * ac[k - 1][l][m][3]) - t * x * ac[k - 1][l][m][4]);
  o[1][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k - 1][l][m][1] * ac[k - 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k - 1][l][m][1];
  o[2][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k - 1][l][m][2] * ac[k - 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k - 1][l][m][2];
  o[3][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k - 1][l][m][4] * w) - 0.40e+00 * (ad[k - 1][l][m] * w + ac[k - 1][l][m][3] * ac[k - 1][l][m][3] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k - 1][l][m][3];
  o[4][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k - 1][l][m][3] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;

  w = ae[k][l - 1][m];
  x = w * w;
  y = w * x;

  p[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[1][0] = 0.0;
  p[2][0] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  p[3][0] = 0.0;
  p[4][0] = 0.0;

  p[0][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l - 1][m][1] * ac[k][l - 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l - 1][m][1]);
  p[1][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l - 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[2][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l - 1][m][1] * w);
  p[3][1] = 0.0;
  p[4][1] = 0.0;

  p[0][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l - 1][m][2] * w) * (ac[k][l - 1][m][2] * w) + 0.40e+00 * (ad[k][l - 1][m] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l - 1][m][2]);
  p[1][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l - 1][m][1] * w));
  p[2][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l - 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[3][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l - 1][m][3] * w));
  p[4][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  p[0][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l - 1][m][2] * ac[k][l - 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l - 1][m][3]);
  p[1][3] = 0.0;
  p[2][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l - 1][m][3] * w);
  p[3][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l - 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[4][3] = 0.0;

  p[0][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l - 1][m] - 1.40e+00 * ac[k][l - 1][m][4]) * (ac[k][l - 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k][l - 1][m][1] * ac[k][l - 1][m][1]) - (s * u - t) * y * (ac[k][l - 1][m][2] * ac[k][l - 1][m][2]) - (u - t) * y * (ac[k][l - 1][m][3] * ac[k][l - 1][m][3]) - t * x * ac[k][l - 1][m][4]);
  p[1][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l - 1][m][1] * ac[k][l - 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l - 1][m][1];
  p[2][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l - 1][m][4] * w) - 0.40e+00 * (ad[k][l - 1][m] * w + ac[k][l - 1][m][2] * ac[k][l - 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l - 1][m][2];
  p[3][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l - 1][m][2] * ac[k][l - 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l - 1][m][3];
  p[4][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l - 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  w = ae[k][l][m - 1];
  x = w * w;
  y = w * x;

  q[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  q[1][0] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  q[2][0] = 0.0;
  q[3][0] = 0.0;
  q[4][0] = 0.0;

  q[0][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m - 1][1] * w) * (ac[k][l][m - 1][1] * w) + 0.40e+00 * ad[k][l][m - 1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l][m - 1][1]);
  q[1][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l][m - 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  q[2][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m - 1][2] * w));
  q[3][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m - 1][3] * w));
  q[4][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  q[0][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m - 1][1] * ac[k][l][m - 1][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m - 1][2]);
  q[1][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m - 1][2] * w);
  q[2][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m - 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  q[3][2] = 0.0;
  q[4][2] = 0.0;

  q[0][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m - 1][1] * ac[k][l][m - 1][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m - 1][3]);
  q[1][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m - 1][3] * w);
  q[2][3] = 0.0;
  q[3][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m - 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  q[4][3] = 0.0;

  q[0][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l][m - 1] - 1.40e+00 * ac[k][l][m - 1][4]) * ac[k][l][m - 1][1] * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(s * u - t) * y * (ac[k][l][m - 1][1] * ac[k][l][m - 1][1]) - (u - t) * y * (ac[k][l][m - 1][2] * ac[k][l][m - 1][2]) - (u - t) * y * (ac[k][l][m - 1][3] * ac[k][l][m - 1][3]) - t * x * ac[k][l][m - 1][4]);
  q[1][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m - 1][4] * w) - 0.40e+00 * (ac[k][l][m - 1][1] * ac[k][l][m - 1][1] * x + ad[k][l][m - 1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l][m - 1][1];
  q[2][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m - 1][2] * ac[k][l][m - 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m - 1][2];
  q[3][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m - 1][3] * ac[k][l][m - 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m - 1][3];
  q[4][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m - 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  for (n = 0; n < 5; n++) {
    aa[n] = ab[k][l][m][n] - 1.2 * (o[0][n] * ab[k - 1][l][m][0] + o[1][n] * ab[k - 1][l][m][1] + o[2][n] * ab[k - 1][l][m][2] + o[3][n] * ab[k - 1][l][m][3] + o[4][n] * ab[k - 1][l][m][4]);
  }

  for (n = 0; n < 5; n++) {
    aa[n] = aa[n] - 1.2 * (p[0][n] * ab[k][l - 1][m][0] + q[0][n] * ab[k][l][m - 1][0] + p[1][n] * ab[k][l - 1][m][1] + q[1][n] * ab[k][l][m - 1][1] + p[2][n] * ab[k][l - 1][m][2] + q[2][n] * ab[k][l][m - 1][2] + p[3][n] * ab[k][l - 1][m][3] + q[3][n] * ab[k][l][m - 1][3] + p[4][n] * ab[k][l - 1][m][4] + q[4][n] * ab[k][l][m - 1][4]);
  }

  for (n = 0; n < 5; n++) {
    z[n][0] = r[0][n];
    z[n][1] = r[1][n];
    z[n][2] = r[2][n];
    z[n][3] = r[3][n];
    z[n][4] = r[4][n];
  }

  w = 1.0 / z[0][0];
  v = w * z[1][0];
  z[1][1] = z[1][1] - v * z[0][1];
  z[1][2] = z[1][2] - v * z[0][2];
  z[1][3] = z[1][3] - v * z[0][3];
  z[1][4] = z[1][4] - v * z[0][4];
  aa[1] = aa[1] - aa[0] * v;

  v = w * z[2][0];
  z[2][1] = z[2][1] - v * z[0][1];
  z[2][2] = z[2][2] - v * z[0][2];
  z[2][3] = z[2][3] - v * z[0][3];
  z[2][4] = z[2][4] - v * z[0][4];
  aa[2] = aa[2] - aa[0] * v;

  v = w * z[3][0];
  z[3][1] = z[3][1] - v * z[0][1];
  z[3][2] = z[3][2] - v * z[0][2];
  z[3][3] = z[3][3] - v * z[0][3];
  z[3][4] = z[3][4] - v * z[0][4];
  aa[3] = aa[3] - aa[0] * v;

  v = w * z[4][0];
  z[4][1] = z[4][1] - v * z[0][1];
  z[4][2] = z[4][2] - v * z[0][2];
  z[4][3] = z[4][3] - v * z[0][3];
  z[4][4] = z[4][4] - v * z[0][4];
  aa[4] = aa[4] - aa[0] * v;

  w = 1.0 / z[1][1];
  v = w * z[2][1];
  z[2][2] = z[2][2] - v * z[1][2];
  z[2][3] = z[2][3] - v * z[1][3];
  z[2][4] = z[2][4] - v * z[1][4];
  aa[2] = aa[2] - aa[1] * v;

  v = w * z[3][1];
  z[3][2] = z[3][2] - v * z[1][2];
  z[3][3] = z[3][3] - v * z[1][3];
  z[3][4] = z[3][4] - v * z[1][4];
  aa[3] = aa[3] - aa[1] * v;

  v = w * z[4][1];
  z[4][2] = z[4][2] - v * z[1][2];
  z[4][3] = z[4][3] - v * z[1][3];
  z[4][4] = z[4][4] - v * z[1][4];
  aa[4] = aa[4] - aa[1] * v;

  w = 1.0 / z[2][2];
  v = w * z[3][2];
  z[3][3] = z[3][3] - v * z[2][3];
  z[3][4] = z[3][4] - v * z[2][4];
  aa[3] = aa[3] - aa[2] * v;

  v = w * z[4][2];
  z[4][3] = z[4][3] - v * z[2][3];
  z[4][4] = z[4][4] - v * z[2][4];
  aa[4] = aa[4] - aa[2] * v;

  w = 1.0 / z[3][3];
  v = w * z[4][3];
  z[4][4] = z[4][4] - v * z[3][4];
  aa[4] = aa[4] - aa[3] * v;

  ab[k][l][m][4] = aa[4] / z[4][4];

  aa[3] = aa[3] - z[3][4] * ab[k][l][m][4];
  ab[k][l][m][3] = aa[3] / z[3][3];

  aa[2] = aa[2] - z[2][3] * ab[k][l][m][3] - z[2][4] * ab[k][l][m][4];
  ab[k][l][m][2] = aa[2] / z[2][2];

  aa[1] = aa[1] - z[1][2] * ab[k][l][m][2] - z[1][3] * ab[k][l][m][3] - z[1][4] * ab[k][l][m][4];
  ab[k][l][m][1] = aa[1] / z[1][1];

  aa[0] = aa[0] - z[0][1] * ab[k][l][m][1] - z[0][2] * ab[k][l][m][2] - z[0][3] * ab[k][l][m][3] - z[0][4] * ab[k][l][m][4];
  ab[k][l][m][0] = aa[0] / z[0][0];
}","[ 51  16  52 ...,  26   0 127]"
250,npb-3.3-LU-blts,W,1860,7,4,0,165,0,6346800,52,CPU,0.140512,0.175413,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g, int h, int i, int j) {
  int k, l, m, n;
  double o[5][5], p[5][5], q[5][5], r[5][5];
  double s, t, u;
  double v, w, x, y;
  double z[5][5], aa[5];
  __global double(*ab)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  k = get_global_id(1) + 1 + i;
  l = get_global_id(0) + 1 + j;
  m = h - get_global_id(1) - get_global_id(0) - i - j + 1;
  if (k >= e - 1 || l >= (f - 1) || m < 1 || m >= (g - 1))
    return;

  ab = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;

  s = (4.0 / 3.0);
  t = 1.40e+00 * 1.00e-01 * 1.00e+00 * 1.40e+00;
  u = 1.00e-01 * 1.00e+00;

  w = ae[k][l][m];
  x = w * w;
  y = w * x;

  r[0][0] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[1][0] = 0.0;
  r[2][0] = 0.0;
  r[3][0] = 0.0;
  r[4][0] = 0.0;

  r[0][1] = -0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * u * x * ac[k][l][m][1];
  r[1][1] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[2][1] = 0.0;
  r[3][1] = 0.0;
  r[4][1] = 0.0;

  r[0][2] = -0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * u * x * ac[k][l][m][2];
  r[1][2] = 0.0;
  r[2][2] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[3][2] = 0.0;
  r[4][2] = 0.0;

  r[0][3] = -0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) * u * x * ac[k][l][m][3];
  r[1][3] = 0.0;
  r[2][3] = 0.0;
  r[3][3] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[4][3] = 0.0;

  r[0][4] = -0.5 * 2.0 * ((((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][1] * ac[k][l][m][1]) + ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][2] * ac[k][l][m][2]) +
                           ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t)) * (ac[k][l][m][3] * ac[k][l][m][3])) *
                              y +
                          ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * x * ac[k][l][m][4]);

  r[1][4] = 0.5 * 2.0 * x * ac[k][l][m][1] * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t));
  r[2][4] = 0.5 * 2.0 * x * ac[k][l][m][2] * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t));
  r[3][4] = 0.5 * 2.0 * x * ac[k][l][m][3] * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t));
  r[4][4] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * w + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);

  w = ae[k - 1][l][m];
  x = w * w;
  y = w * x;

  o[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  o[1][0] = 0.0;
  o[2][0] = 0.0;
  o[3][0] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  o[4][0] = 0.0;

  o[0][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k - 1][l][m][1] * ac[k - 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k - 1][l][m][1]);
  o[1][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k - 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * u * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  o[2][1] = 0.0;
  o[3][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k - 1][l][m][1] * w);
  o[4][1] = 0.0;

  o[0][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k - 1][l][m][2] * ac[k - 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k - 1][l][m][2]);
  o[1][2] = 0.0;
  o[2][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k - 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  o[3][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k - 1][l][m][2] * w);
  o[4][2] = 0.0;

  o[0][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k - 1][l][m][3] * w) * (ac[k - 1][l][m][3] * w) + 0.40e+00 * ad[k - 1][l][m] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k - 1][l][m][3]);
  o[1][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k - 1][l][m][1] * w));
  o[2][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k - 1][l][m][2] * w));
  o[3][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (2.0 - 0.40e+00) * (ac[k - 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  o[4][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  o[0][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k - 1][l][m] - 1.40e+00 * ac[k - 1][l][m][4]) * ac[k - 1][l][m][3] * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k - 1][l][m][1] * ac[k - 1][l][m][1]) - (u - t) * y * (ac[k - 1][l][m][2] * ac[k - 1][l][m][2]) - (s * u - t) * y * (ac[k - 1][l][m][3] * ac[k - 1][l][m][3]) - t * x * ac[k - 1][l][m][4]);
  o[1][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k - 1][l][m][1] * ac[k - 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k - 1][l][m][1];
  o[2][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k - 1][l][m][2] * ac[k - 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k - 1][l][m][2];
  o[3][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k - 1][l][m][4] * w) - 0.40e+00 * (ad[k - 1][l][m] * w + ac[k - 1][l][m][3] * ac[k - 1][l][m][3] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k - 1][l][m][3];
  o[4][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k - 1][l][m][3] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;

  w = ae[k][l - 1][m];
  x = w * w;
  y = w * x;

  p[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[1][0] = 0.0;
  p[2][0] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  p[3][0] = 0.0;
  p[4][0] = 0.0;

  p[0][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l - 1][m][1] * ac[k][l - 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l - 1][m][1]);
  p[1][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l - 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[2][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l - 1][m][1] * w);
  p[3][1] = 0.0;
  p[4][1] = 0.0;

  p[0][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l - 1][m][2] * w) * (ac[k][l - 1][m][2] * w) + 0.40e+00 * (ad[k][l - 1][m] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l - 1][m][2]);
  p[1][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l - 1][m][1] * w));
  p[2][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l - 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[3][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l - 1][m][3] * w));
  p[4][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  p[0][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l - 1][m][2] * ac[k][l - 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l - 1][m][3]);
  p[1][3] = 0.0;
  p[2][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l - 1][m][3] * w);
  p[3][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l - 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[4][3] = 0.0;

  p[0][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l - 1][m] - 1.40e+00 * ac[k][l - 1][m][4]) * (ac[k][l - 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k][l - 1][m][1] * ac[k][l - 1][m][1]) - (s * u - t) * y * (ac[k][l - 1][m][2] * ac[k][l - 1][m][2]) - (u - t) * y * (ac[k][l - 1][m][3] * ac[k][l - 1][m][3]) - t * x * ac[k][l - 1][m][4]);
  p[1][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l - 1][m][1] * ac[k][l - 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l - 1][m][1];
  p[2][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l - 1][m][4] * w) - 0.40e+00 * (ad[k][l - 1][m] * w + ac[k][l - 1][m][2] * ac[k][l - 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l - 1][m][2];
  p[3][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l - 1][m][2] * ac[k][l - 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l - 1][m][3];
  p[4][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l - 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  w = ae[k][l][m - 1];
  x = w * w;
  y = w * x;

  q[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  q[1][0] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  q[2][0] = 0.0;
  q[3][0] = 0.0;
  q[4][0] = 0.0;

  q[0][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m - 1][1] * w) * (ac[k][l][m - 1][1] * w) + 0.40e+00 * ad[k][l][m - 1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l][m - 1][1]);
  q[1][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l][m - 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  q[2][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m - 1][2] * w));
  q[3][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m - 1][3] * w));
  q[4][1] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  q[0][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m - 1][1] * ac[k][l][m - 1][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m - 1][2]);
  q[1][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m - 1][2] * w);
  q[2][2] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m - 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  q[3][2] = 0.0;
  q[4][2] = 0.0;

  q[0][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m - 1][1] * ac[k][l][m - 1][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m - 1][3]);
  q[1][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m - 1][3] * w);
  q[2][3] = 0.0;
  q[3][3] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m - 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  q[4][3] = 0.0;

  q[0][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l][m - 1] - 1.40e+00 * ac[k][l][m - 1][4]) * ac[k][l][m - 1][1] * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(s * u - t) * y * (ac[k][l][m - 1][1] * ac[k][l][m - 1][1]) - (u - t) * y * (ac[k][l][m - 1][2] * ac[k][l][m - 1][2]) - (u - t) * y * (ac[k][l][m - 1][3] * ac[k][l][m - 1][3]) - t * x * ac[k][l][m - 1][4]);
  q[1][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m - 1][4] * w) - 0.40e+00 * (ac[k][l][m - 1][1] * ac[k][l][m - 1][1] * x + ad[k][l][m - 1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l][m - 1][1];
  q[2][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m - 1][2] * ac[k][l][m - 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m - 1][2];
  q[3][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m - 1][3] * ac[k][l][m - 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m - 1][3];
  q[4][4] = -0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m - 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  for (n = 0; n < 5; n++) {
    aa[n] = ab[k][l][m][n] - 1.2 * (o[0][n] * ab[k - 1][l][m][0] + o[1][n] * ab[k - 1][l][m][1] + o[2][n] * ab[k - 1][l][m][2] + o[3][n] * ab[k - 1][l][m][3] + o[4][n] * ab[k - 1][l][m][4]);
  }

  for (n = 0; n < 5; n++) {
    aa[n] = aa[n] - 1.2 * (p[0][n] * ab[k][l - 1][m][0] + q[0][n] * ab[k][l][m - 1][0] + p[1][n] * ab[k][l - 1][m][1] + q[1][n] * ab[k][l][m - 1][1] + p[2][n] * ab[k][l - 1][m][2] + q[2][n] * ab[k][l][m - 1][2] + p[3][n] * ab[k][l - 1][m][3] + q[3][n] * ab[k][l][m - 1][3] + p[4][n] * ab[k][l - 1][m][4] + q[4][n] * ab[k][l][m - 1][4]);
  }

  for (n = 0; n < 5; n++) {
    z[n][0] = r[0][n];
    z[n][1] = r[1][n];
    z[n][2] = r[2][n];
    z[n][3] = r[3][n];
    z[n][4] = r[4][n];
  }

  w = 1.0 / z[0][0];
  v = w * z[1][0];
  z[1][1] = z[1][1] - v * z[0][1];
  z[1][2] = z[1][2] - v * z[0][2];
  z[1][3] = z[1][3] - v * z[0][3];
  z[1][4] = z[1][4] - v * z[0][4];
  aa[1] = aa[1] - aa[0] * v;

  v = w * z[2][0];
  z[2][1] = z[2][1] - v * z[0][1];
  z[2][2] = z[2][2] - v * z[0][2];
  z[2][3] = z[2][3] - v * z[0][3];
  z[2][4] = z[2][4] - v * z[0][4];
  aa[2] = aa[2] - aa[0] * v;

  v = w * z[3][0];
  z[3][1] = z[3][1] - v * z[0][1];
  z[3][2] = z[3][2] - v * z[0][2];
  z[3][3] = z[3][3] - v * z[0][3];
  z[3][4] = z[3][4] - v * z[0][4];
  aa[3] = aa[3] - aa[0] * v;

  v = w * z[4][0];
  z[4][1] = z[4][1] - v * z[0][1];
  z[4][2] = z[4][2] - v * z[0][2];
  z[4][3] = z[4][3] - v * z[0][3];
  z[4][4] = z[4][4] - v * z[0][4];
  aa[4] = aa[4] - aa[0] * v;

  w = 1.0 / z[1][1];
  v = w * z[2][1];
  z[2][2] = z[2][2] - v * z[1][2];
  z[2][3] = z[2][3] - v * z[1][3];
  z[2][4] = z[2][4] - v * z[1][4];
  aa[2] = aa[2] - aa[1] * v;

  v = w * z[3][1];
  z[3][2] = z[3][2] - v * z[1][2];
  z[3][3] = z[3][3] - v * z[1][3];
  z[3][4] = z[3][4] - v * z[1][4];
  aa[3] = aa[3] - aa[1] * v;

  v = w * z[4][1];
  z[4][2] = z[4][2] - v * z[1][2];
  z[4][3] = z[4][3] - v * z[1][3];
  z[4][4] = z[4][4] - v * z[1][4];
  aa[4] = aa[4] - aa[1] * v;

  w = 1.0 / z[2][2];
  v = w * z[3][2];
  z[3][3] = z[3][3] - v * z[2][3];
  z[3][4] = z[3][4] - v * z[2][4];
  aa[3] = aa[3] - aa[2] * v;

  v = w * z[4][2];
  z[4][3] = z[4][3] - v * z[2][3];
  z[4][4] = z[4][4] - v * z[2][4];
  aa[4] = aa[4] - aa[2] * v;

  w = 1.0 / z[3][3];
  v = w * z[4][3];
  z[4][4] = z[4][4] - v * z[3][4];
  aa[4] = aa[4] - aa[3] * v;

  ab[k][l][m][4] = aa[4] / z[4][4];

  aa[3] = aa[3] - z[3][4] * ab[k][l][m][4];
  ab[k][l][m][3] = aa[3] / z[3][3];

  aa[2] = aa[2] - z[2][3] * ab[k][l][m][3] - z[2][4] * ab[k][l][m][4];
  ab[k][l][m][2] = aa[2] / z[2][2];

  aa[1] = aa[1] - z[1][2] * ab[k][l][m][2] - z[1][3] * ab[k][l][m][3] - z[1][4] * ab[k][l][m][4];
  ab[k][l][m][1] = aa[1] / z[1][1];

  aa[0] = aa[0] - z[0][1] * ab[k][l][m][1] - z[0][2] * ab[k][l][m][2] - z[0][3] * ab[k][l][m][3] - z[0][4] * ab[k][l][m][4];
  ab[k][l][m][0] = aa[0] / z[0][0];
}","[ 51  16  52 ...,  26   0 127]"
251,npb-3.3-LU-buts,A,1864,7,4,0,159,0,47333624,53,GPU,0.220729,0.19029300000000002,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g, int h, int i, int j) {
  int k, l, m, n;
  double o[5][5], p[5][5], q[5][5], r[5][5];
  double s, t, u;
  double v, w, x, y;
  double z[5][5], aa[5];
  __global double(*ab)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  k = get_global_id(1) + 1 + i;
  l = get_global_id(0) + 1 + j;
  m = h - get_global_id(1) - get_global_id(0) - i - j + 1;
  if (k >= e - 1 || l >= (f - 1) || m < 1 || m >= (g - 1))
    return;

  ab = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;

  s = (4.0 / 3.0);
  t = 1.40e+00 * 1.00e-01 * 1.00e+00 * 1.40e+00;
  u = 1.00e-01 * 1.00e+00;

  w = ae[k][l][m];
  x = w * w;
  y = w * x;

  r[0][0] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[1][0] = 0.0;
  r[2][0] = 0.0;
  r[3][0] = 0.0;
  r[4][0] = 0.0;

  r[0][1] = 0.5 * 2.0 * (-(1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * (u * x * ac[k][l][m][1]);
  r[1][1] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[2][1] = 0.0;
  r[3][1] = 0.0;
  r[4][1] = 0.0;

  r[0][2] = 0.5 * 2.0 * (-(1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * (u * x * ac[k][l][m][2]);
  r[1][2] = 0.0;
  r[2][2] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[3][2] = 0.0;
  r[4][2] = 0.0;

  r[0][3] = 0.5 * 2.0 * (-(1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) * (u * x * ac[k][l][m][3]);
  r[1][3] = 0.0;
  r[2][3] = 0.0;
  r[3][3] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[4][3] = 0.0;

  r[0][4] = -0.5 * 2.0 * ((((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][1] * ac[k][l][m][1]) + ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][2] * ac[k][l][m][2]) +
                           ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t)) * (ac[k][l][m][3] * ac[k][l][m][3])) *
                              y +
                          ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * x * ac[k][l][m][4]);

  r[1][4] = 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * x * ac[k][l][m][1];
  r[2][4] = 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * x * ac[k][l][m][2];
  r[3][4] = 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t)) * x * ac[k][l][m][3];
  r[4][4] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * w + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);

  w = ae[k][l][m + 1];
  x = w * w;
  y = w * x;

  o[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[1][0] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  o[2][0] = 0.0;
  o[3][0] = 0.0;
  o[4][0] = 0.0;

  o[0][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m + 1][1] * w) * (ac[k][l][m + 1][1] * w) + 0.40e+00 * ad[k][l][m + 1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l][m + 1][1]);
  o[1][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l][m + 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[2][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][2] * w));
  o[3][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][3] * w));
  o[4][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  o[0][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m + 1][1] * ac[k][l][m + 1][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m + 1][2]);
  o[1][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][2] * w);
  o[2][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[3][2] = 0.0;
  o[4][2] = 0.0;

  o[0][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m + 1][1] * ac[k][l][m + 1][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m + 1][3]);
  o[1][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][3] * w);
  o[2][3] = 0.0;
  o[3][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[4][3] = 0.0;

  o[0][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l][m + 1] - 1.40e+00 * ac[k][l][m + 1][4]) * (ac[k][l][m + 1][1] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(s * u - t) * y * (ac[k][l][m + 1][1] * ac[k][l][m + 1][1]) - (u - t) * y * (ac[k][l][m + 1][2] * ac[k][l][m + 1][2]) - (u - t) * y * (ac[k][l][m + 1][3] * ac[k][l][m + 1][3]) - t * x * ac[k][l][m + 1][4]);
  o[1][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m + 1][4] * w) - 0.40e+00 * (ac[k][l][m + 1][1] * ac[k][l][m + 1][1] * x + ad[k][l][m + 1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l][m + 1][1];
  o[2][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][2] * ac[k][l][m + 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m + 1][2];
  o[3][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][3] * ac[k][l][m + 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m + 1][3];
  o[4][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m + 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  w = ae[k][l + 1][m];
  x = w * w;
  y = w * x;

  p[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[1][0] = 0.0;
  p[2][0] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  p[3][0] = 0.0;
  p[4][0] = 0.0;

  p[0][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l + 1][m][1] * ac[k][l + 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l + 1][m][1]);
  p[1][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[2][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][1] * w);
  p[3][1] = 0.0;
  p[4][1] = 0.0;

  p[0][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l + 1][m][2] * w) * (ac[k][l + 1][m][2] * w) + 0.40e+00 * (ad[k][l + 1][m] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l + 1][m][2]);
  p[1][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][1] * w));
  p[2][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l + 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[3][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][3] * w));
  p[4][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  p[0][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l + 1][m][2] * ac[k][l + 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l + 1][m][3]);
  p[1][3] = 0.0;
  p[2][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][3] * w);
  p[3][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[4][3] = 0.0;

  p[0][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l + 1][m] - 1.40e+00 * ac[k][l + 1][m][4]) * (ac[k][l + 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k][l + 1][m][1] * ac[k][l + 1][m][1]) - (s * u - t) * y * (ac[k][l + 1][m][2] * ac[k][l + 1][m][2]) - (u - t) * y * (ac[k][l + 1][m][3] * ac[k][l + 1][m][3]) - t * x * ac[k][l + 1][m][4]);
  p[1][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][1] * ac[k][l + 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l + 1][m][1];
  p[2][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l + 1][m][4] * w) - 0.40e+00 * (ad[k][l + 1][m] * w + ac[k][l + 1][m][2] * ac[k][l + 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l + 1][m][2];
  p[3][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][2] * ac[k][l + 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l + 1][m][3];
  p[4][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l + 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  w = ae[k + 1][l][m];
  x = w * w;
  y = w * x;

  q[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[1][0] = 0.0;
  q[2][0] = 0.0;
  q[3][0] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  q[4][0] = 0.0;

  q[0][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k + 1][l][m][1] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k + 1][l][m][1]);
  q[1][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * u * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[2][1] = 0.0;
  q[3][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][1] * w);
  q[4][1] = 0.0;

  q[0][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k + 1][l][m][2] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k + 1][l][m][2]);
  q[1][2] = 0.0;
  q[2][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[3][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][2] * w);
  q[4][2] = 0.0;

  q[0][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k + 1][l][m][3] * w) * (ac[k + 1][l][m][3] * w) + 0.40e+00 * (ad[k + 1][l][m] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k + 1][l][m][3]);
  q[1][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][1] * w));
  q[2][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][2] * w));
  q[3][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (2.0 - 0.40e+00) * (ac[k + 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[4][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  q[0][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k + 1][l][m] - 1.40e+00 * ac[k + 1][l][m][4]) * (ac[k + 1][l][m][3] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k + 1][l][m][1] * ac[k + 1][l][m][1]) - (u - t) * y * (ac[k + 1][l][m][2] * ac[k + 1][l][m][2]) - (s * u - t) * y * (ac[k + 1][l][m][3] * ac[k + 1][l][m][3]) - t * x * ac[k + 1][l][m][4]);
  q[1][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][1] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k + 1][l][m][1];
  q[2][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][2] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k + 1][l][m][2];
  q[3][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k + 1][l][m][4] * w) - 0.40e+00 * (ad[k + 1][l][m] * w + ac[k + 1][l][m][3] * ac[k + 1][l][m][3] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k + 1][l][m][3];
  q[4][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k + 1][l][m][3] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;

  for (n = 0; n < 5; n++) {
    aa[n] = 1.2 * (q[0][n] * ab[k + 1][l][m][0] + q[1][n] * ab[k + 1][l][m][1] + q[2][n] * ab[k + 1][l][m][2] + q[3][n] * ab[k + 1][l][m][3] + q[4][n] * ab[k + 1][l][m][4]);
  }
  for (n = 0; n < 5; n++) {
    aa[n] = aa[n] + 1.2 * (p[0][n] * ab[k][l + 1][m][0] + o[0][n] * ab[k][l][m + 1][0] + p[1][n] * ab[k][l + 1][m][1] + o[1][n] * ab[k][l][m + 1][1] + p[2][n] * ab[k][l + 1][m][2] + o[2][n] * ab[k][l][m + 1][2] + p[3][n] * ab[k][l + 1][m][3] + o[3][n] * ab[k][l][m + 1][3] + p[4][n] * ab[k][l + 1][m][4] + o[4][n] * ab[k][l][m + 1][4]);
  }

  for (n = 0; n < 5; n++) {
    z[n][0] = r[0][n];
    z[n][1] = r[1][n];
    z[n][2] = r[2][n];
    z[n][3] = r[3][n];
    z[n][4] = r[4][n];
  }

  w = 1.0 / z[0][0];
  v = w * z[1][0];
  z[1][1] = z[1][1] - v * z[0][1];
  z[1][2] = z[1][2] - v * z[0][2];
  z[1][3] = z[1][3] - v * z[0][3];
  z[1][4] = z[1][4] - v * z[0][4];
  aa[1] = aa[1] - aa[0] * v;

  v = w * z[2][0];
  z[2][1] = z[2][1] - v * z[0][1];
  z[2][2] = z[2][2] - v * z[0][2];
  z[2][3] = z[2][3] - v * z[0][3];
  z[2][4] = z[2][4] - v * z[0][4];
  aa[2] = aa[2] - aa[0] * v;

  v = w * z[3][0];
  z[3][1] = z[3][1] - v * z[0][1];
  z[3][2] = z[3][2] - v * z[0][2];
  z[3][3] = z[3][3] - v * z[0][3];
  z[3][4] = z[3][4] - v * z[0][4];
  aa[3] = aa[3] - aa[0] * v;

  v = w * z[4][0];
  z[4][1] = z[4][1] - v * z[0][1];
  z[4][2] = z[4][2] - v * z[0][2];
  z[4][3] = z[4][3] - v * z[0][3];
  z[4][4] = z[4][4] - v * z[0][4];
  aa[4] = aa[4] - aa[0] * v;

  w = 1.0 / z[1][1];
  v = w * z[2][1];
  z[2][2] = z[2][2] - v * z[1][2];
  z[2][3] = z[2][3] - v * z[1][3];
  z[2][4] = z[2][4] - v * z[1][4];
  aa[2] = aa[2] - aa[1] * v;

  v = w * z[3][1];
  z[3][2] = z[3][2] - v * z[1][2];
  z[3][3] = z[3][3] - v * z[1][3];
  z[3][4] = z[3][4] - v * z[1][4];
  aa[3] = aa[3] - aa[1] * v;

  v = w * z[4][1];
  z[4][2] = z[4][2] - v * z[1][2];
  z[4][3] = z[4][3] - v * z[1][3];
  z[4][4] = z[4][4] - v * z[1][4];
  aa[4] = aa[4] - aa[1] * v;

  w = 1.0 / z[2][2];
  v = w * z[3][2];
  z[3][3] = z[3][3] - v * z[2][3];
  z[3][4] = z[3][4] - v * z[2][4];
  aa[3] = aa[3] - aa[2] * v;

  v = w * z[4][2];
  z[4][3] = z[4][3] - v * z[2][3];
  z[4][4] = z[4][4] - v * z[2][4];
  aa[4] = aa[4] - aa[2] * v;

  w = 1.0 / z[3][3];
  v = w * z[4][3];
  z[4][4] = z[4][4] - v * z[3][4];
  aa[4] = aa[4] - aa[3] * v;

  aa[4] = aa[4] / z[4][4];

  aa[3] = aa[3] - z[3][4] * aa[4];
  aa[3] = aa[3] / z[3][3];

  aa[2] = aa[2] - z[2][3] * aa[3] - z[2][4] * aa[4];
  aa[2] = aa[2] / z[2][2];

  aa[1] = aa[1] - z[1][2] * aa[2] - z[1][3] * aa[3] - z[1][4] * aa[4];
  aa[1] = aa[1] / z[1][1];

  aa[0] = aa[0] - z[0][1] * aa[1] - z[0][2] * aa[2] - z[0][3] * aa[3] - z[0][4] * aa[4];
  aa[0] = aa[0] / z[0][0];

  ab[k][l][m][0] = ab[k][l][m][0] - aa[0];
  ab[k][l][m][1] = ab[k][l][m][1] - aa[1];
  ab[k][l][m][2] = ab[k][l][m][2] - aa[2];
  ab[k][l][m][3] = ab[k][l][m][3] - aa[3];
  ab[k][l][m][4] = ab[k][l][m][4] - aa[4];
}","[ 52  51  18 ...,  26   0 127]"
252,npb-3.3-LU-buts,B,1864,7,4,0,159,0,189794664,30,GPU,0.329086,0.225302,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g, int h, int i, int j) {
  int k, l, m, n;
  double o[5][5], p[5][5], q[5][5], r[5][5];
  double s, t, u;
  double v, w, x, y;
  double z[5][5], aa[5];
  __global double(*ab)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  k = get_global_id(1) + 1 + i;
  l = get_global_id(0) + 1 + j;
  m = h - get_global_id(1) - get_global_id(0) - i - j + 1;
  if (k >= e - 1 || l >= (f - 1) || m < 1 || m >= (g - 1))
    return;

  ab = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;

  s = (4.0 / 3.0);
  t = 1.40e+00 * 1.00e-01 * 1.00e+00 * 1.40e+00;
  u = 1.00e-01 * 1.00e+00;

  w = ae[k][l][m];
  x = w * w;
  y = w * x;

  r[0][0] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[1][0] = 0.0;
  r[2][0] = 0.0;
  r[3][0] = 0.0;
  r[4][0] = 0.0;

  r[0][1] = 0.5 * 2.0 * (-(1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * (u * x * ac[k][l][m][1]);
  r[1][1] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[2][1] = 0.0;
  r[3][1] = 0.0;
  r[4][1] = 0.0;

  r[0][2] = 0.5 * 2.0 * (-(1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * (u * x * ac[k][l][m][2]);
  r[1][2] = 0.0;
  r[2][2] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[3][2] = 0.0;
  r[4][2] = 0.0;

  r[0][3] = 0.5 * 2.0 * (-(1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) * (u * x * ac[k][l][m][3]);
  r[1][3] = 0.0;
  r[2][3] = 0.0;
  r[3][3] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[4][3] = 0.0;

  r[0][4] = -0.5 * 2.0 * ((((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][1] * ac[k][l][m][1]) + ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][2] * ac[k][l][m][2]) +
                           ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t)) * (ac[k][l][m][3] * ac[k][l][m][3])) *
                              y +
                          ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * x * ac[k][l][m][4]);

  r[1][4] = 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * x * ac[k][l][m][1];
  r[2][4] = 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * x * ac[k][l][m][2];
  r[3][4] = 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t)) * x * ac[k][l][m][3];
  r[4][4] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * w + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);

  w = ae[k][l][m + 1];
  x = w * w;
  y = w * x;

  o[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[1][0] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  o[2][0] = 0.0;
  o[3][0] = 0.0;
  o[4][0] = 0.0;

  o[0][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m + 1][1] * w) * (ac[k][l][m + 1][1] * w) + 0.40e+00 * ad[k][l][m + 1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l][m + 1][1]);
  o[1][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l][m + 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[2][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][2] * w));
  o[3][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][3] * w));
  o[4][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  o[0][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m + 1][1] * ac[k][l][m + 1][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m + 1][2]);
  o[1][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][2] * w);
  o[2][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[3][2] = 0.0;
  o[4][2] = 0.0;

  o[0][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m + 1][1] * ac[k][l][m + 1][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m + 1][3]);
  o[1][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][3] * w);
  o[2][3] = 0.0;
  o[3][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[4][3] = 0.0;

  o[0][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l][m + 1] - 1.40e+00 * ac[k][l][m + 1][4]) * (ac[k][l][m + 1][1] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(s * u - t) * y * (ac[k][l][m + 1][1] * ac[k][l][m + 1][1]) - (u - t) * y * (ac[k][l][m + 1][2] * ac[k][l][m + 1][2]) - (u - t) * y * (ac[k][l][m + 1][3] * ac[k][l][m + 1][3]) - t * x * ac[k][l][m + 1][4]);
  o[1][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m + 1][4] * w) - 0.40e+00 * (ac[k][l][m + 1][1] * ac[k][l][m + 1][1] * x + ad[k][l][m + 1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l][m + 1][1];
  o[2][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][2] * ac[k][l][m + 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m + 1][2];
  o[3][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][3] * ac[k][l][m + 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m + 1][3];
  o[4][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m + 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  w = ae[k][l + 1][m];
  x = w * w;
  y = w * x;

  p[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[1][0] = 0.0;
  p[2][0] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  p[3][0] = 0.0;
  p[4][0] = 0.0;

  p[0][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l + 1][m][1] * ac[k][l + 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l + 1][m][1]);
  p[1][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[2][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][1] * w);
  p[3][1] = 0.0;
  p[4][1] = 0.0;

  p[0][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l + 1][m][2] * w) * (ac[k][l + 1][m][2] * w) + 0.40e+00 * (ad[k][l + 1][m] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l + 1][m][2]);
  p[1][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][1] * w));
  p[2][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l + 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[3][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][3] * w));
  p[4][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  p[0][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l + 1][m][2] * ac[k][l + 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l + 1][m][3]);
  p[1][3] = 0.0;
  p[2][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][3] * w);
  p[3][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[4][3] = 0.0;

  p[0][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l + 1][m] - 1.40e+00 * ac[k][l + 1][m][4]) * (ac[k][l + 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k][l + 1][m][1] * ac[k][l + 1][m][1]) - (s * u - t) * y * (ac[k][l + 1][m][2] * ac[k][l + 1][m][2]) - (u - t) * y * (ac[k][l + 1][m][3] * ac[k][l + 1][m][3]) - t * x * ac[k][l + 1][m][4]);
  p[1][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][1] * ac[k][l + 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l + 1][m][1];
  p[2][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l + 1][m][4] * w) - 0.40e+00 * (ad[k][l + 1][m] * w + ac[k][l + 1][m][2] * ac[k][l + 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l + 1][m][2];
  p[3][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][2] * ac[k][l + 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l + 1][m][3];
  p[4][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l + 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  w = ae[k + 1][l][m];
  x = w * w;
  y = w * x;

  q[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[1][0] = 0.0;
  q[2][0] = 0.0;
  q[3][0] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  q[4][0] = 0.0;

  q[0][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k + 1][l][m][1] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k + 1][l][m][1]);
  q[1][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * u * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[2][1] = 0.0;
  q[3][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][1] * w);
  q[4][1] = 0.0;

  q[0][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k + 1][l][m][2] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k + 1][l][m][2]);
  q[1][2] = 0.0;
  q[2][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[3][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][2] * w);
  q[4][2] = 0.0;

  q[0][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k + 1][l][m][3] * w) * (ac[k + 1][l][m][3] * w) + 0.40e+00 * (ad[k + 1][l][m] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k + 1][l][m][3]);
  q[1][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][1] * w));
  q[2][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][2] * w));
  q[3][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (2.0 - 0.40e+00) * (ac[k + 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[4][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  q[0][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k + 1][l][m] - 1.40e+00 * ac[k + 1][l][m][4]) * (ac[k + 1][l][m][3] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k + 1][l][m][1] * ac[k + 1][l][m][1]) - (u - t) * y * (ac[k + 1][l][m][2] * ac[k + 1][l][m][2]) - (s * u - t) * y * (ac[k + 1][l][m][3] * ac[k + 1][l][m][3]) - t * x * ac[k + 1][l][m][4]);
  q[1][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][1] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k + 1][l][m][1];
  q[2][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][2] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k + 1][l][m][2];
  q[3][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k + 1][l][m][4] * w) - 0.40e+00 * (ad[k + 1][l][m] * w + ac[k + 1][l][m][3] * ac[k + 1][l][m][3] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k + 1][l][m][3];
  q[4][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k + 1][l][m][3] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;

  for (n = 0; n < 5; n++) {
    aa[n] = 1.2 * (q[0][n] * ab[k + 1][l][m][0] + q[1][n] * ab[k + 1][l][m][1] + q[2][n] * ab[k + 1][l][m][2] + q[3][n] * ab[k + 1][l][m][3] + q[4][n] * ab[k + 1][l][m][4]);
  }
  for (n = 0; n < 5; n++) {
    aa[n] = aa[n] + 1.2 * (p[0][n] * ab[k][l + 1][m][0] + o[0][n] * ab[k][l][m + 1][0] + p[1][n] * ab[k][l + 1][m][1] + o[1][n] * ab[k][l][m + 1][1] + p[2][n] * ab[k][l + 1][m][2] + o[2][n] * ab[k][l][m + 1][2] + p[3][n] * ab[k][l + 1][m][3] + o[3][n] * ab[k][l][m + 1][3] + p[4][n] * ab[k][l + 1][m][4] + o[4][n] * ab[k][l][m + 1][4]);
  }

  for (n = 0; n < 5; n++) {
    z[n][0] = r[0][n];
    z[n][1] = r[1][n];
    z[n][2] = r[2][n];
    z[n][3] = r[3][n];
    z[n][4] = r[4][n];
  }

  w = 1.0 / z[0][0];
  v = w * z[1][0];
  z[1][1] = z[1][1] - v * z[0][1];
  z[1][2] = z[1][2] - v * z[0][2];
  z[1][3] = z[1][3] - v * z[0][3];
  z[1][4] = z[1][4] - v * z[0][4];
  aa[1] = aa[1] - aa[0] * v;

  v = w * z[2][0];
  z[2][1] = z[2][1] - v * z[0][1];
  z[2][2] = z[2][2] - v * z[0][2];
  z[2][3] = z[2][3] - v * z[0][3];
  z[2][4] = z[2][4] - v * z[0][4];
  aa[2] = aa[2] - aa[0] * v;

  v = w * z[3][0];
  z[3][1] = z[3][1] - v * z[0][1];
  z[3][2] = z[3][2] - v * z[0][2];
  z[3][3] = z[3][3] - v * z[0][3];
  z[3][4] = z[3][4] - v * z[0][4];
  aa[3] = aa[3] - aa[0] * v;

  v = w * z[4][0];
  z[4][1] = z[4][1] - v * z[0][1];
  z[4][2] = z[4][2] - v * z[0][2];
  z[4][3] = z[4][3] - v * z[0][3];
  z[4][4] = z[4][4] - v * z[0][4];
  aa[4] = aa[4] - aa[0] * v;

  w = 1.0 / z[1][1];
  v = w * z[2][1];
  z[2][2] = z[2][2] - v * z[1][2];
  z[2][3] = z[2][3] - v * z[1][3];
  z[2][4] = z[2][4] - v * z[1][4];
  aa[2] = aa[2] - aa[1] * v;

  v = w * z[3][1];
  z[3][2] = z[3][2] - v * z[1][2];
  z[3][3] = z[3][3] - v * z[1][3];
  z[3][4] = z[3][4] - v * z[1][4];
  aa[3] = aa[3] - aa[1] * v;

  v = w * z[4][1];
  z[4][2] = z[4][2] - v * z[1][2];
  z[4][3] = z[4][3] - v * z[1][3];
  z[4][4] = z[4][4] - v * z[1][4];
  aa[4] = aa[4] - aa[1] * v;

  w = 1.0 / z[2][2];
  v = w * z[3][2];
  z[3][3] = z[3][3] - v * z[2][3];
  z[3][4] = z[3][4] - v * z[2][4];
  aa[3] = aa[3] - aa[2] * v;

  v = w * z[4][2];
  z[4][3] = z[4][3] - v * z[2][3];
  z[4][4] = z[4][4] - v * z[2][4];
  aa[4] = aa[4] - aa[2] * v;

  w = 1.0 / z[3][3];
  v = w * z[4][3];
  z[4][4] = z[4][4] - v * z[3][4];
  aa[4] = aa[4] - aa[3] * v;

  aa[4] = aa[4] / z[4][4];

  aa[3] = aa[3] - z[3][4] * aa[4];
  aa[3] = aa[3] / z[3][3];

  aa[2] = aa[2] - z[2][3] * aa[3] - z[2][4] * aa[4];
  aa[2] = aa[2] / z[2][2];

  aa[1] = aa[1] - z[1][2] * aa[2] - z[1][3] * aa[3] - z[1][4] * aa[4];
  aa[1] = aa[1] / z[1][1];

  aa[0] = aa[0] - z[0][1] * aa[1] - z[0][2] * aa[2] - z[0][3] * aa[3] - z[0][4] * aa[4];
  aa[0] = aa[0] / z[0][0];

  ab[k][l][m][0] = ab[k][l][m][0] - aa[0];
  ab[k][l][m][1] = ab[k][l][m][1] - aa[1];
  ab[k][l][m][2] = ab[k][l][m][2] - aa[2];
  ab[k][l][m][3] = ab[k][l][m][3] - aa[3];
  ab[k][l][m][4] = ab[k][l][m][4] - aa[4];
}","[ 52  51  18 ...,  26   0 127]"
253,npb-3.3-LU-buts,C,1864,7,4,0,159,0,755867256,60,GPU,0.7239869999999999,0.285554,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g, int h, int i, int j) {
  int k, l, m, n;
  double o[5][5], p[5][5], q[5][5], r[5][5];
  double s, t, u;
  double v, w, x, y;
  double z[5][5], aa[5];
  __global double(*ab)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  k = get_global_id(1) + 1 + i;
  l = get_global_id(0) + 1 + j;
  m = h - get_global_id(1) - get_global_id(0) - i - j + 1;
  if (k >= e - 1 || l >= (f - 1) || m < 1 || m >= (g - 1))
    return;

  ab = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;

  s = (4.0 / 3.0);
  t = 1.40e+00 * 1.00e-01 * 1.00e+00 * 1.40e+00;
  u = 1.00e-01 * 1.00e+00;

  w = ae[k][l][m];
  x = w * w;
  y = w * x;

  r[0][0] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[1][0] = 0.0;
  r[2][0] = 0.0;
  r[3][0] = 0.0;
  r[4][0] = 0.0;

  r[0][1] = 0.5 * 2.0 * (-(1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * (u * x * ac[k][l][m][1]);
  r[1][1] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[2][1] = 0.0;
  r[3][1] = 0.0;
  r[4][1] = 0.0;

  r[0][2] = 0.5 * 2.0 * (-(1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * (u * x * ac[k][l][m][2]);
  r[1][2] = 0.0;
  r[2][2] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[3][2] = 0.0;
  r[4][2] = 0.0;

  r[0][3] = 0.5 * 2.0 * (-(1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) * (u * x * ac[k][l][m][3]);
  r[1][3] = 0.0;
  r[2][3] = 0.0;
  r[3][3] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[4][3] = 0.0;

  r[0][4] = -0.5 * 2.0 * ((((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][1] * ac[k][l][m][1]) + ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][2] * ac[k][l][m][2]) +
                           ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t)) * (ac[k][l][m][3] * ac[k][l][m][3])) *
                              y +
                          ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * x * ac[k][l][m][4]);

  r[1][4] = 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * x * ac[k][l][m][1];
  r[2][4] = 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * x * ac[k][l][m][2];
  r[3][4] = 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t)) * x * ac[k][l][m][3];
  r[4][4] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * w + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);

  w = ae[k][l][m + 1];
  x = w * w;
  y = w * x;

  o[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[1][0] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  o[2][0] = 0.0;
  o[3][0] = 0.0;
  o[4][0] = 0.0;

  o[0][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m + 1][1] * w) * (ac[k][l][m + 1][1] * w) + 0.40e+00 * ad[k][l][m + 1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l][m + 1][1]);
  o[1][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l][m + 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[2][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][2] * w));
  o[3][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][3] * w));
  o[4][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  o[0][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m + 1][1] * ac[k][l][m + 1][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m + 1][2]);
  o[1][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][2] * w);
  o[2][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[3][2] = 0.0;
  o[4][2] = 0.0;

  o[0][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m + 1][1] * ac[k][l][m + 1][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m + 1][3]);
  o[1][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][3] * w);
  o[2][3] = 0.0;
  o[3][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[4][3] = 0.0;

  o[0][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l][m + 1] - 1.40e+00 * ac[k][l][m + 1][4]) * (ac[k][l][m + 1][1] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(s * u - t) * y * (ac[k][l][m + 1][1] * ac[k][l][m + 1][1]) - (u - t) * y * (ac[k][l][m + 1][2] * ac[k][l][m + 1][2]) - (u - t) * y * (ac[k][l][m + 1][3] * ac[k][l][m + 1][3]) - t * x * ac[k][l][m + 1][4]);
  o[1][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m + 1][4] * w) - 0.40e+00 * (ac[k][l][m + 1][1] * ac[k][l][m + 1][1] * x + ad[k][l][m + 1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l][m + 1][1];
  o[2][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][2] * ac[k][l][m + 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m + 1][2];
  o[3][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][3] * ac[k][l][m + 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m + 1][3];
  o[4][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m + 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  w = ae[k][l + 1][m];
  x = w * w;
  y = w * x;

  p[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[1][0] = 0.0;
  p[2][0] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  p[3][0] = 0.0;
  p[4][0] = 0.0;

  p[0][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l + 1][m][1] * ac[k][l + 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l + 1][m][1]);
  p[1][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[2][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][1] * w);
  p[3][1] = 0.0;
  p[4][1] = 0.0;

  p[0][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l + 1][m][2] * w) * (ac[k][l + 1][m][2] * w) + 0.40e+00 * (ad[k][l + 1][m] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l + 1][m][2]);
  p[1][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][1] * w));
  p[2][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l + 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[3][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][3] * w));
  p[4][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  p[0][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l + 1][m][2] * ac[k][l + 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l + 1][m][3]);
  p[1][3] = 0.0;
  p[2][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][3] * w);
  p[3][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[4][3] = 0.0;

  p[0][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l + 1][m] - 1.40e+00 * ac[k][l + 1][m][4]) * (ac[k][l + 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k][l + 1][m][1] * ac[k][l + 1][m][1]) - (s * u - t) * y * (ac[k][l + 1][m][2] * ac[k][l + 1][m][2]) - (u - t) * y * (ac[k][l + 1][m][3] * ac[k][l + 1][m][3]) - t * x * ac[k][l + 1][m][4]);
  p[1][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][1] * ac[k][l + 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l + 1][m][1];
  p[2][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l + 1][m][4] * w) - 0.40e+00 * (ad[k][l + 1][m] * w + ac[k][l + 1][m][2] * ac[k][l + 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l + 1][m][2];
  p[3][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][2] * ac[k][l + 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l + 1][m][3];
  p[4][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l + 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  w = ae[k + 1][l][m];
  x = w * w;
  y = w * x;

  q[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[1][0] = 0.0;
  q[2][0] = 0.0;
  q[3][0] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  q[4][0] = 0.0;

  q[0][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k + 1][l][m][1] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k + 1][l][m][1]);
  q[1][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * u * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[2][1] = 0.0;
  q[3][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][1] * w);
  q[4][1] = 0.0;

  q[0][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k + 1][l][m][2] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k + 1][l][m][2]);
  q[1][2] = 0.0;
  q[2][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[3][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][2] * w);
  q[4][2] = 0.0;

  q[0][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k + 1][l][m][3] * w) * (ac[k + 1][l][m][3] * w) + 0.40e+00 * (ad[k + 1][l][m] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k + 1][l][m][3]);
  q[1][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][1] * w));
  q[2][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][2] * w));
  q[3][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (2.0 - 0.40e+00) * (ac[k + 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[4][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  q[0][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k + 1][l][m] - 1.40e+00 * ac[k + 1][l][m][4]) * (ac[k + 1][l][m][3] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k + 1][l][m][1] * ac[k + 1][l][m][1]) - (u - t) * y * (ac[k + 1][l][m][2] * ac[k + 1][l][m][2]) - (s * u - t) * y * (ac[k + 1][l][m][3] * ac[k + 1][l][m][3]) - t * x * ac[k + 1][l][m][4]);
  q[1][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][1] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k + 1][l][m][1];
  q[2][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][2] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k + 1][l][m][2];
  q[3][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k + 1][l][m][4] * w) - 0.40e+00 * (ad[k + 1][l][m] * w + ac[k + 1][l][m][3] * ac[k + 1][l][m][3] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k + 1][l][m][3];
  q[4][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k + 1][l][m][3] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;

  for (n = 0; n < 5; n++) {
    aa[n] = 1.2 * (q[0][n] * ab[k + 1][l][m][0] + q[1][n] * ab[k + 1][l][m][1] + q[2][n] * ab[k + 1][l][m][2] + q[3][n] * ab[k + 1][l][m][3] + q[4][n] * ab[k + 1][l][m][4]);
  }
  for (n = 0; n < 5; n++) {
    aa[n] = aa[n] + 1.2 * (p[0][n] * ab[k][l + 1][m][0] + o[0][n] * ab[k][l][m + 1][0] + p[1][n] * ab[k][l + 1][m][1] + o[1][n] * ab[k][l][m + 1][1] + p[2][n] * ab[k][l + 1][m][2] + o[2][n] * ab[k][l][m + 1][2] + p[3][n] * ab[k][l + 1][m][3] + o[3][n] * ab[k][l][m + 1][3] + p[4][n] * ab[k][l + 1][m][4] + o[4][n] * ab[k][l][m + 1][4]);
  }

  for (n = 0; n < 5; n++) {
    z[n][0] = r[0][n];
    z[n][1] = r[1][n];
    z[n][2] = r[2][n];
    z[n][3] = r[3][n];
    z[n][4] = r[4][n];
  }

  w = 1.0 / z[0][0];
  v = w * z[1][0];
  z[1][1] = z[1][1] - v * z[0][1];
  z[1][2] = z[1][2] - v * z[0][2];
  z[1][3] = z[1][3] - v * z[0][3];
  z[1][4] = z[1][4] - v * z[0][4];
  aa[1] = aa[1] - aa[0] * v;

  v = w * z[2][0];
  z[2][1] = z[2][1] - v * z[0][1];
  z[2][2] = z[2][2] - v * z[0][2];
  z[2][3] = z[2][3] - v * z[0][3];
  z[2][4] = z[2][4] - v * z[0][4];
  aa[2] = aa[2] - aa[0] * v;

  v = w * z[3][0];
  z[3][1] = z[3][1] - v * z[0][1];
  z[3][2] = z[3][2] - v * z[0][2];
  z[3][3] = z[3][3] - v * z[0][3];
  z[3][4] = z[3][4] - v * z[0][4];
  aa[3] = aa[3] - aa[0] * v;

  v = w * z[4][0];
  z[4][1] = z[4][1] - v * z[0][1];
  z[4][2] = z[4][2] - v * z[0][2];
  z[4][3] = z[4][3] - v * z[0][3];
  z[4][4] = z[4][4] - v * z[0][4];
  aa[4] = aa[4] - aa[0] * v;

  w = 1.0 / z[1][1];
  v = w * z[2][1];
  z[2][2] = z[2][2] - v * z[1][2];
  z[2][3] = z[2][3] - v * z[1][3];
  z[2][4] = z[2][4] - v * z[1][4];
  aa[2] = aa[2] - aa[1] * v;

  v = w * z[3][1];
  z[3][2] = z[3][2] - v * z[1][2];
  z[3][3] = z[3][3] - v * z[1][3];
  z[3][4] = z[3][4] - v * z[1][4];
  aa[3] = aa[3] - aa[1] * v;

  v = w * z[4][1];
  z[4][2] = z[4][2] - v * z[1][2];
  z[4][3] = z[4][3] - v * z[1][3];
  z[4][4] = z[4][4] - v * z[1][4];
  aa[4] = aa[4] - aa[1] * v;

  w = 1.0 / z[2][2];
  v = w * z[3][2];
  z[3][3] = z[3][3] - v * z[2][3];
  z[3][4] = z[3][4] - v * z[2][4];
  aa[3] = aa[3] - aa[2] * v;

  v = w * z[4][2];
  z[4][3] = z[4][3] - v * z[2][3];
  z[4][4] = z[4][4] - v * z[2][4];
  aa[4] = aa[4] - aa[2] * v;

  w = 1.0 / z[3][3];
  v = w * z[4][3];
  z[4][4] = z[4][4] - v * z[3][4];
  aa[4] = aa[4] - aa[3] * v;

  aa[4] = aa[4] / z[4][4];

  aa[3] = aa[3] - z[3][4] * aa[4];
  aa[3] = aa[3] / z[3][3];

  aa[2] = aa[2] - z[2][3] * aa[3] - z[2][4] * aa[4];
  aa[2] = aa[2] / z[2][2];

  aa[1] = aa[1] - z[1][2] * aa[2] - z[1][3] * aa[3] - z[1][4] * aa[4];
  aa[1] = aa[1] / z[1][1];

  aa[0] = aa[0] - z[0][1] * aa[1] - z[0][2] * aa[2] - z[0][3] * aa[3] - z[0][4] * aa[4];
  aa[0] = aa[0] / z[0][0];

  ab[k][l][m][0] = ab[k][l][m][0] - aa[0];
  ab[k][l][m][1] = ab[k][l][m][1] - aa[1];
  ab[k][l][m][2] = ab[k][l][m][2] - aa[2];
  ab[k][l][m][3] = ab[k][l][m][3] - aa[3];
  ab[k][l][m][4] = ab[k][l][m][4] - aa[4];
}","[ 52  51  18 ...,  26   0 127]"
254,npb-3.3-LU-buts,S,1864,7,4,0,159,0,349464,40,CPU,0.10531700000000001,0.170098,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g, int h, int i, int j) {
  int k, l, m, n;
  double o[5][5], p[5][5], q[5][5], r[5][5];
  double s, t, u;
  double v, w, x, y;
  double z[5][5], aa[5];
  __global double(*ab)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  k = get_global_id(1) + 1 + i;
  l = get_global_id(0) + 1 + j;
  m = h - get_global_id(1) - get_global_id(0) - i - j + 1;
  if (k >= e - 1 || l >= (f - 1) || m < 1 || m >= (g - 1))
    return;

  ab = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;

  s = (4.0 / 3.0);
  t = 1.40e+00 * 1.00e-01 * 1.00e+00 * 1.40e+00;
  u = 1.00e-01 * 1.00e+00;

  w = ae[k][l][m];
  x = w * w;
  y = w * x;

  r[0][0] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[1][0] = 0.0;
  r[2][0] = 0.0;
  r[3][0] = 0.0;
  r[4][0] = 0.0;

  r[0][1] = 0.5 * 2.0 * (-(1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * (u * x * ac[k][l][m][1]);
  r[1][1] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[2][1] = 0.0;
  r[3][1] = 0.0;
  r[4][1] = 0.0;

  r[0][2] = 0.5 * 2.0 * (-(1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * (u * x * ac[k][l][m][2]);
  r[1][2] = 0.0;
  r[2][2] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[3][2] = 0.0;
  r[4][2] = 0.0;

  r[0][3] = 0.5 * 2.0 * (-(1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) * (u * x * ac[k][l][m][3]);
  r[1][3] = 0.0;
  r[2][3] = 0.0;
  r[3][3] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[4][3] = 0.0;

  r[0][4] = -0.5 * 2.0 * ((((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][1] * ac[k][l][m][1]) + ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][2] * ac[k][l][m][2]) +
                           ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t)) * (ac[k][l][m][3] * ac[k][l][m][3])) *
                              y +
                          ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * x * ac[k][l][m][4]);

  r[1][4] = 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * x * ac[k][l][m][1];
  r[2][4] = 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * x * ac[k][l][m][2];
  r[3][4] = 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t)) * x * ac[k][l][m][3];
  r[4][4] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * w + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);

  w = ae[k][l][m + 1];
  x = w * w;
  y = w * x;

  o[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[1][0] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  o[2][0] = 0.0;
  o[3][0] = 0.0;
  o[4][0] = 0.0;

  o[0][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m + 1][1] * w) * (ac[k][l][m + 1][1] * w) + 0.40e+00 * ad[k][l][m + 1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l][m + 1][1]);
  o[1][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l][m + 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[2][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][2] * w));
  o[3][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][3] * w));
  o[4][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  o[0][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m + 1][1] * ac[k][l][m + 1][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m + 1][2]);
  o[1][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][2] * w);
  o[2][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[3][2] = 0.0;
  o[4][2] = 0.0;

  o[0][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m + 1][1] * ac[k][l][m + 1][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m + 1][3]);
  o[1][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][3] * w);
  o[2][3] = 0.0;
  o[3][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[4][3] = 0.0;

  o[0][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l][m + 1] - 1.40e+00 * ac[k][l][m + 1][4]) * (ac[k][l][m + 1][1] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(s * u - t) * y * (ac[k][l][m + 1][1] * ac[k][l][m + 1][1]) - (u - t) * y * (ac[k][l][m + 1][2] * ac[k][l][m + 1][2]) - (u - t) * y * (ac[k][l][m + 1][3] * ac[k][l][m + 1][3]) - t * x * ac[k][l][m + 1][4]);
  o[1][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m + 1][4] * w) - 0.40e+00 * (ac[k][l][m + 1][1] * ac[k][l][m + 1][1] * x + ad[k][l][m + 1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l][m + 1][1];
  o[2][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][2] * ac[k][l][m + 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m + 1][2];
  o[3][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][3] * ac[k][l][m + 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m + 1][3];
  o[4][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m + 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  w = ae[k][l + 1][m];
  x = w * w;
  y = w * x;

  p[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[1][0] = 0.0;
  p[2][0] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  p[3][0] = 0.0;
  p[4][0] = 0.0;

  p[0][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l + 1][m][1] * ac[k][l + 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l + 1][m][1]);
  p[1][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[2][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][1] * w);
  p[3][1] = 0.0;
  p[4][1] = 0.0;

  p[0][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l + 1][m][2] * w) * (ac[k][l + 1][m][2] * w) + 0.40e+00 * (ad[k][l + 1][m] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l + 1][m][2]);
  p[1][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][1] * w));
  p[2][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l + 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[3][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][3] * w));
  p[4][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  p[0][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l + 1][m][2] * ac[k][l + 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l + 1][m][3]);
  p[1][3] = 0.0;
  p[2][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][3] * w);
  p[3][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[4][3] = 0.0;

  p[0][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l + 1][m] - 1.40e+00 * ac[k][l + 1][m][4]) * (ac[k][l + 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k][l + 1][m][1] * ac[k][l + 1][m][1]) - (s * u - t) * y * (ac[k][l + 1][m][2] * ac[k][l + 1][m][2]) - (u - t) * y * (ac[k][l + 1][m][3] * ac[k][l + 1][m][3]) - t * x * ac[k][l + 1][m][4]);
  p[1][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][1] * ac[k][l + 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l + 1][m][1];
  p[2][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l + 1][m][4] * w) - 0.40e+00 * (ad[k][l + 1][m] * w + ac[k][l + 1][m][2] * ac[k][l + 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l + 1][m][2];
  p[3][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][2] * ac[k][l + 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l + 1][m][3];
  p[4][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l + 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  w = ae[k + 1][l][m];
  x = w * w;
  y = w * x;

  q[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[1][0] = 0.0;
  q[2][0] = 0.0;
  q[3][0] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  q[4][0] = 0.0;

  q[0][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k + 1][l][m][1] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k + 1][l][m][1]);
  q[1][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * u * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[2][1] = 0.0;
  q[3][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][1] * w);
  q[4][1] = 0.0;

  q[0][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k + 1][l][m][2] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k + 1][l][m][2]);
  q[1][2] = 0.0;
  q[2][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[3][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][2] * w);
  q[4][2] = 0.0;

  q[0][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k + 1][l][m][3] * w) * (ac[k + 1][l][m][3] * w) + 0.40e+00 * (ad[k + 1][l][m] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k + 1][l][m][3]);
  q[1][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][1] * w));
  q[2][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][2] * w));
  q[3][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (2.0 - 0.40e+00) * (ac[k + 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[4][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  q[0][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k + 1][l][m] - 1.40e+00 * ac[k + 1][l][m][4]) * (ac[k + 1][l][m][3] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k + 1][l][m][1] * ac[k + 1][l][m][1]) - (u - t) * y * (ac[k + 1][l][m][2] * ac[k + 1][l][m][2]) - (s * u - t) * y * (ac[k + 1][l][m][3] * ac[k + 1][l][m][3]) - t * x * ac[k + 1][l][m][4]);
  q[1][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][1] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k + 1][l][m][1];
  q[2][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][2] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k + 1][l][m][2];
  q[3][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k + 1][l][m][4] * w) - 0.40e+00 * (ad[k + 1][l][m] * w + ac[k + 1][l][m][3] * ac[k + 1][l][m][3] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k + 1][l][m][3];
  q[4][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k + 1][l][m][3] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;

  for (n = 0; n < 5; n++) {
    aa[n] = 1.2 * (q[0][n] * ab[k + 1][l][m][0] + q[1][n] * ab[k + 1][l][m][1] + q[2][n] * ab[k + 1][l][m][2] + q[3][n] * ab[k + 1][l][m][3] + q[4][n] * ab[k + 1][l][m][4]);
  }
  for (n = 0; n < 5; n++) {
    aa[n] = aa[n] + 1.2 * (p[0][n] * ab[k][l + 1][m][0] + o[0][n] * ab[k][l][m + 1][0] + p[1][n] * ab[k][l + 1][m][1] + o[1][n] * ab[k][l][m + 1][1] + p[2][n] * ab[k][l + 1][m][2] + o[2][n] * ab[k][l][m + 1][2] + p[3][n] * ab[k][l + 1][m][3] + o[3][n] * ab[k][l][m + 1][3] + p[4][n] * ab[k][l + 1][m][4] + o[4][n] * ab[k][l][m + 1][4]);
  }

  for (n = 0; n < 5; n++) {
    z[n][0] = r[0][n];
    z[n][1] = r[1][n];
    z[n][2] = r[2][n];
    z[n][3] = r[3][n];
    z[n][4] = r[4][n];
  }

  w = 1.0 / z[0][0];
  v = w * z[1][0];
  z[1][1] = z[1][1] - v * z[0][1];
  z[1][2] = z[1][2] - v * z[0][2];
  z[1][3] = z[1][3] - v * z[0][3];
  z[1][4] = z[1][4] - v * z[0][4];
  aa[1] = aa[1] - aa[0] * v;

  v = w * z[2][0];
  z[2][1] = z[2][1] - v * z[0][1];
  z[2][2] = z[2][2] - v * z[0][2];
  z[2][3] = z[2][3] - v * z[0][3];
  z[2][4] = z[2][4] - v * z[0][4];
  aa[2] = aa[2] - aa[0] * v;

  v = w * z[3][0];
  z[3][1] = z[3][1] - v * z[0][1];
  z[3][2] = z[3][2] - v * z[0][2];
  z[3][3] = z[3][3] - v * z[0][3];
  z[3][4] = z[3][4] - v * z[0][4];
  aa[3] = aa[3] - aa[0] * v;

  v = w * z[4][0];
  z[4][1] = z[4][1] - v * z[0][1];
  z[4][2] = z[4][2] - v * z[0][2];
  z[4][3] = z[4][3] - v * z[0][3];
  z[4][4] = z[4][4] - v * z[0][4];
  aa[4] = aa[4] - aa[0] * v;

  w = 1.0 / z[1][1];
  v = w * z[2][1];
  z[2][2] = z[2][2] - v * z[1][2];
  z[2][3] = z[2][3] - v * z[1][3];
  z[2][4] = z[2][4] - v * z[1][4];
  aa[2] = aa[2] - aa[1] * v;

  v = w * z[3][1];
  z[3][2] = z[3][2] - v * z[1][2];
  z[3][3] = z[3][3] - v * z[1][3];
  z[3][4] = z[3][4] - v * z[1][4];
  aa[3] = aa[3] - aa[1] * v;

  v = w * z[4][1];
  z[4][2] = z[4][2] - v * z[1][2];
  z[4][3] = z[4][3] - v * z[1][3];
  z[4][4] = z[4][4] - v * z[1][4];
  aa[4] = aa[4] - aa[1] * v;

  w = 1.0 / z[2][2];
  v = w * z[3][2];
  z[3][3] = z[3][3] - v * z[2][3];
  z[3][4] = z[3][4] - v * z[2][4];
  aa[3] = aa[3] - aa[2] * v;

  v = w * z[4][2];
  z[4][3] = z[4][3] - v * z[2][3];
  z[4][4] = z[4][4] - v * z[2][4];
  aa[4] = aa[4] - aa[2] * v;

  w = 1.0 / z[3][3];
  v = w * z[4][3];
  z[4][4] = z[4][4] - v * z[3][4];
  aa[4] = aa[4] - aa[3] * v;

  aa[4] = aa[4] / z[4][4];

  aa[3] = aa[3] - z[3][4] * aa[4];
  aa[3] = aa[3] / z[3][3];

  aa[2] = aa[2] - z[2][3] * aa[3] - z[2][4] * aa[4];
  aa[2] = aa[2] / z[2][2];

  aa[1] = aa[1] - z[1][2] * aa[2] - z[1][3] * aa[3] - z[1][4] * aa[4];
  aa[1] = aa[1] / z[1][1];

  aa[0] = aa[0] - z[0][1] * aa[1] - z[0][2] * aa[2] - z[0][3] * aa[3] - z[0][4] * aa[4];
  aa[0] = aa[0] / z[0][0];

  ab[k][l][m][0] = ab[k][l][m][0] - aa[0];
  ab[k][l][m][1] = ab[k][l][m][1] - aa[1];
  ab[k][l][m][2] = ab[k][l][m][2] - aa[2];
  ab[k][l][m][3] = ab[k][l][m][3] - aa[3];
  ab[k][l][m][4] = ab[k][l][m][4] - aa[4];
}","[ 52  51  18 ...,  26   0 127]"
255,npb-3.3-LU-buts,W,1864,7,4,0,159,0,6346800,52,CPU,0.140516,0.17689000000000002,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g, int h, int i, int j) {
  int k, l, m, n;
  double o[5][5], p[5][5], q[5][5], r[5][5];
  double s, t, u;
  double v, w, x, y;
  double z[5][5], aa[5];
  __global double(*ab)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  k = get_global_id(1) + 1 + i;
  l = get_global_id(0) + 1 + j;
  m = h - get_global_id(1) - get_global_id(0) - i - j + 1;
  if (k >= e - 1 || l >= (f - 1) || m < 1 || m >= (g - 1))
    return;

  ab = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;

  s = (4.0 / 3.0);
  t = 1.40e+00 * 1.00e-01 * 1.00e+00 * 1.40e+00;
  u = 1.00e-01 * 1.00e+00;

  w = ae[k][l][m];
  x = w * w;
  y = w * x;

  r[0][0] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[1][0] = 0.0;
  r[2][0] = 0.0;
  r[3][0] = 0.0;
  r[4][0] = 0.0;

  r[0][1] = 0.5 * 2.0 * (-(1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * (u * x * ac[k][l][m][1]);
  r[1][1] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[2][1] = 0.0;
  r[3][1] = 0.0;
  r[4][1] = 0.0;

  r[0][2] = 0.5 * 2.0 * (-(1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * (u * x * ac[k][l][m][2]);
  r[1][2] = 0.0;
  r[2][2] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[3][2] = 0.0;
  r[4][2] = 0.0;

  r[0][3] = 0.5 * 2.0 * (-(1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) - (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) * (u * x * ac[k][l][m][3]);
  r[1][3] = 0.0;
  r[2][3] = 0.0;
  r[3][3] = 1.0 + 0.5 * 2.0 * u * w * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * s) + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);
  r[4][3] = 0.0;

  r[0][4] = -0.5 * 2.0 * ((((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][1] * ac[k][l][m][1]) + ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * (ac[k][l][m][2] * ac[k][l][m][2]) +
                           ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t)) * (ac[k][l][m][3] * ac[k][l][m][3])) *
                              y +
                          ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * x * ac[k][l][m][4]);

  r[1][4] = 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * x * ac[k][l][m][1];
  r[2][4] = 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t)) * x * ac[k][l][m][2];
  r[3][4] = 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t)) * x * ac[k][l][m][3];
  r[4][4] = 1.0 + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1))))) * t * w + 0.5 * 2.0 * ((1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75 + (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00);

  w = ae[k][l][m + 1];
  x = w * w;
  y = w * x;

  o[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[1][0] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  o[2][0] = 0.0;
  o[3][0] = 0.0;
  o[4][0] = 0.0;

  o[0][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m + 1][1] * w) * (ac[k][l][m + 1][1] * w) + 0.40e+00 * ad[k][l][m + 1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l][m + 1][1]);
  o[1][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l][m + 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[2][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][2] * w));
  o[3][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][3] * w));
  o[4][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  o[0][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m + 1][1] * ac[k][l][m + 1][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m + 1][2]);
  o[1][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][2] * w);
  o[2][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[3][2] = 0.0;
  o[4][2] = 0.0;

  o[0][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l][m + 1][1] * ac[k][l][m + 1][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l][m + 1][3]);
  o[1][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][3] * w);
  o[2][3] = 0.0;
  o[3][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l][m + 1][1] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  o[4][3] = 0.0;

  o[0][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l][m + 1] - 1.40e+00 * ac[k][l][m + 1][4]) * (ac[k][l][m + 1][1] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(s * u - t) * y * (ac[k][l][m + 1][1] * ac[k][l][m + 1][1]) - (u - t) * y * (ac[k][l][m + 1][2] * ac[k][l][m + 1][2]) - (u - t) * y * (ac[k][l][m + 1][3] * ac[k][l][m + 1][3]) - t * x * ac[k][l][m + 1][4]);
  o[1][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m + 1][4] * w) - 0.40e+00 * (ac[k][l][m + 1][1] * ac[k][l][m + 1][1] * x + ad[k][l][m + 1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l][m + 1][1];
  o[2][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][2] * ac[k][l][m + 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m + 1][2];
  o[3][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l][m + 1][3] * ac[k][l][m + 1][1]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l][m + 1][3];
  o[4][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l][m + 1][1] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  w = ae[k][l + 1][m];
  x = w * w;
  y = w * x;

  p[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[1][0] = 0.0;
  p[2][0] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  p[3][0] = 0.0;
  p[4][0] = 0.0;

  p[0][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l + 1][m][1] * ac[k][l + 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l + 1][m][1]);
  p[1][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[2][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][1] * w);
  p[3][1] = 0.0;
  p[4][1] = 0.0;

  p[0][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l + 1][m][2] * w) * (ac[k][l + 1][m][2] * w) + 0.40e+00 * (ad[k][l + 1][m] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k][l + 1][m][2]);
  p[1][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][1] * w));
  p[2][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((2.0 - 0.40e+00) * (ac[k][l + 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[3][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][3] * w));
  p[4][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  p[0][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k][l + 1][m][2] * ac[k][l + 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k][l + 1][m][3]);
  p[1][3] = 0.0;
  p[2][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][3] * w);
  p[3][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k][l + 1][m][2] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;
  p[4][3] = 0.0;

  p[0][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k][l + 1][m] - 1.40e+00 * ac[k][l + 1][m][4]) * (ac[k][l + 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k][l + 1][m][1] * ac[k][l + 1][m][1]) - (s * u - t) * y * (ac[k][l + 1][m][2] * ac[k][l + 1][m][2]) - (u - t) * y * (ac[k][l + 1][m][3] * ac[k][l + 1][m][3]) - t * x * ac[k][l + 1][m][4]);
  p[1][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][1] * ac[k][l + 1][m][2]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l + 1][m][1];
  p[2][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l + 1][m][4] * w) - 0.40e+00 * (ad[k][l + 1][m] * w + ac[k][l + 1][m][2] * ac[k][l + 1][m][2] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k][l + 1][m][2];
  p[3][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k][l + 1][m][2] * ac[k][l + 1][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k][l + 1][m][3];
  p[4][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k][l + 1][m][2] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 0.75;

  w = ae[k + 1][l][m];
  x = w * w;
  y = w * x;

  q[0][0] = -0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[1][0] = 0.0;
  q[2][0] = 0.0;
  q[3][0] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1))));
  q[4][0] = 0.0;

  q[0][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k + 1][l][m][1] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k + 1][l][m][1]);
  q[1][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * u * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[2][1] = 0.0;
  q[3][1] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][1] * w);
  q[4][1] = 0.0;

  q[0][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k + 1][l][m][2] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-u * x * ac[k + 1][l][m][2]);
  q[1][2] = 0.0;
  q[2][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[3][2] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (ac[k + 1][l][m][2] * w);
  q[4][2] = 0.0;

  q[0][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-(ac[k + 1][l][m][3] * w) * (ac[k + 1][l][m][3] * w) + 0.40e+00 * (ad[k + 1][l][m] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-s * u * x * ac[k + 1][l][m][3]);
  q[1][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][1] * w));
  q[2][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][2] * w));
  q[3][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (2.0 - 0.40e+00) * (ac[k + 1][l][m][3] * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u * w) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;
  q[4][3] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * 0.40e+00;

  q[0][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * ((0.40e+00 * 2.0 * ad[k + 1][l][m] - 1.40e+00 * ac[k + 1][l][m][4]) * (ac[k + 1][l][m][3] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (-(u - t) * y * (ac[k + 1][l][m][1] * ac[k + 1][l][m][1]) - (u - t) * y * (ac[k + 1][l][m][2] * ac[k + 1][l][m][2]) - (s * u - t) * y * (ac[k + 1][l][m][3] * ac[k + 1][l][m][3]) - t * x * ac[k + 1][l][m][4]);
  q[1][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][1] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k + 1][l][m][1];
  q[2][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (-0.40e+00 * (ac[k + 1][l][m][2] * ac[k + 1][l][m][3]) * x) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (u - t) * x * ac[k + 1][l][m][2];
  q[3][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k + 1][l][m][4] * w) - 0.40e+00 * (ad[k + 1][l][m] * w + ac[k + 1][l][m][3] * ac[k + 1][l][m][3] * x)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (s * u - t) * x * ac[k + 1][l][m][3];
  q[4][4] = 0.5 * (1.0 / (2.0 * (1.0 / (12 - 1)))) * (1.40e+00 * (ac[k + 1][l][m][3] * w)) - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * t * w - 0.5 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * 1.00;

  for (n = 0; n < 5; n++) {
    aa[n] = 1.2 * (q[0][n] * ab[k + 1][l][m][0] + q[1][n] * ab[k + 1][l][m][1] + q[2][n] * ab[k + 1][l][m][2] + q[3][n] * ab[k + 1][l][m][3] + q[4][n] * ab[k + 1][l][m][4]);
  }
  for (n = 0; n < 5; n++) {
    aa[n] = aa[n] + 1.2 * (p[0][n] * ab[k][l + 1][m][0] + o[0][n] * ab[k][l][m + 1][0] + p[1][n] * ab[k][l + 1][m][1] + o[1][n] * ab[k][l][m + 1][1] + p[2][n] * ab[k][l + 1][m][2] + o[2][n] * ab[k][l][m + 1][2] + p[3][n] * ab[k][l + 1][m][3] + o[3][n] * ab[k][l][m + 1][3] + p[4][n] * ab[k][l + 1][m][4] + o[4][n] * ab[k][l][m + 1][4]);
  }

  for (n = 0; n < 5; n++) {
    z[n][0] = r[0][n];
    z[n][1] = r[1][n];
    z[n][2] = r[2][n];
    z[n][3] = r[3][n];
    z[n][4] = r[4][n];
  }

  w = 1.0 / z[0][0];
  v = w * z[1][0];
  z[1][1] = z[1][1] - v * z[0][1];
  z[1][2] = z[1][2] - v * z[0][2];
  z[1][3] = z[1][3] - v * z[0][3];
  z[1][4] = z[1][4] - v * z[0][4];
  aa[1] = aa[1] - aa[0] * v;

  v = w * z[2][0];
  z[2][1] = z[2][1] - v * z[0][1];
  z[2][2] = z[2][2] - v * z[0][2];
  z[2][3] = z[2][3] - v * z[0][3];
  z[2][4] = z[2][4] - v * z[0][4];
  aa[2] = aa[2] - aa[0] * v;

  v = w * z[3][0];
  z[3][1] = z[3][1] - v * z[0][1];
  z[3][2] = z[3][2] - v * z[0][2];
  z[3][3] = z[3][3] - v * z[0][3];
  z[3][4] = z[3][4] - v * z[0][4];
  aa[3] = aa[3] - aa[0] * v;

  v = w * z[4][0];
  z[4][1] = z[4][1] - v * z[0][1];
  z[4][2] = z[4][2] - v * z[0][2];
  z[4][3] = z[4][3] - v * z[0][3];
  z[4][4] = z[4][4] - v * z[0][4];
  aa[4] = aa[4] - aa[0] * v;

  w = 1.0 / z[1][1];
  v = w * z[2][1];
  z[2][2] = z[2][2] - v * z[1][2];
  z[2][3] = z[2][3] - v * z[1][3];
  z[2][4] = z[2][4] - v * z[1][4];
  aa[2] = aa[2] - aa[1] * v;

  v = w * z[3][1];
  z[3][2] = z[3][2] - v * z[1][2];
  z[3][3] = z[3][3] - v * z[1][3];
  z[3][4] = z[3][4] - v * z[1][4];
  aa[3] = aa[3] - aa[1] * v;

  v = w * z[4][1];
  z[4][2] = z[4][2] - v * z[1][2];
  z[4][3] = z[4][3] - v * z[1][3];
  z[4][4] = z[4][4] - v * z[1][4];
  aa[4] = aa[4] - aa[1] * v;

  w = 1.0 / z[2][2];
  v = w * z[3][2];
  z[3][3] = z[3][3] - v * z[2][3];
  z[3][4] = z[3][4] - v * z[2][4];
  aa[3] = aa[3] - aa[2] * v;

  v = w * z[4][2];
  z[4][3] = z[4][3] - v * z[2][3];
  z[4][4] = z[4][4] - v * z[2][4];
  aa[4] = aa[4] - aa[2] * v;

  w = 1.0 / z[3][3];
  v = w * z[4][3];
  z[4][4] = z[4][4] - v * z[3][4];
  aa[4] = aa[4] - aa[3] * v;

  aa[4] = aa[4] / z[4][4];

  aa[3] = aa[3] - z[3][4] * aa[4];
  aa[3] = aa[3] / z[3][3];

  aa[2] = aa[2] - z[2][3] * aa[3] - z[2][4] * aa[4];
  aa[2] = aa[2] / z[2][2];

  aa[1] = aa[1] - z[1][2] * aa[2] - z[1][3] * aa[3] - z[1][4] * aa[4];
  aa[1] = aa[1] / z[1][1];

  aa[0] = aa[0] - z[0][1] * aa[1] - z[0][2] * aa[2] - z[0][3] * aa[3] - z[0][4] * aa[4];
  aa[0] = aa[0] / z[0][0];

  ab[k][l][m][0] = ab[k][l][m][0] - aa[0];
  ab[k][l][m][1] = ab[k][l][m][1] - aa[1];
  ab[k][l][m][2] = ab[k][l][m][2] - aa[2];
  ab[k][l][m][3] = ab[k][l][m][3] - aa[3];
  ab[k][l][m][4] = ab[k][l][m][4] - aa[4];
}","[ 52  51  18 ...,  26   0 127]"
256,npb-3.3-LU-erhs1,A,54,4,3,0,15,0,47333624,64,GPU,12.21168,0.817971,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i, j;
  double k, l, m;

  i = get_global_id(2);
  h = get_global_id(1);
  g = get_global_id(0);
  if (i >= f || h >= e || g >= d)
    return;

  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*o)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  __global double(*p)[13] = (__global double(*)[13])c;

  m = ((double)i) / (f - 1);
  l = ((double)h) / (12 - 1);
  k = ((double)g) / (12 - 1);
  for (j = 0; j < 5; j++) {
    n[i][h][g][j] = 0.0;

    o[i][h][g][j] = p[j][0] + (p[j][1] + (p[j][4] + (p[j][7] + p[j][10] * k) * k) * k) * k + (p[j][2] + (p[j][5] + (p[j][8] + p[j][11] * l) * l) * l) * l + (p[j][3] + (p[j][6] + (p[j][9] + p[j][12] * m) * m) * m) * m;
  }
}","[129 129 129 ..., 127   0 127]"
257,npb-3.3-LU-erhs1,B,54,4,3,0,15,0,189794664,32,GPU,46.576787,1.9605569999999999,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i, j;
  double k, l, m;

  i = get_global_id(2);
  h = get_global_id(1);
  g = get_global_id(0);
  if (i >= f || h >= e || g >= d)
    return;

  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*o)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  __global double(*p)[13] = (__global double(*)[13])c;

  m = ((double)i) / (f - 1);
  l = ((double)h) / (12 - 1);
  k = ((double)g) / (12 - 1);
  for (j = 0; j < 5; j++) {
    n[i][h][g][j] = 0.0;

    o[i][h][g][j] = p[j][0] + (p[j][1] + (p[j][4] + (p[j][7] + p[j][10] * k) * k) * k) * k + (p[j][2] + (p[j][5] + (p[j][8] + p[j][11] * l) * l) * l) * l + (p[j][3] + (p[j][6] + (p[j][9] + p[j][12] * m) * m) * m) * m;
  }
}","[129 129 129 ..., 127   0 127]"
258,npb-3.3-LU-erhs1,C,54,4,3,0,15,0,755867256,64,GPU,216.33630699999998,7.999110000000001,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i, j;
  double k, l, m;

  i = get_global_id(2);
  h = get_global_id(1);
  g = get_global_id(0);
  if (i >= f || h >= e || g >= d)
    return;

  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*o)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  __global double(*p)[13] = (__global double(*)[13])c;

  m = ((double)i) / (f - 1);
  l = ((double)h) / (12 - 1);
  k = ((double)g) / (12 - 1);
  for (j = 0; j < 5; j++) {
    n[i][h][g][j] = 0.0;

    o[i][h][g][j] = p[j][0] + (p[j][1] + (p[j][4] + (p[j][7] + p[j][10] * k) * k) * k) * k + (p[j][2] + (p[j][5] + (p[j][8] + p[j][11] * l) * l) * l) * l + (p[j][3] + (p[j][6] + (p[j][9] + p[j][12] * m) * m) * m) * m;
  }
}","[129 129 129 ..., 127   0 127]"
259,npb-3.3-LU-erhs1,S,54,4,3,0,15,0,349464,60,GPU,0.20177,0.16951,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i, j;
  double k, l, m;

  i = get_global_id(2);
  h = get_global_id(1);
  g = get_global_id(0);
  if (i >= f || h >= e || g >= d)
    return;

  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*o)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  __global double(*p)[13] = (__global double(*)[13])c;

  m = ((double)i) / (f - 1);
  l = ((double)h) / (12 - 1);
  k = ((double)g) / (12 - 1);
  for (j = 0; j < 5; j++) {
    n[i][h][g][j] = 0.0;

    o[i][h][g][j] = p[j][0] + (p[j][1] + (p[j][4] + (p[j][7] + p[j][10] * k) * k) * k) * k + (p[j][2] + (p[j][5] + (p[j][8] + p[j][11] * l) * l) * l) * l + (p[j][3] + (p[j][6] + (p[j][9] + p[j][12] * m) * m) * m) * m;
  }
}","[129 129 129 ..., 127   0 127]"
260,npb-3.3-LU-erhs1,W,54,4,3,0,15,0,6347040,33,GPU,0.700055,0.27930900000000003,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i, j;
  double k, l, m;

  i = get_global_id(2);
  h = get_global_id(1);
  g = get_global_id(0);
  if (i >= f || h >= e || g >= d)
    return;

  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*o)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  __global double(*p)[13] = (__global double(*)[13])c;

  m = ((double)i) / (f - 1);
  l = ((double)h) / (12 - 1);
  k = ((double)g) / (12 - 1);
  for (j = 0; j < 5; j++) {
    n[i][h][g][j] = 0.0;

    o[i][h][g][j] = p[j][0] + (p[j][1] + (p[j][4] + (p[j][7] + p[j][10] * k) * k) * k) * k + (p[j][2] + (p[j][5] + (p[j][8] + p[j][11] * l) * l) * l) * l + (p[j][3] + (p[j][6] + (p[j][9] + p[j][12] * m) * m) * m) * m;
  }
}","[129 129 129 ..., 127   0 127]"
261,npb-3.3-LU-erhs2,A,296,11,3,0,101,0,47333624,62,GPU,6.880688,5.836365,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i, j;
  double k;
  double l;
  double m;
  double n, o, p, q;
  double r, s, t, u;

  i = get_global_id(1) + 1;
  h = get_global_id(0) + 1;
  if (i >= (f - 1) || h >= (e - 1))
    return;

  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*w)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  int x = (i - 1) * 12 + (h - 1);
  int y = x * 12 * 5;
  __global double(*z)[5] = (__global double(*)[5]) & c[y];

  for (g = 0; g < d; g++) {
    z[g][0] = v[i][h][g][1];
    l = v[i][h][g][1] / v[i][h][g][0];
    k = 0.50 * (v[i][h][g][1] * v[i][h][g][1] + v[i][h][g][2] * v[i][h][g][2] + v[i][h][g][3] * v[i][h][g][3]) / v[i][h][g][0];
    z[g][1] = v[i][h][g][1] * l + 0.40e+00 * (v[i][h][g][4] - k);
    z[g][2] = v[i][h][g][2] * l;
    z[g][3] = v[i][h][g][3] * l;
    z[g][4] = (1.40e+00 * v[i][h][g][4] - 0.40e+00 * k) * l;
  }

  for (g = 1; g < (d - 1); g++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (z[g + 1][j] - z[g - 1][j]);
    }
  }
  for (g = 1; g < d; g++) {
    m = 1.0 / v[i][h][g][0];

    n = m * v[i][h][g][1];
    o = m * v[i][h][g][2];
    p = m * v[i][h][g][3];
    q = m * v[i][h][g][4];

    m = 1.0 / v[i][h][g - 1][0];

    r = m * v[i][h][g - 1][1];
    s = m * v[i][h][g - 1][2];
    t = m * v[i][h][g - 1][3];
    u = m * v[i][h][g - 1][4];

    z[g][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (n - r);
    z[g][2] = (1.0 / (1.0 / (12 - 1))) * (o - s);
    z[g][3] = (1.0 / (1.0 / (12 - 1))) * (p - t);
    z[g][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((n * n + o * o + p * p) - (r * r + s * s + t * t)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (n * n - r * r) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (q - u);
  }

  for (g = 1; g < (d - 1); g++) {
    w[i][h][g][0] = w[i][h][g][0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][0] - 2.0 * v[i][h][g][0] + v[i][h][g + 1][0]);
    w[i][h][g][1] = w[i][h][g][1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[g + 1][1] - z[g][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][1] - 2.0 * v[i][h][g][1] + v[i][h][g + 1][1]);
    w[i][h][g][2] = w[i][h][g][2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[g + 1][2] - z[g][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][2] - 2.0 * v[i][h][g][2] + v[i][h][g + 1][2]);
    w[i][h][g][3] = w[i][h][g][3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[g + 1][3] - z[g][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][3] - 2.0 * v[i][h][g][3] + v[i][h][g + 1][3]);
    w[i][h][g][4] = w[i][h][g][4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[g + 1][4] - z[g][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][4] - 2.0 * v[i][h][g][4] + v[i][h][g + 1][4]);
  }

  for (j = 0; j < 5; j++) {
    w[i][h][1][j] = w[i][h][1][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * v[i][h][1][j] - 4.0 * v[i][h][2][j] + v[i][h][3][j]);
    w[i][h][2][j] = w[i][h][2][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * v[i][h][1][j] + 6.0 * v[i][h][2][j] - 4.0 * v[i][h][3][j] + v[i][h][4][j]);
  }

  for (g = 3; g < d - 3; g++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][h][g - 2][j] - 4.0 * v[i][h][g - 1][j] + 6.0 * v[i][h][g][j] - 4.0 * v[i][h][g + 1][j] + v[i][h][g + 2][j]);
    }
  }

  for (j = 0; j < 5; j++) {
    w[i][h][d - 3][j] = w[i][h][d - 3][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][h][d - 5][j] - 4.0 * v[i][h][d - 4][j] + 6.0 * v[i][h][d - 3][j] - 4.0 * v[i][h][d - 2][j]);
    w[i][h][d - 2][j] = w[i][h][d - 2][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][h][d - 4][j] - 4.0 * v[i][h][d - 3][j] + 5.0 * v[i][h][d - 2][j]);
  }
}","[  7  16  13 ..., 127   0 127]"
262,npb-3.3-LU-erhs2,B,296,11,3,0,101,0,189794376,32,CPU,16.298098,55.945395,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i, j;
  double k;
  double l;
  double m;
  double n, o, p, q;
  double r, s, t, u;

  i = get_global_id(1) + 1;
  h = get_global_id(0) + 1;
  if (i >= (f - 1) || h >= (e - 1))
    return;

  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*w)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  int x = (i - 1) * 12 + (h - 1);
  int y = x * 12 * 5;
  __global double(*z)[5] = (__global double(*)[5]) & c[y];

  for (g = 0; g < d; g++) {
    z[g][0] = v[i][h][g][1];
    l = v[i][h][g][1] / v[i][h][g][0];
    k = 0.50 * (v[i][h][g][1] * v[i][h][g][1] + v[i][h][g][2] * v[i][h][g][2] + v[i][h][g][3] * v[i][h][g][3]) / v[i][h][g][0];
    z[g][1] = v[i][h][g][1] * l + 0.40e+00 * (v[i][h][g][4] - k);
    z[g][2] = v[i][h][g][2] * l;
    z[g][3] = v[i][h][g][3] * l;
    z[g][4] = (1.40e+00 * v[i][h][g][4] - 0.40e+00 * k) * l;
  }

  for (g = 1; g < (d - 1); g++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (z[g + 1][j] - z[g - 1][j]);
    }
  }
  for (g = 1; g < d; g++) {
    m = 1.0 / v[i][h][g][0];

    n = m * v[i][h][g][1];
    o = m * v[i][h][g][2];
    p = m * v[i][h][g][3];
    q = m * v[i][h][g][4];

    m = 1.0 / v[i][h][g - 1][0];

    r = m * v[i][h][g - 1][1];
    s = m * v[i][h][g - 1][2];
    t = m * v[i][h][g - 1][3];
    u = m * v[i][h][g - 1][4];

    z[g][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (n - r);
    z[g][2] = (1.0 / (1.0 / (12 - 1))) * (o - s);
    z[g][3] = (1.0 / (1.0 / (12 - 1))) * (p - t);
    z[g][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((n * n + o * o + p * p) - (r * r + s * s + t * t)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (n * n - r * r) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (q - u);
  }

  for (g = 1; g < (d - 1); g++) {
    w[i][h][g][0] = w[i][h][g][0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][0] - 2.0 * v[i][h][g][0] + v[i][h][g + 1][0]);
    w[i][h][g][1] = w[i][h][g][1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[g + 1][1] - z[g][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][1] - 2.0 * v[i][h][g][1] + v[i][h][g + 1][1]);
    w[i][h][g][2] = w[i][h][g][2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[g + 1][2] - z[g][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][2] - 2.0 * v[i][h][g][2] + v[i][h][g + 1][2]);
    w[i][h][g][3] = w[i][h][g][3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[g + 1][3] - z[g][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][3] - 2.0 * v[i][h][g][3] + v[i][h][g + 1][3]);
    w[i][h][g][4] = w[i][h][g][4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[g + 1][4] - z[g][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][4] - 2.0 * v[i][h][g][4] + v[i][h][g + 1][4]);
  }

  for (j = 0; j < 5; j++) {
    w[i][h][1][j] = w[i][h][1][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * v[i][h][1][j] - 4.0 * v[i][h][2][j] + v[i][h][3][j]);
    w[i][h][2][j] = w[i][h][2][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * v[i][h][1][j] + 6.0 * v[i][h][2][j] - 4.0 * v[i][h][3][j] + v[i][h][4][j]);
  }

  for (g = 3; g < d - 3; g++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][h][g - 2][j] - 4.0 * v[i][h][g - 1][j] + 6.0 * v[i][h][g][j] - 4.0 * v[i][h][g + 1][j] + v[i][h][g + 2][j]);
    }
  }

  for (j = 0; j < 5; j++) {
    w[i][h][d - 3][j] = w[i][h][d - 3][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][h][d - 5][j] - 4.0 * v[i][h][d - 4][j] + 6.0 * v[i][h][d - 3][j] - 4.0 * v[i][h][d - 2][j]);
    w[i][h][d - 2][j] = w[i][h][d - 2][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][h][d - 4][j] - 4.0 * v[i][h][d - 3][j] + 5.0 * v[i][h][d - 2][j]);
  }
}","[  7  16  13 ..., 127   0 127]"
263,npb-3.3-LU-erhs2,C,296,11,3,0,101,0,755866968,64,CPU,67.24642,287.201542,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i, j;
  double k;
  double l;
  double m;
  double n, o, p, q;
  double r, s, t, u;

  i = get_global_id(1) + 1;
  h = get_global_id(0) + 1;
  if (i >= (f - 1) || h >= (e - 1))
    return;

  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*w)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  int x = (i - 1) * 12 + (h - 1);
  int y = x * 12 * 5;
  __global double(*z)[5] = (__global double(*)[5]) & c[y];

  for (g = 0; g < d; g++) {
    z[g][0] = v[i][h][g][1];
    l = v[i][h][g][1] / v[i][h][g][0];
    k = 0.50 * (v[i][h][g][1] * v[i][h][g][1] + v[i][h][g][2] * v[i][h][g][2] + v[i][h][g][3] * v[i][h][g][3]) / v[i][h][g][0];
    z[g][1] = v[i][h][g][1] * l + 0.40e+00 * (v[i][h][g][4] - k);
    z[g][2] = v[i][h][g][2] * l;
    z[g][3] = v[i][h][g][3] * l;
    z[g][4] = (1.40e+00 * v[i][h][g][4] - 0.40e+00 * k) * l;
  }

  for (g = 1; g < (d - 1); g++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (z[g + 1][j] - z[g - 1][j]);
    }
  }
  for (g = 1; g < d; g++) {
    m = 1.0 / v[i][h][g][0];

    n = m * v[i][h][g][1];
    o = m * v[i][h][g][2];
    p = m * v[i][h][g][3];
    q = m * v[i][h][g][4];

    m = 1.0 / v[i][h][g - 1][0];

    r = m * v[i][h][g - 1][1];
    s = m * v[i][h][g - 1][2];
    t = m * v[i][h][g - 1][3];
    u = m * v[i][h][g - 1][4];

    z[g][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (n - r);
    z[g][2] = (1.0 / (1.0 / (12 - 1))) * (o - s);
    z[g][3] = (1.0 / (1.0 / (12 - 1))) * (p - t);
    z[g][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((n * n + o * o + p * p) - (r * r + s * s + t * t)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (n * n - r * r) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (q - u);
  }

  for (g = 1; g < (d - 1); g++) {
    w[i][h][g][0] = w[i][h][g][0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][0] - 2.0 * v[i][h][g][0] + v[i][h][g + 1][0]);
    w[i][h][g][1] = w[i][h][g][1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[g + 1][1] - z[g][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][1] - 2.0 * v[i][h][g][1] + v[i][h][g + 1][1]);
    w[i][h][g][2] = w[i][h][g][2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[g + 1][2] - z[g][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][2] - 2.0 * v[i][h][g][2] + v[i][h][g + 1][2]);
    w[i][h][g][3] = w[i][h][g][3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[g + 1][3] - z[g][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][3] - 2.0 * v[i][h][g][3] + v[i][h][g + 1][3]);
    w[i][h][g][4] = w[i][h][g][4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[g + 1][4] - z[g][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][4] - 2.0 * v[i][h][g][4] + v[i][h][g + 1][4]);
  }

  for (j = 0; j < 5; j++) {
    w[i][h][1][j] = w[i][h][1][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * v[i][h][1][j] - 4.0 * v[i][h][2][j] + v[i][h][3][j]);
    w[i][h][2][j] = w[i][h][2][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * v[i][h][1][j] + 6.0 * v[i][h][2][j] - 4.0 * v[i][h][3][j] + v[i][h][4][j]);
  }

  for (g = 3; g < d - 3; g++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][h][g - 2][j] - 4.0 * v[i][h][g - 1][j] + 6.0 * v[i][h][g][j] - 4.0 * v[i][h][g + 1][j] + v[i][h][g + 2][j]);
    }
  }

  for (j = 0; j < 5; j++) {
    w[i][h][d - 3][j] = w[i][h][d - 3][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][h][d - 5][j] - 4.0 * v[i][h][d - 4][j] + 6.0 * v[i][h][d - 3][j] - 4.0 * v[i][h][d - 2][j]);
    w[i][h][d - 2][j] = w[i][h][d - 2][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][h][d - 4][j] - 4.0 * v[i][h][d - 3][j] + 5.0 * v[i][h][d - 2][j]);
  }
}","[  7  16  13 ..., 127   0 127]"
264,npb-3.3-LU-erhs2,S,296,11,3,0,101,0,349464,60,CPU,0.243562,0.293126,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i, j;
  double k;
  double l;
  double m;
  double n, o, p, q;
  double r, s, t, u;

  i = get_global_id(1) + 1;
  h = get_global_id(0) + 1;
  if (i >= (f - 1) || h >= (e - 1))
    return;

  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*w)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  int x = (i - 1) * 12 + (h - 1);
  int y = x * 12 * 5;
  __global double(*z)[5] = (__global double(*)[5]) & c[y];

  for (g = 0; g < d; g++) {
    z[g][0] = v[i][h][g][1];
    l = v[i][h][g][1] / v[i][h][g][0];
    k = 0.50 * (v[i][h][g][1] * v[i][h][g][1] + v[i][h][g][2] * v[i][h][g][2] + v[i][h][g][3] * v[i][h][g][3]) / v[i][h][g][0];
    z[g][1] = v[i][h][g][1] * l + 0.40e+00 * (v[i][h][g][4] - k);
    z[g][2] = v[i][h][g][2] * l;
    z[g][3] = v[i][h][g][3] * l;
    z[g][4] = (1.40e+00 * v[i][h][g][4] - 0.40e+00 * k) * l;
  }

  for (g = 1; g < (d - 1); g++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (z[g + 1][j] - z[g - 1][j]);
    }
  }
  for (g = 1; g < d; g++) {
    m = 1.0 / v[i][h][g][0];

    n = m * v[i][h][g][1];
    o = m * v[i][h][g][2];
    p = m * v[i][h][g][3];
    q = m * v[i][h][g][4];

    m = 1.0 / v[i][h][g - 1][0];

    r = m * v[i][h][g - 1][1];
    s = m * v[i][h][g - 1][2];
    t = m * v[i][h][g - 1][3];
    u = m * v[i][h][g - 1][4];

    z[g][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (n - r);
    z[g][2] = (1.0 / (1.0 / (12 - 1))) * (o - s);
    z[g][3] = (1.0 / (1.0 / (12 - 1))) * (p - t);
    z[g][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((n * n + o * o + p * p) - (r * r + s * s + t * t)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (n * n - r * r) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (q - u);
  }

  for (g = 1; g < (d - 1); g++) {
    w[i][h][g][0] = w[i][h][g][0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][0] - 2.0 * v[i][h][g][0] + v[i][h][g + 1][0]);
    w[i][h][g][1] = w[i][h][g][1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[g + 1][1] - z[g][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][1] - 2.0 * v[i][h][g][1] + v[i][h][g + 1][1]);
    w[i][h][g][2] = w[i][h][g][2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[g + 1][2] - z[g][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][2] - 2.0 * v[i][h][g][2] + v[i][h][g + 1][2]);
    w[i][h][g][3] = w[i][h][g][3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[g + 1][3] - z[g][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][3] - 2.0 * v[i][h][g][3] + v[i][h][g + 1][3]);
    w[i][h][g][4] = w[i][h][g][4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[g + 1][4] - z[g][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][4] - 2.0 * v[i][h][g][4] + v[i][h][g + 1][4]);
  }

  for (j = 0; j < 5; j++) {
    w[i][h][1][j] = w[i][h][1][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * v[i][h][1][j] - 4.0 * v[i][h][2][j] + v[i][h][3][j]);
    w[i][h][2][j] = w[i][h][2][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * v[i][h][1][j] + 6.0 * v[i][h][2][j] - 4.0 * v[i][h][3][j] + v[i][h][4][j]);
  }

  for (g = 3; g < d - 3; g++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][h][g - 2][j] - 4.0 * v[i][h][g - 1][j] + 6.0 * v[i][h][g][j] - 4.0 * v[i][h][g + 1][j] + v[i][h][g + 2][j]);
    }
  }

  for (j = 0; j < 5; j++) {
    w[i][h][d - 3][j] = w[i][h][d - 3][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][h][d - 5][j] - 4.0 * v[i][h][d - 4][j] + 6.0 * v[i][h][d - 3][j] - 4.0 * v[i][h][d - 2][j]);
    w[i][h][d - 2][j] = w[i][h][d - 2][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][h][d - 4][j] - 4.0 * v[i][h][d - 3][j] + 5.0 * v[i][h][d - 2][j]);
  }
}","[  7  16  13 ..., 127   0 127]"
265,npb-3.3-LU-erhs2,W,296,11,3,0,101,0,6346800,62,CPU,0.587849,0.762886,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i, j;
  double k;
  double l;
  double m;
  double n, o, p, q;
  double r, s, t, u;

  i = get_global_id(1) + 1;
  h = get_global_id(0) + 1;
  if (i >= (f - 1) || h >= (e - 1))
    return;

  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*w)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  int x = (i - 1) * 12 + (h - 1);
  int y = x * 12 * 5;
  __global double(*z)[5] = (__global double(*)[5]) & c[y];

  for (g = 0; g < d; g++) {
    z[g][0] = v[i][h][g][1];
    l = v[i][h][g][1] / v[i][h][g][0];
    k = 0.50 * (v[i][h][g][1] * v[i][h][g][1] + v[i][h][g][2] * v[i][h][g][2] + v[i][h][g][3] * v[i][h][g][3]) / v[i][h][g][0];
    z[g][1] = v[i][h][g][1] * l + 0.40e+00 * (v[i][h][g][4] - k);
    z[g][2] = v[i][h][g][2] * l;
    z[g][3] = v[i][h][g][3] * l;
    z[g][4] = (1.40e+00 * v[i][h][g][4] - 0.40e+00 * k) * l;
  }

  for (g = 1; g < (d - 1); g++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (z[g + 1][j] - z[g - 1][j]);
    }
  }
  for (g = 1; g < d; g++) {
    m = 1.0 / v[i][h][g][0];

    n = m * v[i][h][g][1];
    o = m * v[i][h][g][2];
    p = m * v[i][h][g][3];
    q = m * v[i][h][g][4];

    m = 1.0 / v[i][h][g - 1][0];

    r = m * v[i][h][g - 1][1];
    s = m * v[i][h][g - 1][2];
    t = m * v[i][h][g - 1][3];
    u = m * v[i][h][g - 1][4];

    z[g][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (n - r);
    z[g][2] = (1.0 / (1.0 / (12 - 1))) * (o - s);
    z[g][3] = (1.0 / (1.0 / (12 - 1))) * (p - t);
    z[g][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((n * n + o * o + p * p) - (r * r + s * s + t * t)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (n * n - r * r) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (q - u);
  }

  for (g = 1; g < (d - 1); g++) {
    w[i][h][g][0] = w[i][h][g][0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][0] - 2.0 * v[i][h][g][0] + v[i][h][g + 1][0]);
    w[i][h][g][1] = w[i][h][g][1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[g + 1][1] - z[g][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][1] - 2.0 * v[i][h][g][1] + v[i][h][g + 1][1]);
    w[i][h][g][2] = w[i][h][g][2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[g + 1][2] - z[g][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][2] - 2.0 * v[i][h][g][2] + v[i][h][g + 1][2]);
    w[i][h][g][3] = w[i][h][g][3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[g + 1][3] - z[g][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][3] - 2.0 * v[i][h][g][3] + v[i][h][g + 1][3]);
    w[i][h][g][4] = w[i][h][g][4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[g + 1][4] - z[g][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h][g - 1][4] - 2.0 * v[i][h][g][4] + v[i][h][g + 1][4]);
  }

  for (j = 0; j < 5; j++) {
    w[i][h][1][j] = w[i][h][1][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * v[i][h][1][j] - 4.0 * v[i][h][2][j] + v[i][h][3][j]);
    w[i][h][2][j] = w[i][h][2][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * v[i][h][1][j] + 6.0 * v[i][h][2][j] - 4.0 * v[i][h][3][j] + v[i][h][4][j]);
  }

  for (g = 3; g < d - 3; g++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][h][g - 2][j] - 4.0 * v[i][h][g - 1][j] + 6.0 * v[i][h][g][j] - 4.0 * v[i][h][g + 1][j] + v[i][h][g + 2][j]);
    }
  }

  for (j = 0; j < 5; j++) {
    w[i][h][d - 3][j] = w[i][h][d - 3][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][h][d - 5][j] - 4.0 * v[i][h][d - 4][j] + 6.0 * v[i][h][d - 3][j] - 4.0 * v[i][h][d - 2][j]);
    w[i][h][d - 2][j] = w[i][h][d - 2][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][h][d - 4][j] - 4.0 * v[i][h][d - 3][j] + 5.0 * v[i][h][d - 2][j]);
  }
}","[  7  16  13 ..., 127   0 127]"
266,npb-3.3-LU-erhs3,A,296,11,3,0,101,0,47333624,62,GPU,3.567586,2.587027,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i, j;
  double k;
  double l;
  double m;
  double n, o, p, q;
  double r, s, t, u;

  i = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (i >= (f - 1) || g >= (d - 1))
    return;

  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*w)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  int x = (i - 1) * 12 + (g - 1);
  int y = x * 12 * 5;
  __global double(*z)[5] = (__global double(*)[5]) & c[y];

  for (h = 0; h < e; h++) {
    z[h][0] = v[i][h][g][2];
    l = v[i][h][g][2] / v[i][h][g][0];
    k = 0.50 * (v[i][h][g][1] * v[i][h][g][1] + v[i][h][g][2] * v[i][h][g][2] + v[i][h][g][3] * v[i][h][g][3]) / v[i][h][g][0];
    z[h][1] = v[i][h][g][1] * l;
    z[h][2] = v[i][h][g][2] * l + 0.40e+00 * (v[i][h][g][4] - k);
    z[h][3] = v[i][h][g][3] * l;
    z[h][4] = (1.40e+00 * v[i][h][g][4] - 0.40e+00 * k) * l;
  }

  for (h = 1; h < (e - 1); h++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (z[h + 1][j] - z[h - 1][j]);
    }
  }

  for (h = 1; h < e; h++) {
    m = 1.0 / v[i][h][g][0];

    n = m * v[i][h][g][1];
    o = m * v[i][h][g][2];
    p = m * v[i][h][g][3];
    q = m * v[i][h][g][4];

    m = 1.0 / v[i][h - 1][g][0];

    r = m * v[i][h - 1][g][1];
    s = m * v[i][h - 1][g][2];
    t = m * v[i][h - 1][g][3];
    u = m * v[i][h - 1][g][4];

    z[h][1] = (1.0 / (1.0 / (12 - 1))) * (n - r);
    z[h][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (o - s);
    z[h][3] = (1.0 / (1.0 / (12 - 1))) * (p - t);
    z[h][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((n * n + o * o + p * p) - (r * r + s * s + t * t)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (o * o - s * s) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (q - u);
  }

  for (h = 1; h < (e - 1); h++) {
    w[i][h][g][0] = w[i][h][g][0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][0] - 2.0 * v[i][h][g][0] + v[i][h + 1][g][0]);
    w[i][h][g][1] = w[i][h][g][1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[h + 1][1] - z[h][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][1] - 2.0 * v[i][h][g][1] + v[i][h + 1][g][1]);
    w[i][h][g][2] = w[i][h][g][2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[h + 1][2] - z[h][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][2] - 2.0 * v[i][h][g][2] + v[i][h + 1][g][2]);
    w[i][h][g][3] = w[i][h][g][3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[h + 1][3] - z[h][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][3] - 2.0 * v[i][h][g][3] + v[i][h + 1][g][3]);
    w[i][h][g][4] = w[i][h][g][4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[h + 1][4] - z[h][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][4] - 2.0 * v[i][h][g][4] + v[i][h + 1][g][4]);
  }

  for (j = 0; j < 5; j++) {
    w[i][1][g][j] = w[i][1][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * v[i][1][g][j] - 4.0 * v[i][2][g][j] + v[i][3][g][j]);
    w[i][2][g][j] = w[i][2][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * v[i][1][g][j] + 6.0 * v[i][2][g][j] - 4.0 * v[i][3][g][j] + v[i][4][g][j]);
  }

  for (h = 3; h < e - 3; h++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][h - 2][g][j] - 4.0 * v[i][h - 1][g][j] + 6.0 * v[i][h][g][j] - 4.0 * v[i][h + 1][g][j] + v[i][h + 2][g][j]);
    }
  }

  for (j = 0; j < 5; j++) {
    w[i][e - 3][g][j] = w[i][e - 3][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][e - 5][g][j] - 4.0 * v[i][e - 4][g][j] + 6.0 * v[i][e - 3][g][j] - 4.0 * v[i][e - 2][g][j]);
    w[i][e - 2][g][j] = w[i][e - 2][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][e - 4][g][j] - 4.0 * v[i][e - 3][g][j] + 5.0 * v[i][e - 2][g][j]);
  }
}","[  7  16  13 ..., 127   0 127]"
267,npb-3.3-LU-erhs3,B,296,11,3,0,101,0,189794376,32,CPU,13.7885,21.518656,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i, j;
  double k;
  double l;
  double m;
  double n, o, p, q;
  double r, s, t, u;

  i = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (i >= (f - 1) || g >= (d - 1))
    return;

  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*w)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  int x = (i - 1) * 12 + (g - 1);
  int y = x * 12 * 5;
  __global double(*z)[5] = (__global double(*)[5]) & c[y];

  for (h = 0; h < e; h++) {
    z[h][0] = v[i][h][g][2];
    l = v[i][h][g][2] / v[i][h][g][0];
    k = 0.50 * (v[i][h][g][1] * v[i][h][g][1] + v[i][h][g][2] * v[i][h][g][2] + v[i][h][g][3] * v[i][h][g][3]) / v[i][h][g][0];
    z[h][1] = v[i][h][g][1] * l;
    z[h][2] = v[i][h][g][2] * l + 0.40e+00 * (v[i][h][g][4] - k);
    z[h][3] = v[i][h][g][3] * l;
    z[h][4] = (1.40e+00 * v[i][h][g][4] - 0.40e+00 * k) * l;
  }

  for (h = 1; h < (e - 1); h++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (z[h + 1][j] - z[h - 1][j]);
    }
  }

  for (h = 1; h < e; h++) {
    m = 1.0 / v[i][h][g][0];

    n = m * v[i][h][g][1];
    o = m * v[i][h][g][2];
    p = m * v[i][h][g][3];
    q = m * v[i][h][g][4];

    m = 1.0 / v[i][h - 1][g][0];

    r = m * v[i][h - 1][g][1];
    s = m * v[i][h - 1][g][2];
    t = m * v[i][h - 1][g][3];
    u = m * v[i][h - 1][g][4];

    z[h][1] = (1.0 / (1.0 / (12 - 1))) * (n - r);
    z[h][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (o - s);
    z[h][3] = (1.0 / (1.0 / (12 - 1))) * (p - t);
    z[h][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((n * n + o * o + p * p) - (r * r + s * s + t * t)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (o * o - s * s) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (q - u);
  }

  for (h = 1; h < (e - 1); h++) {
    w[i][h][g][0] = w[i][h][g][0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][0] - 2.0 * v[i][h][g][0] + v[i][h + 1][g][0]);
    w[i][h][g][1] = w[i][h][g][1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[h + 1][1] - z[h][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][1] - 2.0 * v[i][h][g][1] + v[i][h + 1][g][1]);
    w[i][h][g][2] = w[i][h][g][2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[h + 1][2] - z[h][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][2] - 2.0 * v[i][h][g][2] + v[i][h + 1][g][2]);
    w[i][h][g][3] = w[i][h][g][3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[h + 1][3] - z[h][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][3] - 2.0 * v[i][h][g][3] + v[i][h + 1][g][3]);
    w[i][h][g][4] = w[i][h][g][4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[h + 1][4] - z[h][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][4] - 2.0 * v[i][h][g][4] + v[i][h + 1][g][4]);
  }

  for (j = 0; j < 5; j++) {
    w[i][1][g][j] = w[i][1][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * v[i][1][g][j] - 4.0 * v[i][2][g][j] + v[i][3][g][j]);
    w[i][2][g][j] = w[i][2][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * v[i][1][g][j] + 6.0 * v[i][2][g][j] - 4.0 * v[i][3][g][j] + v[i][4][g][j]);
  }

  for (h = 3; h < e - 3; h++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][h - 2][g][j] - 4.0 * v[i][h - 1][g][j] + 6.0 * v[i][h][g][j] - 4.0 * v[i][h + 1][g][j] + v[i][h + 2][g][j]);
    }
  }

  for (j = 0; j < 5; j++) {
    w[i][e - 3][g][j] = w[i][e - 3][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][e - 5][g][j] - 4.0 * v[i][e - 4][g][j] + 6.0 * v[i][e - 3][g][j] - 4.0 * v[i][e - 2][g][j]);
    w[i][e - 2][g][j] = w[i][e - 2][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][e - 4][g][j] - 4.0 * v[i][e - 3][g][j] + 5.0 * v[i][e - 2][g][j]);
  }
}","[  7  16  13 ..., 127   0 127]"
268,npb-3.3-LU-erhs3,C,296,11,3,0,101,0,755866968,64,CPU,57.680220999999996,111.256422,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i, j;
  double k;
  double l;
  double m;
  double n, o, p, q;
  double r, s, t, u;

  i = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (i >= (f - 1) || g >= (d - 1))
    return;

  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*w)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  int x = (i - 1) * 12 + (g - 1);
  int y = x * 12 * 5;
  __global double(*z)[5] = (__global double(*)[5]) & c[y];

  for (h = 0; h < e; h++) {
    z[h][0] = v[i][h][g][2];
    l = v[i][h][g][2] / v[i][h][g][0];
    k = 0.50 * (v[i][h][g][1] * v[i][h][g][1] + v[i][h][g][2] * v[i][h][g][2] + v[i][h][g][3] * v[i][h][g][3]) / v[i][h][g][0];
    z[h][1] = v[i][h][g][1] * l;
    z[h][2] = v[i][h][g][2] * l + 0.40e+00 * (v[i][h][g][4] - k);
    z[h][3] = v[i][h][g][3] * l;
    z[h][4] = (1.40e+00 * v[i][h][g][4] - 0.40e+00 * k) * l;
  }

  for (h = 1; h < (e - 1); h++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (z[h + 1][j] - z[h - 1][j]);
    }
  }

  for (h = 1; h < e; h++) {
    m = 1.0 / v[i][h][g][0];

    n = m * v[i][h][g][1];
    o = m * v[i][h][g][2];
    p = m * v[i][h][g][3];
    q = m * v[i][h][g][4];

    m = 1.0 / v[i][h - 1][g][0];

    r = m * v[i][h - 1][g][1];
    s = m * v[i][h - 1][g][2];
    t = m * v[i][h - 1][g][3];
    u = m * v[i][h - 1][g][4];

    z[h][1] = (1.0 / (1.0 / (12 - 1))) * (n - r);
    z[h][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (o - s);
    z[h][3] = (1.0 / (1.0 / (12 - 1))) * (p - t);
    z[h][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((n * n + o * o + p * p) - (r * r + s * s + t * t)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (o * o - s * s) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (q - u);
  }

  for (h = 1; h < (e - 1); h++) {
    w[i][h][g][0] = w[i][h][g][0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][0] - 2.0 * v[i][h][g][0] + v[i][h + 1][g][0]);
    w[i][h][g][1] = w[i][h][g][1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[h + 1][1] - z[h][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][1] - 2.0 * v[i][h][g][1] + v[i][h + 1][g][1]);
    w[i][h][g][2] = w[i][h][g][2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[h + 1][2] - z[h][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][2] - 2.0 * v[i][h][g][2] + v[i][h + 1][g][2]);
    w[i][h][g][3] = w[i][h][g][3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[h + 1][3] - z[h][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][3] - 2.0 * v[i][h][g][3] + v[i][h + 1][g][3]);
    w[i][h][g][4] = w[i][h][g][4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[h + 1][4] - z[h][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][4] - 2.0 * v[i][h][g][4] + v[i][h + 1][g][4]);
  }

  for (j = 0; j < 5; j++) {
    w[i][1][g][j] = w[i][1][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * v[i][1][g][j] - 4.0 * v[i][2][g][j] + v[i][3][g][j]);
    w[i][2][g][j] = w[i][2][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * v[i][1][g][j] + 6.0 * v[i][2][g][j] - 4.0 * v[i][3][g][j] + v[i][4][g][j]);
  }

  for (h = 3; h < e - 3; h++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][h - 2][g][j] - 4.0 * v[i][h - 1][g][j] + 6.0 * v[i][h][g][j] - 4.0 * v[i][h + 1][g][j] + v[i][h + 2][g][j]);
    }
  }

  for (j = 0; j < 5; j++) {
    w[i][e - 3][g][j] = w[i][e - 3][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][e - 5][g][j] - 4.0 * v[i][e - 4][g][j] + 6.0 * v[i][e - 3][g][j] - 4.0 * v[i][e - 2][g][j]);
    w[i][e - 2][g][j] = w[i][e - 2][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][e - 4][g][j] - 4.0 * v[i][e - 3][g][j] + 5.0 * v[i][e - 2][g][j]);
  }
}","[  7  16  13 ..., 127   0 127]"
269,npb-3.3-LU-erhs3,S,296,11,3,0,101,0,349464,60,CPU,0.197901,0.273395,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i, j;
  double k;
  double l;
  double m;
  double n, o, p, q;
  double r, s, t, u;

  i = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (i >= (f - 1) || g >= (d - 1))
    return;

  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*w)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  int x = (i - 1) * 12 + (g - 1);
  int y = x * 12 * 5;
  __global double(*z)[5] = (__global double(*)[5]) & c[y];

  for (h = 0; h < e; h++) {
    z[h][0] = v[i][h][g][2];
    l = v[i][h][g][2] / v[i][h][g][0];
    k = 0.50 * (v[i][h][g][1] * v[i][h][g][1] + v[i][h][g][2] * v[i][h][g][2] + v[i][h][g][3] * v[i][h][g][3]) / v[i][h][g][0];
    z[h][1] = v[i][h][g][1] * l;
    z[h][2] = v[i][h][g][2] * l + 0.40e+00 * (v[i][h][g][4] - k);
    z[h][3] = v[i][h][g][3] * l;
    z[h][4] = (1.40e+00 * v[i][h][g][4] - 0.40e+00 * k) * l;
  }

  for (h = 1; h < (e - 1); h++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (z[h + 1][j] - z[h - 1][j]);
    }
  }

  for (h = 1; h < e; h++) {
    m = 1.0 / v[i][h][g][0];

    n = m * v[i][h][g][1];
    o = m * v[i][h][g][2];
    p = m * v[i][h][g][3];
    q = m * v[i][h][g][4];

    m = 1.0 / v[i][h - 1][g][0];

    r = m * v[i][h - 1][g][1];
    s = m * v[i][h - 1][g][2];
    t = m * v[i][h - 1][g][3];
    u = m * v[i][h - 1][g][4];

    z[h][1] = (1.0 / (1.0 / (12 - 1))) * (n - r);
    z[h][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (o - s);
    z[h][3] = (1.0 / (1.0 / (12 - 1))) * (p - t);
    z[h][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((n * n + o * o + p * p) - (r * r + s * s + t * t)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (o * o - s * s) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (q - u);
  }

  for (h = 1; h < (e - 1); h++) {
    w[i][h][g][0] = w[i][h][g][0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][0] - 2.0 * v[i][h][g][0] + v[i][h + 1][g][0]);
    w[i][h][g][1] = w[i][h][g][1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[h + 1][1] - z[h][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][1] - 2.0 * v[i][h][g][1] + v[i][h + 1][g][1]);
    w[i][h][g][2] = w[i][h][g][2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[h + 1][2] - z[h][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][2] - 2.0 * v[i][h][g][2] + v[i][h + 1][g][2]);
    w[i][h][g][3] = w[i][h][g][3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[h + 1][3] - z[h][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][3] - 2.0 * v[i][h][g][3] + v[i][h + 1][g][3]);
    w[i][h][g][4] = w[i][h][g][4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[h + 1][4] - z[h][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][4] - 2.0 * v[i][h][g][4] + v[i][h + 1][g][4]);
  }

  for (j = 0; j < 5; j++) {
    w[i][1][g][j] = w[i][1][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * v[i][1][g][j] - 4.0 * v[i][2][g][j] + v[i][3][g][j]);
    w[i][2][g][j] = w[i][2][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * v[i][1][g][j] + 6.0 * v[i][2][g][j] - 4.0 * v[i][3][g][j] + v[i][4][g][j]);
  }

  for (h = 3; h < e - 3; h++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][h - 2][g][j] - 4.0 * v[i][h - 1][g][j] + 6.0 * v[i][h][g][j] - 4.0 * v[i][h + 1][g][j] + v[i][h + 2][g][j]);
    }
  }

  for (j = 0; j < 5; j++) {
    w[i][e - 3][g][j] = w[i][e - 3][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][e - 5][g][j] - 4.0 * v[i][e - 4][g][j] + 6.0 * v[i][e - 3][g][j] - 4.0 * v[i][e - 2][g][j]);
    w[i][e - 2][g][j] = w[i][e - 2][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][e - 4][g][j] - 4.0 * v[i][e - 3][g][j] + 5.0 * v[i][e - 2][g][j]);
  }
}","[  7  16  13 ..., 127   0 127]"
270,npb-3.3-LU-erhs3,W,296,11,3,0,101,0,6346800,62,CPU,0.50932,0.6282369999999999,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i, j;
  double k;
  double l;
  double m;
  double n, o, p, q;
  double r, s, t, u;

  i = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (i >= (f - 1) || g >= (d - 1))
    return;

  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*w)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  int x = (i - 1) * 12 + (g - 1);
  int y = x * 12 * 5;
  __global double(*z)[5] = (__global double(*)[5]) & c[y];

  for (h = 0; h < e; h++) {
    z[h][0] = v[i][h][g][2];
    l = v[i][h][g][2] / v[i][h][g][0];
    k = 0.50 * (v[i][h][g][1] * v[i][h][g][1] + v[i][h][g][2] * v[i][h][g][2] + v[i][h][g][3] * v[i][h][g][3]) / v[i][h][g][0];
    z[h][1] = v[i][h][g][1] * l;
    z[h][2] = v[i][h][g][2] * l + 0.40e+00 * (v[i][h][g][4] - k);
    z[h][3] = v[i][h][g][3] * l;
    z[h][4] = (1.40e+00 * v[i][h][g][4] - 0.40e+00 * k) * l;
  }

  for (h = 1; h < (e - 1); h++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (z[h + 1][j] - z[h - 1][j]);
    }
  }

  for (h = 1; h < e; h++) {
    m = 1.0 / v[i][h][g][0];

    n = m * v[i][h][g][1];
    o = m * v[i][h][g][2];
    p = m * v[i][h][g][3];
    q = m * v[i][h][g][4];

    m = 1.0 / v[i][h - 1][g][0];

    r = m * v[i][h - 1][g][1];
    s = m * v[i][h - 1][g][2];
    t = m * v[i][h - 1][g][3];
    u = m * v[i][h - 1][g][4];

    z[h][1] = (1.0 / (1.0 / (12 - 1))) * (n - r);
    z[h][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (o - s);
    z[h][3] = (1.0 / (1.0 / (12 - 1))) * (p - t);
    z[h][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((n * n + o * o + p * p) - (r * r + s * s + t * t)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (o * o - s * s) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (q - u);
  }

  for (h = 1; h < (e - 1); h++) {
    w[i][h][g][0] = w[i][h][g][0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][0] - 2.0 * v[i][h][g][0] + v[i][h + 1][g][0]);
    w[i][h][g][1] = w[i][h][g][1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[h + 1][1] - z[h][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][1] - 2.0 * v[i][h][g][1] + v[i][h + 1][g][1]);
    w[i][h][g][2] = w[i][h][g][2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[h + 1][2] - z[h][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][2] - 2.0 * v[i][h][g][2] + v[i][h + 1][g][2]);
    w[i][h][g][3] = w[i][h][g][3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[h + 1][3] - z[h][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][3] - 2.0 * v[i][h][g][3] + v[i][h + 1][g][3]);
    w[i][h][g][4] = w[i][h][g][4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[h + 1][4] - z[h][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i][h - 1][g][4] - 2.0 * v[i][h][g][4] + v[i][h + 1][g][4]);
  }

  for (j = 0; j < 5; j++) {
    w[i][1][g][j] = w[i][1][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * v[i][1][g][j] - 4.0 * v[i][2][g][j] + v[i][3][g][j]);
    w[i][2][g][j] = w[i][2][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * v[i][1][g][j] + 6.0 * v[i][2][g][j] - 4.0 * v[i][3][g][j] + v[i][4][g][j]);
  }

  for (h = 3; h < e - 3; h++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][h - 2][g][j] - 4.0 * v[i][h - 1][g][j] + 6.0 * v[i][h][g][j] - 4.0 * v[i][h + 1][g][j] + v[i][h + 2][g][j]);
    }
  }

  for (j = 0; j < 5; j++) {
    w[i][e - 3][g][j] = w[i][e - 3][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][e - 5][g][j] - 4.0 * v[i][e - 4][g][j] + 6.0 * v[i][e - 3][g][j] - 4.0 * v[i][e - 2][g][j]);
    w[i][e - 2][g][j] = w[i][e - 2][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i][e - 4][g][j] - 4.0 * v[i][e - 3][g][j] + 5.0 * v[i][e - 2][g][j]);
  }
}","[  7  16  13 ..., 127   0 127]"
271,npb-3.3-LU-erhs4,A,296,11,3,0,88,0,47333624,62,GPU,3.393711,2.604698,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i, j;
  double k;
  double l;
  double m;
  double n, o, p, q;
  double r, s, t, u;

  h = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (h >= (e - 1) || g >= (d - 1))
    return;

  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*w)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  int x = (h - 1) * 12 + (g - 1);
  int y = x * 12 * 5;
  __global double(*z)[5] = (__global double(*)[5]) & c[y];

  for (i = 0; i < f; i++) {
    z[i][0] = v[i][h][g][3];
    l = v[i][h][g][3] / v[i][h][g][0];
    k = 0.50 * (v[i][h][g][1] * v[i][h][g][1] + v[i][h][g][2] * v[i][h][g][2] + v[i][h][g][3] * v[i][h][g][3]) / v[i][h][g][0];
    z[i][1] = v[i][h][g][1] * l;
    z[i][2] = v[i][h][g][2] * l;
    z[i][3] = v[i][h][g][3] * l + 0.40e+00 * (v[i][h][g][4] - k);
    z[i][4] = (1.40e+00 * v[i][h][g][4] - 0.40e+00 * k) * l;
  }

  for (i = 1; i < f - 1; i++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (z[i + 1][j] - z[i - 1][j]);
    }
  }

  for (i = 1; i < f; i++) {
    m = 1.0 / v[i][h][g][0];

    n = m * v[i][h][g][1];
    o = m * v[i][h][g][2];
    p = m * v[i][h][g][3];
    q = m * v[i][h][g][4];

    m = 1.0 / v[i - 1][h][g][0];

    r = m * v[i - 1][h][g][1];
    s = m * v[i - 1][h][g][2];
    t = m * v[i - 1][h][g][3];
    u = m * v[i - 1][h][g][4];

    z[i][1] = (1.0 / (1.0 / (12 - 1))) * (n - r);
    z[i][2] = (1.0 / (1.0 / (12 - 1))) * (o - s);
    z[i][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (p - t);
    z[i][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((n * n + o * o + p * p) - (r * r + s * s + t * t)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (p * p - t * t) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (q - u);
  }

  for (i = 1; i < f - 1; i++) {
    w[i][h][g][0] = w[i][h][g][0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][0] - 2.0 * v[i][h][g][0] + v[i - 1][h][g][0]);
    w[i][h][g][1] = w[i][h][g][1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[i + 1][1] - z[i][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][1] - 2.0 * v[i][h][g][1] + v[i - 1][h][g][1]);
    w[i][h][g][2] = w[i][h][g][2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[i + 1][2] - z[i][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][2] - 2.0 * v[i][h][g][2] + v[i - 1][h][g][2]);
    w[i][h][g][3] = w[i][h][g][3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[i + 1][3] - z[i][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][3] - 2.0 * v[i][h][g][3] + v[i - 1][h][g][3]);
    w[i][h][g][4] = w[i][h][g][4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[i + 1][4] - z[i][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][4] - 2.0 * v[i][h][g][4] + v[i - 1][h][g][4]);
  }

  for (j = 0; j < 5; j++) {
    w[1][h][g][j] = w[1][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * v[1][h][g][j] - 4.0 * v[2][h][g][j] + v[3][h][g][j]);
    w[2][h][g][j] = w[2][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * v[1][h][g][j] + 6.0 * v[2][h][g][j] - 4.0 * v[3][h][g][j] + v[4][h][g][j]);
  }

  for (i = 3; i < f - 3; i++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i - 2][h][g][j] - 4.0 * v[i - 1][h][g][j] + 6.0 * v[i][h][g][j] - 4.0 * v[i + 1][h][g][j] + v[i + 2][h][g][j]);
    }
  }

  for (j = 0; j < 5; j++) {
    w[f - 3][h][g][j] = w[f - 3][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[f - 5][h][g][j] - 4.0 * v[f - 4][h][g][j] + 6.0 * v[f - 3][h][g][j] - 4.0 * v[f - 2][h][g][j]);
    w[f - 2][h][g][j] = w[f - 2][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[f - 4][h][g][j] - 4.0 * v[f - 3][h][g][j] + 5.0 * v[f - 2][h][g][j]);
  }
}","[  7  16  13 ..., 127   0 127]"
272,npb-3.3-LU-erhs4,B,296,11,3,0,88,0,189794376,32,CPU,15.576715,21.515437,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i, j;
  double k;
  double l;
  double m;
  double n, o, p, q;
  double r, s, t, u;

  h = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (h >= (e - 1) || g >= (d - 1))
    return;

  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*w)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  int x = (h - 1) * 12 + (g - 1);
  int y = x * 12 * 5;
  __global double(*z)[5] = (__global double(*)[5]) & c[y];

  for (i = 0; i < f; i++) {
    z[i][0] = v[i][h][g][3];
    l = v[i][h][g][3] / v[i][h][g][0];
    k = 0.50 * (v[i][h][g][1] * v[i][h][g][1] + v[i][h][g][2] * v[i][h][g][2] + v[i][h][g][3] * v[i][h][g][3]) / v[i][h][g][0];
    z[i][1] = v[i][h][g][1] * l;
    z[i][2] = v[i][h][g][2] * l;
    z[i][3] = v[i][h][g][3] * l + 0.40e+00 * (v[i][h][g][4] - k);
    z[i][4] = (1.40e+00 * v[i][h][g][4] - 0.40e+00 * k) * l;
  }

  for (i = 1; i < f - 1; i++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (z[i + 1][j] - z[i - 1][j]);
    }
  }

  for (i = 1; i < f; i++) {
    m = 1.0 / v[i][h][g][0];

    n = m * v[i][h][g][1];
    o = m * v[i][h][g][2];
    p = m * v[i][h][g][3];
    q = m * v[i][h][g][4];

    m = 1.0 / v[i - 1][h][g][0];

    r = m * v[i - 1][h][g][1];
    s = m * v[i - 1][h][g][2];
    t = m * v[i - 1][h][g][3];
    u = m * v[i - 1][h][g][4];

    z[i][1] = (1.0 / (1.0 / (12 - 1))) * (n - r);
    z[i][2] = (1.0 / (1.0 / (12 - 1))) * (o - s);
    z[i][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (p - t);
    z[i][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((n * n + o * o + p * p) - (r * r + s * s + t * t)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (p * p - t * t) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (q - u);
  }

  for (i = 1; i < f - 1; i++) {
    w[i][h][g][0] = w[i][h][g][0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][0] - 2.0 * v[i][h][g][0] + v[i - 1][h][g][0]);
    w[i][h][g][1] = w[i][h][g][1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[i + 1][1] - z[i][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][1] - 2.0 * v[i][h][g][1] + v[i - 1][h][g][1]);
    w[i][h][g][2] = w[i][h][g][2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[i + 1][2] - z[i][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][2] - 2.0 * v[i][h][g][2] + v[i - 1][h][g][2]);
    w[i][h][g][3] = w[i][h][g][3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[i + 1][3] - z[i][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][3] - 2.0 * v[i][h][g][3] + v[i - 1][h][g][3]);
    w[i][h][g][4] = w[i][h][g][4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[i + 1][4] - z[i][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][4] - 2.0 * v[i][h][g][4] + v[i - 1][h][g][4]);
  }

  for (j = 0; j < 5; j++) {
    w[1][h][g][j] = w[1][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * v[1][h][g][j] - 4.0 * v[2][h][g][j] + v[3][h][g][j]);
    w[2][h][g][j] = w[2][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * v[1][h][g][j] + 6.0 * v[2][h][g][j] - 4.0 * v[3][h][g][j] + v[4][h][g][j]);
  }

  for (i = 3; i < f - 3; i++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i - 2][h][g][j] - 4.0 * v[i - 1][h][g][j] + 6.0 * v[i][h][g][j] - 4.0 * v[i + 1][h][g][j] + v[i + 2][h][g][j]);
    }
  }

  for (j = 0; j < 5; j++) {
    w[f - 3][h][g][j] = w[f - 3][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[f - 5][h][g][j] - 4.0 * v[f - 4][h][g][j] + 6.0 * v[f - 3][h][g][j] - 4.0 * v[f - 2][h][g][j]);
    w[f - 2][h][g][j] = w[f - 2][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[f - 4][h][g][j] - 4.0 * v[f - 3][h][g][j] + 5.0 * v[f - 2][h][g][j]);
  }
}","[  7  16  13 ..., 127   0 127]"
273,npb-3.3-LU-erhs4,C,296,11,3,0,88,0,755866968,64,CPU,58.778884,110.303002,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i, j;
  double k;
  double l;
  double m;
  double n, o, p, q;
  double r, s, t, u;

  h = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (h >= (e - 1) || g >= (d - 1))
    return;

  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*w)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  int x = (h - 1) * 12 + (g - 1);
  int y = x * 12 * 5;
  __global double(*z)[5] = (__global double(*)[5]) & c[y];

  for (i = 0; i < f; i++) {
    z[i][0] = v[i][h][g][3];
    l = v[i][h][g][3] / v[i][h][g][0];
    k = 0.50 * (v[i][h][g][1] * v[i][h][g][1] + v[i][h][g][2] * v[i][h][g][2] + v[i][h][g][3] * v[i][h][g][3]) / v[i][h][g][0];
    z[i][1] = v[i][h][g][1] * l;
    z[i][2] = v[i][h][g][2] * l;
    z[i][3] = v[i][h][g][3] * l + 0.40e+00 * (v[i][h][g][4] - k);
    z[i][4] = (1.40e+00 * v[i][h][g][4] - 0.40e+00 * k) * l;
  }

  for (i = 1; i < f - 1; i++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (z[i + 1][j] - z[i - 1][j]);
    }
  }

  for (i = 1; i < f; i++) {
    m = 1.0 / v[i][h][g][0];

    n = m * v[i][h][g][1];
    o = m * v[i][h][g][2];
    p = m * v[i][h][g][3];
    q = m * v[i][h][g][4];

    m = 1.0 / v[i - 1][h][g][0];

    r = m * v[i - 1][h][g][1];
    s = m * v[i - 1][h][g][2];
    t = m * v[i - 1][h][g][3];
    u = m * v[i - 1][h][g][4];

    z[i][1] = (1.0 / (1.0 / (12 - 1))) * (n - r);
    z[i][2] = (1.0 / (1.0 / (12 - 1))) * (o - s);
    z[i][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (p - t);
    z[i][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((n * n + o * o + p * p) - (r * r + s * s + t * t)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (p * p - t * t) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (q - u);
  }

  for (i = 1; i < f - 1; i++) {
    w[i][h][g][0] = w[i][h][g][0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][0] - 2.0 * v[i][h][g][0] + v[i - 1][h][g][0]);
    w[i][h][g][1] = w[i][h][g][1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[i + 1][1] - z[i][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][1] - 2.0 * v[i][h][g][1] + v[i - 1][h][g][1]);
    w[i][h][g][2] = w[i][h][g][2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[i + 1][2] - z[i][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][2] - 2.0 * v[i][h][g][2] + v[i - 1][h][g][2]);
    w[i][h][g][3] = w[i][h][g][3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[i + 1][3] - z[i][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][3] - 2.0 * v[i][h][g][3] + v[i - 1][h][g][3]);
    w[i][h][g][4] = w[i][h][g][4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[i + 1][4] - z[i][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][4] - 2.0 * v[i][h][g][4] + v[i - 1][h][g][4]);
  }

  for (j = 0; j < 5; j++) {
    w[1][h][g][j] = w[1][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * v[1][h][g][j] - 4.0 * v[2][h][g][j] + v[3][h][g][j]);
    w[2][h][g][j] = w[2][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * v[1][h][g][j] + 6.0 * v[2][h][g][j] - 4.0 * v[3][h][g][j] + v[4][h][g][j]);
  }

  for (i = 3; i < f - 3; i++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i - 2][h][g][j] - 4.0 * v[i - 1][h][g][j] + 6.0 * v[i][h][g][j] - 4.0 * v[i + 1][h][g][j] + v[i + 2][h][g][j]);
    }
  }

  for (j = 0; j < 5; j++) {
    w[f - 3][h][g][j] = w[f - 3][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[f - 5][h][g][j] - 4.0 * v[f - 4][h][g][j] + 6.0 * v[f - 3][h][g][j] - 4.0 * v[f - 2][h][g][j]);
    w[f - 2][h][g][j] = w[f - 2][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[f - 4][h][g][j] - 4.0 * v[f - 3][h][g][j] + 5.0 * v[f - 2][h][g][j]);
  }
}","[  7  16  13 ..., 127   0 127]"
274,npb-3.3-LU-erhs4,S,296,11,3,0,88,0,349464,60,CPU,0.213573,0.273766,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i, j;
  double k;
  double l;
  double m;
  double n, o, p, q;
  double r, s, t, u;

  h = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (h >= (e - 1) || g >= (d - 1))
    return;

  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*w)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  int x = (h - 1) * 12 + (g - 1);
  int y = x * 12 * 5;
  __global double(*z)[5] = (__global double(*)[5]) & c[y];

  for (i = 0; i < f; i++) {
    z[i][0] = v[i][h][g][3];
    l = v[i][h][g][3] / v[i][h][g][0];
    k = 0.50 * (v[i][h][g][1] * v[i][h][g][1] + v[i][h][g][2] * v[i][h][g][2] + v[i][h][g][3] * v[i][h][g][3]) / v[i][h][g][0];
    z[i][1] = v[i][h][g][1] * l;
    z[i][2] = v[i][h][g][2] * l;
    z[i][3] = v[i][h][g][3] * l + 0.40e+00 * (v[i][h][g][4] - k);
    z[i][4] = (1.40e+00 * v[i][h][g][4] - 0.40e+00 * k) * l;
  }

  for (i = 1; i < f - 1; i++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (z[i + 1][j] - z[i - 1][j]);
    }
  }

  for (i = 1; i < f; i++) {
    m = 1.0 / v[i][h][g][0];

    n = m * v[i][h][g][1];
    o = m * v[i][h][g][2];
    p = m * v[i][h][g][3];
    q = m * v[i][h][g][4];

    m = 1.0 / v[i - 1][h][g][0];

    r = m * v[i - 1][h][g][1];
    s = m * v[i - 1][h][g][2];
    t = m * v[i - 1][h][g][3];
    u = m * v[i - 1][h][g][4];

    z[i][1] = (1.0 / (1.0 / (12 - 1))) * (n - r);
    z[i][2] = (1.0 / (1.0 / (12 - 1))) * (o - s);
    z[i][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (p - t);
    z[i][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((n * n + o * o + p * p) - (r * r + s * s + t * t)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (p * p - t * t) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (q - u);
  }

  for (i = 1; i < f - 1; i++) {
    w[i][h][g][0] = w[i][h][g][0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][0] - 2.0 * v[i][h][g][0] + v[i - 1][h][g][0]);
    w[i][h][g][1] = w[i][h][g][1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[i + 1][1] - z[i][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][1] - 2.0 * v[i][h][g][1] + v[i - 1][h][g][1]);
    w[i][h][g][2] = w[i][h][g][2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[i + 1][2] - z[i][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][2] - 2.0 * v[i][h][g][2] + v[i - 1][h][g][2]);
    w[i][h][g][3] = w[i][h][g][3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[i + 1][3] - z[i][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][3] - 2.0 * v[i][h][g][3] + v[i - 1][h][g][3]);
    w[i][h][g][4] = w[i][h][g][4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[i + 1][4] - z[i][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][4] - 2.0 * v[i][h][g][4] + v[i - 1][h][g][4]);
  }

  for (j = 0; j < 5; j++) {
    w[1][h][g][j] = w[1][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * v[1][h][g][j] - 4.0 * v[2][h][g][j] + v[3][h][g][j]);
    w[2][h][g][j] = w[2][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * v[1][h][g][j] + 6.0 * v[2][h][g][j] - 4.0 * v[3][h][g][j] + v[4][h][g][j]);
  }

  for (i = 3; i < f - 3; i++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i - 2][h][g][j] - 4.0 * v[i - 1][h][g][j] + 6.0 * v[i][h][g][j] - 4.0 * v[i + 1][h][g][j] + v[i + 2][h][g][j]);
    }
  }

  for (j = 0; j < 5; j++) {
    w[f - 3][h][g][j] = w[f - 3][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[f - 5][h][g][j] - 4.0 * v[f - 4][h][g][j] + 6.0 * v[f - 3][h][g][j] - 4.0 * v[f - 2][h][g][j]);
    w[f - 2][h][g][j] = w[f - 2][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[f - 4][h][g][j] - 4.0 * v[f - 3][h][g][j] + 5.0 * v[f - 2][h][g][j]);
  }
}","[  7  16  13 ..., 127   0 127]"
275,npb-3.3-LU-erhs4,W,296,11,3,0,88,0,6346800,62,CPU,0.505954,0.625075,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f) {
  int g, h, i, j;
  double k;
  double l;
  double m;
  double n, o, p, q;
  double r, s, t, u;

  h = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (h >= (e - 1) || g >= (d - 1))
    return;

  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*w)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  int x = (h - 1) * 12 + (g - 1);
  int y = x * 12 * 5;
  __global double(*z)[5] = (__global double(*)[5]) & c[y];

  for (i = 0; i < f; i++) {
    z[i][0] = v[i][h][g][3];
    l = v[i][h][g][3] / v[i][h][g][0];
    k = 0.50 * (v[i][h][g][1] * v[i][h][g][1] + v[i][h][g][2] * v[i][h][g][2] + v[i][h][g][3] * v[i][h][g][3]) / v[i][h][g][0];
    z[i][1] = v[i][h][g][1] * l;
    z[i][2] = v[i][h][g][2] * l;
    z[i][3] = v[i][h][g][3] * l + 0.40e+00 * (v[i][h][g][4] - k);
    z[i][4] = (1.40e+00 * v[i][h][g][4] - 0.40e+00 * k) * l;
  }

  for (i = 1; i < f - 1; i++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (z[i + 1][j] - z[i - 1][j]);
    }
  }

  for (i = 1; i < f; i++) {
    m = 1.0 / v[i][h][g][0];

    n = m * v[i][h][g][1];
    o = m * v[i][h][g][2];
    p = m * v[i][h][g][3];
    q = m * v[i][h][g][4];

    m = 1.0 / v[i - 1][h][g][0];

    r = m * v[i - 1][h][g][1];
    s = m * v[i - 1][h][g][2];
    t = m * v[i - 1][h][g][3];
    u = m * v[i - 1][h][g][4];

    z[i][1] = (1.0 / (1.0 / (12 - 1))) * (n - r);
    z[i][2] = (1.0 / (1.0 / (12 - 1))) * (o - s);
    z[i][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (p - t);
    z[i][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((n * n + o * o + p * p) - (r * r + s * s + t * t)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (p * p - t * t) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (q - u);
  }

  for (i = 1; i < f - 1; i++) {
    w[i][h][g][0] = w[i][h][g][0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][0] - 2.0 * v[i][h][g][0] + v[i - 1][h][g][0]);
    w[i][h][g][1] = w[i][h][g][1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[i + 1][1] - z[i][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][1] - 2.0 * v[i][h][g][1] + v[i - 1][h][g][1]);
    w[i][h][g][2] = w[i][h][g][2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[i + 1][2] - z[i][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][2] - 2.0 * v[i][h][g][2] + v[i - 1][h][g][2]);
    w[i][h][g][3] = w[i][h][g][3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[i + 1][3] - z[i][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][3] - 2.0 * v[i][h][g][3] + v[i - 1][h][g][3]);
    w[i][h][g][4] = w[i][h][g][4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[i + 1][4] - z[i][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (v[i + 1][h][g][4] - 2.0 * v[i][h][g][4] + v[i - 1][h][g][4]);
  }

  for (j = 0; j < 5; j++) {
    w[1][h][g][j] = w[1][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * v[1][h][g][j] - 4.0 * v[2][h][g][j] + v[3][h][g][j]);
    w[2][h][g][j] = w[2][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * v[1][h][g][j] + 6.0 * v[2][h][g][j] - 4.0 * v[3][h][g][j] + v[4][h][g][j]);
  }

  for (i = 3; i < f - 3; i++) {
    for (j = 0; j < 5; j++) {
      w[i][h][g][j] = w[i][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[i - 2][h][g][j] - 4.0 * v[i - 1][h][g][j] + 6.0 * v[i][h][g][j] - 4.0 * v[i + 1][h][g][j] + v[i + 2][h][g][j]);
    }
  }

  for (j = 0; j < 5; j++) {
    w[f - 3][h][g][j] = w[f - 3][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[f - 5][h][g][j] - 4.0 * v[f - 4][h][g][j] + 6.0 * v[f - 3][h][g][j] - 4.0 * v[f - 2][h][g][j]);
    w[f - 2][h][g][j] = w[f - 2][h][g][j] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (v[f - 4][h][g][j] - 4.0 * v[f - 3][h][g][j] + 5.0 * v[f - 2][h][g][j]);
  }
}","[  7  16  13 ..., 127   0 127]"
276,npb-3.3-LU-error,A,52,10,13,8,15,0,47333288,1,CPU,1.8513080000000002,7.227514,"__kernel void A(__global double* a, __global double* b, __global double* c, __local double* d, int e, int f, int g) {
  int h, i, j, k, l;
  double m;
  double n[5];
  __local double* o;

  j = get_global_id(0) + 1;
  l = get_local_id(0);
  o = &d[l * 5];

  for (k = 0; k < 5; k++) {
    o[k] = 0.0;
  }

  if (j < g - 1) {
    __global double(*p)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

    for (i = 1; i < (f - 1); i++) {
      for (h = 1; h < (e - 1); h++) {
        A(h, i, j, n, b);
        for (k = 0; k < 5; k++) {
          m = (n[k] - p[j][i][h][k]);
          o[k] = o[k] + m * m;
        }
      }
    }
  }

  barrier(1);

  if (l == 0) {
    for (h = 1; h < get_local_size(0); h++) {
      __local double* q = &d[h * 5];
      for (k = 0; k < 5; k++) {
        o[k] += q[k];
      }
    }

    __global double* r = &c[get_group_id(0) * 5];
    for (k = 0; k < 5; k++) {
      r[k] = o[k];
    }
  }
}","[129 129 129 ..., 127   0 127]"
277,npb-3.3-LU-error,B,52,10,13,8,15,0,189794376,1,CPU,7.058781,24.046861,"__kernel void A(__global double* a, __global double* b, __global double* c, __local double* d, int e, int f, int g) {
  int h, i, j, k, l;
  double m;
  double n[5];
  __local double* o;

  j = get_global_id(0) + 1;
  l = get_local_id(0);
  o = &d[l * 5];

  for (k = 0; k < 5; k++) {
    o[k] = 0.0;
  }

  if (j < g - 1) {
    __global double(*p)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

    for (i = 1; i < (f - 1); i++) {
      for (h = 1; h < (e - 1); h++) {
        A(h, i, j, n, b);
        for (k = 0; k < 5; k++) {
          m = (n[k] - p[j][i][h][k]);
          o[k] = o[k] + m * m;
        }
      }
    }
  }

  barrier(1);

  if (l == 0) {
    for (h = 1; h < get_local_size(0); h++) {
      __local double* q = &d[h * 5];
      for (k = 0; k < 5; k++) {
        o[k] += q[k];
      }
    }

    __global double* r = &c[get_group_id(0) * 5];
    for (k = 0; k < 5; k++) {
      r[k] = o[k];
    }
  }
}","[129 129 129 ..., 127   0 127]"
278,npb-3.3-LU-error,C,52,10,13,8,15,0,755866968,1,CPU,28.400616999999997,105.510202,"__kernel void A(__global double* a, __global double* b, __global double* c, __local double* d, int e, int f, int g) {
  int h, i, j, k, l;
  double m;
  double n[5];
  __local double* o;

  j = get_global_id(0) + 1;
  l = get_local_id(0);
  o = &d[l * 5];

  for (k = 0; k < 5; k++) {
    o[k] = 0.0;
  }

  if (j < g - 1) {
    __global double(*p)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

    for (i = 1; i < (f - 1); i++) {
      for (h = 1; h < (e - 1); h++) {
        A(h, i, j, n, b);
        for (k = 0; k < 5; k++) {
          m = (n[k] - p[j][i][h][k]);
          o[k] = o[k] + m * m;
        }
      }
    }
  }

  barrier(1);

  if (l == 0) {
    for (h = 1; h < get_local_size(0); h++) {
      __local double* q = &d[h * 5];
      for (k = 0; k < 5; k++) {
        o[k] += q[k];
      }
    }

    __global double* r = &c[get_group_id(0) * 5];
    for (k = 0; k < 5; k++) {
      r[k] = o[k];
    }
  }
}","[129 129 129 ..., 127   0 127]"
279,npb-3.3-LU-error,S,52,10,13,8,15,0,349464,1,CPU,0.136022,0.27224299999999996,"__kernel void A(__global double* a, __global double* b, __global double* c, __local double* d, int e, int f, int g) {
  int h, i, j, k, l;
  double m;
  double n[5];
  __local double* o;

  j = get_global_id(0) + 1;
  l = get_local_id(0);
  o = &d[l * 5];

  for (k = 0; k < 5; k++) {
    o[k] = 0.0;
  }

  if (j < g - 1) {
    __global double(*p)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

    for (i = 1; i < (f - 1); i++) {
      for (h = 1; h < (e - 1); h++) {
        A(h, i, j, n, b);
        for (k = 0; k < 5; k++) {
          m = (n[k] - p[j][i][h][k]);
          o[k] = o[k] + m * m;
        }
      }
    }
  }

  barrier(1);

  if (l == 0) {
    for (h = 1; h < get_local_size(0); h++) {
      __local double* q = &d[h * 5];
      for (k = 0; k < 5; k++) {
        o[k] += q[k];
      }
    }

    __global double* r = &c[get_group_id(0) * 5];
    for (k = 0; k < 5; k++) {
      r[k] = o[k];
    }
  }
}","[129 129 129 ..., 127   0 127]"
280,npb-3.3-LU-error,W,52,10,13,8,15,0,6346800,1,CPU,0.336465,1.288864,"__kernel void A(__global double* a, __global double* b, __global double* c, __local double* d, int e, int f, int g) {
  int h, i, j, k, l;
  double m;
  double n[5];
  __local double* o;

  j = get_global_id(0) + 1;
  l = get_local_id(0);
  o = &d[l * 5];

  for (k = 0; k < 5; k++) {
    o[k] = 0.0;
  }

  if (j < g - 1) {
    __global double(*p)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

    for (i = 1; i < (f - 1); i++) {
      for (h = 1; h < (e - 1); h++) {
        A(h, i, j, n, b);
        for (k = 0; k < 5; k++) {
          m = (n[k] - p[j][i][h][k]);
          o[k] = o[k] + m * m;
        }
      }
    }
  }

  barrier(1);

  if (l == 0) {
    for (h = 1; h < get_local_size(0); h++) {
      __local double* q = &d[h * 5];
      for (k = 0; k < 5; k++) {
        o[k] += q[k];
      }
    }

    __global double* r = &c[get_group_id(0) * 5];
    for (k = 0; k < 5; k++) {
      r[k] = o[k];
    }
  }
}","[129 129 129 ..., 127   0 127]"
281,npb-3.3-LU-l2norm,A,19,9,11,8,3,0,47333288,6,CPU,0.73456,2.4390560000000003,"__kernel void A(__global double* a, __global double* b, __local double* c, int d, int e, int f, int g, int h) {
  int i, j, k, l, m;
  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __local double* o;

  k = get_global_id(0) + 1;
  m = get_local_id(0);
  o = &c[m * 5];

  for (l = 0; l < 5; l++) {
    o[l] = 0.0;
  }

  if (k < 12 - 1) {
    n = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

    for (j = g; j < h; j++) {
      for (i = e; i < f; i++) {
        for (l = 0; l < 5; l++) {
          o[l] = o[l] + n[k][j][i][l] * n[k][j][i][l];
        }
      }
    }
  }

  barrier(1);

  if (m == 0) {
    for (i = 1; i < get_local_size(0); i++) {
      __local double* p = &c[i * 5];
      for (l = 0; l < 5; l++) {
        o[l] += p[l];
      }
    }

    __global double* q = &b[get_group_id(0) * 5];
    for (l = 0; l < 5; l++) {
      q[l] = o[l];
    }
  }
}
","[129 129 129 ...,   0 127   0]"
282,npb-3.3-LU-l2norm,B,19,9,11,8,3,0,189794376,10,CPU,2.542532,6.3242,"__kernel void A(__global double* a, __global double* b, __local double* c, int d, int e, int f, int g, int h) {
  int i, j, k, l, m;
  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __local double* o;

  k = get_global_id(0) + 1;
  m = get_local_id(0);
  o = &c[m * 5];

  for (l = 0; l < 5; l++) {
    o[l] = 0.0;
  }

  if (k < 12 - 1) {
    n = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

    for (j = g; j < h; j++) {
      for (i = e; i < f; i++) {
        for (l = 0; l < 5; l++) {
          o[l] = o[l] + n[k][j][i][l] * n[k][j][i][l];
        }
      }
    }
  }

  barrier(1);

  if (m == 0) {
    for (i = 1; i < get_local_size(0); i++) {
      __local double* p = &c[i * 5];
      for (l = 0; l < 5; l++) {
        o[l] += p[l];
      }
    }

    __global double* q = &b[get_group_id(0) * 5];
    for (l = 0; l < 5; l++) {
      q[l] = o[l];
    }
  }
}
","[129 129 129 ...,   0 127   0]"
283,npb-3.3-LU-l2norm,C,19,9,11,8,3,0,755866968,16,CPU,8.704397,16.852732999999994,"__kernel void A(__global double* a, __global double* b, __local double* c, int d, int e, int f, int g, int h) {
  int i, j, k, l, m;
  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __local double* o;

  k = get_global_id(0) + 1;
  m = get_local_id(0);
  o = &c[m * 5];

  for (l = 0; l < 5; l++) {
    o[l] = 0.0;
  }

  if (k < 12 - 1) {
    n = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

    for (j = g; j < h; j++) {
      for (i = e; i < f; i++) {
        for (l = 0; l < 5; l++) {
          o[l] = o[l] + n[k][j][i][l] * n[k][j][i][l];
        }
      }
    }
  }

  barrier(1);

  if (m == 0) {
    for (i = 1; i < get_local_size(0); i++) {
      __local double* p = &c[i * 5];
      for (l = 0; l < 5; l++) {
        o[l] += p[l];
      }
    }

    __global double* q = &b[get_group_id(0) * 5];
    for (l = 0; l < 5; l++) {
      q[l] = o[l];
    }
  }
}
","[129 129 129 ...,   0 127   0]"
284,npb-3.3-LU-l2norm,S,19,9,11,8,3,0,349464,1,CPU,0.13301500000000002,0.19685,"__kernel void A(__global double* a, __global double* b, __local double* c, int d, int e, int f, int g, int h) {
  int i, j, k, l, m;
  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __local double* o;

  k = get_global_id(0) + 1;
  m = get_local_id(0);
  o = &c[m * 5];

  for (l = 0; l < 5; l++) {
    o[l] = 0.0;
  }

  if (k < 12 - 1) {
    n = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

    for (j = g; j < h; j++) {
      for (i = e; i < f; i++) {
        for (l = 0; l < 5; l++) {
          o[l] = o[l] + n[k][j][i][l] * n[k][j][i][l];
        }
      }
    }
  }

  barrier(1);

  if (m == 0) {
    for (i = 1; i < get_local_size(0); i++) {
      __local double* p = &c[i * 5];
      for (l = 0; l < 5; l++) {
        o[l] += p[l];
      }
    }

    __global double* q = &b[get_group_id(0) * 5];
    for (l = 0; l < 5; l++) {
      q[l] = o[l];
    }
  }
}
","[129 129 129 ...,   0 127   0]"
285,npb-3.3-LU-l2norm,W,19,9,11,8,3,0,6346800,2,CPU,0.177189,0.685822,"__kernel void A(__global double* a, __global double* b, __local double* c, int d, int e, int f, int g, int h) {
  int i, j, k, l, m;
  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __local double* o;

  k = get_global_id(0) + 1;
  m = get_local_id(0);
  o = &c[m * 5];

  for (l = 0; l < 5; l++) {
    o[l] = 0.0;
  }

  if (k < 12 - 1) {
    n = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

    for (j = g; j < h; j++) {
      for (i = e; i < f; i++) {
        for (l = 0; l < 5; l++) {
          o[l] = o[l] + n[k][j][i][l] * n[k][j][i][l];
        }
      }
    }
  }

  barrier(1);

  if (m == 0) {
    for (i = 1; i < get_local_size(0); i++) {
      __local double* p = &c[i * 5];
      for (l = 0; l < 5; l++) {
        o[l] += p[l];
      }
    }

    __global double* q = &b[get_group_id(0) * 5];
    for (l = 0; l < 5; l++) {
      q[l] = o[l];
    }
  }
}
","[129 129 129 ...,   0 127   0]"
286,npb-3.3-LU-pintgr1,A,37,2,3,0,18,0,47333288,62,CPU,0.171724,0.176467,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h, int i) {
  int j, k, l;

  k = get_global_id(1) + f;
  j = get_global_id(0) + d;
  if (k >= g || j >= e)
    return;

  __global double(*m)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*n)[12 + 2] = (__global double(*)[12 + 2])b;
  __global double(*o)[12 + 2] = (__global double(*)[12 + 2])c;

  l = h;

  n[k][j] = 0.40e+00 * (m[l][k][j][4] - 0.50 * (m[l][k][j][1] * m[l][k][j][1] + m[l][k][j][2] * m[l][k][j][2] + m[l][k][j][3] * m[l][k][j][3]) / m[l][k][j][0]);

  l = i - 1;

  o[k][j] = 0.40e+00 * (m[l][k][j][4] - 0.50 * (m[l][k][j][1] * m[l][k][j][1] + m[l][k][j][2] * m[l][k][j][2] + m[l][k][j][3] * m[l][k][j][3]) / m[l][k][j][0]);
}","[129 129 129 ...,  26   0 127]"
287,npb-3.3-LU-pintgr1,B,37,2,3,0,18,0,189794664,32,GPU,0.23933000000000001,0.181075,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h, int i) {
  int j, k, l;

  k = get_global_id(1) + f;
  j = get_global_id(0) + d;
  if (k >= g || j >= e)
    return;

  __global double(*m)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*n)[12 + 2] = (__global double(*)[12 + 2])b;
  __global double(*o)[12 + 2] = (__global double(*)[12 + 2])c;

  l = h;

  n[k][j] = 0.40e+00 * (m[l][k][j][4] - 0.50 * (m[l][k][j][1] * m[l][k][j][1] + m[l][k][j][2] * m[l][k][j][2] + m[l][k][j][3] * m[l][k][j][3]) / m[l][k][j][0]);

  l = i - 1;

  o[k][j] = 0.40e+00 * (m[l][k][j][4] - 0.50 * (m[l][k][j][1] * m[l][k][j][1] + m[l][k][j][2] * m[l][k][j][2] + m[l][k][j][3] * m[l][k][j][3]) / m[l][k][j][0]);
}","[129 129 129 ...,  26   0 127]"
288,npb-3.3-LU-pintgr1,C,37,2,3,0,18,0,755867256,64,GPU,0.330779,0.195962,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h, int i) {
  int j, k, l;

  k = get_global_id(1) + f;
  j = get_global_id(0) + d;
  if (k >= g || j >= e)
    return;

  __global double(*m)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*n)[12 + 2] = (__global double(*)[12 + 2])b;
  __global double(*o)[12 + 2] = (__global double(*)[12 + 2])c;

  l = h;

  n[k][j] = 0.40e+00 * (m[l][k][j][4] - 0.50 * (m[l][k][j][1] * m[l][k][j][1] + m[l][k][j][2] * m[l][k][j][2] + m[l][k][j][3] * m[l][k][j][3]) / m[l][k][j][0]);

  l = i - 1;

  o[k][j] = 0.40e+00 * (m[l][k][j][4] - 0.50 * (m[l][k][j][1] * m[l][k][j][1] + m[l][k][j][2] * m[l][k][j][2] + m[l][k][j][3] * m[l][k][j][3]) / m[l][k][j][0]);
}","[129 129 129 ...,  26   0 127]"
289,npb-3.3-LU-pintgr1,S,37,2,3,0,18,0,349464,60,CPU,0.105823,0.164474,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h, int i) {
  int j, k, l;

  k = get_global_id(1) + f;
  j = get_global_id(0) + d;
  if (k >= g || j >= e)
    return;

  __global double(*m)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*n)[12 + 2] = (__global double(*)[12 + 2])b;
  __global double(*o)[12 + 2] = (__global double(*)[12 + 2])c;

  l = h;

  n[k][j] = 0.40e+00 * (m[l][k][j][4] - 0.50 * (m[l][k][j][1] * m[l][k][j][1] + m[l][k][j][2] * m[l][k][j][2] + m[l][k][j][3] * m[l][k][j][3]) / m[l][k][j][0]);

  l = i - 1;

  o[k][j] = 0.40e+00 * (m[l][k][j][4] - 0.50 * (m[l][k][j][1] * m[l][k][j][1] + m[l][k][j][2] * m[l][k][j][2] + m[l][k][j][3] * m[l][k][j][3]) / m[l][k][j][0]);
}","[129 129 129 ...,  26   0 127]"
290,npb-3.3-LU-pintgr1,W,37,2,3,0,18,0,6346800,62,CPU,0.129024,0.177568,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h, int i) {
  int j, k, l;

  k = get_global_id(1) + f;
  j = get_global_id(0) + d;
  if (k >= g || j >= e)
    return;

  __global double(*m)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*n)[12 + 2] = (__global double(*)[12 + 2])b;
  __global double(*o)[12 + 2] = (__global double(*)[12 + 2])c;

  l = h;

  n[k][j] = 0.40e+00 * (m[l][k][j][4] - 0.50 * (m[l][k][j][1] * m[l][k][j][1] + m[l][k][j][2] * m[l][k][j][2] + m[l][k][j][3] * m[l][k][j][3]) / m[l][k][j][0]);

  l = i - 1;

  o[k][j] = 0.40e+00 * (m[l][k][j][4] - 0.50 * (m[l][k][j][1] * m[l][k][j][1] + m[l][k][j][2] * m[l][k][j][2] + m[l][k][j][3] * m[l][k][j][3]) / m[l][k][j][0]);
}","[129 129 129 ...,  26   0 127]"
291,npb-3.3-LU-pintgr2,A,44,2,3,0,18,0,47333288,62,CPU,0.156723,0.174317,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h, int i) {
  int j, k;

  k = get_global_id(1) + h;
  j = get_global_id(0) + d;
  if (k >= i || j >= e)
    return;

  __global double(*l)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*m)[12 + 2] = (__global double(*)[12 + 2])b;
  __global double(*n)[12 + 2] = (__global double(*)[12 + 2])c;

  m[k][j] = 0.40e+00 * (l[k][f][j][4] - 0.50 * (l[k][f][j][1] * l[k][f][j][1] + l[k][f][j][2] * l[k][f][j][2] + l[k][f][j][3] * l[k][f][j][3]) / l[k][f][j][0]);

  n[k][j] = 0.40e+00 * (l[k][g - 1][j][4] - 0.50 * (l[k][g - 1][j][1] * l[k][g - 1][j][1] + l[k][g - 1][j][2] * l[k][g - 1][j][2] + l[k][g - 1][j][3] * l[k][g - 1][j][3]) / l[k][g - 1][j][0]);
}","[129 129 129 ...,  26   0 127]"
292,npb-3.3-LU-pintgr2,B,44,2,3,0,18,0,189794664,32,GPU,0.209173,0.177491,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h, int i) {
  int j, k;

  k = get_global_id(1) + h;
  j = get_global_id(0) + d;
  if (k >= i || j >= e)
    return;

  __global double(*l)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*m)[12 + 2] = (__global double(*)[12 + 2])b;
  __global double(*n)[12 + 2] = (__global double(*)[12 + 2])c;

  m[k][j] = 0.40e+00 * (l[k][f][j][4] - 0.50 * (l[k][f][j][1] * l[k][f][j][1] + l[k][f][j][2] * l[k][f][j][2] + l[k][f][j][3] * l[k][f][j][3]) / l[k][f][j][0]);

  n[k][j] = 0.40e+00 * (l[k][g - 1][j][4] - 0.50 * (l[k][g - 1][j][1] * l[k][g - 1][j][1] + l[k][g - 1][j][2] * l[k][g - 1][j][2] + l[k][g - 1][j][3] * l[k][g - 1][j][3]) / l[k][g - 1][j][0]);
}","[129 129 129 ...,  26   0 127]"
293,npb-3.3-LU-pintgr2,C,44,2,3,0,18,0,755867256,64,GPU,0.26208400000000004,0.192883,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h, int i) {
  int j, k;

  k = get_global_id(1) + h;
  j = get_global_id(0) + d;
  if (k >= i || j >= e)
    return;

  __global double(*l)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*m)[12 + 2] = (__global double(*)[12 + 2])b;
  __global double(*n)[12 + 2] = (__global double(*)[12 + 2])c;

  m[k][j] = 0.40e+00 * (l[k][f][j][4] - 0.50 * (l[k][f][j][1] * l[k][f][j][1] + l[k][f][j][2] * l[k][f][j][2] + l[k][f][j][3] * l[k][f][j][3]) / l[k][f][j][0]);

  n[k][j] = 0.40e+00 * (l[k][g - 1][j][4] - 0.50 * (l[k][g - 1][j][1] * l[k][g - 1][j][1] + l[k][g - 1][j][2] * l[k][g - 1][j][2] + l[k][g - 1][j][3] * l[k][g - 1][j][3]) / l[k][g - 1][j][0]);
}","[129 129 129 ...,  26   0 127]"
294,npb-3.3-LU-pintgr2,S,44,2,3,0,18,0,349464,60,CPU,0.103182,0.169133,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h, int i) {
  int j, k;

  k = get_global_id(1) + h;
  j = get_global_id(0) + d;
  if (k >= i || j >= e)
    return;

  __global double(*l)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*m)[12 + 2] = (__global double(*)[12 + 2])b;
  __global double(*n)[12 + 2] = (__global double(*)[12 + 2])c;

  m[k][j] = 0.40e+00 * (l[k][f][j][4] - 0.50 * (l[k][f][j][1] * l[k][f][j][1] + l[k][f][j][2] * l[k][f][j][2] + l[k][f][j][3] * l[k][f][j][3]) / l[k][f][j][0]);

  n[k][j] = 0.40e+00 * (l[k][g - 1][j][4] - 0.50 * (l[k][g - 1][j][1] * l[k][g - 1][j][1] + l[k][g - 1][j][2] * l[k][g - 1][j][2] + l[k][g - 1][j][3] * l[k][g - 1][j][3]) / l[k][g - 1][j][0]);
}","[129 129 129 ...,  26   0 127]"
295,npb-3.3-LU-pintgr2,W,44,2,3,0,18,0,6346800,62,CPU,0.12648199999999998,0.166202,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h, int i) {
  int j, k;

  k = get_global_id(1) + h;
  j = get_global_id(0) + d;
  if (k >= i || j >= e)
    return;

  __global double(*l)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*m)[12 + 2] = (__global double(*)[12 + 2])b;
  __global double(*n)[12 + 2] = (__global double(*)[12 + 2])c;

  m[k][j] = 0.40e+00 * (l[k][f][j][4] - 0.50 * (l[k][f][j][1] * l[k][f][j][1] + l[k][f][j][2] * l[k][f][j][2] + l[k][f][j][3] * l[k][f][j][3]) / l[k][f][j][0]);

  n[k][j] = 0.40e+00 * (l[k][g - 1][j][4] - 0.50 * (l[k][g - 1][j][1] * l[k][g - 1][j][1] + l[k][g - 1][j][2] * l[k][g - 1][j][2] + l[k][g - 1][j][3] * l[k][g - 1][j][3]) / l[k][g - 1][j][0]);
}","[129 129 129 ...,  26   0 127]"
296,npb-3.3-LU-pintgr3,A,44,2,3,0,18,0,47333288,61,CPU,0.169546,0.174496,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h, int i) {
  int j, k;

  k = get_global_id(1) + h;
  j = get_global_id(0) + f;
  if (k >= i || j >= g)
    return;

  __global double(*l)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*m)[12 + 2] = (__global double(*)[12 + 2])b;
  __global double(*n)[12 + 2] = (__global double(*)[12 + 2])c;

  m[k][j] = 0.40e+00 * (l[k][j][d][4] - 0.50 * (l[k][j][d][1] * l[k][j][d][1] + l[k][j][d][2] * l[k][j][d][2] + l[k][j][d][3] * l[k][j][d][3]) / l[k][j][d][0]);

  n[k][j] = 0.40e+00 * (l[k][j][e - 1][4] - 0.50 * (l[k][j][e - 1][1] * l[k][j][e - 1][1] + l[k][j][e - 1][2] * l[k][j][e - 1][2] + l[k][j][e - 1][3] * l[k][j][e - 1][3]) / l[k][j][e - 1][0]);
}","[129 129 129 ...,  26   0 127]"
297,npb-3.3-LU-pintgr3,B,44,2,3,0,18,0,189794664,32,GPU,0.275885,0.186502,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h, int i) {
  int j, k;

  k = get_global_id(1) + h;
  j = get_global_id(0) + f;
  if (k >= i || j >= g)
    return;

  __global double(*l)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*m)[12 + 2] = (__global double(*)[12 + 2])b;
  __global double(*n)[12 + 2] = (__global double(*)[12 + 2])c;

  m[k][j] = 0.40e+00 * (l[k][j][d][4] - 0.50 * (l[k][j][d][1] * l[k][j][d][1] + l[k][j][d][2] * l[k][j][d][2] + l[k][j][d][3] * l[k][j][d][3]) / l[k][j][d][0]);

  n[k][j] = 0.40e+00 * (l[k][j][e - 1][4] - 0.50 * (l[k][j][e - 1][1] * l[k][j][e - 1][1] + l[k][j][e - 1][2] * l[k][j][e - 1][2] + l[k][j][e - 1][3] * l[k][j][e - 1][3]) / l[k][j][e - 1][0]);
}","[129 129 129 ...,  26   0 127]"
298,npb-3.3-LU-pintgr3,C,44,2,3,0,18,0,755867256,64,GPU,0.5293359999999999,0.259386,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h, int i) {
  int j, k;

  k = get_global_id(1) + h;
  j = get_global_id(0) + f;
  if (k >= i || j >= g)
    return;

  __global double(*l)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*m)[12 + 2] = (__global double(*)[12 + 2])b;
  __global double(*n)[12 + 2] = (__global double(*)[12 + 2])c;

  m[k][j] = 0.40e+00 * (l[k][j][d][4] - 0.50 * (l[k][j][d][1] * l[k][j][d][1] + l[k][j][d][2] * l[k][j][d][2] + l[k][j][d][3] * l[k][j][d][3]) / l[k][j][d][0]);

  n[k][j] = 0.40e+00 * (l[k][j][e - 1][4] - 0.50 * (l[k][j][e - 1][1] * l[k][j][e - 1][1] + l[k][j][e - 1][2] * l[k][j][e - 1][2] + l[k][j][e - 1][3] * l[k][j][e - 1][3]) / l[k][j][e - 1][0]);
}","[129 129 129 ...,  26   0 127]"
299,npb-3.3-LU-pintgr3,S,44,2,3,0,18,0,349464,63,CPU,0.10288900000000001,0.161645,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h, int i) {
  int j, k;

  k = get_global_id(1) + h;
  j = get_global_id(0) + f;
  if (k >= i || j >= g)
    return;

  __global double(*l)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*m)[12 + 2] = (__global double(*)[12 + 2])b;
  __global double(*n)[12 + 2] = (__global double(*)[12 + 2])c;

  m[k][j] = 0.40e+00 * (l[k][j][d][4] - 0.50 * (l[k][j][d][1] * l[k][j][d][1] + l[k][j][d][2] * l[k][j][d][2] + l[k][j][d][3] * l[k][j][d][3]) / l[k][j][d][0]);

  n[k][j] = 0.40e+00 * (l[k][j][e - 1][4] - 0.50 * (l[k][j][e - 1][1] * l[k][j][e - 1][1] + l[k][j][e - 1][2] * l[k][j][e - 1][2] + l[k][j][e - 1][3] * l[k][j][e - 1][3]) / l[k][j][e - 1][0]);
}","[129 129 129 ...,  26   0 127]"
300,npb-3.3-LU-pintgr3,W,44,2,3,0,18,0,6346800,60,CPU,0.127348,0.166432,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g, int h, int i) {
  int j, k;

  k = get_global_id(1) + h;
  j = get_global_id(0) + f;
  if (k >= i || j >= g)
    return;

  __global double(*l)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*m)[12 + 2] = (__global double(*)[12 + 2])b;
  __global double(*n)[12 + 2] = (__global double(*)[12 + 2])c;

  m[k][j] = 0.40e+00 * (l[k][j][d][4] - 0.50 * (l[k][j][d][1] * l[k][j][d][1] + l[k][j][d][2] * l[k][j][d][2] + l[k][j][d][3] * l[k][j][d][3]) / l[k][j][d][0]);

  n[k][j] = 0.40e+00 * (l[k][j][e - 1][4] - 0.50 * (l[k][j][e - 1][1] * l[k][j][e - 1][1] + l[k][j][e - 1][2] * l[k][j][e - 1][2] + l[k][j][e - 1][3] * l[k][j][e - 1][3]) / l[k][j][e - 1][0]);
}","[129 129 129 ...,  26   0 127]"
301,npb-3.3-LU-pintgr_reduce,A,21,4,5,2,8,0,47333288,6,CPU,0.148393,0.192181,"__kernel void A(__global double* a, __global double* b, __global double* c, __local double* d, int e, int f, int g, int h) {
  int i, j, k;
  double l = 0.0;

  j = get_global_id(0) + g;
  k = get_local_id(0);

  if (j < h) {
    __global double(*m)[12 + 2] = (__global double(*)[12 + 2])a;
    __global double(*n)[12 + 2] = (__global double(*)[12 + 2])b;

    for (i = e; i < f; i++) {
      l = l + (m[j][i] + m[j][i + 1] + m[j + 1][i] + m[j + 1][i + 1] + n[j][i] + n[j][i + 1] + n[j + 1][i] + n[j + 1][i + 1]);
    }
  }
  d[k] = l;

  barrier(1);

  if (k == 0) {
    for (i = 1; i < get_local_size(0); i++) {
      l += d[i];
    }

    c[get_group_id(0)] = l;
  }
}","[129 129 129 ..., 127   0 127]"
302,npb-3.3-LU-pintgr_reduce,B,21,4,5,2,8,0,189794376,10,CPU,0.15778399999999998,0.2089,"__kernel void A(__global double* a, __global double* b, __global double* c, __local double* d, int e, int f, int g, int h) {
  int i, j, k;
  double l = 0.0;

  j = get_global_id(0) + g;
  k = get_local_id(0);

  if (j < h) {
    __global double(*m)[12 + 2] = (__global double(*)[12 + 2])a;
    __global double(*n)[12 + 2] = (__global double(*)[12 + 2])b;

    for (i = e; i < f; i++) {
      l = l + (m[j][i] + m[j][i + 1] + m[j + 1][i] + m[j + 1][i + 1] + n[j][i] + n[j][i + 1] + n[j + 1][i] + n[j + 1][i + 1]);
    }
  }
  d[k] = l;

  barrier(1);

  if (k == 0) {
    for (i = 1; i < get_local_size(0); i++) {
      l += d[i];
    }

    c[get_group_id(0)] = l;
  }
}","[129 129 129 ..., 127   0 127]"
303,npb-3.3-LU-pintgr_reduce,C,21,4,5,2,8,0,755866968,16,CPU,0.161965,0.243006,"__kernel void A(__global double* a, __global double* b, __global double* c, __local double* d, int e, int f, int g, int h) {
  int i, j, k;
  double l = 0.0;

  j = get_global_id(0) + g;
  k = get_local_id(0);

  if (j < h) {
    __global double(*m)[12 + 2] = (__global double(*)[12 + 2])a;
    __global double(*n)[12 + 2] = (__global double(*)[12 + 2])b;

    for (i = e; i < f; i++) {
      l = l + (m[j][i] + m[j][i + 1] + m[j + 1][i] + m[j + 1][i + 1] + n[j][i] + n[j][i + 1] + n[j + 1][i] + n[j + 1][i + 1]);
    }
  }
  d[k] = l;

  barrier(1);

  if (k == 0) {
    for (i = 1; i < get_local_size(0); i++) {
      l += d[i];
    }

    c[get_group_id(0)] = l;
  }
}","[129 129 129 ..., 127   0 127]"
304,npb-3.3-LU-pintgr_reduce,S,21,4,5,2,8,0,349464,1,CPU,0.124726,0.163151,"__kernel void A(__global double* a, __global double* b, __global double* c, __local double* d, int e, int f, int g, int h) {
  int i, j, k;
  double l = 0.0;

  j = get_global_id(0) + g;
  k = get_local_id(0);

  if (j < h) {
    __global double(*m)[12 + 2] = (__global double(*)[12 + 2])a;
    __global double(*n)[12 + 2] = (__global double(*)[12 + 2])b;

    for (i = e; i < f; i++) {
      l = l + (m[j][i] + m[j][i + 1] + m[j + 1][i] + m[j + 1][i + 1] + n[j][i] + n[j][i + 1] + n[j + 1][i] + n[j + 1][i + 1]);
    }
  }
  d[k] = l;

  barrier(1);

  if (k == 0) {
    for (i = 1; i < get_local_size(0); i++) {
      l += d[i];
    }

    c[get_group_id(0)] = l;
  }
}","[129 129 129 ..., 127   0 127]"
305,npb-3.3-LU-pintgr_reduce,W,21,4,5,2,8,0,6346800,2,CPU,0.129117,0.175723,"__kernel void A(__global double* a, __global double* b, __global double* c, __local double* d, int e, int f, int g, int h) {
  int i, j, k;
  double l = 0.0;

  j = get_global_id(0) + g;
  k = get_local_id(0);

  if (j < h) {
    __global double(*m)[12 + 2] = (__global double(*)[12 + 2])a;
    __global double(*n)[12 + 2] = (__global double(*)[12 + 2])b;

    for (i = e; i < f; i++) {
      l = l + (m[j][i] + m[j][i + 1] + m[j + 1][i] + m[j + 1][i + 1] + n[j][i] + n[j][i + 1] + n[j + 1][i] + n[j + 1][i + 1]);
    }
  }
  d[k] = l;

  barrier(1);

  if (k == 0) {
    for (i = 1; i < get_local_size(0); i++) {
      l += d[i];
    }

    c[get_group_id(0)] = l;
  }
}","[129 129 129 ..., 127   0 127]"
306,npb-3.3-LU-rhs,A,68,4,5,0,11,0,47333624,64,GPU,2.9958110000000002,0.644343,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, int f, int g, int h) {
  int i, j, k, l;
  double m;
  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*o)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*p)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  k = get_global_id(2);
  j = get_global_id(1);
  i = get_global_id(0);
  if (k >= h || j >= g || i >= f)
    return;

  n = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  o = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  p = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])c;
  q = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  r = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;

  for (l = 0; l < 5; l++) {
    o[k][j][i][l] = -p[k][j][i][l];
  }
  m = 1.0 / n[k][j][i][0];
  r[k][j][i] = m;
  q[k][j][i] = 0.50 * (n[k][j][i][1] * n[k][j][i][1] + n[k][j][i][2] * n[k][j][i][2] + n[k][j][i][3] * n[k][j][i][3]) * m;
}","[129 129 129 ...,  26   0 127]"
307,npb-3.3-LU-rhs,B,68,4,5,0,11,0,189794664,32,GPU,12.120577,1.1811639999999999,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, int f, int g, int h) {
  int i, j, k, l;
  double m;
  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*o)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*p)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  k = get_global_id(2);
  j = get_global_id(1);
  i = get_global_id(0);
  if (k >= h || j >= g || i >= f)
    return;

  n = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  o = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  p = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])c;
  q = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  r = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;

  for (l = 0; l < 5; l++) {
    o[k][j][i][l] = -p[k][j][i][l];
  }
  m = 1.0 / n[k][j][i][0];
  r[k][j][i] = m;
  q[k][j][i] = 0.50 * (n[k][j][i][1] * n[k][j][i][1] + n[k][j][i][2] * n[k][j][i][2] + n[k][j][i][3] * n[k][j][i][3]) * m;
}","[129 129 129 ...,  26   0 127]"
308,npb-3.3-LU-rhs,C,68,4,5,0,11,0,755867256,64,GPU,44.918082,5.9502,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, int f, int g, int h) {
  int i, j, k, l;
  double m;
  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*o)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*p)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  k = get_global_id(2);
  j = get_global_id(1);
  i = get_global_id(0);
  if (k >= h || j >= g || i >= f)
    return;

  n = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  o = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  p = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])c;
  q = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  r = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;

  for (l = 0; l < 5; l++) {
    o[k][j][i][l] = -p[k][j][i][l];
  }
  m = 1.0 / n[k][j][i][0];
  r[k][j][i] = m;
  q[k][j][i] = 0.50 * (n[k][j][i][1] * n[k][j][i][1] + n[k][j][i][2] * n[k][j][i][2] + n[k][j][i][3] * n[k][j][i][3]) * m;
}","[129 129 129 ...,  26   0 127]"
309,npb-3.3-LU-rhs,S,68,4,5,0,11,0,349464,60,CPU,0.13201,0.162012,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, int f, int g, int h) {
  int i, j, k, l;
  double m;
  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*o)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*p)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  k = get_global_id(2);
  j = get_global_id(1);
  i = get_global_id(0);
  if (k >= h || j >= g || i >= f)
    return;

  n = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  o = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  p = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])c;
  q = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  r = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;

  for (l = 0; l < 5; l++) {
    o[k][j][i][l] = -p[k][j][i][l];
  }
  m = 1.0 / n[k][j][i][0];
  r[k][j][i] = m;
  q[k][j][i] = 0.50 * (n[k][j][i][1] * n[k][j][i][1] + n[k][j][i][2] * n[k][j][i][2] + n[k][j][i][3] * n[k][j][i][3]) * m;
}","[129 129 129 ...,  26   0 127]"
310,npb-3.3-LU-rhs,W,68,4,5,0,11,0,6347040,33,GPU,0.25240799999999997,0.20498400000000008,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, int f, int g, int h) {
  int i, j, k, l;
  double m;
  __global double(*n)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*o)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*p)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*q)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*r)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  k = get_global_id(2);
  j = get_global_id(1);
  i = get_global_id(0);
  if (k >= h || j >= g || i >= f)
    return;

  n = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  o = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  p = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])c;
  q = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  r = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])e;

  for (l = 0; l < 5; l++) {
    o[k][j][i][l] = -p[k][j][i][l];
  }
  m = 1.0 / n[k][j][i][0];
  r[k][j][i] = m;
  q[k][j][i] = 0.50 * (n[k][j][i][1] * n[k][j][i][1] + n[k][j][i][2] * n[k][j][i][2] + n[k][j][i][3] * n[k][j][i][3]) * m;
}","[129 129 129 ...,  26   0 127]"
311,npb-3.3-LU-rhsx,A,1048,19,4,0,71,0,47333624,62,GPU,2.53819,1.020308,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g) {
  int h, i, j, k, l, m;
  double n;
  double o;
  double p;
  double q, r, s, t;
  double u, v, w, x;
  double y[3][5], z[2][5];
  double aa[5][5], ab[5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*af)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  j = get_global_id(1) + 1;
  i = get_global_id(0) + 1;
  if (j >= (g - 1) || i >= (f - 1))
    return;

  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  af = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  k = 0;
  aa[3][0] = ac[j][i][0][0];
  aa[3][1] = ac[j][i][0][1];
  aa[3][2] = ac[j][i][0][2];
  aa[3][3] = ac[j][i][0][3];
  aa[3][4] = ac[j][i][0][4];
  y[1][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[1][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[1][2] = aa[3][2] * p;
  y[1][3] = aa[3][3] * p;
  y[1][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;

  h = 0;
  k = 1;
  for (m = 0; m < 5; m++)
    aa[2][m] = aa[3][m];
  aa[3][0] = ac[j][i][1][0];
  aa[3][1] = ac[j][i][1][1];
  aa[3][2] = ac[j][i][1][2];
  aa[3][3] = ac[j][i][1][3];
  aa[3][4] = ac[j][i][1][4];
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  aa[4][0] = ac[j][i][2][0];
  aa[4][1] = ac[j][i][2][1];
  aa[4][2] = ac[j][i][2][2];
  aa[4][3] = ac[j][i][2][3];
  aa[4][4] = ac[j][i][2][4];

  h = 1;
  k = 2;
  l = 3;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][i][l][0];
  aa[4][1] = ac[j][i][l][1];
  aa[4][2] = ac[j][i][l][2];
  aa[4][3] = ac[j][i][l][3];
  aa[4][4] = ac[j][i][l][4];
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][i][1][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  h = 2;
  k = 3;
  l = 4;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][i][l][0];
  aa[4][1] = ac[j][i][l][1];
  aa[4][2] = ac[j][i][l][2];
  aa[4][3] = ac[j][i][l][3];
  aa[4][4] = ac[j][i][l][4];
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][i][2][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  for (h = 3; h < e - 3; h++) {
    k = h + 1;
    l = h + 2;
    for (m = 0; m < 5; m++) {
      aa[0][m] = aa[1][m];
      aa[1][m] = aa[2][m];
      aa[2][m] = aa[3][m];
      aa[3][m] = aa[4][m];
      y[0][m] = y[1][m];
      y[1][m] = y[2][m];
      z[0][m] = z[1][m];
    }
    aa[4][0] = ac[j][i][l][0];
    aa[4][1] = ac[j][i][l][1];
    aa[4][2] = ac[j][i][l][2];
    aa[4][3] = ac[j][i][l][3];
    aa[4][4] = ac[j][i][l][4];
    y[2][0] = aa[3][1];
    p = aa[3][1] * af[j][i][k];
    n = ae[j][i][k];
    y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
    y[2][2] = aa[3][2] * p;
    y[2][3] = aa[3][3] * p;
    y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
    o = af[j][i][k];
    q = o * aa[3][1];
    r = o * aa[3][2];
    s = o * aa[3][3];
    t = o * aa[3][4];
    o = af[j][i][h];
    u = o * aa[2][1];
    v = o * aa[2][2];
    w = o * aa[2][3];
    x = o * aa[2][4];
    z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
    z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
    z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
    z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
    for (m = 0; m < 5; m++) {
      ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
    }
    ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
    ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
    ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
    ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
    ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
    for (m = 0; m < 5; m++) {
      ad[j][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
    }
  }

  h = e - 3;
  k = e - 2;
  l = e - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][i][l][0];
  aa[4][1] = ac[j][i][l][1];
  aa[4][2] = ac[j][i][l][2];
  aa[4][3] = ac[j][i][l][3];
  aa[4][4] = ac[j][i][l][4];
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][i][e - 3][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m]);
  }

  h = e - 2;
  k = e - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][i][e - 2][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 5.0 * aa[2][m]);
  }
}","[  1  12   1 ..., 127   0 127]"
312,npb-3.3-LU-rhsx,B,1048,19,4,0,71,0,189794664,32,GPU,10.065982,3.601496,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g) {
  int h, i, j, k, l, m;
  double n;
  double o;
  double p;
  double q, r, s, t;
  double u, v, w, x;
  double y[3][5], z[2][5];
  double aa[5][5], ab[5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*af)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  j = get_global_id(1) + 1;
  i = get_global_id(0) + 1;
  if (j >= (g - 1) || i >= (f - 1))
    return;

  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  af = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  k = 0;
  aa[3][0] = ac[j][i][0][0];
  aa[3][1] = ac[j][i][0][1];
  aa[3][2] = ac[j][i][0][2];
  aa[3][3] = ac[j][i][0][3];
  aa[3][4] = ac[j][i][0][4];
  y[1][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[1][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[1][2] = aa[3][2] * p;
  y[1][3] = aa[3][3] * p;
  y[1][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;

  h = 0;
  k = 1;
  for (m = 0; m < 5; m++)
    aa[2][m] = aa[3][m];
  aa[3][0] = ac[j][i][1][0];
  aa[3][1] = ac[j][i][1][1];
  aa[3][2] = ac[j][i][1][2];
  aa[3][3] = ac[j][i][1][3];
  aa[3][4] = ac[j][i][1][4];
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  aa[4][0] = ac[j][i][2][0];
  aa[4][1] = ac[j][i][2][1];
  aa[4][2] = ac[j][i][2][2];
  aa[4][3] = ac[j][i][2][3];
  aa[4][4] = ac[j][i][2][4];

  h = 1;
  k = 2;
  l = 3;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][i][l][0];
  aa[4][1] = ac[j][i][l][1];
  aa[4][2] = ac[j][i][l][2];
  aa[4][3] = ac[j][i][l][3];
  aa[4][4] = ac[j][i][l][4];
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][i][1][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  h = 2;
  k = 3;
  l = 4;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][i][l][0];
  aa[4][1] = ac[j][i][l][1];
  aa[4][2] = ac[j][i][l][2];
  aa[4][3] = ac[j][i][l][3];
  aa[4][4] = ac[j][i][l][4];
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][i][2][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  for (h = 3; h < e - 3; h++) {
    k = h + 1;
    l = h + 2;
    for (m = 0; m < 5; m++) {
      aa[0][m] = aa[1][m];
      aa[1][m] = aa[2][m];
      aa[2][m] = aa[3][m];
      aa[3][m] = aa[4][m];
      y[0][m] = y[1][m];
      y[1][m] = y[2][m];
      z[0][m] = z[1][m];
    }
    aa[4][0] = ac[j][i][l][0];
    aa[4][1] = ac[j][i][l][1];
    aa[4][2] = ac[j][i][l][2];
    aa[4][3] = ac[j][i][l][3];
    aa[4][4] = ac[j][i][l][4];
    y[2][0] = aa[3][1];
    p = aa[3][1] * af[j][i][k];
    n = ae[j][i][k];
    y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
    y[2][2] = aa[3][2] * p;
    y[2][3] = aa[3][3] * p;
    y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
    o = af[j][i][k];
    q = o * aa[3][1];
    r = o * aa[3][2];
    s = o * aa[3][3];
    t = o * aa[3][4];
    o = af[j][i][h];
    u = o * aa[2][1];
    v = o * aa[2][2];
    w = o * aa[2][3];
    x = o * aa[2][4];
    z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
    z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
    z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
    z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
    for (m = 0; m < 5; m++) {
      ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
    }
    ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
    ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
    ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
    ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
    ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
    for (m = 0; m < 5; m++) {
      ad[j][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
    }
  }

  h = e - 3;
  k = e - 2;
  l = e - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][i][l][0];
  aa[4][1] = ac[j][i][l][1];
  aa[4][2] = ac[j][i][l][2];
  aa[4][3] = ac[j][i][l][3];
  aa[4][4] = ac[j][i][l][4];
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][i][e - 3][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m]);
  }

  h = e - 2;
  k = e - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][i][e - 2][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 5.0 * aa[2][m]);
  }
}","[  1  12   1 ..., 127   0 127]"
313,npb-3.3-LU-rhsx,C,1048,19,4,0,71,0,755867256,64,GPU,40.371444,15.770791000000001,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g) {
  int h, i, j, k, l, m;
  double n;
  double o;
  double p;
  double q, r, s, t;
  double u, v, w, x;
  double y[3][5], z[2][5];
  double aa[5][5], ab[5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*af)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  j = get_global_id(1) + 1;
  i = get_global_id(0) + 1;
  if (j >= (g - 1) || i >= (f - 1))
    return;

  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  af = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  k = 0;
  aa[3][0] = ac[j][i][0][0];
  aa[3][1] = ac[j][i][0][1];
  aa[3][2] = ac[j][i][0][2];
  aa[3][3] = ac[j][i][0][3];
  aa[3][4] = ac[j][i][0][4];
  y[1][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[1][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[1][2] = aa[3][2] * p;
  y[1][3] = aa[3][3] * p;
  y[1][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;

  h = 0;
  k = 1;
  for (m = 0; m < 5; m++)
    aa[2][m] = aa[3][m];
  aa[3][0] = ac[j][i][1][0];
  aa[3][1] = ac[j][i][1][1];
  aa[3][2] = ac[j][i][1][2];
  aa[3][3] = ac[j][i][1][3];
  aa[3][4] = ac[j][i][1][4];
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  aa[4][0] = ac[j][i][2][0];
  aa[4][1] = ac[j][i][2][1];
  aa[4][2] = ac[j][i][2][2];
  aa[4][3] = ac[j][i][2][3];
  aa[4][4] = ac[j][i][2][4];

  h = 1;
  k = 2;
  l = 3;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][i][l][0];
  aa[4][1] = ac[j][i][l][1];
  aa[4][2] = ac[j][i][l][2];
  aa[4][3] = ac[j][i][l][3];
  aa[4][4] = ac[j][i][l][4];
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][i][1][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  h = 2;
  k = 3;
  l = 4;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][i][l][0];
  aa[4][1] = ac[j][i][l][1];
  aa[4][2] = ac[j][i][l][2];
  aa[4][3] = ac[j][i][l][3];
  aa[4][4] = ac[j][i][l][4];
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][i][2][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  for (h = 3; h < e - 3; h++) {
    k = h + 1;
    l = h + 2;
    for (m = 0; m < 5; m++) {
      aa[0][m] = aa[1][m];
      aa[1][m] = aa[2][m];
      aa[2][m] = aa[3][m];
      aa[3][m] = aa[4][m];
      y[0][m] = y[1][m];
      y[1][m] = y[2][m];
      z[0][m] = z[1][m];
    }
    aa[4][0] = ac[j][i][l][0];
    aa[4][1] = ac[j][i][l][1];
    aa[4][2] = ac[j][i][l][2];
    aa[4][3] = ac[j][i][l][3];
    aa[4][4] = ac[j][i][l][4];
    y[2][0] = aa[3][1];
    p = aa[3][1] * af[j][i][k];
    n = ae[j][i][k];
    y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
    y[2][2] = aa[3][2] * p;
    y[2][3] = aa[3][3] * p;
    y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
    o = af[j][i][k];
    q = o * aa[3][1];
    r = o * aa[3][2];
    s = o * aa[3][3];
    t = o * aa[3][4];
    o = af[j][i][h];
    u = o * aa[2][1];
    v = o * aa[2][2];
    w = o * aa[2][3];
    x = o * aa[2][4];
    z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
    z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
    z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
    z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
    for (m = 0; m < 5; m++) {
      ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
    }
    ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
    ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
    ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
    ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
    ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
    for (m = 0; m < 5; m++) {
      ad[j][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
    }
  }

  h = e - 3;
  k = e - 2;
  l = e - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][i][l][0];
  aa[4][1] = ac[j][i][l][1];
  aa[4][2] = ac[j][i][l][2];
  aa[4][3] = ac[j][i][l][3];
  aa[4][4] = ac[j][i][l][4];
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][i][e - 3][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m]);
  }

  h = e - 2;
  k = e - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][i][e - 2][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 5.0 * aa[2][m]);
  }
}","[  1  12   1 ..., 127   0 127]"
314,npb-3.3-LU-rhsx,S,1048,19,4,0,71,0,349464,60,CPU,0.132395,0.18592999999999998,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g) {
  int h, i, j, k, l, m;
  double n;
  double o;
  double p;
  double q, r, s, t;
  double u, v, w, x;
  double y[3][5], z[2][5];
  double aa[5][5], ab[5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*af)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  j = get_global_id(1) + 1;
  i = get_global_id(0) + 1;
  if (j >= (g - 1) || i >= (f - 1))
    return;

  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  af = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  k = 0;
  aa[3][0] = ac[j][i][0][0];
  aa[3][1] = ac[j][i][0][1];
  aa[3][2] = ac[j][i][0][2];
  aa[3][3] = ac[j][i][0][3];
  aa[3][4] = ac[j][i][0][4];
  y[1][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[1][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[1][2] = aa[3][2] * p;
  y[1][3] = aa[3][3] * p;
  y[1][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;

  h = 0;
  k = 1;
  for (m = 0; m < 5; m++)
    aa[2][m] = aa[3][m];
  aa[3][0] = ac[j][i][1][0];
  aa[3][1] = ac[j][i][1][1];
  aa[3][2] = ac[j][i][1][2];
  aa[3][3] = ac[j][i][1][3];
  aa[3][4] = ac[j][i][1][4];
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  aa[4][0] = ac[j][i][2][0];
  aa[4][1] = ac[j][i][2][1];
  aa[4][2] = ac[j][i][2][2];
  aa[4][3] = ac[j][i][2][3];
  aa[4][4] = ac[j][i][2][4];

  h = 1;
  k = 2;
  l = 3;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][i][l][0];
  aa[4][1] = ac[j][i][l][1];
  aa[4][2] = ac[j][i][l][2];
  aa[4][3] = ac[j][i][l][3];
  aa[4][4] = ac[j][i][l][4];
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][i][1][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  h = 2;
  k = 3;
  l = 4;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][i][l][0];
  aa[4][1] = ac[j][i][l][1];
  aa[4][2] = ac[j][i][l][2];
  aa[4][3] = ac[j][i][l][3];
  aa[4][4] = ac[j][i][l][4];
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][i][2][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  for (h = 3; h < e - 3; h++) {
    k = h + 1;
    l = h + 2;
    for (m = 0; m < 5; m++) {
      aa[0][m] = aa[1][m];
      aa[1][m] = aa[2][m];
      aa[2][m] = aa[3][m];
      aa[3][m] = aa[4][m];
      y[0][m] = y[1][m];
      y[1][m] = y[2][m];
      z[0][m] = z[1][m];
    }
    aa[4][0] = ac[j][i][l][0];
    aa[4][1] = ac[j][i][l][1];
    aa[4][2] = ac[j][i][l][2];
    aa[4][3] = ac[j][i][l][3];
    aa[4][4] = ac[j][i][l][4];
    y[2][0] = aa[3][1];
    p = aa[3][1] * af[j][i][k];
    n = ae[j][i][k];
    y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
    y[2][2] = aa[3][2] * p;
    y[2][3] = aa[3][3] * p;
    y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
    o = af[j][i][k];
    q = o * aa[3][1];
    r = o * aa[3][2];
    s = o * aa[3][3];
    t = o * aa[3][4];
    o = af[j][i][h];
    u = o * aa[2][1];
    v = o * aa[2][2];
    w = o * aa[2][3];
    x = o * aa[2][4];
    z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
    z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
    z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
    z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
    for (m = 0; m < 5; m++) {
      ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
    }
    ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
    ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
    ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
    ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
    ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
    for (m = 0; m < 5; m++) {
      ad[j][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
    }
  }

  h = e - 3;
  k = e - 2;
  l = e - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][i][l][0];
  aa[4][1] = ac[j][i][l][1];
  aa[4][2] = ac[j][i][l][2];
  aa[4][3] = ac[j][i][l][3];
  aa[4][4] = ac[j][i][l][4];
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][i][e - 3][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m]);
  }

  h = e - 2;
  k = e - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][i][e - 2][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 5.0 * aa[2][m]);
  }
}","[  1  12   1 ..., 127   0 127]"
315,npb-3.3-LU-rhsx,W,1048,19,4,0,71,0,6347040,62,GPU,0.41371499999999994,0.246694,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g) {
  int h, i, j, k, l, m;
  double n;
  double o;
  double p;
  double q, r, s, t;
  double u, v, w, x;
  double y[3][5], z[2][5];
  double aa[5][5], ab[5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*af)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  j = get_global_id(1) + 1;
  i = get_global_id(0) + 1;
  if (j >= (g - 1) || i >= (f - 1))
    return;

  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  af = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  k = 0;
  aa[3][0] = ac[j][i][0][0];
  aa[3][1] = ac[j][i][0][1];
  aa[3][2] = ac[j][i][0][2];
  aa[3][3] = ac[j][i][0][3];
  aa[3][4] = ac[j][i][0][4];
  y[1][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[1][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[1][2] = aa[3][2] * p;
  y[1][3] = aa[3][3] * p;
  y[1][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;

  h = 0;
  k = 1;
  for (m = 0; m < 5; m++)
    aa[2][m] = aa[3][m];
  aa[3][0] = ac[j][i][1][0];
  aa[3][1] = ac[j][i][1][1];
  aa[3][2] = ac[j][i][1][2];
  aa[3][3] = ac[j][i][1][3];
  aa[3][4] = ac[j][i][1][4];
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  aa[4][0] = ac[j][i][2][0];
  aa[4][1] = ac[j][i][2][1];
  aa[4][2] = ac[j][i][2][2];
  aa[4][3] = ac[j][i][2][3];
  aa[4][4] = ac[j][i][2][4];

  h = 1;
  k = 2;
  l = 3;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][i][l][0];
  aa[4][1] = ac[j][i][l][1];
  aa[4][2] = ac[j][i][l][2];
  aa[4][3] = ac[j][i][l][3];
  aa[4][4] = ac[j][i][l][4];
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][i][1][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  h = 2;
  k = 3;
  l = 4;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][i][l][0];
  aa[4][1] = ac[j][i][l][1];
  aa[4][2] = ac[j][i][l][2];
  aa[4][3] = ac[j][i][l][3];
  aa[4][4] = ac[j][i][l][4];
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][i][2][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  for (h = 3; h < e - 3; h++) {
    k = h + 1;
    l = h + 2;
    for (m = 0; m < 5; m++) {
      aa[0][m] = aa[1][m];
      aa[1][m] = aa[2][m];
      aa[2][m] = aa[3][m];
      aa[3][m] = aa[4][m];
      y[0][m] = y[1][m];
      y[1][m] = y[2][m];
      z[0][m] = z[1][m];
    }
    aa[4][0] = ac[j][i][l][0];
    aa[4][1] = ac[j][i][l][1];
    aa[4][2] = ac[j][i][l][2];
    aa[4][3] = ac[j][i][l][3];
    aa[4][4] = ac[j][i][l][4];
    y[2][0] = aa[3][1];
    p = aa[3][1] * af[j][i][k];
    n = ae[j][i][k];
    y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
    y[2][2] = aa[3][2] * p;
    y[2][3] = aa[3][3] * p;
    y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
    o = af[j][i][k];
    q = o * aa[3][1];
    r = o * aa[3][2];
    s = o * aa[3][3];
    t = o * aa[3][4];
    o = af[j][i][h];
    u = o * aa[2][1];
    v = o * aa[2][2];
    w = o * aa[2][3];
    x = o * aa[2][4];
    z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
    z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
    z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
    z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
    for (m = 0; m < 5; m++) {
      ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
    }
    ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
    ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
    ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
    ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
    ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
    for (m = 0; m < 5; m++) {
      ad[j][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
    }
  }

  h = e - 3;
  k = e - 2;
  l = e - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][i][l][0];
  aa[4][1] = ac[j][i][l][1];
  aa[4][2] = ac[j][i][l][2];
  aa[4][3] = ac[j][i][l][3];
  aa[4][4] = ac[j][i][l][4];
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][i][e - 3][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m]);
  }

  h = e - 2;
  k = e - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  y[2][0] = aa[3][1];
  p = aa[3][1] * af[j][i][k];
  n = ae[j][i][k];
  y[2][1] = aa[3][1] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][i][k];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (q * q - u * u) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][i][e - 2][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 5.0 * aa[2][m]);
  }
}","[  1  12   1 ..., 127   0 127]"
316,npb-3.3-LU-rhsy,A,1048,19,4,0,71,0,47333624,62,GPU,3.559571,0.5975189999999999,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g) {
  int h, i, j, k, l, m;
  double n;
  double o;
  double p;
  double q, r, s, t;
  double u, v, w, x;
  double y[3][5], z[2][5];
  double aa[5][5], ab[5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*af)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  j = get_global_id(1) + 1;
  h = get_global_id(0) + 1;
  if (j >= (g - 1) || h >= (e - 1))
    return;

  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  af = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  k = 0;
  aa[3][0] = ac[j][0][h][0];
  aa[3][1] = ac[j][0][h][1];
  aa[3][2] = ac[j][0][h][2];
  aa[3][3] = ac[j][0][h][3];
  aa[3][4] = ac[j][0][h][4];
  y[1][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[1][1] = aa[3][1] * p;
  y[1][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[1][3] = aa[3][3] * p;
  y[1][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;

  i = 0;
  k = 1;
  for (m = 0; m < 5; m++)
    aa[2][m] = aa[3][m];
  aa[3][0] = ac[j][1][h][0];
  aa[3][1] = ac[j][1][h][1];
  aa[3][2] = ac[j][1][h][2];
  aa[3][3] = ac[j][1][h][3];
  aa[3][4] = ac[j][1][h][4];
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  aa[4][0] = ac[j][2][h][0];
  aa[4][1] = ac[j][2][h][1];
  aa[4][2] = ac[j][2][h][2];
  aa[4][3] = ac[j][2][h][3];
  aa[4][4] = ac[j][2][h][4];

  i = 1;
  k = 2;
  l = 3;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][l][h][0];
  aa[4][1] = ac[j][l][h][1];
  aa[4][2] = ac[j][l][h][2];
  aa[4][3] = ac[j][l][h][3];
  aa[4][4] = ac[j][l][h][4];
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][1][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  i = 2;
  k = 3;
  l = 4;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][l][h][0];
  aa[4][1] = ac[j][l][h][1];
  aa[4][2] = ac[j][l][h][2];
  aa[4][3] = ac[j][l][h][3];
  aa[4][4] = ac[j][l][h][4];
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][2][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  for (i = 3; i < f - 3; i++) {
    k = i + 1;
    l = i + 2;
    for (m = 0; m < 5; m++) {
      aa[0][m] = aa[1][m];
      aa[1][m] = aa[2][m];
      aa[2][m] = aa[3][m];
      aa[3][m] = aa[4][m];
      y[0][m] = y[1][m];
      y[1][m] = y[2][m];
      z[0][m] = z[1][m];
    }
    aa[4][0] = ac[j][l][h][0];
    aa[4][1] = ac[j][l][h][1];
    aa[4][2] = ac[j][l][h][2];
    aa[4][3] = ac[j][l][h][3];
    aa[4][4] = ac[j][l][h][4];
    y[2][0] = aa[3][2];
    p = aa[3][2] * af[j][k][h];
    n = ae[j][k][h];
    y[2][1] = aa[3][1] * p;
    y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
    y[2][3] = aa[3][3] * p;
    y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
    o = af[j][k][h];
    q = o * aa[3][1];
    r = o * aa[3][2];
    s = o * aa[3][3];
    t = o * aa[3][4];
    o = af[j][i][h];
    u = o * aa[2][1];
    v = o * aa[2][2];
    w = o * aa[2][3];
    x = o * aa[2][4];
    z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
    z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
    z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
    z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
    for (m = 0; m < 5; m++) {
      ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
    }
    ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
    ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
    ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
    ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
    ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
    for (m = 0; m < 5; m++) {
      ad[j][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
    }
  }

  i = f - 3;
  k = f - 2;
  l = f - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][l][h][0];
  aa[4][1] = ac[j][l][h][1];
  aa[4][2] = ac[j][l][h][2];
  aa[4][3] = ac[j][l][h][3];
  aa[4][4] = ac[j][l][h][4];
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][f - 3][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m]);
  }

  i = f - 2;
  k = f - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][f - 2][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 5.0 * aa[2][m]);
  }
}","[  1  12   1 ..., 127   0 127]"
317,npb-3.3-LU-rhsy,B,1048,19,4,0,71,0,189794664,32,GPU,13.193081,2.202026,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g) {
  int h, i, j, k, l, m;
  double n;
  double o;
  double p;
  double q, r, s, t;
  double u, v, w, x;
  double y[3][5], z[2][5];
  double aa[5][5], ab[5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*af)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  j = get_global_id(1) + 1;
  h = get_global_id(0) + 1;
  if (j >= (g - 1) || h >= (e - 1))
    return;

  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  af = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  k = 0;
  aa[3][0] = ac[j][0][h][0];
  aa[3][1] = ac[j][0][h][1];
  aa[3][2] = ac[j][0][h][2];
  aa[3][3] = ac[j][0][h][3];
  aa[3][4] = ac[j][0][h][4];
  y[1][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[1][1] = aa[3][1] * p;
  y[1][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[1][3] = aa[3][3] * p;
  y[1][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;

  i = 0;
  k = 1;
  for (m = 0; m < 5; m++)
    aa[2][m] = aa[3][m];
  aa[3][0] = ac[j][1][h][0];
  aa[3][1] = ac[j][1][h][1];
  aa[3][2] = ac[j][1][h][2];
  aa[3][3] = ac[j][1][h][3];
  aa[3][4] = ac[j][1][h][4];
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  aa[4][0] = ac[j][2][h][0];
  aa[4][1] = ac[j][2][h][1];
  aa[4][2] = ac[j][2][h][2];
  aa[4][3] = ac[j][2][h][3];
  aa[4][4] = ac[j][2][h][4];

  i = 1;
  k = 2;
  l = 3;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][l][h][0];
  aa[4][1] = ac[j][l][h][1];
  aa[4][2] = ac[j][l][h][2];
  aa[4][3] = ac[j][l][h][3];
  aa[4][4] = ac[j][l][h][4];
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][1][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  i = 2;
  k = 3;
  l = 4;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][l][h][0];
  aa[4][1] = ac[j][l][h][1];
  aa[4][2] = ac[j][l][h][2];
  aa[4][3] = ac[j][l][h][3];
  aa[4][4] = ac[j][l][h][4];
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][2][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  for (i = 3; i < f - 3; i++) {
    k = i + 1;
    l = i + 2;
    for (m = 0; m < 5; m++) {
      aa[0][m] = aa[1][m];
      aa[1][m] = aa[2][m];
      aa[2][m] = aa[3][m];
      aa[3][m] = aa[4][m];
      y[0][m] = y[1][m];
      y[1][m] = y[2][m];
      z[0][m] = z[1][m];
    }
    aa[4][0] = ac[j][l][h][0];
    aa[4][1] = ac[j][l][h][1];
    aa[4][2] = ac[j][l][h][2];
    aa[4][3] = ac[j][l][h][3];
    aa[4][4] = ac[j][l][h][4];
    y[2][0] = aa[3][2];
    p = aa[3][2] * af[j][k][h];
    n = ae[j][k][h];
    y[2][1] = aa[3][1] * p;
    y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
    y[2][3] = aa[3][3] * p;
    y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
    o = af[j][k][h];
    q = o * aa[3][1];
    r = o * aa[3][2];
    s = o * aa[3][3];
    t = o * aa[3][4];
    o = af[j][i][h];
    u = o * aa[2][1];
    v = o * aa[2][2];
    w = o * aa[2][3];
    x = o * aa[2][4];
    z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
    z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
    z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
    z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
    for (m = 0; m < 5; m++) {
      ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
    }
    ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
    ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
    ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
    ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
    ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
    for (m = 0; m < 5; m++) {
      ad[j][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
    }
  }

  i = f - 3;
  k = f - 2;
  l = f - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][l][h][0];
  aa[4][1] = ac[j][l][h][1];
  aa[4][2] = ac[j][l][h][2];
  aa[4][3] = ac[j][l][h][3];
  aa[4][4] = ac[j][l][h][4];
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][f - 3][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m]);
  }

  i = f - 2;
  k = f - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][f - 2][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 5.0 * aa[2][m]);
  }
}","[  1  12   1 ..., 127   0 127]"
318,npb-3.3-LU-rhsy,C,1048,19,4,0,71,0,755867256,64,GPU,52.74475699999999,6.287163,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g) {
  int h, i, j, k, l, m;
  double n;
  double o;
  double p;
  double q, r, s, t;
  double u, v, w, x;
  double y[3][5], z[2][5];
  double aa[5][5], ab[5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*af)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  j = get_global_id(1) + 1;
  h = get_global_id(0) + 1;
  if (j >= (g - 1) || h >= (e - 1))
    return;

  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  af = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  k = 0;
  aa[3][0] = ac[j][0][h][0];
  aa[3][1] = ac[j][0][h][1];
  aa[3][2] = ac[j][0][h][2];
  aa[3][3] = ac[j][0][h][3];
  aa[3][4] = ac[j][0][h][4];
  y[1][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[1][1] = aa[3][1] * p;
  y[1][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[1][3] = aa[3][3] * p;
  y[1][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;

  i = 0;
  k = 1;
  for (m = 0; m < 5; m++)
    aa[2][m] = aa[3][m];
  aa[3][0] = ac[j][1][h][0];
  aa[3][1] = ac[j][1][h][1];
  aa[3][2] = ac[j][1][h][2];
  aa[3][3] = ac[j][1][h][3];
  aa[3][4] = ac[j][1][h][4];
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  aa[4][0] = ac[j][2][h][0];
  aa[4][1] = ac[j][2][h][1];
  aa[4][2] = ac[j][2][h][2];
  aa[4][3] = ac[j][2][h][3];
  aa[4][4] = ac[j][2][h][4];

  i = 1;
  k = 2;
  l = 3;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][l][h][0];
  aa[4][1] = ac[j][l][h][1];
  aa[4][2] = ac[j][l][h][2];
  aa[4][3] = ac[j][l][h][3];
  aa[4][4] = ac[j][l][h][4];
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][1][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  i = 2;
  k = 3;
  l = 4;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][l][h][0];
  aa[4][1] = ac[j][l][h][1];
  aa[4][2] = ac[j][l][h][2];
  aa[4][3] = ac[j][l][h][3];
  aa[4][4] = ac[j][l][h][4];
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][2][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  for (i = 3; i < f - 3; i++) {
    k = i + 1;
    l = i + 2;
    for (m = 0; m < 5; m++) {
      aa[0][m] = aa[1][m];
      aa[1][m] = aa[2][m];
      aa[2][m] = aa[3][m];
      aa[3][m] = aa[4][m];
      y[0][m] = y[1][m];
      y[1][m] = y[2][m];
      z[0][m] = z[1][m];
    }
    aa[4][0] = ac[j][l][h][0];
    aa[4][1] = ac[j][l][h][1];
    aa[4][2] = ac[j][l][h][2];
    aa[4][3] = ac[j][l][h][3];
    aa[4][4] = ac[j][l][h][4];
    y[2][0] = aa[3][2];
    p = aa[3][2] * af[j][k][h];
    n = ae[j][k][h];
    y[2][1] = aa[3][1] * p;
    y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
    y[2][3] = aa[3][3] * p;
    y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
    o = af[j][k][h];
    q = o * aa[3][1];
    r = o * aa[3][2];
    s = o * aa[3][3];
    t = o * aa[3][4];
    o = af[j][i][h];
    u = o * aa[2][1];
    v = o * aa[2][2];
    w = o * aa[2][3];
    x = o * aa[2][4];
    z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
    z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
    z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
    z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
    for (m = 0; m < 5; m++) {
      ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
    }
    ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
    ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
    ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
    ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
    ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
    for (m = 0; m < 5; m++) {
      ad[j][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
    }
  }

  i = f - 3;
  k = f - 2;
  l = f - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][l][h][0];
  aa[4][1] = ac[j][l][h][1];
  aa[4][2] = ac[j][l][h][2];
  aa[4][3] = ac[j][l][h][3];
  aa[4][4] = ac[j][l][h][4];
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][f - 3][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m]);
  }

  i = f - 2;
  k = f - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][f - 2][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 5.0 * aa[2][m]);
  }
}","[  1  12   1 ..., 127   0 127]"
319,npb-3.3-LU-rhsy,S,1048,19,4,0,71,0,349464,60,CPU,0.128742,0.18523299999999998,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g) {
  int h, i, j, k, l, m;
  double n;
  double o;
  double p;
  double q, r, s, t;
  double u, v, w, x;
  double y[3][5], z[2][5];
  double aa[5][5], ab[5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*af)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  j = get_global_id(1) + 1;
  h = get_global_id(0) + 1;
  if (j >= (g - 1) || h >= (e - 1))
    return;

  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  af = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  k = 0;
  aa[3][0] = ac[j][0][h][0];
  aa[3][1] = ac[j][0][h][1];
  aa[3][2] = ac[j][0][h][2];
  aa[3][3] = ac[j][0][h][3];
  aa[3][4] = ac[j][0][h][4];
  y[1][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[1][1] = aa[3][1] * p;
  y[1][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[1][3] = aa[3][3] * p;
  y[1][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;

  i = 0;
  k = 1;
  for (m = 0; m < 5; m++)
    aa[2][m] = aa[3][m];
  aa[3][0] = ac[j][1][h][0];
  aa[3][1] = ac[j][1][h][1];
  aa[3][2] = ac[j][1][h][2];
  aa[3][3] = ac[j][1][h][3];
  aa[3][4] = ac[j][1][h][4];
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  aa[4][0] = ac[j][2][h][0];
  aa[4][1] = ac[j][2][h][1];
  aa[4][2] = ac[j][2][h][2];
  aa[4][3] = ac[j][2][h][3];
  aa[4][4] = ac[j][2][h][4];

  i = 1;
  k = 2;
  l = 3;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][l][h][0];
  aa[4][1] = ac[j][l][h][1];
  aa[4][2] = ac[j][l][h][2];
  aa[4][3] = ac[j][l][h][3];
  aa[4][4] = ac[j][l][h][4];
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][1][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  i = 2;
  k = 3;
  l = 4;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][l][h][0];
  aa[4][1] = ac[j][l][h][1];
  aa[4][2] = ac[j][l][h][2];
  aa[4][3] = ac[j][l][h][3];
  aa[4][4] = ac[j][l][h][4];
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][2][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  for (i = 3; i < f - 3; i++) {
    k = i + 1;
    l = i + 2;
    for (m = 0; m < 5; m++) {
      aa[0][m] = aa[1][m];
      aa[1][m] = aa[2][m];
      aa[2][m] = aa[3][m];
      aa[3][m] = aa[4][m];
      y[0][m] = y[1][m];
      y[1][m] = y[2][m];
      z[0][m] = z[1][m];
    }
    aa[4][0] = ac[j][l][h][0];
    aa[4][1] = ac[j][l][h][1];
    aa[4][2] = ac[j][l][h][2];
    aa[4][3] = ac[j][l][h][3];
    aa[4][4] = ac[j][l][h][4];
    y[2][0] = aa[3][2];
    p = aa[3][2] * af[j][k][h];
    n = ae[j][k][h];
    y[2][1] = aa[3][1] * p;
    y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
    y[2][3] = aa[3][3] * p;
    y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
    o = af[j][k][h];
    q = o * aa[3][1];
    r = o * aa[3][2];
    s = o * aa[3][3];
    t = o * aa[3][4];
    o = af[j][i][h];
    u = o * aa[2][1];
    v = o * aa[2][2];
    w = o * aa[2][3];
    x = o * aa[2][4];
    z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
    z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
    z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
    z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
    for (m = 0; m < 5; m++) {
      ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
    }
    ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
    ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
    ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
    ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
    ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
    for (m = 0; m < 5; m++) {
      ad[j][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
    }
  }

  i = f - 3;
  k = f - 2;
  l = f - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][l][h][0];
  aa[4][1] = ac[j][l][h][1];
  aa[4][2] = ac[j][l][h][2];
  aa[4][3] = ac[j][l][h][3];
  aa[4][4] = ac[j][l][h][4];
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][f - 3][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m]);
  }

  i = f - 2;
  k = f - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][f - 2][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 5.0 * aa[2][m]);
  }
}","[  1  12   1 ..., 127   0 127]"
320,npb-3.3-LU-rhsy,W,1048,19,4,0,71,0,6347040,62,GPU,0.432356,0.241608,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g) {
  int h, i, j, k, l, m;
  double n;
  double o;
  double p;
  double q, r, s, t;
  double u, v, w, x;
  double y[3][5], z[2][5];
  double aa[5][5], ab[5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*af)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  j = get_global_id(1) + 1;
  h = get_global_id(0) + 1;
  if (j >= (g - 1) || h >= (e - 1))
    return;

  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  af = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  k = 0;
  aa[3][0] = ac[j][0][h][0];
  aa[3][1] = ac[j][0][h][1];
  aa[3][2] = ac[j][0][h][2];
  aa[3][3] = ac[j][0][h][3];
  aa[3][4] = ac[j][0][h][4];
  y[1][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[1][1] = aa[3][1] * p;
  y[1][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[1][3] = aa[3][3] * p;
  y[1][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;

  i = 0;
  k = 1;
  for (m = 0; m < 5; m++)
    aa[2][m] = aa[3][m];
  aa[3][0] = ac[j][1][h][0];
  aa[3][1] = ac[j][1][h][1];
  aa[3][2] = ac[j][1][h][2];
  aa[3][3] = ac[j][1][h][3];
  aa[3][4] = ac[j][1][h][4];
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  aa[4][0] = ac[j][2][h][0];
  aa[4][1] = ac[j][2][h][1];
  aa[4][2] = ac[j][2][h][2];
  aa[4][3] = ac[j][2][h][3];
  aa[4][4] = ac[j][2][h][4];

  i = 1;
  k = 2;
  l = 3;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][l][h][0];
  aa[4][1] = ac[j][l][h][1];
  aa[4][2] = ac[j][l][h][2];
  aa[4][3] = ac[j][l][h][3];
  aa[4][4] = ac[j][l][h][4];
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][1][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  i = 2;
  k = 3;
  l = 4;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][l][h][0];
  aa[4][1] = ac[j][l][h][1];
  aa[4][2] = ac[j][l][h][2];
  aa[4][3] = ac[j][l][h][3];
  aa[4][4] = ac[j][l][h][4];
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][2][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  for (i = 3; i < f - 3; i++) {
    k = i + 1;
    l = i + 2;
    for (m = 0; m < 5; m++) {
      aa[0][m] = aa[1][m];
      aa[1][m] = aa[2][m];
      aa[2][m] = aa[3][m];
      aa[3][m] = aa[4][m];
      y[0][m] = y[1][m];
      y[1][m] = y[2][m];
      z[0][m] = z[1][m];
    }
    aa[4][0] = ac[j][l][h][0];
    aa[4][1] = ac[j][l][h][1];
    aa[4][2] = ac[j][l][h][2];
    aa[4][3] = ac[j][l][h][3];
    aa[4][4] = ac[j][l][h][4];
    y[2][0] = aa[3][2];
    p = aa[3][2] * af[j][k][h];
    n = ae[j][k][h];
    y[2][1] = aa[3][1] * p;
    y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
    y[2][3] = aa[3][3] * p;
    y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
    o = af[j][k][h];
    q = o * aa[3][1];
    r = o * aa[3][2];
    s = o * aa[3][3];
    t = o * aa[3][4];
    o = af[j][i][h];
    u = o * aa[2][1];
    v = o * aa[2][2];
    w = o * aa[2][3];
    x = o * aa[2][4];
    z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
    z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
    z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
    z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
    for (m = 0; m < 5; m++) {
      ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
    }
    ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
    ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
    ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
    ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
    ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
    for (m = 0; m < 5; m++) {
      ad[j][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
    }
  }

  i = f - 3;
  k = f - 2;
  l = f - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[j][l][h][0];
  aa[4][1] = ac[j][l][h][1];
  aa[4][2] = ac[j][l][h][2];
  aa[4][3] = ac[j][l][h][3];
  aa[4][4] = ac[j][l][h][4];
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][f - 3][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m]);
  }

  i = f - 2;
  k = f - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  y[2][0] = aa[3][2];
  p = aa[3][2] * af[j][k][h];
  n = ae[j][k][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][3] = aa[3][3] * p;
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[j][k][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (r * r - v * v) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 0.75 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[j][f - 2][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 5.0 * aa[2][m]);
  }
}","[  1  12   1 ..., 127   0 127]"
321,npb-3.3-LU-rhsz,A,1048,19,4,0,69,0,47333624,62,GPU,3.4708069999999998,0.600774,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g) {
  int h, i, j, k, l, m;
  double n;
  double o;
  double p;
  double q, r, s, t;
  double u, v, w, x;
  double y[3][5], z[2][5];
  double aa[5][5], ab[5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*af)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  i = get_global_id(1) + 1;
  h = get_global_id(0) + 1;
  if (i >= (f - 1) || h >= (e - 1))
    return;

  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  af = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  k = 0;
  aa[3][0] = ac[0][i][h][0];
  aa[3][1] = ac[0][i][h][1];
  aa[3][2] = ac[0][i][h][2];
  aa[3][3] = ac[0][i][h][3];
  aa[3][4] = ac[0][i][h][4];
  y[1][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[1][1] = aa[3][1] * p;
  y[1][2] = aa[3][2] * p;
  y[1][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[1][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;

  j = 0;
  k = 1;
  for (m = 0; m < 5; m++)
    aa[2][m] = aa[3][m];
  aa[3][0] = ac[1][i][h][0];
  aa[3][1] = ac[1][i][h][1];
  aa[3][2] = ac[1][i][h][2];
  aa[3][3] = ac[1][i][h][3];
  aa[3][4] = ac[1][i][h][4];
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  aa[4][0] = ac[2][i][h][0];
  aa[4][1] = ac[2][i][h][1];
  aa[4][2] = ac[2][i][h][2];
  aa[4][3] = ac[2][i][h][3];
  aa[4][4] = ac[2][i][h][4];

  j = 1;
  k = 2;
  l = 3;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[l][i][h][0];
  aa[4][1] = ac[l][i][h][1];
  aa[4][2] = ac[l][i][h][2];
  aa[4][3] = ac[l][i][h][3];
  aa[4][4] = ac[l][i][h][4];
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[1][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  j = 2;
  k = 3;
  l = 4;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[l][i][h][0];
  aa[4][1] = ac[l][i][h][1];
  aa[4][2] = ac[l][i][h][2];
  aa[4][3] = ac[l][i][h][3];
  aa[4][4] = ac[l][i][h][4];
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[2][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  for (j = 3; j < g - 3; j++) {
    k = j + 1;
    l = j + 2;
    for (m = 0; m < 5; m++) {
      aa[0][m] = aa[1][m];
      aa[1][m] = aa[2][m];
      aa[2][m] = aa[3][m];
      aa[3][m] = aa[4][m];
      y[0][m] = y[1][m];
      y[1][m] = y[2][m];
      z[0][m] = z[1][m];
    }
    aa[4][0] = ac[l][i][h][0];
    aa[4][1] = ac[l][i][h][1];
    aa[4][2] = ac[l][i][h][2];
    aa[4][3] = ac[l][i][h][3];
    aa[4][4] = ac[l][i][h][4];
    y[2][0] = aa[3][3];
    p = aa[3][3] * af[k][i][h];
    n = ae[k][i][h];
    y[2][1] = aa[3][1] * p;
    y[2][2] = aa[3][2] * p;
    y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
    y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
    o = af[k][i][h];
    q = o * aa[3][1];
    r = o * aa[3][2];
    s = o * aa[3][3];
    t = o * aa[3][4];
    o = af[j][i][h];
    u = o * aa[2][1];
    v = o * aa[2][2];
    w = o * aa[2][3];
    x = o * aa[2][4];
    z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
    z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
    z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
    z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
    for (m = 0; m < 5; m++) {
      ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
    }
    ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
    ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
    ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
    ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
    ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
    for (m = 0; m < 5; m++) {
      ad[j][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
    }
  }

  j = g - 3;
  k = g - 2;
  l = g - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[l][i][h][0];
  aa[4][1] = ac[l][i][h][1];
  aa[4][2] = ac[l][i][h][2];
  aa[4][3] = ac[l][i][h][3];
  aa[4][4] = ac[l][i][h][4];
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[g - 3][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m]);
  }

  j = g - 2;
  k = g - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[g - 2][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 5.0 * aa[2][m]);
  }
}","[  1  12   1 ..., 127   0 127]"
322,npb-3.3-LU-rhsz,B,1048,19,4,0,69,0,189794664,32,GPU,14.783681,2.2226310000000002,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g) {
  int h, i, j, k, l, m;
  double n;
  double o;
  double p;
  double q, r, s, t;
  double u, v, w, x;
  double y[3][5], z[2][5];
  double aa[5][5], ab[5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*af)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  i = get_global_id(1) + 1;
  h = get_global_id(0) + 1;
  if (i >= (f - 1) || h >= (e - 1))
    return;

  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  af = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  k = 0;
  aa[3][0] = ac[0][i][h][0];
  aa[3][1] = ac[0][i][h][1];
  aa[3][2] = ac[0][i][h][2];
  aa[3][3] = ac[0][i][h][3];
  aa[3][4] = ac[0][i][h][4];
  y[1][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[1][1] = aa[3][1] * p;
  y[1][2] = aa[3][2] * p;
  y[1][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[1][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;

  j = 0;
  k = 1;
  for (m = 0; m < 5; m++)
    aa[2][m] = aa[3][m];
  aa[3][0] = ac[1][i][h][0];
  aa[3][1] = ac[1][i][h][1];
  aa[3][2] = ac[1][i][h][2];
  aa[3][3] = ac[1][i][h][3];
  aa[3][4] = ac[1][i][h][4];
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  aa[4][0] = ac[2][i][h][0];
  aa[4][1] = ac[2][i][h][1];
  aa[4][2] = ac[2][i][h][2];
  aa[4][3] = ac[2][i][h][3];
  aa[4][4] = ac[2][i][h][4];

  j = 1;
  k = 2;
  l = 3;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[l][i][h][0];
  aa[4][1] = ac[l][i][h][1];
  aa[4][2] = ac[l][i][h][2];
  aa[4][3] = ac[l][i][h][3];
  aa[4][4] = ac[l][i][h][4];
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[1][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  j = 2;
  k = 3;
  l = 4;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[l][i][h][0];
  aa[4][1] = ac[l][i][h][1];
  aa[4][2] = ac[l][i][h][2];
  aa[4][3] = ac[l][i][h][3];
  aa[4][4] = ac[l][i][h][4];
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[2][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  for (j = 3; j < g - 3; j++) {
    k = j + 1;
    l = j + 2;
    for (m = 0; m < 5; m++) {
      aa[0][m] = aa[1][m];
      aa[1][m] = aa[2][m];
      aa[2][m] = aa[3][m];
      aa[3][m] = aa[4][m];
      y[0][m] = y[1][m];
      y[1][m] = y[2][m];
      z[0][m] = z[1][m];
    }
    aa[4][0] = ac[l][i][h][0];
    aa[4][1] = ac[l][i][h][1];
    aa[4][2] = ac[l][i][h][2];
    aa[4][3] = ac[l][i][h][3];
    aa[4][4] = ac[l][i][h][4];
    y[2][0] = aa[3][3];
    p = aa[3][3] * af[k][i][h];
    n = ae[k][i][h];
    y[2][1] = aa[3][1] * p;
    y[2][2] = aa[3][2] * p;
    y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
    y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
    o = af[k][i][h];
    q = o * aa[3][1];
    r = o * aa[3][2];
    s = o * aa[3][3];
    t = o * aa[3][4];
    o = af[j][i][h];
    u = o * aa[2][1];
    v = o * aa[2][2];
    w = o * aa[2][3];
    x = o * aa[2][4];
    z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
    z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
    z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
    z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
    for (m = 0; m < 5; m++) {
      ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
    }
    ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
    ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
    ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
    ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
    ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
    for (m = 0; m < 5; m++) {
      ad[j][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
    }
  }

  j = g - 3;
  k = g - 2;
  l = g - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[l][i][h][0];
  aa[4][1] = ac[l][i][h][1];
  aa[4][2] = ac[l][i][h][2];
  aa[4][3] = ac[l][i][h][3];
  aa[4][4] = ac[l][i][h][4];
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[g - 3][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m]);
  }

  j = g - 2;
  k = g - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[g - 2][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 5.0 * aa[2][m]);
  }
}","[  1  12   1 ..., 127   0 127]"
323,npb-3.3-LU-rhsz,C,1048,19,4,0,69,0,755867256,64,GPU,55.390147,6.3648489999999995,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g) {
  int h, i, j, k, l, m;
  double n;
  double o;
  double p;
  double q, r, s, t;
  double u, v, w, x;
  double y[3][5], z[2][5];
  double aa[5][5], ab[5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*af)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  i = get_global_id(1) + 1;
  h = get_global_id(0) + 1;
  if (i >= (f - 1) || h >= (e - 1))
    return;

  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  af = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  k = 0;
  aa[3][0] = ac[0][i][h][0];
  aa[3][1] = ac[0][i][h][1];
  aa[3][2] = ac[0][i][h][2];
  aa[3][3] = ac[0][i][h][3];
  aa[3][4] = ac[0][i][h][4];
  y[1][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[1][1] = aa[3][1] * p;
  y[1][2] = aa[3][2] * p;
  y[1][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[1][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;

  j = 0;
  k = 1;
  for (m = 0; m < 5; m++)
    aa[2][m] = aa[3][m];
  aa[3][0] = ac[1][i][h][0];
  aa[3][1] = ac[1][i][h][1];
  aa[3][2] = ac[1][i][h][2];
  aa[3][3] = ac[1][i][h][3];
  aa[3][4] = ac[1][i][h][4];
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  aa[4][0] = ac[2][i][h][0];
  aa[4][1] = ac[2][i][h][1];
  aa[4][2] = ac[2][i][h][2];
  aa[4][3] = ac[2][i][h][3];
  aa[4][4] = ac[2][i][h][4];

  j = 1;
  k = 2;
  l = 3;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[l][i][h][0];
  aa[4][1] = ac[l][i][h][1];
  aa[4][2] = ac[l][i][h][2];
  aa[4][3] = ac[l][i][h][3];
  aa[4][4] = ac[l][i][h][4];
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[1][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  j = 2;
  k = 3;
  l = 4;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[l][i][h][0];
  aa[4][1] = ac[l][i][h][1];
  aa[4][2] = ac[l][i][h][2];
  aa[4][3] = ac[l][i][h][3];
  aa[4][4] = ac[l][i][h][4];
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[2][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  for (j = 3; j < g - 3; j++) {
    k = j + 1;
    l = j + 2;
    for (m = 0; m < 5; m++) {
      aa[0][m] = aa[1][m];
      aa[1][m] = aa[2][m];
      aa[2][m] = aa[3][m];
      aa[3][m] = aa[4][m];
      y[0][m] = y[1][m];
      y[1][m] = y[2][m];
      z[0][m] = z[1][m];
    }
    aa[4][0] = ac[l][i][h][0];
    aa[4][1] = ac[l][i][h][1];
    aa[4][2] = ac[l][i][h][2];
    aa[4][3] = ac[l][i][h][3];
    aa[4][4] = ac[l][i][h][4];
    y[2][0] = aa[3][3];
    p = aa[3][3] * af[k][i][h];
    n = ae[k][i][h];
    y[2][1] = aa[3][1] * p;
    y[2][2] = aa[3][2] * p;
    y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
    y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
    o = af[k][i][h];
    q = o * aa[3][1];
    r = o * aa[3][2];
    s = o * aa[3][3];
    t = o * aa[3][4];
    o = af[j][i][h];
    u = o * aa[2][1];
    v = o * aa[2][2];
    w = o * aa[2][3];
    x = o * aa[2][4];
    z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
    z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
    z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
    z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
    for (m = 0; m < 5; m++) {
      ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
    }
    ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
    ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
    ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
    ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
    ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
    for (m = 0; m < 5; m++) {
      ad[j][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
    }
  }

  j = g - 3;
  k = g - 2;
  l = g - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[l][i][h][0];
  aa[4][1] = ac[l][i][h][1];
  aa[4][2] = ac[l][i][h][2];
  aa[4][3] = ac[l][i][h][3];
  aa[4][4] = ac[l][i][h][4];
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[g - 3][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m]);
  }

  j = g - 2;
  k = g - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[g - 2][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 5.0 * aa[2][m]);
  }
}","[  1  12   1 ..., 127   0 127]"
324,npb-3.3-LU-rhsz,S,1048,19,4,0,69,0,349464,60,CPU,0.131074,0.188,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g) {
  int h, i, j, k, l, m;
  double n;
  double o;
  double p;
  double q, r, s, t;
  double u, v, w, x;
  double y[3][5], z[2][5];
  double aa[5][5], ab[5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*af)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  i = get_global_id(1) + 1;
  h = get_global_id(0) + 1;
  if (i >= (f - 1) || h >= (e - 1))
    return;

  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  af = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  k = 0;
  aa[3][0] = ac[0][i][h][0];
  aa[3][1] = ac[0][i][h][1];
  aa[3][2] = ac[0][i][h][2];
  aa[3][3] = ac[0][i][h][3];
  aa[3][4] = ac[0][i][h][4];
  y[1][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[1][1] = aa[3][1] * p;
  y[1][2] = aa[3][2] * p;
  y[1][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[1][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;

  j = 0;
  k = 1;
  for (m = 0; m < 5; m++)
    aa[2][m] = aa[3][m];
  aa[3][0] = ac[1][i][h][0];
  aa[3][1] = ac[1][i][h][1];
  aa[3][2] = ac[1][i][h][2];
  aa[3][3] = ac[1][i][h][3];
  aa[3][4] = ac[1][i][h][4];
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  aa[4][0] = ac[2][i][h][0];
  aa[4][1] = ac[2][i][h][1];
  aa[4][2] = ac[2][i][h][2];
  aa[4][3] = ac[2][i][h][3];
  aa[4][4] = ac[2][i][h][4];

  j = 1;
  k = 2;
  l = 3;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[l][i][h][0];
  aa[4][1] = ac[l][i][h][1];
  aa[4][2] = ac[l][i][h][2];
  aa[4][3] = ac[l][i][h][3];
  aa[4][4] = ac[l][i][h][4];
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[1][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  j = 2;
  k = 3;
  l = 4;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[l][i][h][0];
  aa[4][1] = ac[l][i][h][1];
  aa[4][2] = ac[l][i][h][2];
  aa[4][3] = ac[l][i][h][3];
  aa[4][4] = ac[l][i][h][4];
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[2][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  for (j = 3; j < g - 3; j++) {
    k = j + 1;
    l = j + 2;
    for (m = 0; m < 5; m++) {
      aa[0][m] = aa[1][m];
      aa[1][m] = aa[2][m];
      aa[2][m] = aa[3][m];
      aa[3][m] = aa[4][m];
      y[0][m] = y[1][m];
      y[1][m] = y[2][m];
      z[0][m] = z[1][m];
    }
    aa[4][0] = ac[l][i][h][0];
    aa[4][1] = ac[l][i][h][1];
    aa[4][2] = ac[l][i][h][2];
    aa[4][3] = ac[l][i][h][3];
    aa[4][4] = ac[l][i][h][4];
    y[2][0] = aa[3][3];
    p = aa[3][3] * af[k][i][h];
    n = ae[k][i][h];
    y[2][1] = aa[3][1] * p;
    y[2][2] = aa[3][2] * p;
    y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
    y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
    o = af[k][i][h];
    q = o * aa[3][1];
    r = o * aa[3][2];
    s = o * aa[3][3];
    t = o * aa[3][4];
    o = af[j][i][h];
    u = o * aa[2][1];
    v = o * aa[2][2];
    w = o * aa[2][3];
    x = o * aa[2][4];
    z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
    z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
    z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
    z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
    for (m = 0; m < 5; m++) {
      ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
    }
    ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
    ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
    ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
    ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
    ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
    for (m = 0; m < 5; m++) {
      ad[j][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
    }
  }

  j = g - 3;
  k = g - 2;
  l = g - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[l][i][h][0];
  aa[4][1] = ac[l][i][h][1];
  aa[4][2] = ac[l][i][h][2];
  aa[4][3] = ac[l][i][h][3];
  aa[4][4] = ac[l][i][h][4];
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[g - 3][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m]);
  }

  j = g - 2;
  k = g - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[g - 2][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 5.0 * aa[2][m]);
  }
}","[  1  12   1 ..., 127   0 127]"
325,npb-3.3-LU-rhsz,W,1048,19,4,0,69,0,6347040,62,GPU,0.457272,0.24512399999999998,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g) {
  int h, i, j, k, l, m;
  double n;
  double o;
  double p;
  double q, r, s, t;
  double u, v, w, x;
  double y[3][5], z[2][5];
  double aa[5][5], ab[5];
  __global double(*ac)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ad)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*ae)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];
  __global double(*af)[12 / 2 * 2 + 1][12 / 2 * 2 + 1];

  i = get_global_id(1) + 1;
  h = get_global_id(0) + 1;
  if (i >= (f - 1) || h >= (e - 1))
    return;

  ac = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  ad = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;
  ae = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])c;
  af = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1])d;
  k = 0;
  aa[3][0] = ac[0][i][h][0];
  aa[3][1] = ac[0][i][h][1];
  aa[3][2] = ac[0][i][h][2];
  aa[3][3] = ac[0][i][h][3];
  aa[3][4] = ac[0][i][h][4];
  y[1][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[1][1] = aa[3][1] * p;
  y[1][2] = aa[3][2] * p;
  y[1][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[1][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;

  j = 0;
  k = 1;
  for (m = 0; m < 5; m++)
    aa[2][m] = aa[3][m];
  aa[3][0] = ac[1][i][h][0];
  aa[3][1] = ac[1][i][h][1];
  aa[3][2] = ac[1][i][h][2];
  aa[3][3] = ac[1][i][h][3];
  aa[3][4] = ac[1][i][h][4];
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  aa[4][0] = ac[2][i][h][0];
  aa[4][1] = ac[2][i][h][1];
  aa[4][2] = ac[2][i][h][2];
  aa[4][3] = ac[2][i][h][3];
  aa[4][4] = ac[2][i][h][4];

  j = 1;
  k = 2;
  l = 3;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[l][i][h][0];
  aa[4][1] = ac[l][i][h][1];
  aa[4][2] = ac[l][i][h][2];
  aa[4][3] = ac[l][i][h][3];
  aa[4][4] = ac[l][i][h][4];
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[1][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (+5.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  j = 2;
  k = 3;
  l = 4;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[l][i][h][0];
  aa[4][1] = ac[l][i][h][1];
  aa[4][2] = ac[l][i][h][2];
  aa[4][3] = ac[l][i][h][3];
  aa[4][4] = ac[l][i][h][4];
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[2][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (-4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
  }

  for (j = 3; j < g - 3; j++) {
    k = j + 1;
    l = j + 2;
    for (m = 0; m < 5; m++) {
      aa[0][m] = aa[1][m];
      aa[1][m] = aa[2][m];
      aa[2][m] = aa[3][m];
      aa[3][m] = aa[4][m];
      y[0][m] = y[1][m];
      y[1][m] = y[2][m];
      z[0][m] = z[1][m];
    }
    aa[4][0] = ac[l][i][h][0];
    aa[4][1] = ac[l][i][h][1];
    aa[4][2] = ac[l][i][h][2];
    aa[4][3] = ac[l][i][h][3];
    aa[4][4] = ac[l][i][h][4];
    y[2][0] = aa[3][3];
    p = aa[3][3] * af[k][i][h];
    n = ae[k][i][h];
    y[2][1] = aa[3][1] * p;
    y[2][2] = aa[3][2] * p;
    y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
    y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
    o = af[k][i][h];
    q = o * aa[3][1];
    r = o * aa[3][2];
    s = o * aa[3][3];
    t = o * aa[3][4];
    o = af[j][i][h];
    u = o * aa[2][1];
    v = o * aa[2][2];
    w = o * aa[2][3];
    x = o * aa[2][4];
    z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
    z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
    z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
    z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
    for (m = 0; m < 5; m++) {
      ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
    }
    ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
    ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
    ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
    ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
    ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
    for (m = 0; m < 5; m++) {
      ad[j][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m] + aa[4][m]);
    }
  }

  j = g - 3;
  k = g - 2;
  l = g - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  aa[4][0] = ac[l][i][h][0];
  aa[4][1] = ac[l][i][h][1];
  aa[4][2] = ac[l][i][h][2];
  aa[4][3] = ac[l][i][h][3];
  aa[4][4] = ac[l][i][h][4];
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[g - 3][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 6.0 * aa[2][m] - 4.0 * aa[3][m]);
  }

  j = g - 2;
  k = g - 1;
  for (m = 0; m < 5; m++) {
    aa[0][m] = aa[1][m];
    aa[1][m] = aa[2][m];
    aa[2][m] = aa[3][m];
    aa[3][m] = aa[4][m];
    y[0][m] = y[1][m];
    y[1][m] = y[2][m];
    z[0][m] = z[1][m];
  }
  y[2][0] = aa[3][3];
  p = aa[3][3] * af[k][i][h];
  n = ae[k][i][h];
  y[2][1] = aa[3][1] * p;
  y[2][2] = aa[3][2] * p;
  y[2][3] = aa[3][3] * p + 0.40e+00 * (aa[3][4] - n);
  y[2][4] = (1.40e+00 * aa[3][4] - 0.40e+00 * n) * p;
  o = af[k][i][h];
  q = o * aa[3][1];
  r = o * aa[3][2];
  s = o * aa[3][3];
  t = o * aa[3][4];
  o = af[j][i][h];
  u = o * aa[2][1];
  v = o * aa[2][2];
  w = o * aa[2][3];
  x = o * aa[2][4];
  z[1][1] = (1.0 / (1.0 / (12 - 1))) * (q - u);
  z[1][2] = (1.0 / (1.0 / (12 - 1))) * (r - v);
  z[1][3] = (4.0 / 3.0) * (1.0 / (1.0 / (12 - 1))) * (s - w);
  z[1][4] = 0.50 * (1.0 - 1.40e+00 * 1.40e+00) * (1.0 / (1.0 / (12 - 1))) * ((q * q + r * r + s * s) - (u * u + v * v + w * w)) + (1.0 / 6.0) * (1.0 / (1.0 / (12 - 1))) * (s * s - w * w) + 1.40e+00 * 1.40e+00 * (1.0 / (1.0 / (12 - 1))) * (t - x);
  for (m = 0; m < 5; m++) {
    ab[m] = ad[j][i][h][m] - (1.0 / (2.0 * (1.0 / (12 - 1)))) * (y[2][m] - y[0][m]);
  }
  ab[0] = ab[0] + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][0] - 2.0 * aa[2][0] + aa[3][0]);
  ab[1] = ab[1] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][1] - z[0][1]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][1] - 2.0 * aa[2][1] + aa[3][1]);
  ab[2] = ab[2] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][2] - z[0][2]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][2] - 2.0 * aa[2][2] + aa[3][2]);
  ab[3] = ab[3] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][3] - z[0][3]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][3] - 2.0 * aa[2][3] + aa[3][3]);
  ab[4] = ab[4] + (1.0 / (1.0 / (12 - 1))) * 1.00e-01 * 1.00e+00 * (z[1][4] - z[0][4]) + 1.00 * (1.0 / ((1.0 / (12 - 1)) * (1.0 / (12 - 1)))) * (aa[1][4] - 2.0 * aa[2][4] + aa[3][4]);
  for (m = 0; m < 5; m++) {
    ad[g - 2][i][h][m] = ab[m] - ((max(max(0.75, 0.75), 1.00)) / 4.0) * (aa[0][m] - 4.0 * aa[1][m] + 5.0 * aa[2][m]);
  }
}","[  1  12   1 ..., 127   0 127]"
326,npb-3.3-LU-setbv1,A,74,5,5,0,28,0,47333624,64,GPU,0.261491,0.183072,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h;
  double i[5], j[5];

  g = get_global_id(1);
  f = get_global_id(0);
  if (g >= d || f >= c)
    return;

  __global double(*k)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  B(f, g, 0, i, b);
  B(f, g, e - 1, j, b);
  for (h = 0; h < 5; h++) {
    k[0][g][f][h] = i[h];
    k[e - 1][g][f][h] = j[h];
  }
}","[129 129 129 ..., 127   0 127]"
327,npb-3.3-LU-setbv1,B,74,5,5,0,28,0,189794664,32,GPU,0.587598,0.205312,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h;
  double i[5], j[5];

  g = get_global_id(1);
  f = get_global_id(0);
  if (g >= d || f >= c)
    return;

  __global double(*k)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  B(f, g, 0, i, b);
  B(f, g, e - 1, j, b);
  for (h = 0; h < 5; h++) {
    k[0][g][f][h] = i[h];
    k[e - 1][g][f][h] = j[h];
  }
}","[129 129 129 ..., 127   0 127]"
328,npb-3.3-LU-setbv1,C,74,5,5,0,28,0,755867256,64,GPU,1.0919510000000001,0.239904,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h;
  double i[5], j[5];

  g = get_global_id(1);
  f = get_global_id(0);
  if (g >= d || f >= c)
    return;

  __global double(*k)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  B(f, g, 0, i, b);
  B(f, g, e - 1, j, b);
  for (h = 0; h < 5; h++) {
    k[0][g][f][h] = i[h];
    k[e - 1][g][f][h] = j[h];
  }
}","[129 129 129 ..., 127   0 127]"
329,npb-3.3-LU-setbv1,S,74,5,5,0,28,0,349464,60,GPU,0.17460799999999999,0.168602,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h;
  double i[5], j[5];

  g = get_global_id(1);
  f = get_global_id(0);
  if (g >= d || f >= c)
    return;

  __global double(*k)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  B(f, g, 0, i, b);
  B(f, g, e - 1, j, b);
  for (h = 0; h < 5; h++) {
    k[0][g][f][h] = i[h];
    k[e - 1][g][f][h] = j[h];
  }
}","[129 129 129 ..., 127   0 127]"
330,npb-3.3-LU-setbv1,W,74,5,5,0,28,0,6347040,33,GPU,0.188367,0.174714,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h;
  double i[5], j[5];

  g = get_global_id(1);
  f = get_global_id(0);
  if (g >= d || f >= c)
    return;

  __global double(*k)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  B(f, g, 0, i, b);
  B(f, g, e - 1, j, b);
  for (h = 0; h < 5; h++) {
    k[0][g][f][h] = i[h];
    k[e - 1][g][f][h] = j[h];
  }
}","[129 129 129 ..., 127   0 127]"
331,npb-3.3-LU-setbv2,A,74,2,5,0,28,0,47333624,60,GPU,2.6674029999999997,0.214083,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h;

  g = get_global_id(2);
  f = get_global_id(1);
  h = get_global_id(0);
  if (g >= e || f >= c)
    return;

  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  i[g][0][f][h] = A(f, 0, g, h, b);
  i[g][d - 1][f][h] = A(f, d - 1, g, h, b);
}","[129 129 129 ...,  26   0 127]"
332,npb-3.3-LU-setbv2,B,74,2,5,0,28,0,189794664,30,GPU,11.004967,0.27113000000000004,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h;

  g = get_global_id(2);
  f = get_global_id(1);
  h = get_global_id(0);
  if (g >= e || f >= c)
    return;

  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  i[g][0][f][h] = A(f, 0, g, h, b);
  i[g][d - 1][f][h] = A(f, d - 1, g, h, b);
}","[129 129 129 ...,  26   0 127]"
333,npb-3.3-LU-setbv2,C,74,2,5,0,28,0,755867256,60,GPU,43.479416,0.42865,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h;

  g = get_global_id(2);
  f = get_global_id(1);
  h = get_global_id(0);
  if (g >= e || f >= c)
    return;

  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  i[g][0][f][h] = A(f, 0, g, h, b);
  i[g][d - 1][f][h] = A(f, d - 1, g, h, b);
}","[129 129 129 ...,  26   0 127]"
334,npb-3.3-LU-setbv2,S,74,2,5,0,28,0,349464,60,CPU,0.149228,0.163981,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h;

  g = get_global_id(2);
  f = get_global_id(1);
  h = get_global_id(0);
  if (g >= e || f >= c)
    return;

  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  i[g][0][f][h] = A(f, 0, g, h, b);
  i[g][d - 1][f][h] = A(f, d - 1, g, h, b);
}","[129 129 129 ...,  26   0 127]"
335,npb-3.3-LU-setbv2,W,74,2,5,0,28,0,6346800,60,CPU,0.14705,0.176877,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h;

  g = get_global_id(2);
  f = get_global_id(1);
  h = get_global_id(0);
  if (g >= e || f >= c)
    return;

  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  i[g][0][f][h] = A(f, 0, g, h, b);
  i[g][d - 1][f][h] = A(f, d - 1, g, h, b);
}","[129 129 129 ...,  26   0 127]"
336,npb-3.3-LU-setbv3,A,74,2,5,0,28,0,47333624,60,GPU,0.336674,0.21574400000000002,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h;

  g = get_global_id(2);
  f = get_global_id(1);
  h = get_global_id(0);
  if (g >= e || f >= d)
    return;

  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  i[g][f][0][h] = A(0, f, g, h, b);
  i[g][f][c - 1][h] = A(c - 1, f, g, h, b);
}","[129 129 129 ...,  26   0 127]"
337,npb-3.3-LU-setbv3,B,74,2,5,0,28,0,189794664,30,GPU,0.465628,0.273933,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h;

  g = get_global_id(2);
  f = get_global_id(1);
  h = get_global_id(0);
  if (g >= e || f >= d)
    return;

  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  i[g][f][0][h] = A(0, f, g, h, b);
  i[g][f][c - 1][h] = A(c - 1, f, g, h, b);
}","[129 129 129 ...,  26   0 127]"
338,npb-3.3-LU-setbv3,C,74,2,5,0,28,0,755867256,60,GPU,0.722348,0.435158,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h;

  g = get_global_id(2);
  f = get_global_id(1);
  h = get_global_id(0);
  if (g >= e || f >= d)
    return;

  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  i[g][f][0][h] = A(0, f, g, h, b);
  i[g][f][c - 1][h] = A(c - 1, f, g, h, b);
}","[129 129 129 ...,  26   0 127]"
339,npb-3.3-LU-setbv3,S,74,2,5,0,28,0,349464,60,CPU,0.13731400000000002,0.163709,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h;

  g = get_global_id(2);
  f = get_global_id(1);
  h = get_global_id(0);
  if (g >= e || f >= d)
    return;

  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  i[g][f][0][h] = A(0, f, g, h, b);
  i[g][f][c - 1][h] = A(c - 1, f, g, h, b);
}","[129 129 129 ...,  26   0 127]"
340,npb-3.3-LU-setbv3,W,74,2,5,0,28,0,6346800,60,CPU,0.163686,0.176592,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h;

  g = get_global_id(2);
  f = get_global_id(1);
  h = get_global_id(0);
  if (g >= e || f >= d)
    return;

  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  i[g][f][0][h] = A(0, f, g, h, b);
  i[g][f][c - 1][h] = A(c - 1, f, g, h, b);
}","[129 129 129 ...,  26   0 127]"
341,npb-3.3-LU-setiv,A,230,10,13,0,79,0,47333624,62,GPU,11.901937,1.344019,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l;
  double m, n, o;
  double p[5], q[5], r[5];
  double s[5], t[5], u[5];

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h >= (e - 1) || g >= (d - 1) || f >= (c - 1))
    return;

  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  l = ((double)h) / (e - 1);
  k = ((double)g) / (12 - 1);
  j = ((double)f) / (12 - 1);
  B(0, g, h, p, b);
  B(12 - 1, g, h, q, b);
  B(f, 0, h, r, b);
  B(f, 12 - 1, h, s, b);
  B(f, g, 0, t, b);
  B(f, g, e - 1, u, b);

  for (i = 0; i < 5; i++) {
    m = (1.0 - j) * p[i] + j * q[i];
    n = (1.0 - k) * r[i] + k * s[i];
    o = (1.0 - l) * t[i] + l * u[i];

    v[h][g][f][i] = m + n + o - m * n - n * o - o * m + m * n * o;
  }
}","[129 129 129 ..., 127   0 127]"
342,npb-3.3-LU-setiv,B,230,10,13,0,79,0,189794664,32,GPU,50.49465900000001,6.128413,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l;
  double m, n, o;
  double p[5], q[5], r[5];
  double s[5], t[5], u[5];

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h >= (e - 1) || g >= (d - 1) || f >= (c - 1))
    return;

  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  l = ((double)h) / (e - 1);
  k = ((double)g) / (12 - 1);
  j = ((double)f) / (12 - 1);
  B(0, g, h, p, b);
  B(12 - 1, g, h, q, b);
  B(f, 0, h, r, b);
  B(f, 12 - 1, h, s, b);
  B(f, g, 0, t, b);
  B(f, g, e - 1, u, b);

  for (i = 0; i < 5; i++) {
    m = (1.0 - j) * p[i] + j * q[i];
    n = (1.0 - k) * r[i] + k * s[i];
    o = (1.0 - l) * t[i] + l * u[i];

    v[h][g][f][i] = m + n + o - m * n - n * o - o * m + m * n * o;
  }
}","[129 129 129 ..., 127   0 127]"
343,npb-3.3-LU-setiv,C,230,10,13,0,79,0,755867256,64,GPU,202.148046,20.615395,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l;
  double m, n, o;
  double p[5], q[5], r[5];
  double s[5], t[5], u[5];

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h >= (e - 1) || g >= (d - 1) || f >= (c - 1))
    return;

  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  l = ((double)h) / (e - 1);
  k = ((double)g) / (12 - 1);
  j = ((double)f) / (12 - 1);
  B(0, g, h, p, b);
  B(12 - 1, g, h, q, b);
  B(f, 0, h, r, b);
  B(f, 12 - 1, h, s, b);
  B(f, g, 0, t, b);
  B(f, g, e - 1, u, b);

  for (i = 0; i < 5; i++) {
    m = (1.0 - j) * p[i] + j * q[i];
    n = (1.0 - k) * r[i] + k * s[i];
    o = (1.0 - l) * t[i] + l * u[i];

    v[h][g][f][i] = m + n + o - m * n - n * o - o * m + m * n * o;
  }
}","[129 129 129 ..., 127   0 127]"
344,npb-3.3-LU-setiv,S,230,10,13,0,79,0,349464,60,GPU,0.2105,0.16992000000000002,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l;
  double m, n, o;
  double p[5], q[5], r[5];
  double s[5], t[5], u[5];

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h >= (e - 1) || g >= (d - 1) || f >= (c - 1))
    return;

  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  l = ((double)h) / (e - 1);
  k = ((double)g) / (12 - 1);
  j = ((double)f) / (12 - 1);
  B(0, g, h, p, b);
  B(12 - 1, g, h, q, b);
  B(f, 0, h, r, b);
  B(f, 12 - 1, h, s, b);
  B(f, g, 0, t, b);
  B(f, g, e - 1, u, b);

  for (i = 0; i < 5; i++) {
    m = (1.0 - j) * p[i] + j * q[i];
    n = (1.0 - k) * r[i] + k * s[i];
    o = (1.0 - l) * t[i] + l * u[i];

    v[h][g][f][i] = m + n + o - m * n - n * o - o * m + m * n * o;
  }
}","[129 129 129 ..., 127   0 127]"
345,npb-3.3-LU-setiv,W,230,10,13,0,79,0,6347040,62,GPU,1.366307,0.316701,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l;
  double m, n, o;
  double p[5], q[5], r[5];
  double s[5], t[5], u[5];

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h >= (e - 1) || g >= (d - 1) || f >= (c - 1))
    return;

  __global double(*v)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  l = ((double)h) / (e - 1);
  k = ((double)g) / (12 - 1);
  j = ((double)f) / (12 - 1);
  B(0, g, h, p, b);
  B(12 - 1, g, h, q, b);
  B(f, 0, h, r, b);
  B(f, 12 - 1, h, s, b);
  B(f, g, 0, t, b);
  B(f, g, e - 1, u, b);

  for (i = 0; i < 5; i++) {
    m = (1.0 - j) * p[i] + j * q[i];
    n = (1.0 - k) * r[i] + k * s[i];
    o = (1.0 - l) * t[i] + l * u[i];

    v[h][g][f][i] = m + n + o - m * n - n * o - o * m + m * n * o;
  }
}","[129 129 129 ..., 127   0 127]"
346,npb-3.3-LU-ssor2,A,19,4,1,0,2,0,47333624,62,GPU,0.729912,0.334422,"__kernel void A(__global double* a, double b, int c, int d, int e) {
  int f, g, h, i;
  __global double(*j)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h >= (e - 1) || g >= (d - 1) || f >= (c - 1))
    return;

  j = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (i = 0; i < 5; i++) {
    j[h][g][f][i] = b * j[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
347,npb-3.3-LU-ssor2,B,19,4,1,0,2,0,189794664,32,GPU,4.55526,0.876705,"__kernel void A(__global double* a, double b, int c, int d, int e) {
  int f, g, h, i;
  __global double(*j)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h >= (e - 1) || g >= (d - 1) || f >= (c - 1))
    return;

  j = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (i = 0; i < 5; i++) {
    j[h][g][f][i] = b * j[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
348,npb-3.3-LU-ssor2,C,19,4,1,0,2,0,755867256,64,GPU,17.277572,3.113337,"__kernel void A(__global double* a, double b, int c, int d, int e) {
  int f, g, h, i;
  __global double(*j)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h >= (e - 1) || g >= (d - 1) || f >= (c - 1))
    return;

  j = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (i = 0; i < 5; i++) {
    j[h][g][f][i] = b * j[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
349,npb-3.3-LU-ssor2,S,19,4,1,0,2,0,349464,60,CPU,0.128707,0.160242,"__kernel void A(__global double* a, double b, int c, int d, int e) {
  int f, g, h, i;
  __global double(*j)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h >= (e - 1) || g >= (d - 1) || f >= (c - 1))
    return;

  j = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (i = 0; i < 5; i++) {
    j[h][g][f][i] = b * j[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
350,npb-3.3-LU-ssor2,W,19,4,1,0,2,0,6346800,62,CPU,0.184169,0.189855,"__kernel void A(__global double* a, double b, int c, int d, int e) {
  int f, g, h, i;
  __global double(*j)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h >= (e - 1) || g >= (d - 1) || f >= (c - 1))
    return;

  j = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (i = 0; i < 5; i++) {
    j[h][g][f][i] = b * j[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
351,npb-3.3-LU-ssor3,A,32,4,2,0,3,0,47333624,62,GPU,1.4790729999999999,0.584542,"__kernel void A(__global double* a, __global double* b, double c, int d, int e, int f) {
  int g, h, i, j;
  __global double(*k)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*l)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];

  i = get_global_id(2) + 1;
  h = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (i >= (f - 1) || h >= (e - 1) || g >= (d - 1))
    return;

  k = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  l = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  for (j = 0; j < 5; j++) {
    k[i][h][g][j] = k[i][h][g][j] + c * l[i][h][g][j];
  }
}","[129 129 129 ..., 127   0 127]"
352,npb-3.3-LU-ssor3,B,32,4,2,0,3,0,189794664,32,GPU,6.772957000000001,1.021203,"__kernel void A(__global double* a, __global double* b, double c, int d, int e, int f) {
  int g, h, i, j;
  __global double(*k)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*l)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];

  i = get_global_id(2) + 1;
  h = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (i >= (f - 1) || h >= (e - 1) || g >= (d - 1))
    return;

  k = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  l = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  for (j = 0; j < 5; j++) {
    k[i][h][g][j] = k[i][h][g][j] + c * l[i][h][g][j];
  }
}","[129 129 129 ..., 127   0 127]"
353,npb-3.3-LU-ssor3,C,32,4,2,0,3,0,755867256,64,GPU,27.00584000000001,4.4442260000000005,"__kernel void A(__global double* a, __global double* b, double c, int d, int e, int f) {
  int g, h, i, j;
  __global double(*k)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*l)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];

  i = get_global_id(2) + 1;
  h = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (i >= (f - 1) || h >= (e - 1) || g >= (d - 1))
    return;

  k = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  l = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  for (j = 0; j < 5; j++) {
    k[i][h][g][j] = k[i][h][g][j] + c * l[i][h][g][j];
  }
}","[129 129 129 ..., 127   0 127]"
354,npb-3.3-LU-ssor3,S,32,4,2,0,3,0,349464,60,CPU,0.12519,0.161327,"__kernel void A(__global double* a, __global double* b, double c, int d, int e, int f) {
  int g, h, i, j;
  __global double(*k)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*l)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];

  i = get_global_id(2) + 1;
  h = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (i >= (f - 1) || h >= (e - 1) || g >= (d - 1))
    return;

  k = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  l = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  for (j = 0; j < 5; j++) {
    k[i][h][g][j] = k[i][h][g][j] + c * l[i][h][g][j];
  }
}","[129 129 129 ..., 127   0 127]"
355,npb-3.3-LU-ssor3,W,32,4,2,0,3,0,6346800,62,CPU,0.197384,0.211023,"__kernel void A(__global double* a, __global double* b, double c, int d, int e, int f) {
  int g, h, i, j;
  __global double(*k)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];
  __global double(*l)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5];

  i = get_global_id(2) + 1;
  h = get_global_id(1) + 1;
  g = get_global_id(0) + 1;
  if (i >= (f - 1) || h >= (e - 1) || g >= (d - 1))
    return;

  k = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  l = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])b;

  for (j = 0; j < 5; j++) {
    k[i][h][g][j] = k[i][h][g][j] + c * l[i][h][g][j];
  }
}","[129 129 129 ..., 127   0 127]"
356,npb-3.3-MG-kernel_comm3_1,A,29,1,4,0,0,0,477311792,32,CPU,203.206624,882.44175,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f = get_global_id(1) + 1;
  int g = get_global_id(0) + 1;
  if (g >= c - 1)
    return;

  a[f * c * b + g * b + 0 + e] = a[f * c * b + g * b + b - 2 + e];
  a[f * c * b + g * b + b - 1 + e] = a[f * c * b + g * b + 1 + e];
}","[129 129 129 ...,  26   0 127]"
357,npb-3.3-MG-kernel_comm3_1,B,29,1,4,0,0,0,477315888,32,CPU,204.017944,884.6094320000003,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f = get_global_id(1) + 1;
  int g = get_global_id(0) + 1;
  if (g >= c - 1)
    return;

  a[f * c * b + g * b + 0 + e] = a[f * c * b + g * b + b - 2 + e];
  a[f * c * b + g * b + b - 1 + e] = a[f * c * b + g * b + 1 + e];
}","[129 129 129 ...,  26   0 127]"
358,npb-3.3-MG-kernel_comm3_1,C,29,1,4,0,0,0,3749228176,32,CPU,1929.547511,6962.979051,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f = get_global_id(1) + 1;
  int g = get_global_id(0) + 1;
  if (g >= c - 1)
    return;

  a[f * c * b + g * b + 0 + e] = a[f * c * b + g * b + b - 2 + e];
  a[f * c * b + g * b + b - 1 + e] = a[f * c * b + g * b + 1 + e];
}","[129 129 129 ...,  26   0 127]"
359,npb-3.3-MG-kernel_comm3_1,S,29,1,4,0,0,0,1209360,32,CPU,0.982916,3.119487,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f = get_global_id(1) + 1;
  int g = get_global_id(0) + 1;
  if (g >= c - 1)
    return;

  a[f * c * b + g * b + 0 + e] = a[f * c * b + g * b + b - 2 + e];
  a[f * c * b + g * b + b - 1 + e] = a[f * c * b + g * b + 1 + e];
}","[129 129 129 ...,  26   0 127]"
360,npb-3.3-MG-kernel_comm3_1,W,29,1,4,0,0,0,61898192,32,CPU,29.515857,114.77206100000001,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f = get_global_id(1) + 1;
  int g = get_global_id(0) + 1;
  if (g >= c - 1)
    return;

  a[f * c * b + g * b + 0 + e] = a[f * c * b + g * b + b - 2 + e];
  a[f * c * b + g * b + b - 1 + e] = a[f * c * b + g * b + 1 + e];
}","[129 129 129 ...,  26   0 127]"
361,npb-3.3-MG-kernel_comm3_2,A,27,1,4,0,0,0,477311792,32,CPU,203.175957,882.409966,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f = get_global_id(1) + 1;
  int g = get_global_id(0);
  if (g >= b)
    return;

  a[f * c * b + 0 * b + g + e] = a[f * c * b + (c - 2) * b + g + e];
  a[f * c * b + (c - 1) * b + g + e] = a[f * c * b + 1 * b + g + e];
}","[129 129 129 ...,  26   0 127]"
362,npb-3.3-MG-kernel_comm3_2,B,27,1,4,0,0,0,477315888,32,CPU,203.979959,884.5824789999997,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f = get_global_id(1) + 1;
  int g = get_global_id(0);
  if (g >= b)
    return;

  a[f * c * b + 0 * b + g + e] = a[f * c * b + (c - 2) * b + g + e];
  a[f * c * b + (c - 1) * b + g + e] = a[f * c * b + 1 * b + g + e];
}","[129 129 129 ...,  26   0 127]"
363,npb-3.3-MG-kernel_comm3_2,C,27,1,4,0,0,0,3749228176,32,CPU,1929.266915,6962.692977,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f = get_global_id(1) + 1;
  int g = get_global_id(0);
  if (g >= b)
    return;

  a[f * c * b + 0 * b + g + e] = a[f * c * b + (c - 2) * b + g + e];
  a[f * c * b + (c - 1) * b + g + e] = a[f * c * b + 1 * b + g + e];
}","[129 129 129 ...,  26   0 127]"
364,npb-3.3-MG-kernel_comm3_2,S,27,1,4,0,0,0,1209360,32,CPU,0.98311,3.1190450000000003,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f = get_global_id(1) + 1;
  int g = get_global_id(0);
  if (g >= b)
    return;

  a[f * c * b + 0 * b + g + e] = a[f * c * b + (c - 2) * b + g + e];
  a[f * c * b + (c - 1) * b + g + e] = a[f * c * b + 1 * b + g + e];
}","[129 129 129 ...,  26   0 127]"
365,npb-3.3-MG-kernel_comm3_2,W,27,1,4,0,0,0,61898192,32,CPU,29.511387,114.76536999999999,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f = get_global_id(1) + 1;
  int g = get_global_id(0);
  if (g >= b)
    return;

  a[f * c * b + 0 * b + g + e] = a[f * c * b + (c - 2) * b + g + e];
  a[f * c * b + (c - 1) * b + g + e] = a[f * c * b + 1 * b + g + e];
}","[129 129 129 ...,  26   0 127]"
366,npb-3.3-MG-kernel_comm3_3,A,26,1,4,0,0,0,477311792,32,CPU,203.161518,882.409502,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f = get_global_id(1);
  int g = get_global_id(0);
  if (g >= b)
    return;

  a[0 * c * b + f * b + g + e] = a[(d - 2) * c * b + f * b + g + e];
  a[(d - 1) * c * b + f * b + g + e] = a[1 * c * b + f * b + g + e];
}","[129 129 129 ...,  26   0 127]"
367,npb-3.3-MG-kernel_comm3_3,B,26,1,4,0,0,0,477315888,32,CPU,203.98006,884.582082,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f = get_global_id(1);
  int g = get_global_id(0);
  if (g >= b)
    return;

  a[0 * c * b + f * b + g + e] = a[(d - 2) * c * b + f * b + g + e];
  a[(d - 1) * c * b + f * b + g + e] = a[1 * c * b + f * b + g + e];
}","[129 129 129 ...,  26   0 127]"
368,npb-3.3-MG-kernel_comm3_3,C,26,1,4,0,0,0,3749228176,32,CPU,1929.262778,6962.6981799999985,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f = get_global_id(1);
  int g = get_global_id(0);
  if (g >= b)
    return;

  a[0 * c * b + f * b + g + e] = a[(d - 2) * c * b + f * b + g + e];
  a[(d - 1) * c * b + f * b + g + e] = a[1 * c * b + f * b + g + e];
}","[129 129 129 ...,  26   0 127]"
369,npb-3.3-MG-kernel_comm3_3,S,26,1,4,0,0,0,1209360,32,CPU,0.98411,3.119253,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f = get_global_id(1);
  int g = get_global_id(0);
  if (g >= b)
    return;

  a[0 * c * b + f * b + g + e] = a[(d - 2) * c * b + f * b + g + e];
  a[(d - 1) * c * b + f * b + g + e] = a[1 * c * b + f * b + g + e];
}","[129 129 129 ...,  26   0 127]"
370,npb-3.3-MG-kernel_comm3_3,W,26,1,4,0,0,0,61898192,32,CPU,29.507179999999998,114.765079,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f = get_global_id(1);
  int g = get_global_id(0);
  if (g >= b)
    return;

  a[0 * c * b + f * b + g + e] = a[(d - 2) * c * b + f * b + g + e];
  a[(d - 1) * c * b + f * b + g + e] = a[1 * c * b + f * b + g + e];
}","[129 129 129 ...,  26   0 127]"
371,npb-3.3-MG-kernel_interp_1,A,143,1,15,13,5,0,477311792,38,CPU,205.88873,882.7431339999997,"__kernel void A(__global double* a, int b, int c, int d, int e, int f, int g, int h, int i) {
  int j, k, l;
  __local double m[1024], n[1024], o[1024];

  __global double* p = a + h;
  __global double* q = a + i;

  j = get_global_id(1);
  k = get_group_id(0);
  l = get_local_id(0);
  m[l] = p[j * c * b + (k + 1) * b + l] + p[j * c * b + k * b + l];
  n[l] = p[(j + 1) * c * b + k * b + l] + p[j * c * b + k * b + l];
  o[l] = p[(j + 1) * c * b + (k + 1) * b + l] + p[(j + 1) * c * b + k * b + l] + m[l];

  barrier(1);

  if (l < b - 1) {
    double r = p[j * c * b + k * b + l];
    q[2 * j * f * e + 2 * k * e + 2 * l] += r;
    q[2 * j * f * e + 2 * k * e + 2 * l + 1] += 0.5 * (p[j * c * b + k * b + l + 1] + r);

    q[2 * j * f * e + (2 * k + 1) * e + 2 * l] += 0.5 * m[l];
    q[2 * j * f * e + (2 * k + 1) * e + 2 * l + 1] += 0.25 * (m[l] + m[l + 1]);

    q[(2 * j + 1) * f * e + 2 * k * e + 2 * l] += 0.5 * n[l];
    q[(2 * j + 1) * f * e + 2 * k * e + 2 * l + 1] += 0.25 * (n[l] + n[l + 1]);

    q[(2 * j + 1) * f * e + (2 * k + 1) * e + 2 * l] += 0.25 * o[l];
    q[(2 * j + 1) * f * e + (2 * k + 1) * e + 2 * l + 1] += 0.125 * (o[l] + o[l + 1]);
  }
}","[ 31   7  58 ..., 127   0 127]"
372,npb-3.3-MG-kernel_interp_1,B,143,1,15,13,5,0,477315888,38,CPU,206.718894,884.9154279999997,"__kernel void A(__global double* a, int b, int c, int d, int e, int f, int g, int h, int i) {
  int j, k, l;
  __local double m[1024], n[1024], o[1024];

  __global double* p = a + h;
  __global double* q = a + i;

  j = get_global_id(1);
  k = get_group_id(0);
  l = get_local_id(0);
  m[l] = p[j * c * b + (k + 1) * b + l] + p[j * c * b + k * b + l];
  n[l] = p[(j + 1) * c * b + k * b + l] + p[j * c * b + k * b + l];
  o[l] = p[(j + 1) * c * b + (k + 1) * b + l] + p[(j + 1) * c * b + k * b + l] + m[l];

  barrier(1);

  if (l < b - 1) {
    double r = p[j * c * b + k * b + l];
    q[2 * j * f * e + 2 * k * e + 2 * l] += r;
    q[2 * j * f * e + 2 * k * e + 2 * l + 1] += 0.5 * (p[j * c * b + k * b + l + 1] + r);

    q[2 * j * f * e + (2 * k + 1) * e + 2 * l] += 0.5 * m[l];
    q[2 * j * f * e + (2 * k + 1) * e + 2 * l + 1] += 0.25 * (m[l] + m[l + 1]);

    q[(2 * j + 1) * f * e + 2 * k * e + 2 * l] += 0.5 * n[l];
    q[(2 * j + 1) * f * e + 2 * k * e + 2 * l + 1] += 0.25 * (n[l] + n[l + 1]);

    q[(2 * j + 1) * f * e + (2 * k + 1) * e + 2 * l] += 0.25 * o[l];
    q[(2 * j + 1) * f * e + (2 * k + 1) * e + 2 * l + 1] += 0.125 * (o[l] + o[l + 1]);
  }
}","[ 31   7  58 ..., 127   0 127]"
373,npb-3.3-MG-kernel_interp_1,S,143,1,15,13,5,0,1209360,10,CPU,0.9957590000000001,3.121206,"__kernel void A(__global double* a, int b, int c, int d, int e, int f, int g, int h, int i) {
  int j, k, l;
  __local double m[1024], n[1024], o[1024];

  __global double* p = a + h;
  __global double* q = a + i;

  j = get_global_id(1);
  k = get_group_id(0);
  l = get_local_id(0);
  m[l] = p[j * c * b + (k + 1) * b + l] + p[j * c * b + k * b + l];
  n[l] = p[(j + 1) * c * b + k * b + l] + p[j * c * b + k * b + l];
  o[l] = p[(j + 1) * c * b + (k + 1) * b + l] + p[(j + 1) * c * b + k * b + l] + m[l];

  barrier(1);

  if (l < b - 1) {
    double r = p[j * c * b + k * b + l];
    q[2 * j * f * e + 2 * k * e + 2 * l] += r;
    q[2 * j * f * e + 2 * k * e + 2 * l + 1] += 0.5 * (p[j * c * b + k * b + l + 1] + r);

    q[2 * j * f * e + (2 * k + 1) * e + 2 * l] += 0.5 * m[l];
    q[2 * j * f * e + (2 * k + 1) * e + 2 * l + 1] += 0.25 * (m[l] + m[l + 1]);

    q[(2 * j + 1) * f * e + 2 * k * e + 2 * l] += 0.5 * n[l];
    q[(2 * j + 1) * f * e + 2 * k * e + 2 * l + 1] += 0.25 * (n[l] + n[l + 1]);

    q[(2 * j + 1) * f * e + (2 * k + 1) * e + 2 * l] += 0.25 * o[l];
    q[(2 * j + 1) * f * e + (2 * k + 1) * e + 2 * l + 1] += 0.125 * (o[l] + o[l + 1]);
  }
}","[ 31   7  58 ..., 127   0 127]"
374,npb-3.3-MG-kernel_interp_1,W,143,1,15,13,5,0,61898192,23,CPU,29.928851,114.816198,"__kernel void A(__global double* a, int b, int c, int d, int e, int f, int g, int h, int i) {
  int j, k, l;
  __local double m[1024], n[1024], o[1024];

  __global double* p = a + h;
  __global double* q = a + i;

  j = get_global_id(1);
  k = get_group_id(0);
  l = get_local_id(0);
  m[l] = p[j * c * b + (k + 1) * b + l] + p[j * c * b + k * b + l];
  n[l] = p[(j + 1) * c * b + k * b + l] + p[j * c * b + k * b + l];
  o[l] = p[(j + 1) * c * b + (k + 1) * b + l] + p[(j + 1) * c * b + k * b + l] + m[l];

  barrier(1);

  if (l < b - 1) {
    double r = p[j * c * b + k * b + l];
    q[2 * j * f * e + 2 * k * e + 2 * l] += r;
    q[2 * j * f * e + 2 * k * e + 2 * l + 1] += 0.5 * (p[j * c * b + k * b + l + 1] + r);

    q[2 * j * f * e + (2 * k + 1) * e + 2 * l] += 0.5 * m[l];
    q[2 * j * f * e + (2 * k + 1) * e + 2 * l + 1] += 0.25 * (m[l] + m[l + 1]);

    q[(2 * j + 1) * f * e + 2 * k * e + 2 * l] += 0.5 * n[l];
    q[(2 * j + 1) * f * e + 2 * k * e + 2 * l + 1] += 0.25 * (n[l] + n[l + 1]);

    q[(2 * j + 1) * f * e + (2 * k + 1) * e + 2 * l] += 0.25 * o[l];
    q[(2 * j + 1) * f * e + (2 * k + 1) * e + 2 * l + 1] += 0.125 * (o[l] + o[l + 1]);
  }
}","[ 31   7  58 ..., 127   0 127]"
375,npb-3.3-MG-kernel_norm2u3,A,18,6,14,11,2,0,477311792,128,CPU,252.967088,884.458454,"__kernel void A(__global double* a, const int b, const int c, const int d, __global double* e, __global double* f, __local double* g, __local double* h) {
  int i = get_global_id(1) + 1;
  int j = get_group_id(0) + 1;
  int k = get_local_id(0) + 1;
  double l = 0.0;
  double m = 0.0;
  double n;
  while (k < b - 1) {
    double o = a[i * c * b + j * b + k];

    l = l + o * o;
    n = __clc_fabs(o);
    m = (n > m) ? n : m;

    k += get_local_size(0);
  }
  int p = get_local_id(0);
  g[p] = l;
  h[p] = m;

  barrier(1);

  for (int q = get_local_size(0) / 2; q > 0; q >>= 1) {
    if (p < q) {
      g[p] += g[p + q];
      h[p] = (h[p] > h[p + q]) ? h[p] : h[p + q];
    }
    barrier(1);
  }
  if (p == 0) {
    int r = get_group_id(1) * get_num_groups(0) + get_group_id(0);
    e[r] = g[0];
    f[r] = h[0];
  }
}","[129 129 129 ..., 127   0 127]"
376,npb-3.3-MG-kernel_norm2u3,B,18,6,14,11,2,0,477315888,128,CPU,253.81844300000003,886.631261,"__kernel void A(__global double* a, const int b, const int c, const int d, __global double* e, __global double* f, __local double* g, __local double* h) {
  int i = get_global_id(1) + 1;
  int j = get_group_id(0) + 1;
  int k = get_local_id(0) + 1;
  double l = 0.0;
  double m = 0.0;
  double n;
  while (k < b - 1) {
    double o = a[i * c * b + j * b + k];

    l = l + o * o;
    n = __clc_fabs(o);
    m = (n > m) ? n : m;

    k += get_local_size(0);
  }
  int p = get_local_id(0);
  g[p] = l;
  h[p] = m;

  barrier(1);

  for (int q = get_local_size(0) / 2; q > 0; q >>= 1) {
    if (p < q) {
      g[p] += g[p + q];
      h[p] = (h[p] > h[p + q]) ? h[p] : h[p + q];
    }
    barrier(1);
  }
  if (p == 0) {
    int r = get_group_id(1) * get_num_groups(0) + get_group_id(0);
    e[r] = g[0];
    f[r] = h[0];
  }
}","[129 129 129 ..., 127   0 127]"
377,npb-3.3-MG-kernel_norm2u3,C,18,6,14,11,2,0,3749228176,128,CPU,2160.848671,6979.1043519999985,"__kernel void A(__global double* a, const int b, const int c, const int d, __global double* e, __global double* f, __local double* g, __local double* h) {
  int i = get_global_id(1) + 1;
  int j = get_group_id(0) + 1;
  int k = get_local_id(0) + 1;
  double l = 0.0;
  double m = 0.0;
  double n;
  while (k < b - 1) {
    double o = a[i * c * b + j * b + k];

    l = l + o * o;
    n = __clc_fabs(o);
    m = (n > m) ? n : m;

    k += get_local_size(0);
  }
  int p = get_local_id(0);
  g[p] = l;
  h[p] = m;

  barrier(1);

  for (int q = get_local_size(0) / 2; q > 0; q >>= 1) {
    if (p < q) {
      g[p] += g[p + q];
      h[p] = (h[p] > h[p + q]) ? h[p] : h[p + q];
    }
    barrier(1);
  }
  if (p == 0) {
    int r = get_group_id(1) * get_num_groups(0) + get_group_id(0);
    e[r] = g[0];
    f[r] = h[0];
  }
}","[129 129 129 ..., 127   0 127]"
378,npb-3.3-MG-kernel_norm2u3,S,18,6,14,11,2,0,1209360,128,CPU,1.6364100000000001,3.139696,"__kernel void A(__global double* a, const int b, const int c, const int d, __global double* e, __global double* f, __local double* g, __local double* h) {
  int i = get_global_id(1) + 1;
  int j = get_group_id(0) + 1;
  int k = get_local_id(0) + 1;
  double l = 0.0;
  double m = 0.0;
  double n;
  while (k < b - 1) {
    double o = a[i * c * b + j * b + k];

    l = l + o * o;
    n = __clc_fabs(o);
    m = (n > m) ? n : m;

    k += get_local_size(0);
  }
  int p = get_local_id(0);
  g[p] = l;
  h[p] = m;

  barrier(1);

  for (int q = get_local_size(0) / 2; q > 0; q >>= 1) {
    if (p < q) {
      g[p] += g[p + q];
      h[p] = (h[p] > h[p + q]) ? h[p] : h[p + q];
    }
    barrier(1);
  }
  if (p == 0) {
    int r = get_group_id(1) * get_num_groups(0) + get_group_id(0);
    e[r] = g[0];
    f[r] = h[0];
  }
}","[129 129 129 ..., 127   0 127]"
379,npb-3.3-MG-kernel_norm2u3,W,18,6,14,11,2,0,61898192,128,CPU,40.711093,115.184894,"__kernel void A(__global double* a, const int b, const int c, const int d, __global double* e, __global double* f, __local double* g, __local double* h) {
  int i = get_global_id(1) + 1;
  int j = get_group_id(0) + 1;
  int k = get_local_id(0) + 1;
  double l = 0.0;
  double m = 0.0;
  double n;
  while (k < b - 1) {
    double o = a[i * c * b + j * b + k];

    l = l + o * o;
    n = __clc_fabs(o);
    m = (n > m) ? n : m;

    k += get_local_size(0);
  }
  int p = get_local_id(0);
  g[p] = l;
  h[p] = m;

  barrier(1);

  for (int q = get_local_size(0) / 2; q > 0; q >>= 1) {
    if (p < q) {
      g[p] += g[p + q];
      h[p] = (h[p] > h[p + q]) ? h[p] : h[p + q];
    }
    barrier(1);
  }
  if (p == 0) {
    int r = get_group_id(1) * get_num_groups(0) + get_group_id(0);
    e[r] = g[0];
    f[r] = h[0];
  }
}","[129 129 129 ..., 127   0 127]"
380,npb-3.3-MG-kernel_psinv,A,114,2,22,6,3,0,477311792,66,CPU,214.55791200000002,883.103924,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g) {
  int h = get_global_id(1) + 1;
  int i = get_group_id(0) + 1;
  int j = get_local_id(0);
  __local double k[1024], l[1024];

  int m;
  for (m = j; m < d; m += get_local_size(0)) {
    k[m] = a[h * e * d + (i - 1) * e + m + g] + a[h * e * d + (i + 1) * d + m + g] + a[(h - 1) * e * d + i * d + m + g] + a[(h + 1) * e * d + i * d + m + g];
    l[m] = a[(h - 1) * e * d + (i - 1) * d + m + g] + a[(h - 1) * e * d + (i + 1) * d + m + g] + a[(h + 1) * e * d + (i - 1) * d + m + g] + a[(h + 1) * e * d + (i + 1) * d + m + g];
  }

  barrier(1);

  for (m = j + 1; m < d - 1; m += get_local_size(0)) {
    b[h * e * d + i * d + m + g] = b[h * e * d + i * d + m + g] + c[0] * a[h * e * d + i * d + m + g] + c[1] * (a[h * e * d + i * d + m - 1 + g] + a[h * e * d + i * d + m + 1 + g] + k[m]) + c[2] * (l[m] + k[m - 1] + k[m + 1]);
  }
}","[129 129 129 ..., 127   0 127]"
381,npb-3.3-MG-kernel_psinv,B,114,2,22,6,3,0,477315888,66,CPU,215.39418199999997,885.2793320000003,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g) {
  int h = get_global_id(1) + 1;
  int i = get_group_id(0) + 1;
  int j = get_local_id(0);
  __local double k[1024], l[1024];

  int m;
  for (m = j; m < d; m += get_local_size(0)) {
    k[m] = a[h * e * d + (i - 1) * e + m + g] + a[h * e * d + (i + 1) * d + m + g] + a[(h - 1) * e * d + i * d + m + g] + a[(h + 1) * e * d + i * d + m + g];
    l[m] = a[(h - 1) * e * d + (i - 1) * d + m + g] + a[(h - 1) * e * d + (i + 1) * d + m + g] + a[(h + 1) * e * d + (i - 1) * d + m + g] + a[(h + 1) * e * d + (i + 1) * d + m + g];
  }

  barrier(1);

  for (m = j + 1; m < d - 1; m += get_local_size(0)) {
    b[h * e * d + i * d + m + g] = b[h * e * d + i * d + m + g] + c[0] * a[h * e * d + i * d + m + g] + c[1] * (a[h * e * d + i * d + m - 1 + g] + a[h * e * d + i * d + m + 1 + g] + k[m]) + c[2] * (l[m] + k[m - 1] + k[m + 1]);
  }
}","[129 129 129 ..., 127   0 127]"
382,npb-3.3-MG-kernel_psinv,S,114,2,22,6,3,0,1209360,14,CPU,1.0276040000000002,3.122766,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g) {
  int h = get_global_id(1) + 1;
  int i = get_group_id(0) + 1;
  int j = get_local_id(0);
  __local double k[1024], l[1024];

  int m;
  for (m = j; m < d; m += get_local_size(0)) {
    k[m] = a[h * e * d + (i - 1) * e + m + g] + a[h * e * d + (i + 1) * d + m + g] + a[(h - 1) * e * d + i * d + m + g] + a[(h + 1) * e * d + i * d + m + g];
    l[m] = a[(h - 1) * e * d + (i - 1) * d + m + g] + a[(h - 1) * e * d + (i + 1) * d + m + g] + a[(h + 1) * e * d + (i - 1) * d + m + g] + a[(h + 1) * e * d + (i + 1) * d + m + g];
  }

  barrier(1);

  for (m = j + 1; m < d - 1; m += get_local_size(0)) {
    b[h * e * d + i * d + m + g] = b[h * e * d + i * d + m + g] + c[0] * a[h * e * d + i * d + m + g] + c[1] * (a[h * e * d + i * d + m - 1 + g] + a[h * e * d + i * d + m + 1 + g] + k[m]) + c[2] * (l[m] + k[m - 1] + k[m + 1]);
  }
}","[129 129 129 ..., 127   0 127]"
383,npb-3.3-MG-kernel_psinv,W,114,2,22,6,3,0,61898192,38,CPU,31.207518,114.865311,"__kernel void A(__global double* a, __global double* b, __global double* c, int d, int e, int f, int g) {
  int h = get_global_id(1) + 1;
  int i = get_group_id(0) + 1;
  int j = get_local_id(0);
  __local double k[1024], l[1024];

  int m;
  for (m = j; m < d; m += get_local_size(0)) {
    k[m] = a[h * e * d + (i - 1) * e + m + g] + a[h * e * d + (i + 1) * d + m + g] + a[(h - 1) * e * d + i * d + m + g] + a[(h + 1) * e * d + i * d + m + g];
    l[m] = a[(h - 1) * e * d + (i - 1) * d + m + g] + a[(h - 1) * e * d + (i + 1) * d + m + g] + a[(h + 1) * e * d + (i - 1) * d + m + g] + a[(h + 1) * e * d + (i + 1) * d + m + g];
  }

  barrier(1);

  for (m = j + 1; m < d - 1; m += get_local_size(0)) {
    b[h * e * d + i * d + m + g] = b[h * e * d + i * d + m + g] + c[0] * a[h * e * d + i * d + m + g] + c[1] * (a[h * e * d + i * d + m - 1 + g] + a[h * e * d + i * d + m + 1 + g] + k[m]) + c[2] * (l[m] + k[m - 1] + k[m + 1]);
  }
}","[129 129 129 ..., 127   0 127]"
384,npb-3.3-MG-kernel_resid,A,101,2,21,7,3,0,477311792,105,CPU,228.916994,883.759255,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g, int h) {
  int i = get_global_id(1) + 1;
  int j = get_group_id(0) + 1;
  int k = get_local_id(0);
  __local double l[1024], m[1024];

  int n;
  for (n = k; n < e; n += get_local_size(0)) {
    l[n] = b[i * f * e + (j - 1) * e + n + h] + b[i * f * e + (j + 1) * e + n + h] + b[(i - 1) * f * e + j * e + n + h] + b[(i + 1) * f * e + j * e + n + h];
    m[n] = b[(i - 1) * f * e + (j - 1) * e + n + h] + b[(i - 1) * f * e + (j + 1) * e + n + h] + b[(i + 1) * f * e + (j - 1) * e + n + h] + b[(i + 1) * f * e + (j + 1) * e + n + h];
  }

  barrier(1);

  for (n = k + 1; n < e - 1; n += get_local_size(0)) {
    a[i * f * e + j * e + n + h] = c[i * f * e + j * e + n + h] - d[0] * b[i * f * e + j * e + n + h] - d[2] * (m[n] + l[n - 1] + l[n + 1]) - d[3] * (m[n - 1] + m[n + 1]);
  }
}","[129 129 129 ..., 127   0 127]"
385,npb-3.3-MG-kernel_resid,B,101,2,21,7,3,0,477315888,99,CPU,226.223748,885.814916,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g, int h) {
  int i = get_global_id(1) + 1;
  int j = get_group_id(0) + 1;
  int k = get_local_id(0);
  __local double l[1024], m[1024];

  int n;
  for (n = k; n < e; n += get_local_size(0)) {
    l[n] = b[i * f * e + (j - 1) * e + n + h] + b[i * f * e + (j + 1) * e + n + h] + b[(i - 1) * f * e + j * e + n + h] + b[(i + 1) * f * e + j * e + n + h];
    m[n] = b[(i - 1) * f * e + (j - 1) * e + n + h] + b[(i - 1) * f * e + (j + 1) * e + n + h] + b[(i + 1) * f * e + (j - 1) * e + n + h] + b[(i + 1) * f * e + (j + 1) * e + n + h];
  }

  barrier(1);

  for (n = k + 1; n < e - 1; n += get_local_size(0)) {
    a[i * f * e + j * e + n + h] = c[i * f * e + j * e + n + h] - d[0] * b[i * f * e + j * e + n + h] - d[2] * (m[n] + l[n - 1] + l[n + 1]) - d[3] * (m[n - 1] + m[n + 1]);
  }
}","[129 129 129 ..., 127   0 127]"
386,npb-3.3-MG-kernel_resid,C,101,2,21,7,3,0,3749228176,176,CPU,2086.473561,6973.273403,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g, int h) {
  int i = get_global_id(1) + 1;
  int j = get_group_id(0) + 1;
  int k = get_local_id(0);
  __local double l[1024], m[1024];

  int n;
  for (n = k; n < e; n += get_local_size(0)) {
    l[n] = b[i * f * e + (j - 1) * e + n + h] + b[i * f * e + (j + 1) * e + n + h] + b[(i - 1) * f * e + j * e + n + h] + b[(i + 1) * f * e + j * e + n + h];
    m[n] = b[(i - 1) * f * e + (j - 1) * e + n + h] + b[(i - 1) * f * e + (j + 1) * e + n + h] + b[(i + 1) * f * e + (j - 1) * e + n + h] + b[(i + 1) * f * e + (j + 1) * e + n + h];
  }

  barrier(1);

  for (n = k + 1; n < e - 1; n += get_local_size(0)) {
    a[i * f * e + j * e + n + h] = c[i * f * e + j * e + n + h] - d[0] * b[i * f * e + j * e + n + h] - d[2] * (m[n] + l[n - 1] + l[n + 1]) - d[3] * (m[n - 1] + m[n + 1]);
  }
}","[129 129 129 ..., 127   0 127]"
387,npb-3.3-MG-kernel_resid,S,101,2,21,7,3,0,1209360,21,CPU,1.074665,3.124982,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g, int h) {
  int i = get_global_id(1) + 1;
  int j = get_group_id(0) + 1;
  int k = get_local_id(0);
  __local double l[1024], m[1024];

  int n;
  for (n = k; n < e; n += get_local_size(0)) {
    l[n] = b[i * f * e + (j - 1) * e + n + h] + b[i * f * e + (j + 1) * e + n + h] + b[(i - 1) * f * e + j * e + n + h] + b[(i + 1) * f * e + j * e + n + h];
    m[n] = b[(i - 1) * f * e + (j - 1) * e + n + h] + b[(i - 1) * f * e + (j + 1) * e + n + h] + b[(i + 1) * f * e + (j - 1) * e + n + h] + b[(i + 1) * f * e + (j + 1) * e + n + h];
  }

  barrier(1);

  for (n = k + 1; n < e - 1; n += get_local_size(0)) {
    a[i * f * e + j * e + n + h] = c[i * f * e + j * e + n + h] - d[0] * b[i * f * e + j * e + n + h] - d[2] * (m[n] + l[n - 1] + l[n + 1]) - d[3] * (m[n - 1] + m[n + 1]);
  }
}","[129 129 129 ..., 127   0 127]"
388,npb-3.3-MG-kernel_resid,W,101,2,21,7,3,0,61898192,60,CPU,33.428942,114.953475,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, int e, int f, int g, int h) {
  int i = get_global_id(1) + 1;
  int j = get_group_id(0) + 1;
  int k = get_local_id(0);
  __local double l[1024], m[1024];

  int n;
  for (n = k; n < e; n += get_local_size(0)) {
    l[n] = b[i * f * e + (j - 1) * e + n + h] + b[i * f * e + (j + 1) * e + n + h] + b[(i - 1) * f * e + j * e + n + h] + b[(i + 1) * f * e + j * e + n + h];
    m[n] = b[(i - 1) * f * e + (j - 1) * e + n + h] + b[(i - 1) * f * e + (j + 1) * e + n + h] + b[(i + 1) * f * e + (j - 1) * e + n + h] + b[(i + 1) * f * e + (j + 1) * e + n + h];
  }

  barrier(1);

  for (n = k + 1; n < e - 1; n += get_local_size(0)) {
    a[i * f * e + j * e + n + h] = c[i * f * e + j * e + n + h] - d[0] * b[i * f * e + j * e + n + h] - d[2] * (m[n] + l[n - 1] + l[n + 1]) - d[3] * (m[n - 1] + m[n + 1]);
  }
}","[129 129 129 ..., 127   0 127]"
389,npb-3.3-MG-kernel_rprj3,A,176,1,8,6,9,0,477311792,37,CPU,206.261393,882.724785,"__kernel void A(__global double* a, int b, int c, int d, int e, int f, int g, int h, int i, int j, int k, int l) {
  int m, n, o, p, q, r, s;
  double t, u;
  __local double v[1024], w[1024];

  __global double* x = a + h;
  __global double* y = a + i;

  m = get_global_id(1) + 1;
  n = get_group_id(0) + 1;
  o = get_local_id(0) + 1;
  p = 2 * m - l;
  q = 2 * n - k;
  r = 2 * o - j;
  v[r] = x[(p + 1) * c * b + q * b + r] + x[(p + 1) * c * b + (q + 2) * b + r] + x[p * c * b + (q + 1) * b + r] + x[(p + 2) * c * b + (q + 1) * b + r];
  w[r] = x[p * c * b + q * b + r] + x[(p + 2) * c * b + q * b + r] + x[p * c * b + (q + 2) * b + r] + x[(p + 2) * c * b + (q + 2) * b + r];

  barrier(1);

  if (o < e - 1) {
    r = 2 * o - j;
    u = x[p * c * b + q * b + r + 1] + x[(p + 2) * c * b + q * b + r + 1] + x[p * c * b + (q + 2) * b + r + 1] + x[(p + 2) * c * b + (q + 2) * b + r + 1];
    t = x[(p + 1) * c * b + q * b + r + 1] + x[(p + 1) * c * b + (q + 2) * b + r + 1] + x[p * c * b + (q + 1) * b + r + 1] + x[(p + 2) * c * b + (q + 1) * b + r + 1];
    y[m * f * e + n * e + o] = 0.5 * x[(p + 1) * c * b + (q + 1) * b + r + 1] + 0.25 * (x[(p + 1) * c * b + (q + 1) * b + r] + x[(p + 1) * c * b + (q + 1) * b + r + 2] + t) + 0.125 * (v[r] + v[r + 2] + u) + 0.0625 * (w[r] + w[r + 2]);
  }
}","[ 75   9   1 ..., 127   0 127]"
390,npb-3.3-MG-kernel_rprj3,B,176,1,8,6,9,0,477315888,37,CPU,206.935909,884.923324,"__kernel void A(__global double* a, int b, int c, int d, int e, int f, int g, int h, int i, int j, int k, int l) {
  int m, n, o, p, q, r, s;
  double t, u;
  __local double v[1024], w[1024];

  __global double* x = a + h;
  __global double* y = a + i;

  m = get_global_id(1) + 1;
  n = get_group_id(0) + 1;
  o = get_local_id(0) + 1;
  p = 2 * m - l;
  q = 2 * n - k;
  r = 2 * o - j;
  v[r] = x[(p + 1) * c * b + q * b + r] + x[(p + 1) * c * b + (q + 2) * b + r] + x[p * c * b + (q + 1) * b + r] + x[(p + 2) * c * b + (q + 1) * b + r];
  w[r] = x[p * c * b + q * b + r] + x[(p + 2) * c * b + q * b + r] + x[p * c * b + (q + 2) * b + r] + x[(p + 2) * c * b + (q + 2) * b + r];

  barrier(1);

  if (o < e - 1) {
    r = 2 * o - j;
    u = x[p * c * b + q * b + r + 1] + x[(p + 2) * c * b + q * b + r + 1] + x[p * c * b + (q + 2) * b + r + 1] + x[(p + 2) * c * b + (q + 2) * b + r + 1];
    t = x[(p + 1) * c * b + q * b + r + 1] + x[(p + 1) * c * b + (q + 2) * b + r + 1] + x[p * c * b + (q + 1) * b + r + 1] + x[(p + 2) * c * b + (q + 1) * b + r + 1];
    y[m * f * e + n * e + o] = 0.5 * x[(p + 1) * c * b + (q + 1) * b + r + 1] + 0.25 * (x[(p + 1) * c * b + (q + 1) * b + r] + x[(p + 1) * c * b + (q + 1) * b + r + 2] + t) + 0.125 * (v[r] + v[r + 2] + u) + 0.0625 * (w[r] + w[r + 2]);
  }
}","[ 75   9   1 ..., 127   0 127]"
391,npb-3.3-MG-kernel_rprj3,S,176,1,8,6,9,0,1209360,8,CPU,0.9974459999999999,3.121093,"__kernel void A(__global double* a, int b, int c, int d, int e, int f, int g, int h, int i, int j, int k, int l) {
  int m, n, o, p, q, r, s;
  double t, u;
  __local double v[1024], w[1024];

  __global double* x = a + h;
  __global double* y = a + i;

  m = get_global_id(1) + 1;
  n = get_group_id(0) + 1;
  o = get_local_id(0) + 1;
  p = 2 * m - l;
  q = 2 * n - k;
  r = 2 * o - j;
  v[r] = x[(p + 1) * c * b + q * b + r] + x[(p + 1) * c * b + (q + 2) * b + r] + x[p * c * b + (q + 1) * b + r] + x[(p + 2) * c * b + (q + 1) * b + r];
  w[r] = x[p * c * b + q * b + r] + x[(p + 2) * c * b + q * b + r] + x[p * c * b + (q + 2) * b + r] + x[(p + 2) * c * b + (q + 2) * b + r];

  barrier(1);

  if (o < e - 1) {
    r = 2 * o - j;
    u = x[p * c * b + q * b + r + 1] + x[(p + 2) * c * b + q * b + r + 1] + x[p * c * b + (q + 2) * b + r + 1] + x[(p + 2) * c * b + (q + 2) * b + r + 1];
    t = x[(p + 1) * c * b + q * b + r + 1] + x[(p + 1) * c * b + (q + 2) * b + r + 1] + x[p * c * b + (q + 1) * b + r + 1] + x[(p + 2) * c * b + (q + 1) * b + r + 1];
    y[m * f * e + n * e + o] = 0.5 * x[(p + 1) * c * b + (q + 1) * b + r + 1] + 0.25 * (x[(p + 1) * c * b + (q + 1) * b + r] + x[(p + 1) * c * b + (q + 1) * b + r + 2] + t) + 0.125 * (v[r] + v[r + 2] + u) + 0.0625 * (w[r] + w[r + 2]);
  }
}","[ 75   9   1 ..., 127   0 127]"
392,npb-3.3-MG-kernel_rprj3,W,176,1,8,6,9,0,61898192,22,CPU,29.95948,114.803698,"__kernel void A(__global double* a, int b, int c, int d, int e, int f, int g, int h, int i, int j, int k, int l) {
  int m, n, o, p, q, r, s;
  double t, u;
  __local double v[1024], w[1024];

  __global double* x = a + h;
  __global double* y = a + i;

  m = get_global_id(1) + 1;
  n = get_group_id(0) + 1;
  o = get_local_id(0) + 1;
  p = 2 * m - l;
  q = 2 * n - k;
  r = 2 * o - j;
  v[r] = x[(p + 1) * c * b + q * b + r] + x[(p + 1) * c * b + (q + 2) * b + r] + x[p * c * b + (q + 1) * b + r] + x[(p + 2) * c * b + (q + 1) * b + r];
  w[r] = x[p * c * b + q * b + r] + x[(p + 2) * c * b + q * b + r] + x[p * c * b + (q + 2) * b + r] + x[(p + 2) * c * b + (q + 2) * b + r];

  barrier(1);

  if (o < e - 1) {
    r = 2 * o - j;
    u = x[p * c * b + q * b + r + 1] + x[(p + 2) * c * b + q * b + r + 1] + x[p * c * b + (q + 2) * b + r + 1] + x[(p + 2) * c * b + (q + 2) * b + r + 1];
    t = x[(p + 1) * c * b + q * b + r + 1] + x[(p + 1) * c * b + (q + 2) * b + r + 1] + x[p * c * b + (q + 1) * b + r + 1] + x[(p + 2) * c * b + (q + 1) * b + r + 1];
    y[m * f * e + n * e + o] = 0.5 * x[(p + 1) * c * b + (q + 1) * b + r + 1] + 0.25 * (x[(p + 1) * c * b + (q + 1) * b + r] + x[(p + 1) * c * b + (q + 1) * b + r + 2] + t) + 0.125 * (v[r] + v[r + 2] + u) + 0.0625 * (w[r] + w[r + 2]);
  }
}","[ 75   9   1 ..., 127   0 127]"
393,npb-3.3-MG-kernel_zero3,A,6,1,1,0,0,0,477311792,64,CPU,208.634422,882.514099,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f = get_global_id(2);
  int g = get_global_id(1);
  int h = get_global_id(0);
  if (h >= b)
    return;

  a[f * c * b + g * b + h + e] = 0.0;
}","[129 129 129 ...,  26   0 127]"
394,npb-3.3-MG-kernel_zero3,B,6,1,1,0,0,0,477315888,64,CPU,205.654101,884.6210369999999,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f = get_global_id(2);
  int g = get_global_id(1);
  int h = get_global_id(0);
  if (h >= b)
    return;

  a[f * c * b + g * b + h + e] = 0.0;
}","[129 129 129 ...,  26   0 127]"
395,npb-3.3-MG-kernel_zero3,C,6,1,1,0,0,0,3749228176,64,CPU,1942.742741,6962.955425,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f = get_global_id(2);
  int g = get_global_id(1);
  int h = get_global_id(0);
  if (h >= b)
    return;

  a[f * c * b + g * b + h + e] = 0.0;
}","[129 129 129 ...,  26   0 127]"
396,npb-3.3-MG-kernel_zero3,S,6,1,1,0,0,0,1209360,64,CPU,1.007659,3.119828,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f = get_global_id(2);
  int g = get_global_id(1);
  int h = get_global_id(0);
  if (h >= b)
    return;

  a[f * c * b + g * b + h + e] = 0.0;
}","[129 129 129 ...,  26   0 127]"
397,npb-3.3-MG-kernel_zero3,W,6,1,1,0,0,0,61898192,64,CPU,30.412359999999996,114.780543,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f = get_global_id(2);
  int g = get_global_id(1);
  int h = get_global_id(0);
  if (h >= b)
    return;

  a[f * c * b + g * b + h + e] = 0.0;
}","[129 129 129 ...,  26   0 127]"
398,npb-3.3-MG-kernel_zran3_1,A,47,4,3,0,3,0,477311792,4,CPU,251.57117999999997,927.3061339999999,"__kernel void A(__global double* a, __global double* b, int c, int d, int e, int f, int g, int h, int i, double j) {
  int k = get_global_id(0);
  int l;
  double m, n;
  const double o = __clc_pow(5.0, 13.0);

  if (k < h && k >= 1) {
    n = b[k];
    for (l = 1; l < g; l++) {
      m = n;
      B(i, &m, o, &(a[k * d * c + l * c + 1]));
      A(&n, j);
    }
  }
}","[129 129 129 ..., 127   0 127]"
399,npb-3.3-MG-kernel_zran3_1,B,47,4,3,0,3,0,477315888,4,CPU,252.558668,929.330448,"__kernel void A(__global double* a, __global double* b, int c, int d, int e, int f, int g, int h, int i, double j) {
  int k = get_global_id(0);
  int l;
  double m, n;
  const double o = __clc_pow(5.0, 13.0);

  if (k < h && k >= 1) {
    n = b[k];
    for (l = 1; l < g; l++) {
      m = n;
      B(i, &m, o, &(a[k * d * c + l * c + 1]));
      A(&n, j);
    }
  }
}","[129 129 129 ..., 127   0 127]"
400,npb-3.3-MG-kernel_zran3_1,C,47,4,3,0,3,0,3749228176,4,CPU,2304.378426,7292.702125,"__kernel void A(__global double* a, __global double* b, int c, int d, int e, int f, int g, int h, int i, double j) {
  int k = get_global_id(0);
  int l;
  double m, n;
  const double o = __clc_pow(5.0, 13.0);

  if (k < h && k >= 1) {
    n = b[k];
    for (l = 1; l < g; l++) {
      m = n;
      B(i, &m, o, &(a[k * d * c + l * c + 1]));
      A(&n, j);
    }
  }
}","[129 129 129 ..., 127   0 127]"
401,npb-3.3-MG-kernel_zran3_1,S,47,4,3,0,3,0,1209360,4,CPU,1.103278,3.740557,"__kernel void A(__global double* a, __global double* b, int c, int d, int e, int f, int g, int h, int i, double j) {
  int k = get_global_id(0);
  int l;
  double m, n;
  const double o = __clc_pow(5.0, 13.0);

  if (k < h && k >= 1) {
    n = b[k];
    for (l = 1; l < g; l++) {
      m = n;
      B(i, &m, o, &(a[k * d * c + l * c + 1]));
      A(&n, j);
    }
  }
}","[129 129 129 ..., 127   0 127]"
402,npb-3.3-MG-kernel_zran3_1,W,47,4,3,0,3,0,61898192,4,CPU,35.53405,124.79717099999999,"__kernel void A(__global double* a, __global double* b, int c, int d, int e, int f, int g, int h, int i, double j) {
  int k = get_global_id(0);
  int l;
  double m, n;
  const double o = __clc_pow(5.0, 13.0);

  if (k < h && k >= 1) {
    n = b[k];
    for (l = 1; l < g; l++) {
      m = n;
      B(i, &m, o, &(a[k * d * c + l * c + 1]));
      A(&n, j);
    }
  }
}","[129 129 129 ..., 127   0 127]"
403,npb-3.3-MG-kernel_zran3_2,A,74,18,77,0,98,0,477311792,4,CPU,211.74011099999998,920.4679390000001,"__kernel void A(__global double* a, __global double* b, __global int* c, __global int* d, __global int* e, int f, int g, int h, int i) {
  int j, k, l;
  int m;
  __global double* n = a + i;
  l = get_global_id(0);
  if (l >= h)
    return;

  __global double(*o)[10][2] = (__global double(*)[10][2])b;
  __global int(*p)[10][2] = (__global int(*)[10][2])c;
  __global int(*q)[10][2] = (__global int(*)[10][2])d;
  __global int(*r)[10][2] = (__global int(*)[10][2])e;

  for (m = 0; m < 10; m++) {
    o[l][m][1] = 0.0;
    p[l][m][1] = 0;
    q[l][m][1] = 0;
    r[l][m][1] = 0;
    o[l][m][0] = 1.0;
    p[l][m][0] = 0;
    q[l][m][0] = 0;
    r[l][m][0] = 0;
  }

  l = l + 1;
  for (k = 1; k < g - 1; k++)
    for (j = 1; j < f - 1; j++)
      if (l >= 1 && l < h - 1) {
        __global double* s = n + l * g * f;

        if (s[k * f + j] > o[l - 1][0][1]) {
          o[l - 1][0][1] = s[k * f + j];
          p[l - 1][0][1] = j;
          q[l - 1][0][1] = k;
          r[l - 1][0][1] = l;
          C(o[l - 1], p[l - 1], q[l - 1], r[l - 1], 10, 1);
        }
        if (s[k * f + j] < o[l - 1][0][0]) {
          o[l - 1][0][0] = s[k * f + j];
          p[l - 1][0][0] = j;
          q[l - 1][0][0] = k;
          r[l - 1][0][0] = l;
          C(o[l - 1], p[l - 1], q[l - 1], r[l - 1], 10, 0);
        }
      }
}","[129 129 129 ..., 127   0 127]"
404,npb-3.3-MG-kernel_zran3_2,B,74,18,77,0,98,0,477315888,4,CPU,212.76632599999996,922.649565,"__kernel void A(__global double* a, __global double* b, __global int* c, __global int* d, __global int* e, int f, int g, int h, int i) {
  int j, k, l;
  int m;
  __global double* n = a + i;
  l = get_global_id(0);
  if (l >= h)
    return;

  __global double(*o)[10][2] = (__global double(*)[10][2])b;
  __global int(*p)[10][2] = (__global int(*)[10][2])c;
  __global int(*q)[10][2] = (__global int(*)[10][2])d;
  __global int(*r)[10][2] = (__global int(*)[10][2])e;

  for (m = 0; m < 10; m++) {
    o[l][m][1] = 0.0;
    p[l][m][1] = 0;
    q[l][m][1] = 0;
    r[l][m][1] = 0;
    o[l][m][0] = 1.0;
    p[l][m][0] = 0;
    q[l][m][0] = 0;
    r[l][m][0] = 0;
  }

  l = l + 1;
  for (k = 1; k < g - 1; k++)
    for (j = 1; j < f - 1; j++)
      if (l >= 1 && l < h - 1) {
        __global double* s = n + l * g * f;

        if (s[k * f + j] > o[l - 1][0][1]) {
          o[l - 1][0][1] = s[k * f + j];
          p[l - 1][0][1] = j;
          q[l - 1][0][1] = k;
          r[l - 1][0][1] = l;
          C(o[l - 1], p[l - 1], q[l - 1], r[l - 1], 10, 1);
        }
        if (s[k * f + j] < o[l - 1][0][0]) {
          o[l - 1][0][0] = s[k * f + j];
          p[l - 1][0][0] = j;
          q[l - 1][0][0] = k;
          r[l - 1][0][0] = l;
          C(o[l - 1], p[l - 1], q[l - 1], r[l - 1], 10, 0);
        }
      }
}","[129 129 129 ..., 127   0 127]"
405,npb-3.3-MG-kernel_zran3_2,C,74,18,77,0,98,0,3749228176,4,CPU,1994.040473,7135.34553,"__kernel void A(__global double* a, __global double* b, __global int* c, __global int* d, __global int* e, int f, int g, int h, int i) {
  int j, k, l;
  int m;
  __global double* n = a + i;
  l = get_global_id(0);
  if (l >= h)
    return;

  __global double(*o)[10][2] = (__global double(*)[10][2])b;
  __global int(*p)[10][2] = (__global int(*)[10][2])c;
  __global int(*q)[10][2] = (__global int(*)[10][2])d;
  __global int(*r)[10][2] = (__global int(*)[10][2])e;

  for (m = 0; m < 10; m++) {
    o[l][m][1] = 0.0;
    p[l][m][1] = 0;
    q[l][m][1] = 0;
    r[l][m][1] = 0;
    o[l][m][0] = 1.0;
    p[l][m][0] = 0;
    q[l][m][0] = 0;
    r[l][m][0] = 0;
  }

  l = l + 1;
  for (k = 1; k < g - 1; k++)
    for (j = 1; j < f - 1; j++)
      if (l >= 1 && l < h - 1) {
        __global double* s = n + l * g * f;

        if (s[k * f + j] > o[l - 1][0][1]) {
          o[l - 1][0][1] = s[k * f + j];
          p[l - 1][0][1] = j;
          q[l - 1][0][1] = k;
          r[l - 1][0][1] = l;
          C(o[l - 1], p[l - 1], q[l - 1], r[l - 1], 10, 1);
        }
        if (s[k * f + j] < o[l - 1][0][0]) {
          o[l - 1][0][0] = s[k * f + j];
          p[l - 1][0][0] = j;
          q[l - 1][0][0] = k;
          r[l - 1][0][0] = l;
          C(o[l - 1], p[l - 1], q[l - 1], r[l - 1], 10, 0);
        }
      }
}","[129 129 129 ..., 127   0 127]"
406,npb-3.3-MG-kernel_zran3_2,S,74,18,77,0,98,0,1209360,4,CPU,1.074993,4.933565,"__kernel void A(__global double* a, __global double* b, __global int* c, __global int* d, __global int* e, int f, int g, int h, int i) {
  int j, k, l;
  int m;
  __global double* n = a + i;
  l = get_global_id(0);
  if (l >= h)
    return;

  __global double(*o)[10][2] = (__global double(*)[10][2])b;
  __global int(*p)[10][2] = (__global int(*)[10][2])c;
  __global int(*q)[10][2] = (__global int(*)[10][2])d;
  __global int(*r)[10][2] = (__global int(*)[10][2])e;

  for (m = 0; m < 10; m++) {
    o[l][m][1] = 0.0;
    p[l][m][1] = 0;
    q[l][m][1] = 0;
    r[l][m][1] = 0;
    o[l][m][0] = 1.0;
    p[l][m][0] = 0;
    q[l][m][0] = 0;
    r[l][m][0] = 0;
  }

  l = l + 1;
  for (k = 1; k < g - 1; k++)
    for (j = 1; j < f - 1; j++)
      if (l >= 1 && l < h - 1) {
        __global double* s = n + l * g * f;

        if (s[k * f + j] > o[l - 1][0][1]) {
          o[l - 1][0][1] = s[k * f + j];
          p[l - 1][0][1] = j;
          q[l - 1][0][1] = k;
          r[l - 1][0][1] = l;
          C(o[l - 1], p[l - 1], q[l - 1], r[l - 1], 10, 1);
        }
        if (s[k * f + j] < o[l - 1][0][0]) {
          o[l - 1][0][0] = s[k * f + j];
          p[l - 1][0][0] = j;
          q[l - 1][0][0] = k;
          r[l - 1][0][0] = l;
          C(o[l - 1], p[l - 1], q[l - 1], r[l - 1], 10, 0);
        }
      }
}","[129 129 129 ..., 127   0 127]"
407,npb-3.3-MG-kernel_zran3_2,W,74,18,77,0,98,0,61898192,4,CPU,30.714688,125.53656299999999,"__kernel void A(__global double* a, __global double* b, __global int* c, __global int* d, __global int* e, int f, int g, int h, int i) {
  int j, k, l;
  int m;
  __global double* n = a + i;
  l = get_global_id(0);
  if (l >= h)
    return;

  __global double(*o)[10][2] = (__global double(*)[10][2])b;
  __global int(*p)[10][2] = (__global int(*)[10][2])c;
  __global int(*q)[10][2] = (__global int(*)[10][2])d;
  __global int(*r)[10][2] = (__global int(*)[10][2])e;

  for (m = 0; m < 10; m++) {
    o[l][m][1] = 0.0;
    p[l][m][1] = 0;
    q[l][m][1] = 0;
    r[l][m][1] = 0;
    o[l][m][0] = 1.0;
    p[l][m][0] = 0;
    q[l][m][0] = 0;
    r[l][m][0] = 0;
  }

  l = l + 1;
  for (k = 1; k < g - 1; k++)
    for (j = 1; j < f - 1; j++)
      if (l >= 1 && l < h - 1) {
        __global double* s = n + l * g * f;

        if (s[k * f + j] > o[l - 1][0][1]) {
          o[l - 1][0][1] = s[k * f + j];
          p[l - 1][0][1] = j;
          q[l - 1][0][1] = k;
          r[l - 1][0][1] = l;
          C(o[l - 1], p[l - 1], q[l - 1], r[l - 1], 10, 1);
        }
        if (s[k * f + j] < o[l - 1][0][0]) {
          o[l - 1][0][0] = s[k * f + j];
          p[l - 1][0][0] = j;
          q[l - 1][0][0] = k;
          r[l - 1][0][0] = l;
          C(o[l - 1], p[l - 1], q[l - 1], r[l - 1], 10, 0);
        }
      }
}","[129 129 129 ..., 127   0 127]"
408,npb-3.3-MG-kernel_zran3_3,A,6,3,1,0,0,0,477311792,64,CPU,357.668953,888.3256960000001,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f, g, h;
  h = get_global_id(0);
  g = get_global_id(1);
  f = get_global_id(2);
  if (h < d && g < c && f < b)
    a[h * c * b + g * b + f + e] = 0.0;
}","[129 129 129 ...,  26   0 127]"
409,npb-3.3-MG-kernel_zran3_3,B,6,3,1,0,0,0,477315888,64,CPU,358.171733,890.5120130000001,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f, g, h;
  h = get_global_id(0);
  g = get_global_id(1);
  f = get_global_id(2);
  if (h < d && g < c && f < b)
    a[h * c * b + g * b + f + e] = 0.0;
}","[129 129 129 ...,  26   0 127]"
410,npb-3.3-MG-kernel_zran3_3,C,6,3,1,0,0,0,3749228176,64,CPU,3183.317975,7012.8094299999975,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f, g, h;
  h = get_global_id(0);
  g = get_global_id(1);
  f = get_global_id(2);
  if (h < d && g < c && f < b)
    a[h * c * b + g * b + f + e] = 0.0;
}","[129 129 129 ...,  26   0 127]"
411,npb-3.3-MG-kernel_zran3_3,S,6,3,1,0,0,0,1209360,64,CPU,1.316781,3.126688,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f, g, h;
  h = get_global_id(0);
  g = get_global_id(1);
  f = get_global_id(2);
  if (h < d && g < c && f < b)
    a[h * c * b + g * b + f + e] = 0.0;
}","[129 129 129 ...,  26   0 127]"
412,npb-3.3-MG-kernel_zran3_3,W,6,3,1,0,0,0,61898192,64,CPU,49.901061999999996,115.426221,"__kernel void A(__global double* a, int b, int c, int d, int e) {
  int f, g, h;
  h = get_global_id(0);
  g = get_global_id(1);
  f = get_global_id(2);
  if (h < d && g < c && f < b)
    a[h * c * b + g * b + f + e] = 0.0;
}","[129 129 129 ...,  26   0 127]"
413,npb-3.3-SP-add,A,28,4,2,0,3,0,113095432,62,GPU,1.5681459999999998,0.494784,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h > e || g > d || f > c)
    return;

  __global double(*j)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*k)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])b;

  for (i = 0; i < 5; i++) {
    j[h][g][f][i] = j[h][g][f][i] + k[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
414,npb-3.3-SP-add,B,28,4,2,0,3,0,454882552,32,GPU,6.853039,0.932716,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h > e || g > d || f > c)
    return;

  __global double(*j)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*k)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])b;

  for (i = 0; i < 5; i++) {
    j[h][g][f][i] = j[h][g][f][i] + k[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
415,npb-3.3-SP-add,C,28,4,2,0,3,0,1815065192,64,GPU,26.4431,4.35529,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h > e || g > d || f > c)
    return;

  __global double(*j)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*k)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])b;

  for (i = 0; i < 5; i++) {
    j[h][g][f][i] = j[h][g][f][i] + k[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
416,npb-3.3-SP-add,S,28,4,2,0,3,0,804152,60,GPU,0.087243,0.075779,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h > e || g > d || f > c)
    return;

  __global double(*j)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*k)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])b;

  for (i = 0; i < 5; i++) {
    j[h][g][f][i] = j[h][g][f][i] + k[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
417,npb-3.3-SP-add,W,28,4,2,0,3,0,20402112,34,GPU,0.17735499999999998,0.123975,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;

  h = get_global_id(2) + 1;
  g = get_global_id(1) + 1;
  f = get_global_id(0) + 1;
  if (h > e || g > d || f > c)
    return;

  __global double(*j)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*k)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])b;

  for (i = 0; i < 5; i++) {
    j[h][g][f][i] = j[h][g][f][i] + k[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
418,npb-3.3-SP-compute_rhs1,A,127,3,8,0,12,0,113095432,64,GPU,2.291522,0.264244,"__kernel void A(__global const double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, __global double* h, int i, int j, int k) {
  int l, m, n;
  double o, p;
  double q[5];
  double r;

  n = get_global_id(2);
  m = get_global_id(1);
  l = get_global_id(0);
  if (n >= k || m >= j || l >= i)
    return;

  __global double(*s)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*t)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*u)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*v)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*w)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*x)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*y)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])g;
  __global double(*z)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])h;

  q[0] = s[n][m][l][0];
  q[1] = s[n][m][l][1];
  q[2] = s[n][m][l][2];
  q[3] = s[n][m][l][3];
  q[4] = s[n][m][l][4];

  p = 1.0 / q[0];
  x[n][m][l] = p;
  t[n][m][l] = q[1] * p;
  u[n][m][l] = q[2] * p;
  v[n][m][l] = q[3] * p;
  r = 0.5 * (q[1] * q[1] + q[2] * q[2] + q[3] * q[3]) * p;
  z[n][m][l] = r;
  w[n][m][l] = r * p;

  o = (1.4 * 0.4) * p * (q[4] - r);
  y[n][m][l] = sqrt(o);
}","[ 16  17   1 ...,  26   0 127]"
419,npb-3.3-SP-compute_rhs1,B,127,3,8,0,12,0,454882552,32,GPU,10.174909,0.789467,"__kernel void A(__global const double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, __global double* h, int i, int j, int k) {
  int l, m, n;
  double o, p;
  double q[5];
  double r;

  n = get_global_id(2);
  m = get_global_id(1);
  l = get_global_id(0);
  if (n >= k || m >= j || l >= i)
    return;

  __global double(*s)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*t)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*u)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*v)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*w)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*x)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*y)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])g;
  __global double(*z)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])h;

  q[0] = s[n][m][l][0];
  q[1] = s[n][m][l][1];
  q[2] = s[n][m][l][2];
  q[3] = s[n][m][l][3];
  q[4] = s[n][m][l][4];

  p = 1.0 / q[0];
  x[n][m][l] = p;
  t[n][m][l] = q[1] * p;
  u[n][m][l] = q[2] * p;
  v[n][m][l] = q[3] * p;
  r = 0.5 * (q[1] * q[1] + q[2] * q[2] + q[3] * q[3]) * p;
  z[n][m][l] = r;
  w[n][m][l] = r * p;

  o = (1.4 * 0.4) * p * (q[4] - r);
  y[n][m][l] = sqrt(o);
}","[ 16  17   1 ...,  26   0 127]"
420,npb-3.3-SP-compute_rhs1,C,127,3,8,0,12,0,1815065192,64,GPU,36.173668,3.025689,"__kernel void A(__global const double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, __global double* h, int i, int j, int k) {
  int l, m, n;
  double o, p;
  double q[5];
  double r;

  n = get_global_id(2);
  m = get_global_id(1);
  l = get_global_id(0);
  if (n >= k || m >= j || l >= i)
    return;

  __global double(*s)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*t)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*u)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*v)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*w)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*x)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*y)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])g;
  __global double(*z)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])h;

  q[0] = s[n][m][l][0];
  q[1] = s[n][m][l][1];
  q[2] = s[n][m][l][2];
  q[3] = s[n][m][l][3];
  q[4] = s[n][m][l][4];

  p = 1.0 / q[0];
  x[n][m][l] = p;
  t[n][m][l] = q[1] * p;
  u[n][m][l] = q[2] * p;
  v[n][m][l] = q[3] * p;
  r = 0.5 * (q[1] * q[1] + q[2] * q[2] + q[3] * q[3]) * p;
  z[n][m][l] = r;
  w[n][m][l] = r * p;

  o = (1.4 * 0.4) * p * (q[4] - r);
  y[n][m][l] = sqrt(o);
}","[ 16  17   1 ...,  26   0 127]"
421,npb-3.3-SP-compute_rhs1,S,127,3,8,0,12,0,804152,60,GPU,0.091148,0.07645199999999999,"__kernel void A(__global const double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, __global double* h, int i, int j, int k) {
  int l, m, n;
  double o, p;
  double q[5];
  double r;

  n = get_global_id(2);
  m = get_global_id(1);
  l = get_global_id(0);
  if (n >= k || m >= j || l >= i)
    return;

  __global double(*s)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*t)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*u)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*v)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*w)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*x)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*y)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])g;
  __global double(*z)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])h;

  q[0] = s[n][m][l][0];
  q[1] = s[n][m][l][1];
  q[2] = s[n][m][l][2];
  q[3] = s[n][m][l][3];
  q[4] = s[n][m][l][4];

  p = 1.0 / q[0];
  x[n][m][l] = p;
  t[n][m][l] = q[1] * p;
  u[n][m][l] = q[2] * p;
  v[n][m][l] = q[3] * p;
  r = 0.5 * (q[1] * q[1] + q[2] * q[2] + q[3] * q[3]) * p;
  z[n][m][l] = r;
  w[n][m][l] = r * p;

  o = (1.4 * 0.4) * p * (q[4] - r);
  y[n][m][l] = sqrt(o);
}","[ 16  17   1 ...,  26   0 127]"
422,npb-3.3-SP-compute_rhs1,W,127,3,8,0,12,0,20402112,36,GPU,0.272451,0.114882,"__kernel void A(__global const double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, __global double* h, int i, int j, int k) {
  int l, m, n;
  double o, p;
  double q[5];
  double r;

  n = get_global_id(2);
  m = get_global_id(1);
  l = get_global_id(0);
  if (n >= k || m >= j || l >= i)
    return;

  __global double(*s)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*t)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*u)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*v)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*w)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*x)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*y)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])g;
  __global double(*z)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])h;

  q[0] = s[n][m][l][0];
  q[1] = s[n][m][l][1];
  q[2] = s[n][m][l][2];
  q[3] = s[n][m][l][3];
  q[4] = s[n][m][l][4];

  p = 1.0 / q[0];
  x[n][m][l] = p;
  t[n][m][l] = q[1] * p;
  u[n][m][l] = q[2] * p;
  v[n][m][l] = q[3] * p;
  r = 0.5 * (q[1] * q[1] + q[2] * q[2] + q[3] * q[3]) * p;
  z[n][m][l] = r;
  w[n][m][l] = r * p;

  o = (1.4 * 0.4) * p * (q[4] - r);
  y[n][m][l] = sqrt(o);
}","[ 16  17   1 ...,  26   0 127]"
423,npb-3.3-SP-compute_rhs2,A,27,4,2,0,2,0,113095432,64,GPU,1.872973,0.441266,"__kernel void A(__global const double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;

  h = get_global_id(2);
  g = get_global_id(1);
  f = get_global_id(0);
  if (h > (e + 1) || g > (d + 1) || f > (c + 1))
    return;

  __global double(*j)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*k)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])b;

  for (i = 0; i < 5; i++) {
    k[h][g][f][i] = j[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
424,npb-3.3-SP-compute_rhs2,B,27,4,2,0,2,0,454882552,32,GPU,7.192914,0.745592,"__kernel void A(__global const double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;

  h = get_global_id(2);
  g = get_global_id(1);
  f = get_global_id(0);
  if (h > (e + 1) || g > (d + 1) || f > (c + 1))
    return;

  __global double(*j)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*k)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])b;

  for (i = 0; i < 5; i++) {
    k[h][g][f][i] = j[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
425,npb-3.3-SP-compute_rhs2,C,27,4,2,0,2,0,1815065192,64,GPU,28.330089,3.648791000000001,"__kernel void A(__global const double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;

  h = get_global_id(2);
  g = get_global_id(1);
  f = get_global_id(0);
  if (h > (e + 1) || g > (d + 1) || f > (c + 1))
    return;

  __global double(*j)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*k)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])b;

  for (i = 0; i < 5; i++) {
    k[h][g][f][i] = j[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
426,npb-3.3-SP-compute_rhs2,S,27,4,2,0,2,0,804152,60,GPU,0.08705,0.075765,"__kernel void A(__global const double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;

  h = get_global_id(2);
  g = get_global_id(1);
  f = get_global_id(0);
  if (h > (e + 1) || g > (d + 1) || f > (c + 1))
    return;

  __global double(*j)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*k)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])b;

  for (i = 0; i < 5; i++) {
    k[h][g][f][i] = j[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
427,npb-3.3-SP-compute_rhs2,W,27,4,2,0,2,0,20402112,36,GPU,0.291652,0.11751199999999999,"__kernel void A(__global const double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;

  h = get_global_id(2);
  g = get_global_id(1);
  f = get_global_id(0);
  if (h > (e + 1) || g > (d + 1) || f > (c + 1))
    return;

  __global double(*j)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*k)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])b;

  for (i = 0; i < 5; i++) {
    k[h][g][f][i] = j[h][g][f][i];
  }
}","[129 129 129 ..., 127   0 127]"
428,npb-3.3-SP-compute_rhs3,A,1257,23,8,0,107,0,113095432,62,GPU,2.820793,1.274234,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5], u[5];
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  n = get_global_id(1) + 1;
  m = get_global_id(0) + 1;
  if (n > k || m > j)
    return;

  __global double(*an)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*ao)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ap)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*aq)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])g;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])h;

  q[0] = an[n][m][0][0];
  q[1] = an[n][m][0][1];
  q[2] = an[n][m][0][2];
  q[3] = an[n][m][0][3];
  q[4] = an[n][m][0][4];
  r[0] = an[n][m][1][0];
  r[1] = an[n][m][1][1];
  r[2] = an[n][m][1][2];
  r[3] = an[n][m][1][3];
  r[4] = an[n][m][1][4];
  s[0] = an[n][m][2][0];
  s[1] = an[n][m][2][1];
  s[2] = an[n][m][2][2];
  s[3] = an[n][m][2][3];
  s[4] = an[n][m][2][4];

  v = ao[n][m][0];
  w = ao[n][m][1];
  y = ap[n][m][0];
  z = ap[n][m][1];
  ab = aq[n][m][0];
  ac = aq[n][m][1];
  ae = ar[n][m][0];
  af = ar[n][m][1];
  ah = as[n][m][0];
  ai = as[n][m][1];
  ak = at[n][m][0];
  al = at[n][m][1];
  l = 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m][l + 2][0];
  s[1] = an[n][m][l + 2][1];
  s[2] = an[n][m][l + 2][2];
  s[3] = an[n][m][l + 2][3];
  s[4] = an[n][m][l + 2][4];
  x = v;
  v = w;
  w = ao[n][m][l + 1];
  aa = y;
  y = z;
  z = ap[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = aq[n][m][l + 1];
  ag = ae;
  ae = af;
  af = ar[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = as[n][m][l + 1];
  am = ak;
  ak = al;
  al = at[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  l = 2;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m][l + 2][0];
  s[1] = an[n][m][l + 2][1];
  s[2] = an[n][m][l + 2][2];
  s[3] = an[n][m][l + 2][3];
  s[4] = an[n][m][l + 2][4];
  x = v;
  v = w;
  w = ao[n][m][l + 1];
  aa = y;
  y = z;
  z = ap[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = aq[n][m][l + 1];
  ag = ae;
  ae = af;
  af = ar[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = as[n][m][l + 1];
  am = ak;
  ak = al;
  al = at[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (l = 3; l <= i - 2; l++) {
    u[0] = t[0];
    u[1] = t[1];
    u[2] = t[2];
    u[3] = t[3];
    u[4] = t[4];
    t[0] = q[0];
    t[1] = q[1];
    t[2] = q[2];
    t[3] = q[3];
    t[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = an[n][m][l + 2][0];
    s[1] = an[n][m][l + 2][1];
    s[2] = an[n][m][l + 2][2];
    s[3] = an[n][m][l + 2][3];
    s[4] = an[n][m][l + 2][4];
    x = v;
    v = w;
    w = ao[n][m][l + 1];
    aa = y;
    y = z;
    z = ap[n][m][l + 1];
    ad = ab;
    ab = ac;
    ac = aq[n][m][l + 1];
    ag = ae;
    ae = af;
    af = ar[n][m][l + 1];
    aj = ah;
    ah = ai;
    ai = as[n][m][l + 1];
    am = ak;
    ak = al;
    al = at[n][m][l + 1];
    p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
    p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
    p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
    p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
    p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  l = i - 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m][l + 2][0];
  s[1] = an[n][m][l + 2][1];
  s[2] = an[n][m][l + 2][2];
  s[3] = an[n][m][l + 2][3];
  s[4] = an[n][m][l + 2][4];
  x = v;
  v = w;
  w = ao[n][m][l + 1];
  aa = y;
  y = z;
  z = ap[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = aq[n][m][l + 1];
  ag = ae;
  ae = af;
  af = ar[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = as[n][m][l + 1];
  am = ak;
  ak = al;
  al = at[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  l = i;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = ao[n][m][l + 1];
  aa = y;
  y = z;
  z = ap[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = aq[n][m][l + 1];
  ag = ae;
  ae = af;
  af = ar[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = as[n][m][l + 1];
  am = ak;
  ak = al;
  al = at[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 5.0 * q[o]);
  }
}","[ 17   1  12 ..., 127   0 127]"
429,npb-3.3-SP-compute_rhs3,B,1257,23,8,0,107,0,454882552,32,GPU,11.548587,5.73091,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5], u[5];
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  n = get_global_id(1) + 1;
  m = get_global_id(0) + 1;
  if (n > k || m > j)
    return;

  __global double(*an)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*ao)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ap)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*aq)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])g;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])h;

  q[0] = an[n][m][0][0];
  q[1] = an[n][m][0][1];
  q[2] = an[n][m][0][2];
  q[3] = an[n][m][0][3];
  q[4] = an[n][m][0][4];
  r[0] = an[n][m][1][0];
  r[1] = an[n][m][1][1];
  r[2] = an[n][m][1][2];
  r[3] = an[n][m][1][3];
  r[4] = an[n][m][1][4];
  s[0] = an[n][m][2][0];
  s[1] = an[n][m][2][1];
  s[2] = an[n][m][2][2];
  s[3] = an[n][m][2][3];
  s[4] = an[n][m][2][4];

  v = ao[n][m][0];
  w = ao[n][m][1];
  y = ap[n][m][0];
  z = ap[n][m][1];
  ab = aq[n][m][0];
  ac = aq[n][m][1];
  ae = ar[n][m][0];
  af = ar[n][m][1];
  ah = as[n][m][0];
  ai = as[n][m][1];
  ak = at[n][m][0];
  al = at[n][m][1];
  l = 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m][l + 2][0];
  s[1] = an[n][m][l + 2][1];
  s[2] = an[n][m][l + 2][2];
  s[3] = an[n][m][l + 2][3];
  s[4] = an[n][m][l + 2][4];
  x = v;
  v = w;
  w = ao[n][m][l + 1];
  aa = y;
  y = z;
  z = ap[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = aq[n][m][l + 1];
  ag = ae;
  ae = af;
  af = ar[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = as[n][m][l + 1];
  am = ak;
  ak = al;
  al = at[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  l = 2;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m][l + 2][0];
  s[1] = an[n][m][l + 2][1];
  s[2] = an[n][m][l + 2][2];
  s[3] = an[n][m][l + 2][3];
  s[4] = an[n][m][l + 2][4];
  x = v;
  v = w;
  w = ao[n][m][l + 1];
  aa = y;
  y = z;
  z = ap[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = aq[n][m][l + 1];
  ag = ae;
  ae = af;
  af = ar[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = as[n][m][l + 1];
  am = ak;
  ak = al;
  al = at[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (l = 3; l <= i - 2; l++) {
    u[0] = t[0];
    u[1] = t[1];
    u[2] = t[2];
    u[3] = t[3];
    u[4] = t[4];
    t[0] = q[0];
    t[1] = q[1];
    t[2] = q[2];
    t[3] = q[3];
    t[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = an[n][m][l + 2][0];
    s[1] = an[n][m][l + 2][1];
    s[2] = an[n][m][l + 2][2];
    s[3] = an[n][m][l + 2][3];
    s[4] = an[n][m][l + 2][4];
    x = v;
    v = w;
    w = ao[n][m][l + 1];
    aa = y;
    y = z;
    z = ap[n][m][l + 1];
    ad = ab;
    ab = ac;
    ac = aq[n][m][l + 1];
    ag = ae;
    ae = af;
    af = ar[n][m][l + 1];
    aj = ah;
    ah = ai;
    ai = as[n][m][l + 1];
    am = ak;
    ak = al;
    al = at[n][m][l + 1];
    p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
    p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
    p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
    p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
    p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  l = i - 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m][l + 2][0];
  s[1] = an[n][m][l + 2][1];
  s[2] = an[n][m][l + 2][2];
  s[3] = an[n][m][l + 2][3];
  s[4] = an[n][m][l + 2][4];
  x = v;
  v = w;
  w = ao[n][m][l + 1];
  aa = y;
  y = z;
  z = ap[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = aq[n][m][l + 1];
  ag = ae;
  ae = af;
  af = ar[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = as[n][m][l + 1];
  am = ak;
  ak = al;
  al = at[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  l = i;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = ao[n][m][l + 1];
  aa = y;
  y = z;
  z = ap[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = aq[n][m][l + 1];
  ag = ae;
  ae = af;
  af = ar[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = as[n][m][l + 1];
  am = ak;
  ak = al;
  al = at[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 5.0 * q[o]);
  }
}","[ 17   1  12 ..., 127   0 127]"
430,npb-3.3-SP-compute_rhs3,C,1257,23,8,0,107,0,1815065192,64,GPU,52.150718,25.968725,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5], u[5];
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  n = get_global_id(1) + 1;
  m = get_global_id(0) + 1;
  if (n > k || m > j)
    return;

  __global double(*an)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*ao)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ap)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*aq)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])g;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])h;

  q[0] = an[n][m][0][0];
  q[1] = an[n][m][0][1];
  q[2] = an[n][m][0][2];
  q[3] = an[n][m][0][3];
  q[4] = an[n][m][0][4];
  r[0] = an[n][m][1][0];
  r[1] = an[n][m][1][1];
  r[2] = an[n][m][1][2];
  r[3] = an[n][m][1][3];
  r[4] = an[n][m][1][4];
  s[0] = an[n][m][2][0];
  s[1] = an[n][m][2][1];
  s[2] = an[n][m][2][2];
  s[3] = an[n][m][2][3];
  s[4] = an[n][m][2][4];

  v = ao[n][m][0];
  w = ao[n][m][1];
  y = ap[n][m][0];
  z = ap[n][m][1];
  ab = aq[n][m][0];
  ac = aq[n][m][1];
  ae = ar[n][m][0];
  af = ar[n][m][1];
  ah = as[n][m][0];
  ai = as[n][m][1];
  ak = at[n][m][0];
  al = at[n][m][1];
  l = 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m][l + 2][0];
  s[1] = an[n][m][l + 2][1];
  s[2] = an[n][m][l + 2][2];
  s[3] = an[n][m][l + 2][3];
  s[4] = an[n][m][l + 2][4];
  x = v;
  v = w;
  w = ao[n][m][l + 1];
  aa = y;
  y = z;
  z = ap[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = aq[n][m][l + 1];
  ag = ae;
  ae = af;
  af = ar[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = as[n][m][l + 1];
  am = ak;
  ak = al;
  al = at[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  l = 2;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m][l + 2][0];
  s[1] = an[n][m][l + 2][1];
  s[2] = an[n][m][l + 2][2];
  s[3] = an[n][m][l + 2][3];
  s[4] = an[n][m][l + 2][4];
  x = v;
  v = w;
  w = ao[n][m][l + 1];
  aa = y;
  y = z;
  z = ap[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = aq[n][m][l + 1];
  ag = ae;
  ae = af;
  af = ar[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = as[n][m][l + 1];
  am = ak;
  ak = al;
  al = at[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (l = 3; l <= i - 2; l++) {
    u[0] = t[0];
    u[1] = t[1];
    u[2] = t[2];
    u[3] = t[3];
    u[4] = t[4];
    t[0] = q[0];
    t[1] = q[1];
    t[2] = q[2];
    t[3] = q[3];
    t[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = an[n][m][l + 2][0];
    s[1] = an[n][m][l + 2][1];
    s[2] = an[n][m][l + 2][2];
    s[3] = an[n][m][l + 2][3];
    s[4] = an[n][m][l + 2][4];
    x = v;
    v = w;
    w = ao[n][m][l + 1];
    aa = y;
    y = z;
    z = ap[n][m][l + 1];
    ad = ab;
    ab = ac;
    ac = aq[n][m][l + 1];
    ag = ae;
    ae = af;
    af = ar[n][m][l + 1];
    aj = ah;
    ah = ai;
    ai = as[n][m][l + 1];
    am = ak;
    ak = al;
    al = at[n][m][l + 1];
    p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
    p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
    p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
    p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
    p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  l = i - 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m][l + 2][0];
  s[1] = an[n][m][l + 2][1];
  s[2] = an[n][m][l + 2][2];
  s[3] = an[n][m][l + 2][3];
  s[4] = an[n][m][l + 2][4];
  x = v;
  v = w;
  w = ao[n][m][l + 1];
  aa = y;
  y = z;
  z = ap[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = aq[n][m][l + 1];
  ag = ae;
  ae = af;
  af = ar[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = as[n][m][l + 1];
  am = ak;
  ak = al;
  al = at[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  l = i;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = ao[n][m][l + 1];
  aa = y;
  y = z;
  z = ap[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = aq[n][m][l + 1];
  ag = ae;
  ae = af;
  af = ar[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = as[n][m][l + 1];
  am = ak;
  ak = al;
  al = at[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 5.0 * q[o]);
  }
}","[ 17   1  12 ..., 127   0 127]"
431,npb-3.3-SP-compute_rhs3,S,1257,23,8,0,107,0,804152,60,CPU,0.09337999999999999,0.101566,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5], u[5];
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  n = get_global_id(1) + 1;
  m = get_global_id(0) + 1;
  if (n > k || m > j)
    return;

  __global double(*an)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*ao)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ap)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*aq)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])g;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])h;

  q[0] = an[n][m][0][0];
  q[1] = an[n][m][0][1];
  q[2] = an[n][m][0][2];
  q[3] = an[n][m][0][3];
  q[4] = an[n][m][0][4];
  r[0] = an[n][m][1][0];
  r[1] = an[n][m][1][1];
  r[2] = an[n][m][1][2];
  r[3] = an[n][m][1][3];
  r[4] = an[n][m][1][4];
  s[0] = an[n][m][2][0];
  s[1] = an[n][m][2][1];
  s[2] = an[n][m][2][2];
  s[3] = an[n][m][2][3];
  s[4] = an[n][m][2][4];

  v = ao[n][m][0];
  w = ao[n][m][1];
  y = ap[n][m][0];
  z = ap[n][m][1];
  ab = aq[n][m][0];
  ac = aq[n][m][1];
  ae = ar[n][m][0];
  af = ar[n][m][1];
  ah = as[n][m][0];
  ai = as[n][m][1];
  ak = at[n][m][0];
  al = at[n][m][1];
  l = 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m][l + 2][0];
  s[1] = an[n][m][l + 2][1];
  s[2] = an[n][m][l + 2][2];
  s[3] = an[n][m][l + 2][3];
  s[4] = an[n][m][l + 2][4];
  x = v;
  v = w;
  w = ao[n][m][l + 1];
  aa = y;
  y = z;
  z = ap[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = aq[n][m][l + 1];
  ag = ae;
  ae = af;
  af = ar[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = as[n][m][l + 1];
  am = ak;
  ak = al;
  al = at[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  l = 2;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m][l + 2][0];
  s[1] = an[n][m][l + 2][1];
  s[2] = an[n][m][l + 2][2];
  s[3] = an[n][m][l + 2][3];
  s[4] = an[n][m][l + 2][4];
  x = v;
  v = w;
  w = ao[n][m][l + 1];
  aa = y;
  y = z;
  z = ap[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = aq[n][m][l + 1];
  ag = ae;
  ae = af;
  af = ar[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = as[n][m][l + 1];
  am = ak;
  ak = al;
  al = at[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (l = 3; l <= i - 2; l++) {
    u[0] = t[0];
    u[1] = t[1];
    u[2] = t[2];
    u[3] = t[3];
    u[4] = t[4];
    t[0] = q[0];
    t[1] = q[1];
    t[2] = q[2];
    t[3] = q[3];
    t[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = an[n][m][l + 2][0];
    s[1] = an[n][m][l + 2][1];
    s[2] = an[n][m][l + 2][2];
    s[3] = an[n][m][l + 2][3];
    s[4] = an[n][m][l + 2][4];
    x = v;
    v = w;
    w = ao[n][m][l + 1];
    aa = y;
    y = z;
    z = ap[n][m][l + 1];
    ad = ab;
    ab = ac;
    ac = aq[n][m][l + 1];
    ag = ae;
    ae = af;
    af = ar[n][m][l + 1];
    aj = ah;
    ah = ai;
    ai = as[n][m][l + 1];
    am = ak;
    ak = al;
    al = at[n][m][l + 1];
    p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
    p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
    p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
    p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
    p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  l = i - 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m][l + 2][0];
  s[1] = an[n][m][l + 2][1];
  s[2] = an[n][m][l + 2][2];
  s[3] = an[n][m][l + 2][3];
  s[4] = an[n][m][l + 2][4];
  x = v;
  v = w;
  w = ao[n][m][l + 1];
  aa = y;
  y = z;
  z = ap[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = aq[n][m][l + 1];
  ag = ae;
  ae = af;
  af = ar[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = as[n][m][l + 1];
  am = ak;
  ak = al;
  al = at[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  l = i;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = ao[n][m][l + 1];
  aa = y;
  y = z;
  z = ap[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = aq[n][m][l + 1];
  ag = ae;
  ae = af;
  af = ar[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = as[n][m][l + 1];
  am = ak;
  ak = al;
  al = at[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 5.0 * q[o]);
  }
}","[ 17   1  12 ..., 127   0 127]"
432,npb-3.3-SP-compute_rhs3,W,1257,23,8,0,107,0,20402112,34,GPU,0.513153,0.23215,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5], u[5];
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  n = get_global_id(1) + 1;
  m = get_global_id(0) + 1;
  if (n > k || m > j)
    return;

  __global double(*an)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*ao)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ap)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*aq)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])g;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])h;

  q[0] = an[n][m][0][0];
  q[1] = an[n][m][0][1];
  q[2] = an[n][m][0][2];
  q[3] = an[n][m][0][3];
  q[4] = an[n][m][0][4];
  r[0] = an[n][m][1][0];
  r[1] = an[n][m][1][1];
  r[2] = an[n][m][1][2];
  r[3] = an[n][m][1][3];
  r[4] = an[n][m][1][4];
  s[0] = an[n][m][2][0];
  s[1] = an[n][m][2][1];
  s[2] = an[n][m][2][2];
  s[3] = an[n][m][2][3];
  s[4] = an[n][m][2][4];

  v = ao[n][m][0];
  w = ao[n][m][1];
  y = ap[n][m][0];
  z = ap[n][m][1];
  ab = aq[n][m][0];
  ac = aq[n][m][1];
  ae = ar[n][m][0];
  af = ar[n][m][1];
  ah = as[n][m][0];
  ai = as[n][m][1];
  ak = at[n][m][0];
  al = at[n][m][1];
  l = 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m][l + 2][0];
  s[1] = an[n][m][l + 2][1];
  s[2] = an[n][m][l + 2][2];
  s[3] = an[n][m][l + 2][3];
  s[4] = an[n][m][l + 2][4];
  x = v;
  v = w;
  w = ao[n][m][l + 1];
  aa = y;
  y = z;
  z = ap[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = aq[n][m][l + 1];
  ag = ae;
  ae = af;
  af = ar[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = as[n][m][l + 1];
  am = ak;
  ak = al;
  al = at[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  l = 2;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m][l + 2][0];
  s[1] = an[n][m][l + 2][1];
  s[2] = an[n][m][l + 2][2];
  s[3] = an[n][m][l + 2][3];
  s[4] = an[n][m][l + 2][4];
  x = v;
  v = w;
  w = ao[n][m][l + 1];
  aa = y;
  y = z;
  z = ap[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = aq[n][m][l + 1];
  ag = ae;
  ae = af;
  af = ar[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = as[n][m][l + 1];
  am = ak;
  ak = al;
  al = at[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (l = 3; l <= i - 2; l++) {
    u[0] = t[0];
    u[1] = t[1];
    u[2] = t[2];
    u[3] = t[3];
    u[4] = t[4];
    t[0] = q[0];
    t[1] = q[1];
    t[2] = q[2];
    t[3] = q[3];
    t[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = an[n][m][l + 2][0];
    s[1] = an[n][m][l + 2][1];
    s[2] = an[n][m][l + 2][2];
    s[3] = an[n][m][l + 2][3];
    s[4] = an[n][m][l + 2][4];
    x = v;
    v = w;
    w = ao[n][m][l + 1];
    aa = y;
    y = z;
    z = ap[n][m][l + 1];
    ad = ab;
    ab = ac;
    ac = aq[n][m][l + 1];
    ag = ae;
    ae = af;
    af = ar[n][m][l + 1];
    aj = ah;
    ah = ai;
    ai = as[n][m][l + 1];
    am = ak;
    ak = al;
    al = at[n][m][l + 1];
    p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
    p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
    p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
    p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
    p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  l = i - 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m][l + 2][0];
  s[1] = an[n][m][l + 2][1];
  s[2] = an[n][m][l + 2][2];
  s[3] = an[n][m][l + 2][3];
  s[4] = an[n][m][l + 2][4];
  x = v;
  v = w;
  w = ao[n][m][l + 1];
  aa = y;
  y = z;
  z = ap[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = aq[n][m][l + 1];
  ag = ae;
  ae = af;
  af = ar[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = as[n][m][l + 1];
  am = ak;
  ak = al;
  al = at[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  l = i;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = ao[n][m][l + 1];
  aa = y;
  y = z;
  z = ap[n][m][l + 1];
  ad = ab;
  ab = ac;
  ac = aq[n][m][l + 1];
  ag = ae;
  ae = af;
  af = ar[n][m][l + 1];
  aj = ah;
  ah = ai;
  ai = as[n][m][l + 1];
  am = ak;
  ak = al;
  al = at[n][m][l + 1];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] - t[1]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * w - t[1] * x + (r[4] - al - t[4] + am) * 0.4);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * w - t[2] * x);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * w - t[3] * x);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (w * w - 2.0 * v * v + x * x) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * w - (1.4 * t[4] - 0.4 * am) * x);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 5.0 * q[o]);
  }
}","[ 17   1  12 ..., 127   0 127]"
433,npb-3.3-SP-compute_rhs4,A,1257,23,8,0,107,0,113095432,62,GPU,4.370217,0.48116499999999995,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5], u[5];
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  n = get_global_id(1) + 1;
  l = get_global_id(0) + 1;
  if (n > k || l > i)
    return;

  __global double(*an)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*ao)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ap)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*aq)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])g;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])h;

  q[0] = an[n][0][l][0];
  q[1] = an[n][0][l][1];
  q[2] = an[n][0][l][2];
  q[3] = an[n][0][l][3];
  q[4] = an[n][0][l][4];
  r[0] = an[n][1][l][0];
  r[1] = an[n][1][l][1];
  r[2] = an[n][1][l][2];
  r[3] = an[n][1][l][3];
  r[4] = an[n][1][l][4];
  s[0] = an[n][2][l][0];
  s[1] = an[n][2][l][1];
  s[2] = an[n][2][l][2];
  s[3] = an[n][2][l][3];
  s[4] = an[n][2][l][4];

  v = ao[n][0][l];
  w = ao[n][1][l];
  y = ap[n][0][l];
  z = ap[n][1][l];
  ab = aq[n][0][l];
  ac = aq[n][1][l];
  ae = ar[n][0][l];
  af = ar[n][1][l];
  ah = as[n][0][l];
  ai = as[n][1][l];
  ak = at[n][0][l];
  al = at[n][1][l];
  m = 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m + 2][l][0];
  s[1] = an[n][m + 2][l][1];
  s[2] = an[n][m + 2][l][2];
  s[3] = an[n][m + 2][l][3];
  s[4] = an[n][m + 2][l][4];
  x = v;
  v = w;
  w = ao[n][m + 1][l];
  aa = y;
  y = z;
  z = ap[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = aq[n][m + 1][l];
  ag = ae;
  ae = af;
  af = ar[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = as[n][m + 1][l];
  am = ak;
  ak = al;
  al = at[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  m = 2;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m + 2][l][0];
  s[1] = an[n][m + 2][l][1];
  s[2] = an[n][m + 2][l][2];
  s[3] = an[n][m + 2][l][3];
  s[4] = an[n][m + 2][l][4];
  x = v;
  v = w;
  w = ao[n][m + 1][l];
  aa = y;
  y = z;
  z = ap[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = aq[n][m + 1][l];
  ag = ae;
  ae = af;
  af = ar[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = as[n][m + 1][l];
  am = ak;
  ak = al;
  al = at[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (m = 3; m <= j - 2; m++) {
    u[0] = t[0];
    u[1] = t[1];
    u[2] = t[2];
    u[3] = t[3];
    u[4] = t[4];
    t[0] = q[0];
    t[1] = q[1];
    t[2] = q[2];
    t[3] = q[3];
    t[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = an[n][m + 2][l][0];
    s[1] = an[n][m + 2][l][1];
    s[2] = an[n][m + 2][l][2];
    s[3] = an[n][m + 2][l][3];
    s[4] = an[n][m + 2][l][4];
    x = v;
    v = w;
    w = ao[n][m + 1][l];
    aa = y;
    y = z;
    z = ap[n][m + 1][l];
    ad = ab;
    ab = ac;
    ac = aq[n][m + 1][l];
    ag = ae;
    ae = af;
    af = ar[n][m + 1][l];
    aj = ah;
    ah = ai;
    ai = as[n][m + 1][l];
    am = ak;
    ak = al;
    al = at[n][m + 1][l];
    p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
    p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
    p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
    p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
    p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  m = j - 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m + 2][l][0];
  s[1] = an[n][m + 2][l][1];
  s[2] = an[n][m + 2][l][2];
  s[3] = an[n][m + 2][l][3];
  s[4] = an[n][m + 2][l][4];
  x = v;
  v = w;
  w = ao[n][m + 1][l];
  aa = y;
  y = z;
  z = ap[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = aq[n][m + 1][l];
  ag = ae;
  ae = af;
  af = ar[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = as[n][m + 1][l];
  am = ak;
  ak = al;
  al = at[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  m = j;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = ao[n][m + 1][l];
  aa = y;
  y = z;
  z = ap[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = aq[n][m + 1][l];
  ag = ae;
  ae = af;
  af = ar[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = as[n][m + 1][l];
  am = ak;
  ak = al;
  al = at[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 5.0 * q[o]);
  }
}","[ 16   8   8 ..., 127   0 127]"
434,npb-3.3-SP-compute_rhs4,B,1257,23,8,0,107,0,454882552,32,GPU,16.679232,1.9784110000000001,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5], u[5];
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  n = get_global_id(1) + 1;
  l = get_global_id(0) + 1;
  if (n > k || l > i)
    return;

  __global double(*an)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*ao)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ap)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*aq)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])g;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])h;

  q[0] = an[n][0][l][0];
  q[1] = an[n][0][l][1];
  q[2] = an[n][0][l][2];
  q[3] = an[n][0][l][3];
  q[4] = an[n][0][l][4];
  r[0] = an[n][1][l][0];
  r[1] = an[n][1][l][1];
  r[2] = an[n][1][l][2];
  r[3] = an[n][1][l][3];
  r[4] = an[n][1][l][4];
  s[0] = an[n][2][l][0];
  s[1] = an[n][2][l][1];
  s[2] = an[n][2][l][2];
  s[3] = an[n][2][l][3];
  s[4] = an[n][2][l][4];

  v = ao[n][0][l];
  w = ao[n][1][l];
  y = ap[n][0][l];
  z = ap[n][1][l];
  ab = aq[n][0][l];
  ac = aq[n][1][l];
  ae = ar[n][0][l];
  af = ar[n][1][l];
  ah = as[n][0][l];
  ai = as[n][1][l];
  ak = at[n][0][l];
  al = at[n][1][l];
  m = 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m + 2][l][0];
  s[1] = an[n][m + 2][l][1];
  s[2] = an[n][m + 2][l][2];
  s[3] = an[n][m + 2][l][3];
  s[4] = an[n][m + 2][l][4];
  x = v;
  v = w;
  w = ao[n][m + 1][l];
  aa = y;
  y = z;
  z = ap[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = aq[n][m + 1][l];
  ag = ae;
  ae = af;
  af = ar[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = as[n][m + 1][l];
  am = ak;
  ak = al;
  al = at[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  m = 2;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m + 2][l][0];
  s[1] = an[n][m + 2][l][1];
  s[2] = an[n][m + 2][l][2];
  s[3] = an[n][m + 2][l][3];
  s[4] = an[n][m + 2][l][4];
  x = v;
  v = w;
  w = ao[n][m + 1][l];
  aa = y;
  y = z;
  z = ap[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = aq[n][m + 1][l];
  ag = ae;
  ae = af;
  af = ar[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = as[n][m + 1][l];
  am = ak;
  ak = al;
  al = at[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (m = 3; m <= j - 2; m++) {
    u[0] = t[0];
    u[1] = t[1];
    u[2] = t[2];
    u[3] = t[3];
    u[4] = t[4];
    t[0] = q[0];
    t[1] = q[1];
    t[2] = q[2];
    t[3] = q[3];
    t[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = an[n][m + 2][l][0];
    s[1] = an[n][m + 2][l][1];
    s[2] = an[n][m + 2][l][2];
    s[3] = an[n][m + 2][l][3];
    s[4] = an[n][m + 2][l][4];
    x = v;
    v = w;
    w = ao[n][m + 1][l];
    aa = y;
    y = z;
    z = ap[n][m + 1][l];
    ad = ab;
    ab = ac;
    ac = aq[n][m + 1][l];
    ag = ae;
    ae = af;
    af = ar[n][m + 1][l];
    aj = ah;
    ah = ai;
    ai = as[n][m + 1][l];
    am = ak;
    ak = al;
    al = at[n][m + 1][l];
    p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
    p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
    p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
    p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
    p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  m = j - 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m + 2][l][0];
  s[1] = an[n][m + 2][l][1];
  s[2] = an[n][m + 2][l][2];
  s[3] = an[n][m + 2][l][3];
  s[4] = an[n][m + 2][l][4];
  x = v;
  v = w;
  w = ao[n][m + 1][l];
  aa = y;
  y = z;
  z = ap[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = aq[n][m + 1][l];
  ag = ae;
  ae = af;
  af = ar[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = as[n][m + 1][l];
  am = ak;
  ak = al;
  al = at[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  m = j;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = ao[n][m + 1][l];
  aa = y;
  y = z;
  z = ap[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = aq[n][m + 1][l];
  ag = ae;
  ae = af;
  af = ar[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = as[n][m + 1][l];
  am = ak;
  ak = al;
  al = at[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 5.0 * q[o]);
  }
}","[ 16   8   8 ..., 127   0 127]"
435,npb-3.3-SP-compute_rhs4,C,1257,23,8,0,107,0,1815065192,64,GPU,79.96636099999998,5.837442,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5], u[5];
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  n = get_global_id(1) + 1;
  l = get_global_id(0) + 1;
  if (n > k || l > i)
    return;

  __global double(*an)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*ao)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ap)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*aq)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])g;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])h;

  q[0] = an[n][0][l][0];
  q[1] = an[n][0][l][1];
  q[2] = an[n][0][l][2];
  q[3] = an[n][0][l][3];
  q[4] = an[n][0][l][4];
  r[0] = an[n][1][l][0];
  r[1] = an[n][1][l][1];
  r[2] = an[n][1][l][2];
  r[3] = an[n][1][l][3];
  r[4] = an[n][1][l][4];
  s[0] = an[n][2][l][0];
  s[1] = an[n][2][l][1];
  s[2] = an[n][2][l][2];
  s[3] = an[n][2][l][3];
  s[4] = an[n][2][l][4];

  v = ao[n][0][l];
  w = ao[n][1][l];
  y = ap[n][0][l];
  z = ap[n][1][l];
  ab = aq[n][0][l];
  ac = aq[n][1][l];
  ae = ar[n][0][l];
  af = ar[n][1][l];
  ah = as[n][0][l];
  ai = as[n][1][l];
  ak = at[n][0][l];
  al = at[n][1][l];
  m = 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m + 2][l][0];
  s[1] = an[n][m + 2][l][1];
  s[2] = an[n][m + 2][l][2];
  s[3] = an[n][m + 2][l][3];
  s[4] = an[n][m + 2][l][4];
  x = v;
  v = w;
  w = ao[n][m + 1][l];
  aa = y;
  y = z;
  z = ap[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = aq[n][m + 1][l];
  ag = ae;
  ae = af;
  af = ar[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = as[n][m + 1][l];
  am = ak;
  ak = al;
  al = at[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  m = 2;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m + 2][l][0];
  s[1] = an[n][m + 2][l][1];
  s[2] = an[n][m + 2][l][2];
  s[3] = an[n][m + 2][l][3];
  s[4] = an[n][m + 2][l][4];
  x = v;
  v = w;
  w = ao[n][m + 1][l];
  aa = y;
  y = z;
  z = ap[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = aq[n][m + 1][l];
  ag = ae;
  ae = af;
  af = ar[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = as[n][m + 1][l];
  am = ak;
  ak = al;
  al = at[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (m = 3; m <= j - 2; m++) {
    u[0] = t[0];
    u[1] = t[1];
    u[2] = t[2];
    u[3] = t[3];
    u[4] = t[4];
    t[0] = q[0];
    t[1] = q[1];
    t[2] = q[2];
    t[3] = q[3];
    t[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = an[n][m + 2][l][0];
    s[1] = an[n][m + 2][l][1];
    s[2] = an[n][m + 2][l][2];
    s[3] = an[n][m + 2][l][3];
    s[4] = an[n][m + 2][l][4];
    x = v;
    v = w;
    w = ao[n][m + 1][l];
    aa = y;
    y = z;
    z = ap[n][m + 1][l];
    ad = ab;
    ab = ac;
    ac = aq[n][m + 1][l];
    ag = ae;
    ae = af;
    af = ar[n][m + 1][l];
    aj = ah;
    ah = ai;
    ai = as[n][m + 1][l];
    am = ak;
    ak = al;
    al = at[n][m + 1][l];
    p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
    p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
    p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
    p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
    p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  m = j - 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m + 2][l][0];
  s[1] = an[n][m + 2][l][1];
  s[2] = an[n][m + 2][l][2];
  s[3] = an[n][m + 2][l][3];
  s[4] = an[n][m + 2][l][4];
  x = v;
  v = w;
  w = ao[n][m + 1][l];
  aa = y;
  y = z;
  z = ap[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = aq[n][m + 1][l];
  ag = ae;
  ae = af;
  af = ar[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = as[n][m + 1][l];
  am = ak;
  ak = al;
  al = at[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  m = j;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = ao[n][m + 1][l];
  aa = y;
  y = z;
  z = ap[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = aq[n][m + 1][l];
  ag = ae;
  ae = af;
  af = ar[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = as[n][m + 1][l];
  am = ak;
  ak = al;
  al = at[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 5.0 * q[o]);
  }
}","[ 16   8   8 ..., 127   0 127]"
436,npb-3.3-SP-compute_rhs4,S,1257,23,8,0,107,0,804152,60,CPU,0.088624,0.099552,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5], u[5];
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  n = get_global_id(1) + 1;
  l = get_global_id(0) + 1;
  if (n > k || l > i)
    return;

  __global double(*an)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*ao)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ap)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*aq)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])g;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])h;

  q[0] = an[n][0][l][0];
  q[1] = an[n][0][l][1];
  q[2] = an[n][0][l][2];
  q[3] = an[n][0][l][3];
  q[4] = an[n][0][l][4];
  r[0] = an[n][1][l][0];
  r[1] = an[n][1][l][1];
  r[2] = an[n][1][l][2];
  r[3] = an[n][1][l][3];
  r[4] = an[n][1][l][4];
  s[0] = an[n][2][l][0];
  s[1] = an[n][2][l][1];
  s[2] = an[n][2][l][2];
  s[3] = an[n][2][l][3];
  s[4] = an[n][2][l][4];

  v = ao[n][0][l];
  w = ao[n][1][l];
  y = ap[n][0][l];
  z = ap[n][1][l];
  ab = aq[n][0][l];
  ac = aq[n][1][l];
  ae = ar[n][0][l];
  af = ar[n][1][l];
  ah = as[n][0][l];
  ai = as[n][1][l];
  ak = at[n][0][l];
  al = at[n][1][l];
  m = 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m + 2][l][0];
  s[1] = an[n][m + 2][l][1];
  s[2] = an[n][m + 2][l][2];
  s[3] = an[n][m + 2][l][3];
  s[4] = an[n][m + 2][l][4];
  x = v;
  v = w;
  w = ao[n][m + 1][l];
  aa = y;
  y = z;
  z = ap[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = aq[n][m + 1][l];
  ag = ae;
  ae = af;
  af = ar[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = as[n][m + 1][l];
  am = ak;
  ak = al;
  al = at[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  m = 2;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m + 2][l][0];
  s[1] = an[n][m + 2][l][1];
  s[2] = an[n][m + 2][l][2];
  s[3] = an[n][m + 2][l][3];
  s[4] = an[n][m + 2][l][4];
  x = v;
  v = w;
  w = ao[n][m + 1][l];
  aa = y;
  y = z;
  z = ap[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = aq[n][m + 1][l];
  ag = ae;
  ae = af;
  af = ar[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = as[n][m + 1][l];
  am = ak;
  ak = al;
  al = at[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (m = 3; m <= j - 2; m++) {
    u[0] = t[0];
    u[1] = t[1];
    u[2] = t[2];
    u[3] = t[3];
    u[4] = t[4];
    t[0] = q[0];
    t[1] = q[1];
    t[2] = q[2];
    t[3] = q[3];
    t[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = an[n][m + 2][l][0];
    s[1] = an[n][m + 2][l][1];
    s[2] = an[n][m + 2][l][2];
    s[3] = an[n][m + 2][l][3];
    s[4] = an[n][m + 2][l][4];
    x = v;
    v = w;
    w = ao[n][m + 1][l];
    aa = y;
    y = z;
    z = ap[n][m + 1][l];
    ad = ab;
    ab = ac;
    ac = aq[n][m + 1][l];
    ag = ae;
    ae = af;
    af = ar[n][m + 1][l];
    aj = ah;
    ah = ai;
    ai = as[n][m + 1][l];
    am = ak;
    ak = al;
    al = at[n][m + 1][l];
    p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
    p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
    p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
    p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
    p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  m = j - 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m + 2][l][0];
  s[1] = an[n][m + 2][l][1];
  s[2] = an[n][m + 2][l][2];
  s[3] = an[n][m + 2][l][3];
  s[4] = an[n][m + 2][l][4];
  x = v;
  v = w;
  w = ao[n][m + 1][l];
  aa = y;
  y = z;
  z = ap[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = aq[n][m + 1][l];
  ag = ae;
  ae = af;
  af = ar[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = as[n][m + 1][l];
  am = ak;
  ak = al;
  al = at[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  m = j;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = ao[n][m + 1][l];
  aa = y;
  y = z;
  z = ap[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = aq[n][m + 1][l];
  ag = ae;
  ae = af;
  af = ar[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = as[n][m + 1][l];
  am = ak;
  ak = al;
  al = at[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 5.0 * q[o]);
  }
}","[ 16   8   8 ..., 127   0 127]"
437,npb-3.3-SP-compute_rhs4,W,1257,23,8,0,107,0,20402112,34,GPU,0.5423939999999999,0.223796,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5], u[5];
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  n = get_global_id(1) + 1;
  l = get_global_id(0) + 1;
  if (n > k || l > i)
    return;

  __global double(*an)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*ao)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ap)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*aq)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])g;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])h;

  q[0] = an[n][0][l][0];
  q[1] = an[n][0][l][1];
  q[2] = an[n][0][l][2];
  q[3] = an[n][0][l][3];
  q[4] = an[n][0][l][4];
  r[0] = an[n][1][l][0];
  r[1] = an[n][1][l][1];
  r[2] = an[n][1][l][2];
  r[3] = an[n][1][l][3];
  r[4] = an[n][1][l][4];
  s[0] = an[n][2][l][0];
  s[1] = an[n][2][l][1];
  s[2] = an[n][2][l][2];
  s[3] = an[n][2][l][3];
  s[4] = an[n][2][l][4];

  v = ao[n][0][l];
  w = ao[n][1][l];
  y = ap[n][0][l];
  z = ap[n][1][l];
  ab = aq[n][0][l];
  ac = aq[n][1][l];
  ae = ar[n][0][l];
  af = ar[n][1][l];
  ah = as[n][0][l];
  ai = as[n][1][l];
  ak = at[n][0][l];
  al = at[n][1][l];
  m = 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m + 2][l][0];
  s[1] = an[n][m + 2][l][1];
  s[2] = an[n][m + 2][l][2];
  s[3] = an[n][m + 2][l][3];
  s[4] = an[n][m + 2][l][4];
  x = v;
  v = w;
  w = ao[n][m + 1][l];
  aa = y;
  y = z;
  z = ap[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = aq[n][m + 1][l];
  ag = ae;
  ae = af;
  af = ar[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = as[n][m + 1][l];
  am = ak;
  ak = al;
  al = at[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  m = 2;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m + 2][l][0];
  s[1] = an[n][m + 2][l][1];
  s[2] = an[n][m + 2][l][2];
  s[3] = an[n][m + 2][l][3];
  s[4] = an[n][m + 2][l][4];
  x = v;
  v = w;
  w = ao[n][m + 1][l];
  aa = y;
  y = z;
  z = ap[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = aq[n][m + 1][l];
  ag = ae;
  ae = af;
  af = ar[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = as[n][m + 1][l];
  am = ak;
  ak = al;
  al = at[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (m = 3; m <= j - 2; m++) {
    u[0] = t[0];
    u[1] = t[1];
    u[2] = t[2];
    u[3] = t[3];
    u[4] = t[4];
    t[0] = q[0];
    t[1] = q[1];
    t[2] = q[2];
    t[3] = q[3];
    t[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = an[n][m + 2][l][0];
    s[1] = an[n][m + 2][l][1];
    s[2] = an[n][m + 2][l][2];
    s[3] = an[n][m + 2][l][3];
    s[4] = an[n][m + 2][l][4];
    x = v;
    v = w;
    w = ao[n][m + 1][l];
    aa = y;
    y = z;
    z = ap[n][m + 1][l];
    ad = ab;
    ab = ac;
    ac = aq[n][m + 1][l];
    ag = ae;
    ae = af;
    af = ar[n][m + 1][l];
    aj = ah;
    ah = ai;
    ai = as[n][m + 1][l];
    am = ak;
    ak = al;
    al = at[n][m + 1][l];
    p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
    p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
    p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
    p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
    p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  m = j - 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n][m + 2][l][0];
  s[1] = an[n][m + 2][l][1];
  s[2] = an[n][m + 2][l][2];
  s[3] = an[n][m + 2][l][3];
  s[4] = an[n][m + 2][l][4];
  x = v;
  v = w;
  w = ao[n][m + 1][l];
  aa = y;
  y = z;
  z = ap[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = aq[n][m + 1][l];
  ag = ae;
  ae = af;
  af = ar[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = as[n][m + 1][l];
  am = ak;
  ak = al;
  al = at[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  m = j;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = ao[n][m + 1][l];
  aa = y;
  y = z;
  z = ap[n][m + 1][l];
  ad = ab;
  ab = ac;
  ac = aq[n][m + 1][l];
  ag = ae;
  ae = af;
  af = ar[n][m + 1][l];
  aj = ah;
  ah = ai;
  ai = as[n][m + 1][l];
  am = ak;
  ak = al;
  al = at[n][m + 1][l];
  p[0] = au[n][m][l][0] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] - t[2]);
  p[1] = au[n][m][l][1] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * z - t[1] * aa);
  p[2] = au[n][m][l][2] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * z - t[2] * aa + (r[4] - al - t[4] + am) * 0.4);
  p[3] = au[n][m][l][3] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * z - t[3] * aa);
  p[4] = au[n][m][l][4] + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z * z - 2.0 * y * y + aa * aa) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * z - (1.4 * t[4] - 0.4 * am) * aa);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 5.0 * q[o]);
  }
}","[ 16   8   8 ..., 127   0 127]"
438,npb-3.3-SP-compute_rhs5,A,1260,23,8,0,87,0,113095432,62,GPU,5.314076,0.478202,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5], u[5];
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  m = get_global_id(1) + 1;
  l = get_global_id(0) + 1;
  if (m > (j - 2) || l > (i - 2))
    return;

  __global double(*an)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*ao)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ap)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*aq)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])g;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])h;

  q[0] = an[0][m][l][0];
  q[1] = an[0][m][l][1];
  q[2] = an[0][m][l][2];
  q[3] = an[0][m][l][3];
  q[4] = an[0][m][l][4];
  r[0] = an[1][m][l][0];
  r[1] = an[1][m][l][1];
  r[2] = an[1][m][l][2];
  r[3] = an[1][m][l][3];
  r[4] = an[1][m][l][4];
  s[0] = an[2][m][l][0];
  s[1] = an[2][m][l][1];
  s[2] = an[2][m][l][2];
  s[3] = an[2][m][l][3];
  s[4] = an[2][m][l][4];

  v = ao[0][m][l];
  w = ao[1][m][l];
  y = ap[0][m][l];
  z = ap[1][m][l];
  ab = aq[0][m][l];
  ac = aq[1][m][l];
  ae = ar[0][m][l];
  af = ar[1][m][l];
  ah = as[0][m][l];
  ai = as[1][m][l];
  ak = at[0][m][l];
  al = at[1][m][l];
  n = 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n + 2][m][l][0];
  s[1] = an[n + 2][m][l][1];
  s[2] = an[n + 2][m][l][2];
  s[3] = an[n + 2][m][l][3];
  s[4] = an[n + 2][m][l][4];
  x = v;
  v = w;
  w = ao[n + 1][m][l];
  aa = y;
  y = z;
  z = ap[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = aq[n + 1][m][l];
  ag = ae;
  ae = af;
  af = ar[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = as[n + 1][m][l];
  am = ak;
  ak = al;
  al = at[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  n = 2;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n + 2][m][l][0];
  s[1] = an[n + 2][m][l][1];
  s[2] = an[n + 2][m][l][2];
  s[3] = an[n + 2][m][l][3];
  s[4] = an[n + 2][m][l][4];
  x = v;
  v = w;
  w = ao[n + 1][m][l];
  aa = y;
  y = z;
  z = ap[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = aq[n + 1][m][l];
  ag = ae;
  ae = af;
  af = ar[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = as[n + 1][m][l];
  am = ak;
  ak = al;
  al = at[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (n = 3; n <= k - 4; n++) {
    u[0] = t[0];
    u[1] = t[1];
    u[2] = t[2];
    u[3] = t[3];
    u[4] = t[4];
    t[0] = q[0];
    t[1] = q[1];
    t[2] = q[2];
    t[3] = q[3];
    t[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = an[n + 2][m][l][0];
    s[1] = an[n + 2][m][l][1];
    s[2] = an[n + 2][m][l][2];
    s[3] = an[n + 2][m][l][3];
    s[4] = an[n + 2][m][l][4];
    x = v;
    v = w;
    w = ao[n + 1][m][l];
    aa = y;
    y = z;
    z = ap[n + 1][m][l];
    ad = ab;
    ab = ac;
    ac = aq[n + 1][m][l];
    ag = ae;
    ae = af;
    af = ar[n + 1][m][l];
    aj = ah;
    ah = ai;
    ai = as[n + 1][m][l];
    am = ak;
    ak = al;
    al = at[n + 1][m][l];
    p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
    p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
    p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
    p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
    p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  n = k - 3;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n + 2][m][l][0];
  s[1] = an[n + 2][m][l][1];
  s[2] = an[n + 2][m][l][2];
  s[3] = an[n + 2][m][l][3];
  s[4] = an[n + 2][m][l][4];
  x = v;
  v = w;
  w = ao[n + 1][m][l];
  aa = y;
  y = z;
  z = ap[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = aq[n + 1][m][l];
  ag = ae;
  ae = af;
  af = ar[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = as[n + 1][m][l];
  am = ak;
  ak = al;
  al = at[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  n = k - 2;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = ao[n + 1][m][l];
  aa = y;
  y = z;
  z = ap[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = aq[n + 1][m][l];
  ag = ae;
  ae = af;
  af = ar[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = as[n + 1][m][l];
  am = ak;
  ak = al;
  al = at[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 5.0 * q[o]);
  }
}","[  1 111  51 ..., 127   0 127]"
439,npb-3.3-SP-compute_rhs5,B,1260,23,8,0,87,0,454882552,32,GPU,19.478835,1.978434,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5], u[5];
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  m = get_global_id(1) + 1;
  l = get_global_id(0) + 1;
  if (m > (j - 2) || l > (i - 2))
    return;

  __global double(*an)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*ao)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ap)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*aq)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])g;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])h;

  q[0] = an[0][m][l][0];
  q[1] = an[0][m][l][1];
  q[2] = an[0][m][l][2];
  q[3] = an[0][m][l][3];
  q[4] = an[0][m][l][4];
  r[0] = an[1][m][l][0];
  r[1] = an[1][m][l][1];
  r[2] = an[1][m][l][2];
  r[3] = an[1][m][l][3];
  r[4] = an[1][m][l][4];
  s[0] = an[2][m][l][0];
  s[1] = an[2][m][l][1];
  s[2] = an[2][m][l][2];
  s[3] = an[2][m][l][3];
  s[4] = an[2][m][l][4];

  v = ao[0][m][l];
  w = ao[1][m][l];
  y = ap[0][m][l];
  z = ap[1][m][l];
  ab = aq[0][m][l];
  ac = aq[1][m][l];
  ae = ar[0][m][l];
  af = ar[1][m][l];
  ah = as[0][m][l];
  ai = as[1][m][l];
  ak = at[0][m][l];
  al = at[1][m][l];
  n = 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n + 2][m][l][0];
  s[1] = an[n + 2][m][l][1];
  s[2] = an[n + 2][m][l][2];
  s[3] = an[n + 2][m][l][3];
  s[4] = an[n + 2][m][l][4];
  x = v;
  v = w;
  w = ao[n + 1][m][l];
  aa = y;
  y = z;
  z = ap[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = aq[n + 1][m][l];
  ag = ae;
  ae = af;
  af = ar[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = as[n + 1][m][l];
  am = ak;
  ak = al;
  al = at[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  n = 2;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n + 2][m][l][0];
  s[1] = an[n + 2][m][l][1];
  s[2] = an[n + 2][m][l][2];
  s[3] = an[n + 2][m][l][3];
  s[4] = an[n + 2][m][l][4];
  x = v;
  v = w;
  w = ao[n + 1][m][l];
  aa = y;
  y = z;
  z = ap[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = aq[n + 1][m][l];
  ag = ae;
  ae = af;
  af = ar[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = as[n + 1][m][l];
  am = ak;
  ak = al;
  al = at[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (n = 3; n <= k - 4; n++) {
    u[0] = t[0];
    u[1] = t[1];
    u[2] = t[2];
    u[3] = t[3];
    u[4] = t[4];
    t[0] = q[0];
    t[1] = q[1];
    t[2] = q[2];
    t[3] = q[3];
    t[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = an[n + 2][m][l][0];
    s[1] = an[n + 2][m][l][1];
    s[2] = an[n + 2][m][l][2];
    s[3] = an[n + 2][m][l][3];
    s[4] = an[n + 2][m][l][4];
    x = v;
    v = w;
    w = ao[n + 1][m][l];
    aa = y;
    y = z;
    z = ap[n + 1][m][l];
    ad = ab;
    ab = ac;
    ac = aq[n + 1][m][l];
    ag = ae;
    ae = af;
    af = ar[n + 1][m][l];
    aj = ah;
    ah = ai;
    ai = as[n + 1][m][l];
    am = ak;
    ak = al;
    al = at[n + 1][m][l];
    p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
    p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
    p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
    p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
    p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  n = k - 3;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n + 2][m][l][0];
  s[1] = an[n + 2][m][l][1];
  s[2] = an[n + 2][m][l][2];
  s[3] = an[n + 2][m][l][3];
  s[4] = an[n + 2][m][l][4];
  x = v;
  v = w;
  w = ao[n + 1][m][l];
  aa = y;
  y = z;
  z = ap[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = aq[n + 1][m][l];
  ag = ae;
  ae = af;
  af = ar[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = as[n + 1][m][l];
  am = ak;
  ak = al;
  al = at[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  n = k - 2;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = ao[n + 1][m][l];
  aa = y;
  y = z;
  z = ap[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = aq[n + 1][m][l];
  ag = ae;
  ae = af;
  af = ar[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = as[n + 1][m][l];
  am = ak;
  ak = al;
  al = at[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 5.0 * q[o]);
  }
}","[  1 111  51 ..., 127   0 127]"
440,npb-3.3-SP-compute_rhs5,C,1260,23,8,0,87,0,1815065192,64,GPU,80.4929,5.836749,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5], u[5];
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  m = get_global_id(1) + 1;
  l = get_global_id(0) + 1;
  if (m > (j - 2) || l > (i - 2))
    return;

  __global double(*an)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*ao)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ap)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*aq)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])g;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])h;

  q[0] = an[0][m][l][0];
  q[1] = an[0][m][l][1];
  q[2] = an[0][m][l][2];
  q[3] = an[0][m][l][3];
  q[4] = an[0][m][l][4];
  r[0] = an[1][m][l][0];
  r[1] = an[1][m][l][1];
  r[2] = an[1][m][l][2];
  r[3] = an[1][m][l][3];
  r[4] = an[1][m][l][4];
  s[0] = an[2][m][l][0];
  s[1] = an[2][m][l][1];
  s[2] = an[2][m][l][2];
  s[3] = an[2][m][l][3];
  s[4] = an[2][m][l][4];

  v = ao[0][m][l];
  w = ao[1][m][l];
  y = ap[0][m][l];
  z = ap[1][m][l];
  ab = aq[0][m][l];
  ac = aq[1][m][l];
  ae = ar[0][m][l];
  af = ar[1][m][l];
  ah = as[0][m][l];
  ai = as[1][m][l];
  ak = at[0][m][l];
  al = at[1][m][l];
  n = 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n + 2][m][l][0];
  s[1] = an[n + 2][m][l][1];
  s[2] = an[n + 2][m][l][2];
  s[3] = an[n + 2][m][l][3];
  s[4] = an[n + 2][m][l][4];
  x = v;
  v = w;
  w = ao[n + 1][m][l];
  aa = y;
  y = z;
  z = ap[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = aq[n + 1][m][l];
  ag = ae;
  ae = af;
  af = ar[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = as[n + 1][m][l];
  am = ak;
  ak = al;
  al = at[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  n = 2;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n + 2][m][l][0];
  s[1] = an[n + 2][m][l][1];
  s[2] = an[n + 2][m][l][2];
  s[3] = an[n + 2][m][l][3];
  s[4] = an[n + 2][m][l][4];
  x = v;
  v = w;
  w = ao[n + 1][m][l];
  aa = y;
  y = z;
  z = ap[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = aq[n + 1][m][l];
  ag = ae;
  ae = af;
  af = ar[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = as[n + 1][m][l];
  am = ak;
  ak = al;
  al = at[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (n = 3; n <= k - 4; n++) {
    u[0] = t[0];
    u[1] = t[1];
    u[2] = t[2];
    u[3] = t[3];
    u[4] = t[4];
    t[0] = q[0];
    t[1] = q[1];
    t[2] = q[2];
    t[3] = q[3];
    t[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = an[n + 2][m][l][0];
    s[1] = an[n + 2][m][l][1];
    s[2] = an[n + 2][m][l][2];
    s[3] = an[n + 2][m][l][3];
    s[4] = an[n + 2][m][l][4];
    x = v;
    v = w;
    w = ao[n + 1][m][l];
    aa = y;
    y = z;
    z = ap[n + 1][m][l];
    ad = ab;
    ab = ac;
    ac = aq[n + 1][m][l];
    ag = ae;
    ae = af;
    af = ar[n + 1][m][l];
    aj = ah;
    ah = ai;
    ai = as[n + 1][m][l];
    am = ak;
    ak = al;
    al = at[n + 1][m][l];
    p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
    p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
    p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
    p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
    p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  n = k - 3;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n + 2][m][l][0];
  s[1] = an[n + 2][m][l][1];
  s[2] = an[n + 2][m][l][2];
  s[3] = an[n + 2][m][l][3];
  s[4] = an[n + 2][m][l][4];
  x = v;
  v = w;
  w = ao[n + 1][m][l];
  aa = y;
  y = z;
  z = ap[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = aq[n + 1][m][l];
  ag = ae;
  ae = af;
  af = ar[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = as[n + 1][m][l];
  am = ak;
  ak = al;
  al = at[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  n = k - 2;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = ao[n + 1][m][l];
  aa = y;
  y = z;
  z = ap[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = aq[n + 1][m][l];
  ag = ae;
  ae = af;
  af = ar[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = as[n + 1][m][l];
  am = ak;
  ak = al;
  al = at[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 5.0 * q[o]);
  }
}","[  1 111  51 ..., 127   0 127]"
441,npb-3.3-SP-compute_rhs5,S,1260,23,8,0,87,0,804152,60,CPU,0.091041,0.0993,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5], u[5];
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  m = get_global_id(1) + 1;
  l = get_global_id(0) + 1;
  if (m > (j - 2) || l > (i - 2))
    return;

  __global double(*an)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*ao)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ap)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*aq)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])g;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])h;

  q[0] = an[0][m][l][0];
  q[1] = an[0][m][l][1];
  q[2] = an[0][m][l][2];
  q[3] = an[0][m][l][3];
  q[4] = an[0][m][l][4];
  r[0] = an[1][m][l][0];
  r[1] = an[1][m][l][1];
  r[2] = an[1][m][l][2];
  r[3] = an[1][m][l][3];
  r[4] = an[1][m][l][4];
  s[0] = an[2][m][l][0];
  s[1] = an[2][m][l][1];
  s[2] = an[2][m][l][2];
  s[3] = an[2][m][l][3];
  s[4] = an[2][m][l][4];

  v = ao[0][m][l];
  w = ao[1][m][l];
  y = ap[0][m][l];
  z = ap[1][m][l];
  ab = aq[0][m][l];
  ac = aq[1][m][l];
  ae = ar[0][m][l];
  af = ar[1][m][l];
  ah = as[0][m][l];
  ai = as[1][m][l];
  ak = at[0][m][l];
  al = at[1][m][l];
  n = 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n + 2][m][l][0];
  s[1] = an[n + 2][m][l][1];
  s[2] = an[n + 2][m][l][2];
  s[3] = an[n + 2][m][l][3];
  s[4] = an[n + 2][m][l][4];
  x = v;
  v = w;
  w = ao[n + 1][m][l];
  aa = y;
  y = z;
  z = ap[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = aq[n + 1][m][l];
  ag = ae;
  ae = af;
  af = ar[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = as[n + 1][m][l];
  am = ak;
  ak = al;
  al = at[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  n = 2;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n + 2][m][l][0];
  s[1] = an[n + 2][m][l][1];
  s[2] = an[n + 2][m][l][2];
  s[3] = an[n + 2][m][l][3];
  s[4] = an[n + 2][m][l][4];
  x = v;
  v = w;
  w = ao[n + 1][m][l];
  aa = y;
  y = z;
  z = ap[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = aq[n + 1][m][l];
  ag = ae;
  ae = af;
  af = ar[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = as[n + 1][m][l];
  am = ak;
  ak = al;
  al = at[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (n = 3; n <= k - 4; n++) {
    u[0] = t[0];
    u[1] = t[1];
    u[2] = t[2];
    u[3] = t[3];
    u[4] = t[4];
    t[0] = q[0];
    t[1] = q[1];
    t[2] = q[2];
    t[3] = q[3];
    t[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = an[n + 2][m][l][0];
    s[1] = an[n + 2][m][l][1];
    s[2] = an[n + 2][m][l][2];
    s[3] = an[n + 2][m][l][3];
    s[4] = an[n + 2][m][l][4];
    x = v;
    v = w;
    w = ao[n + 1][m][l];
    aa = y;
    y = z;
    z = ap[n + 1][m][l];
    ad = ab;
    ab = ac;
    ac = aq[n + 1][m][l];
    ag = ae;
    ae = af;
    af = ar[n + 1][m][l];
    aj = ah;
    ah = ai;
    ai = as[n + 1][m][l];
    am = ak;
    ak = al;
    al = at[n + 1][m][l];
    p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
    p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
    p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
    p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
    p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  n = k - 3;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n + 2][m][l][0];
  s[1] = an[n + 2][m][l][1];
  s[2] = an[n + 2][m][l][2];
  s[3] = an[n + 2][m][l][3];
  s[4] = an[n + 2][m][l][4];
  x = v;
  v = w;
  w = ao[n + 1][m][l];
  aa = y;
  y = z;
  z = ap[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = aq[n + 1][m][l];
  ag = ae;
  ae = af;
  af = ar[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = as[n + 1][m][l];
  am = ak;
  ak = al;
  al = at[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  n = k - 2;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = ao[n + 1][m][l];
  aa = y;
  y = z;
  z = ap[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = aq[n + 1][m][l];
  ag = ae;
  ae = af;
  af = ar[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = as[n + 1][m][l];
  am = ak;
  ak = al;
  al = at[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 5.0 * q[o]);
  }
}","[  1 111  51 ..., 127   0 127]"
442,npb-3.3-SP-compute_rhs5,W,1260,23,8,0,87,0,20402112,34,GPU,0.691142,0.223402,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global const double* g, __global double* h, int i, int j, int k) {
  int l, m, n, o;
  double p[5];
  double q[5], r[5], s[5], t[5], u[5];
  double v, w, x;
  double y, z, aa;
  double ab, ac, ad;
  double ae, af, ag;
  double ah, ai, aj;
  double ak, al, am;

  m = get_global_id(1) + 1;
  l = get_global_id(0) + 1;
  if (m > (j - 2) || l > (i - 2))
    return;

  __global double(*an)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*ao)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ap)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*aq)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])g;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])h;

  q[0] = an[0][m][l][0];
  q[1] = an[0][m][l][1];
  q[2] = an[0][m][l][2];
  q[3] = an[0][m][l][3];
  q[4] = an[0][m][l][4];
  r[0] = an[1][m][l][0];
  r[1] = an[1][m][l][1];
  r[2] = an[1][m][l][2];
  r[3] = an[1][m][l][3];
  r[4] = an[1][m][l][4];
  s[0] = an[2][m][l][0];
  s[1] = an[2][m][l][1];
  s[2] = an[2][m][l][2];
  s[3] = an[2][m][l][3];
  s[4] = an[2][m][l][4];

  v = ao[0][m][l];
  w = ao[1][m][l];
  y = ap[0][m][l];
  z = ap[1][m][l];
  ab = aq[0][m][l];
  ac = aq[1][m][l];
  ae = ar[0][m][l];
  af = ar[1][m][l];
  ah = as[0][m][l];
  ai = as[1][m][l];
  ak = at[0][m][l];
  al = at[1][m][l];
  n = 1;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n + 2][m][l][0];
  s[1] = an[n + 2][m][l][1];
  s[2] = an[n + 2][m][l][2];
  s[3] = an[n + 2][m][l][3];
  s[4] = an[n + 2][m][l][4];
  x = v;
  v = w;
  w = ao[n + 1][m][l];
  aa = y;
  y = z;
  z = ap[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = aq[n + 1][m][l];
  ag = ae;
  ae = af;
  af = ar[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = as[n + 1][m][l];
  am = ak;
  ak = al;
  al = at[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  n = 2;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n + 2][m][l][0];
  s[1] = an[n + 2][m][l][1];
  s[2] = an[n + 2][m][l][2];
  s[3] = an[n + 2][m][l][3];
  s[4] = an[n + 2][m][l][4];
  x = v;
  v = w;
  w = ao[n + 1][m][l];
  aa = y;
  y = z;
  z = ap[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = aq[n + 1][m][l];
  ag = ae;
  ae = af;
  af = ar[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = as[n + 1][m][l];
  am = ak;
  ak = al;
  al = at[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
  }

  for (n = 3; n <= k - 4; n++) {
    u[0] = t[0];
    u[1] = t[1];
    u[2] = t[2];
    u[3] = t[3];
    u[4] = t[4];
    t[0] = q[0];
    t[1] = q[1];
    t[2] = q[2];
    t[3] = q[3];
    t[4] = q[4];
    q[0] = r[0];
    q[1] = r[1];
    q[2] = r[2];
    q[3] = r[3];
    q[4] = r[4];
    r[0] = s[0];
    r[1] = s[1];
    r[2] = s[2];
    r[3] = s[3];
    r[4] = s[4];
    s[0] = an[n + 2][m][l][0];
    s[1] = an[n + 2][m][l][1];
    s[2] = an[n + 2][m][l][2];
    s[3] = an[n + 2][m][l][3];
    s[4] = an[n + 2][m][l][4];
    x = v;
    v = w;
    w = ao[n + 1][m][l];
    aa = y;
    y = z;
    z = ap[n + 1][m][l];
    ad = ab;
    ab = ac;
    ac = aq[n + 1][m][l];
    ag = ae;
    ae = af;
    af = ar[n + 1][m][l];
    aj = ah;
    ah = ai;
    ai = as[n + 1][m][l];
    am = ak;
    ak = al;
    al = at[n + 1][m][l];
    p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
    p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
    p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
    p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
    p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
           (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
    for (o = 0; o < 5; o++) {
      au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o] + s[o]);
    }
  }

  n = k - 3;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  s[0] = an[n + 2][m][l][0];
  s[1] = an[n + 2][m][l][1];
  s[2] = an[n + 2][m][l][2];
  s[3] = an[n + 2][m][l][3];
  s[4] = an[n + 2][m][l][4];
  x = v;
  v = w;
  w = ao[n + 1][m][l];
  aa = y;
  y = z;
  z = ap[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = aq[n + 1][m][l];
  ag = ae;
  ae = af;
  af = ar[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = as[n + 1][m][l];
  am = ak;
  ak = al;
  al = at[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 6.0 * q[o] - 4.0 * r[o]);
  }

  n = k - 2;
  u[0] = t[0];
  u[1] = t[1];
  u[2] = t[2];
  u[3] = t[3];
  u[4] = t[4];
  t[0] = q[0];
  t[1] = q[1];
  t[2] = q[2];
  t[3] = q[3];
  t[4] = q[4];
  q[0] = r[0];
  q[1] = r[1];
  q[2] = r[2];
  q[3] = r[3];
  q[4] = r[4];
  r[0] = s[0];
  r[1] = s[1];
  r[2] = s[2];
  r[3] = s[3];
  r[4] = s[4];
  x = v;
  v = w;
  w = ao[n + 1][m][l];
  aa = y;
  y = z;
  z = ap[n + 1][m][l];
  ad = ab;
  ab = ac;
  ac = aq[n + 1][m][l];
  ag = ae;
  ae = af;
  af = ar[n + 1][m][l];
  aj = ah;
  ah = ai;
  ai = as[n + 1][m][l];
  am = ak;
  ak = al;
  al = at[n + 1][m][l];
  p[0] = au[n][m][l][0] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[0] - 2.0 * q[0] + t[0]) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] - t[3]);
  p[1] = au[n][m][l][1] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[1] - 2.0 * q[1] + t[1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (w - 2.0 * v + x) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[1] * ac - t[1] * ad);
  p[2] = au[n][m][l][2] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[2] - 2.0 * q[2] + t[2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z - 2.0 * y + aa) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[2] * ac - t[2] * ad);
  p[3] = au[n][m][l][3] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[3] - 2.0 * q[3] + t[3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (ac - 2.0 * ab + ad) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (r[3] * ac - t[3] * ad + (r[4] - al - t[4] + am) * 0.4);
  p[4] = au[n][m][l][4] + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (r[4] - 2.0 * q[4] + t[4]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (af - 2.0 * ae + ag) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (ac * ac - 2.0 * ab * ab + ad * ad) +
         (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (r[4] * ai - 2.0 * q[4] * ah + t[4] * aj) - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((1.4 * r[4] - 0.4 * al) * ac - (1.4 * t[4] - 0.4 * am) * ad);
  for (o = 0; o < 5; o++) {
    au[n][m][l][o] = p[o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (u[o] - 4.0 * t[o] + 5.0 * q[o]);
  }
}","[  1 111  51 ..., 127   0 127]"
443,npb-3.3-SP-compute_rhs6,A,16,4,1,0,2,0,113095432,62,GPU,0.659712,0.242168,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  e = get_global_id(0) + 1;
  if (g > d || f > c || e > b)
    return;

  __global double(*i)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[g][f][e][h] = i[g][f][e][h] * 0.015;
  }
}","[129 129 129 ..., 127   0 127]"
444,npb-3.3-SP-compute_rhs6,B,16,4,1,0,2,0,454882552,32,GPU,4.488884,0.785554,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  e = get_global_id(0) + 1;
  if (g > d || f > c || e > b)
    return;

  __global double(*i)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[g][f][e][h] = i[g][f][e][h] * 0.015;
  }
}","[129 129 129 ..., 127   0 127]"
445,npb-3.3-SP-compute_rhs6,C,16,4,1,0,2,0,1815065192,64,GPU,17.1744,3.018157,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  e = get_global_id(0) + 1;
  if (g > d || f > c || e > b)
    return;

  __global double(*i)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[g][f][e][h] = i[g][f][e][h] * 0.015;
  }
}","[129 129 129 ..., 127   0 127]"
446,npb-3.3-SP-compute_rhs6,S,16,4,1,0,2,0,804152,60,GPU,0.083071,0.075241,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  e = get_global_id(0) + 1;
  if (g > d || f > c || e > b)
    return;

  __global double(*i)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[g][f][e][h] = i[g][f][e][h] * 0.015;
  }
}","[129 129 129 ..., 127   0 127]"
447,npb-3.3-SP-compute_rhs6,W,16,4,1,0,2,0,20402112,34,GPU,0.162801,0.10901400000000001,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g, h;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  e = get_global_id(0) + 1;
  if (g > d || f > c || e > b)
    return;

  __global double(*i)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[g][f][e][h] = i[g][f][e][h] * 0.015;
  }
}","[129 129 129 ..., 127   0 127]"
448,npb-3.3-SP-error_norm,A,52,10,11,8,2,0,113094832,6,CPU,1.857705,4.529619,"__kernel void A(__global double* a, __constant double* b, __global double* c, __local double* d, int e, int f, int g) {
  int h, i, j, k, l;
  double m, n, o, p[5], q;
  __local double* r;

  j = get_global_id(0) + 1;
  l = get_local_id(0);
  r = &d[l * 5];

  for (k = 0; k < 5; k++) {
    r[k] = 0.0;
  }

  if (j < g) {
    __global double(*s)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

    o = (double)j * (1.0 / (double)(12 - 1));
    for (i = 0; i < f; i++) {
      n = (double)i * (1.0 / (double)(12 - 1));
      for (h = 0; h < e; h++) {
        m = (double)h * (1.0 / (double)(12 - 1));
        A(m, n, o, p, b);

        for (k = 0; k < 5; k++) {
          q = s[j][i][h][k] - p[k];
          r[k] = r[k] + q * q;
        }
      }
    }
  }

  barrier(1);

  if (l == 0) {
    for (h = 1; h < get_local_size(0); h++) {
      __local double* t = &d[h * 5];
      for (k = 0; k < 5; k++) {
        r[k] += t[k];
      }
    }

    __global double* u = &c[get_group_id(0) * 5];
    for (k = 0; k < 5; k++) {
      u[k] = r[k];
    }
  }
}","[129 129 129 ..., 127   0 127]"
449,npb-3.3-SP-error_norm,B,52,10,11,8,2,0,454882072,10,CPU,8.307993,10.629466,"__kernel void A(__global double* a, __constant double* b, __global double* c, __local double* d, int e, int f, int g) {
  int h, i, j, k, l;
  double m, n, o, p[5], q;
  __local double* r;

  j = get_global_id(0) + 1;
  l = get_local_id(0);
  r = &d[l * 5];

  for (k = 0; k < 5; k++) {
    r[k] = 0.0;
  }

  if (j < g) {
    __global double(*s)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

    o = (double)j * (1.0 / (double)(12 - 1));
    for (i = 0; i < f; i++) {
      n = (double)i * (1.0 / (double)(12 - 1));
      for (h = 0; h < e; h++) {
        m = (double)h * (1.0 / (double)(12 - 1));
        A(m, n, o, p, b);

        for (k = 0; k < 5; k++) {
          q = s[j][i][h][k] - p[k];
          r[k] = r[k] + q * q;
        }
      }
    }
  }

  barrier(1);

  if (l == 0) {
    for (h = 1; h < get_local_size(0); h++) {
      __local double* t = &d[h * 5];
      for (k = 0; k < 5; k++) {
        r[k] += t[k];
      }
    }

    __global double* u = &c[get_group_id(0) * 5];
    for (k = 0; k < 5; k++) {
      u[k] = r[k];
    }
  }
}","[129 129 129 ..., 127   0 127]"
450,npb-3.3-SP-error_norm,C,52,10,11,8,2,0,1815065192,16,GPU,29.020661999999998,28.37936,"__kernel void A(__global double* a, __constant double* b, __global double* c, __local double* d, int e, int f, int g) {
  int h, i, j, k, l;
  double m, n, o, p[5], q;
  __local double* r;

  j = get_global_id(0) + 1;
  l = get_local_id(0);
  r = &d[l * 5];

  for (k = 0; k < 5; k++) {
    r[k] = 0.0;
  }

  if (j < g) {
    __global double(*s)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

    o = (double)j * (1.0 / (double)(12 - 1));
    for (i = 0; i < f; i++) {
      n = (double)i * (1.0 / (double)(12 - 1));
      for (h = 0; h < e; h++) {
        m = (double)h * (1.0 / (double)(12 - 1));
        A(m, n, o, p, b);

        for (k = 0; k < 5; k++) {
          q = s[j][i][h][k] - p[k];
          r[k] = r[k] + q * q;
        }
      }
    }
  }

  barrier(1);

  if (l == 0) {
    for (h = 1; h < get_local_size(0); h++) {
      __local double* t = &d[h * 5];
      for (k = 0; k < 5; k++) {
        r[k] += t[k];
      }
    }

    __global double* u = &c[get_group_id(0) * 5];
    for (k = 0; k < 5; k++) {
      u[k] = r[k];
    }
  }
}","[129 129 129 ..., 127   0 127]"
451,npb-3.3-SP-error_norm,S,52,10,11,8,2,0,804152,1,CPU,0.099104,0.18973399999999999,"__kernel void A(__global double* a, __constant double* b, __global double* c, __local double* d, int e, int f, int g) {
  int h, i, j, k, l;
  double m, n, o, p[5], q;
  __local double* r;

  j = get_global_id(0) + 1;
  l = get_local_id(0);
  r = &d[l * 5];

  for (k = 0; k < 5; k++) {
    r[k] = 0.0;
  }

  if (j < g) {
    __global double(*s)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

    o = (double)j * (1.0 / (double)(12 - 1));
    for (i = 0; i < f; i++) {
      n = (double)i * (1.0 / (double)(12 - 1));
      for (h = 0; h < e; h++) {
        m = (double)h * (1.0 / (double)(12 - 1));
        A(m, n, o, p, b);

        for (k = 0; k < 5; k++) {
          q = s[j][i][h][k] - p[k];
          r[k] = r[k] + q * q;
        }
      }
    }
  }

  barrier(1);

  if (l == 0) {
    for (h = 1; h < get_local_size(0); h++) {
      __local double* t = &d[h * 5];
      for (k = 0; k < 5; k++) {
        r[k] += t[k];
      }
    }

    __global double* u = &c[get_group_id(0) * 5];
    for (k = 0; k < 5; k++) {
      u[k] = r[k];
    }
  }
}","[129 129 129 ..., 127   0 127]"
452,npb-3.3-SP-error_norm,W,52,10,11,8,2,0,20401432,3,CPU,0.48318599999999995,1.580973,"__kernel void A(__global double* a, __constant double* b, __global double* c, __local double* d, int e, int f, int g) {
  int h, i, j, k, l;
  double m, n, o, p[5], q;
  __local double* r;

  j = get_global_id(0) + 1;
  l = get_local_id(0);
  r = &d[l * 5];

  for (k = 0; k < 5; k++) {
    r[k] = 0.0;
  }

  if (j < g) {
    __global double(*s)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

    o = (double)j * (1.0 / (double)(12 - 1));
    for (i = 0; i < f; i++) {
      n = (double)i * (1.0 / (double)(12 - 1));
      for (h = 0; h < e; h++) {
        m = (double)h * (1.0 / (double)(12 - 1));
        A(m, n, o, p, b);

        for (k = 0; k < 5; k++) {
          q = s[j][i][h][k] - p[k];
          r[k] = r[k] + q * q;
        }
      }
    }
  }

  barrier(1);

  if (l == 0) {
    for (h = 1; h < get_local_size(0); h++) {
      __local double* t = &d[h * 5];
      for (k = 0; k < 5; k++) {
        r[k] += t[k];
      }
    }

    __global double* u = &c[get_group_id(0) * 5];
    for (k = 0; k < 5; k++) {
      u[k] = r[k];
    }
  }
}","[129 129 129 ..., 127   0 127]"
453,npb-3.3-SP-exact_rhs1,A,12,4,1,0,1,0,113095432,64,GPU,6.005416,0.22183000000000005,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(2);
  int f = get_global_id(1);
  int g = get_global_id(0);
  if (e >= d || f >= c || g >= b)
    return;

  int h;
  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[e][f][g][h] = 0.0;
  }
}","[129 129 129 ..., 127   0 127]"
454,npb-3.3-SP-exact_rhs1,B,12,4,1,0,1,0,454882552,32,GPU,23.314557,0.650362,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(2);
  int f = get_global_id(1);
  int g = get_global_id(0);
  if (e >= d || f >= c || g >= b)
    return;

  int h;
  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[e][f][g][h] = 0.0;
  }
}","[129 129 129 ..., 127   0 127]"
455,npb-3.3-SP-exact_rhs1,C,12,4,1,0,1,0,1815065192,64,GPU,98.608798,2.283558,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(2);
  int f = get_global_id(1);
  int g = get_global_id(0);
  if (e >= d || f >= c || g >= b)
    return;

  int h;
  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[e][f][g][h] = 0.0;
  }
}","[129 129 129 ..., 127   0 127]"
456,npb-3.3-SP-exact_rhs1,S,12,4,1,0,1,0,804152,60,GPU,0.310777,0.084749,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(2);
  int f = get_global_id(1);
  int g = get_global_id(0);
  if (e >= d || f >= c || g >= b)
    return;

  int h;
  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[e][f][g][h] = 0.0;
  }
}","[129 129 129 ..., 127   0 127]"
457,npb-3.3-SP-exact_rhs1,W,12,4,1,0,1,0,20402112,36,GPU,0.428305,0.11201900000000001,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(2);
  int f = get_global_id(1);
  int g = get_global_id(0);
  if (e >= d || f >= c || g >= b)
    return;

  int h;
  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[e][f][g][h] = 0.0;
  }
}","[129 129 129 ..., 127   0 127]"
458,npb-3.3-SP-exact_rhs2,A,340,26,5,0,112,0,113095432,62,GPU,11.397604,8.980768,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  r = get_global_id(1) + 1;
  q = get_global_id(0) + 1;
  if (r > (i - 2) || q > (h - 2))
    return;

  int u = (r - 1) * h + (q - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  m = (double)r * (1.0 / (double)(12 - 1));
  l = (double)q * (1.0 / (double)(12 - 1));

  for (p = 0; p < g; p++) {
    k = (double)p * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[p][o] = j[o];
    }

    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[p][o] = n * j[o];
    }

    aa[p] = z[p][1] * z[p][1];
    z[p][0] = aa[p] + z[p][2] * z[p][2] + z[p][3] * z[p][3];
    ab[p] = 0.5 * (z[p][1] * y[p][1] + z[p][2] * y[p][2] + z[p][3] * y[p][3]);
  }

  for (p = 1; p <= g - 2; p++) {
    t = p - 1;
    s = p + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][1] - y[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][0] - 2.0 * y[p][0] + y[t][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[s][1] * z[s][1] + 0.4 * (y[s][4] - ab[s])) - (y[t][1] * z[t][1] + 0.4 * (y[t][4] - ab[t]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][1] - 2.0 * z[p][1] + z[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][1] - 2.0 * y[p][1] + y[t][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][2] * z[s][1] - y[t][2] * z[t][1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][2] - 2.0 * z[p][2] + z[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][2] - 2.0 * y[p][2] + y[t][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][3] * z[s][1] - y[t][3] * z[t][1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][3] - 2.0 * z[p][3] + z[t][3]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][3] - 2.0 * y[p][3] + y[t][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[s][1] * (1.4 * y[s][4] - 0.4 * ab[s]) - z[t][1] * (1.4 * y[t][4] - 0.4 * ab[t])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][0] - 2.0 * z[p][0] + z[t][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[s] - 2.0 * aa[p] + aa[t]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][4] - 2.0 * z[p][4] + z[t][4]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][4] - 2.0 * y[p][4] + y[t][4]);
  }

  for (o = 0; o < 5; o++) {
    p = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
    p = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (p = 3; p <= g - 4; p++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    p = g - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o]);
    p = g - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 5.0 * y[p][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
459,npb-3.3-SP-exact_rhs2,B,340,26,5,0,112,0,454882552,32,GPU,47.448023,41.020762,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  r = get_global_id(1) + 1;
  q = get_global_id(0) + 1;
  if (r > (i - 2) || q > (h - 2))
    return;

  int u = (r - 1) * h + (q - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  m = (double)r * (1.0 / (double)(12 - 1));
  l = (double)q * (1.0 / (double)(12 - 1));

  for (p = 0; p < g; p++) {
    k = (double)p * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[p][o] = j[o];
    }

    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[p][o] = n * j[o];
    }

    aa[p] = z[p][1] * z[p][1];
    z[p][0] = aa[p] + z[p][2] * z[p][2] + z[p][3] * z[p][3];
    ab[p] = 0.5 * (z[p][1] * y[p][1] + z[p][2] * y[p][2] + z[p][3] * y[p][3]);
  }

  for (p = 1; p <= g - 2; p++) {
    t = p - 1;
    s = p + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][1] - y[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][0] - 2.0 * y[p][0] + y[t][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[s][1] * z[s][1] + 0.4 * (y[s][4] - ab[s])) - (y[t][1] * z[t][1] + 0.4 * (y[t][4] - ab[t]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][1] - 2.0 * z[p][1] + z[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][1] - 2.0 * y[p][1] + y[t][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][2] * z[s][1] - y[t][2] * z[t][1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][2] - 2.0 * z[p][2] + z[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][2] - 2.0 * y[p][2] + y[t][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][3] * z[s][1] - y[t][3] * z[t][1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][3] - 2.0 * z[p][3] + z[t][3]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][3] - 2.0 * y[p][3] + y[t][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[s][1] * (1.4 * y[s][4] - 0.4 * ab[s]) - z[t][1] * (1.4 * y[t][4] - 0.4 * ab[t])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][0] - 2.0 * z[p][0] + z[t][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[s] - 2.0 * aa[p] + aa[t]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][4] - 2.0 * z[p][4] + z[t][4]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][4] - 2.0 * y[p][4] + y[t][4]);
  }

  for (o = 0; o < 5; o++) {
    p = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
    p = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (p = 3; p <= g - 4; p++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    p = g - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o]);
    p = g - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 5.0 * y[p][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
460,npb-3.3-SP-exact_rhs2,C,340,26,5,0,112,0,1815064752,64,CPU,144.091447,201.924781,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  r = get_global_id(1) + 1;
  q = get_global_id(0) + 1;
  if (r > (i - 2) || q > (h - 2))
    return;

  int u = (r - 1) * h + (q - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  m = (double)r * (1.0 / (double)(12 - 1));
  l = (double)q * (1.0 / (double)(12 - 1));

  for (p = 0; p < g; p++) {
    k = (double)p * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[p][o] = j[o];
    }

    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[p][o] = n * j[o];
    }

    aa[p] = z[p][1] * z[p][1];
    z[p][0] = aa[p] + z[p][2] * z[p][2] + z[p][3] * z[p][3];
    ab[p] = 0.5 * (z[p][1] * y[p][1] + z[p][2] * y[p][2] + z[p][3] * y[p][3]);
  }

  for (p = 1; p <= g - 2; p++) {
    t = p - 1;
    s = p + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][1] - y[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][0] - 2.0 * y[p][0] + y[t][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[s][1] * z[s][1] + 0.4 * (y[s][4] - ab[s])) - (y[t][1] * z[t][1] + 0.4 * (y[t][4] - ab[t]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][1] - 2.0 * z[p][1] + z[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][1] - 2.0 * y[p][1] + y[t][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][2] * z[s][1] - y[t][2] * z[t][1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][2] - 2.0 * z[p][2] + z[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][2] - 2.0 * y[p][2] + y[t][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][3] * z[s][1] - y[t][3] * z[t][1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][3] - 2.0 * z[p][3] + z[t][3]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][3] - 2.0 * y[p][3] + y[t][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[s][1] * (1.4 * y[s][4] - 0.4 * ab[s]) - z[t][1] * (1.4 * y[t][4] - 0.4 * ab[t])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][0] - 2.0 * z[p][0] + z[t][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[s] - 2.0 * aa[p] + aa[t]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][4] - 2.0 * z[p][4] + z[t][4]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][4] - 2.0 * y[p][4] + y[t][4]);
  }

  for (o = 0; o < 5; o++) {
    p = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
    p = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (p = 3; p <= g - 4; p++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    p = g - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o]);
    p = g - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 5.0 * y[p][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
461,npb-3.3-SP-exact_rhs2,S,340,26,5,0,112,0,804152,60,CPU,0.180384,0.196205,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  r = get_global_id(1) + 1;
  q = get_global_id(0) + 1;
  if (r > (i - 2) || q > (h - 2))
    return;

  int u = (r - 1) * h + (q - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  m = (double)r * (1.0 / (double)(12 - 1));
  l = (double)q * (1.0 / (double)(12 - 1));

  for (p = 0; p < g; p++) {
    k = (double)p * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[p][o] = j[o];
    }

    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[p][o] = n * j[o];
    }

    aa[p] = z[p][1] * z[p][1];
    z[p][0] = aa[p] + z[p][2] * z[p][2] + z[p][3] * z[p][3];
    ab[p] = 0.5 * (z[p][1] * y[p][1] + z[p][2] * y[p][2] + z[p][3] * y[p][3]);
  }

  for (p = 1; p <= g - 2; p++) {
    t = p - 1;
    s = p + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][1] - y[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][0] - 2.0 * y[p][0] + y[t][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[s][1] * z[s][1] + 0.4 * (y[s][4] - ab[s])) - (y[t][1] * z[t][1] + 0.4 * (y[t][4] - ab[t]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][1] - 2.0 * z[p][1] + z[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][1] - 2.0 * y[p][1] + y[t][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][2] * z[s][1] - y[t][2] * z[t][1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][2] - 2.0 * z[p][2] + z[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][2] - 2.0 * y[p][2] + y[t][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][3] * z[s][1] - y[t][3] * z[t][1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][3] - 2.0 * z[p][3] + z[t][3]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][3] - 2.0 * y[p][3] + y[t][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[s][1] * (1.4 * y[s][4] - 0.4 * ab[s]) - z[t][1] * (1.4 * y[t][4] - 0.4 * ab[t])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][0] - 2.0 * z[p][0] + z[t][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[s] - 2.0 * aa[p] + aa[t]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][4] - 2.0 * z[p][4] + z[t][4]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][4] - 2.0 * y[p][4] + y[t][4]);
  }

  for (o = 0; o < 5; o++) {
    p = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
    p = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (p = 3; p <= g - 4; p++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    p = g - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o]);
    p = g - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 5.0 * y[p][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
462,npb-3.3-SP-exact_rhs2,W,340,26,5,0,112,0,20402112,34,GPU,0.921869,0.691347,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  r = get_global_id(1) + 1;
  q = get_global_id(0) + 1;
  if (r > (i - 2) || q > (h - 2))
    return;

  int u = (r - 1) * h + (q - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  m = (double)r * (1.0 / (double)(12 - 1));
  l = (double)q * (1.0 / (double)(12 - 1));

  for (p = 0; p < g; p++) {
    k = (double)p * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[p][o] = j[o];
    }

    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[p][o] = n * j[o];
    }

    aa[p] = z[p][1] * z[p][1];
    z[p][0] = aa[p] + z[p][2] * z[p][2] + z[p][3] * z[p][3];
    ab[p] = 0.5 * (z[p][1] * y[p][1] + z[p][2] * y[p][2] + z[p][3] * y[p][3]);
  }

  for (p = 1; p <= g - 2; p++) {
    t = p - 1;
    s = p + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][1] - y[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][0] - 2.0 * y[p][0] + y[t][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[s][1] * z[s][1] + 0.4 * (y[s][4] - ab[s])) - (y[t][1] * z[t][1] + 0.4 * (y[t][4] - ab[t]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][1] - 2.0 * z[p][1] + z[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][1] - 2.0 * y[p][1] + y[t][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][2] * z[s][1] - y[t][2] * z[t][1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][2] - 2.0 * z[p][2] + z[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][2] - 2.0 * y[p][2] + y[t][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][3] * z[s][1] - y[t][3] * z[t][1]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][3] - 2.0 * z[p][3] + z[t][3]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][3] - 2.0 * y[p][3] + y[t][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[s][1] * (1.4 * y[s][4] - 0.4 * ab[s]) - z[t][1] * (1.4 * y[t][4] - 0.4 * ab[t])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][0] - 2.0 * z[p][0] + z[t][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[s] - 2.0 * aa[p] + aa[t]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][4] - 2.0 * z[p][4] + z[t][4]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][4] - 2.0 * y[p][4] + y[t][4]);
  }

  for (o = 0; o < 5; o++) {
    p = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
    p = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (p = 3; p <= g - 4; p++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o] + y[p + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    p = g - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 6.0 * y[p][o] - 4.0 * y[p + 1][o]);
    p = g - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[p - 2][o] - 4.0 * y[p - 1][o] + 5.0 * y[p][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
463,npb-3.3-SP-exact_rhs3,A,340,26,5,0,112,0,113094832,62,CPU,5.104108,7.35584,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  r = get_global_id(1) + 1;
  p = get_global_id(0) + 1;
  if (r > (i - 2) || p > (g - 2))
    return;

  int u = (r - 1) * g + (p - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  m = (double)r * (1.0 / (double)(12 - 1));
  k = (double)p * (1.0 / (double)(12 - 1));

  for (q = 0; q < h; q++) {
    l = (double)q * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[q][o] = j[o];
    }
    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[q][o] = n * j[o];
    }

    aa[q] = z[q][2] * z[q][2];
    z[q][0] = aa[q] + z[q][1] * z[q][1] + z[q][3] * z[q][3];
    ab[q] = 0.5 * (z[q][1] * y[q][1] + z[q][2] * y[q][2] + z[q][3] * y[q][3]);
  }

  for (q = 1; q <= h - 2; q++) {
    t = q - 1;
    s = q + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][2] - y[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][0] - 2.0 * y[q][0] + y[t][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][1] * z[s][2] - y[t][1] * z[t][2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][1] - 2.0 * z[q][1] + z[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][1] - 2.0 * y[q][1] + y[t][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[s][2] * z[s][2] + 0.4 * (y[s][4] - ab[s])) - (y[t][2] * z[t][2] + 0.4 * (y[t][4] - ab[t]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][2] - 2.0 * z[q][2] + z[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][2] - 2.0 * y[q][2] + y[t][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][3] * z[s][2] - y[t][3] * z[t][2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][3] - 2.0 * z[q][3] + z[t][3]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][3] - 2.0 * y[q][3] + y[t][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[s][2] * (1.4 * y[s][4] - 0.4 * ab[s]) - z[t][2] * (1.4 * y[t][4] - 0.4 * ab[t])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][0] - 2.0 * z[q][0] + z[t][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[s] - 2.0 * aa[q] + aa[t]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][4] - 2.0 * z[q][4] + z[t][4]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][4] - 2.0 * y[q][4] + y[t][4]);
  }

  for (o = 0; o < 5; o++) {
    q = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
    q = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (q = 3; q <= h - 4; q++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    q = h - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o]);
    q = h - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 5.0 * y[q][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
464,npb-3.3-SP-exact_rhs3,B,340,26,5,0,112,0,454882072,32,CPU,18.055820999999998,36.599789,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  r = get_global_id(1) + 1;
  p = get_global_id(0) + 1;
  if (r > (i - 2) || p > (g - 2))
    return;

  int u = (r - 1) * g + (p - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  m = (double)r * (1.0 / (double)(12 - 1));
  k = (double)p * (1.0 / (double)(12 - 1));

  for (q = 0; q < h; q++) {
    l = (double)q * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[q][o] = j[o];
    }
    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[q][o] = n * j[o];
    }

    aa[q] = z[q][2] * z[q][2];
    z[q][0] = aa[q] + z[q][1] * z[q][1] + z[q][3] * z[q][3];
    ab[q] = 0.5 * (z[q][1] * y[q][1] + z[q][2] * y[q][2] + z[q][3] * y[q][3]);
  }

  for (q = 1; q <= h - 2; q++) {
    t = q - 1;
    s = q + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][2] - y[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][0] - 2.0 * y[q][0] + y[t][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][1] * z[s][2] - y[t][1] * z[t][2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][1] - 2.0 * z[q][1] + z[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][1] - 2.0 * y[q][1] + y[t][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[s][2] * z[s][2] + 0.4 * (y[s][4] - ab[s])) - (y[t][2] * z[t][2] + 0.4 * (y[t][4] - ab[t]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][2] - 2.0 * z[q][2] + z[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][2] - 2.0 * y[q][2] + y[t][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][3] * z[s][2] - y[t][3] * z[t][2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][3] - 2.0 * z[q][3] + z[t][3]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][3] - 2.0 * y[q][3] + y[t][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[s][2] * (1.4 * y[s][4] - 0.4 * ab[s]) - z[t][2] * (1.4 * y[t][4] - 0.4 * ab[t])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][0] - 2.0 * z[q][0] + z[t][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[s] - 2.0 * aa[q] + aa[t]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][4] - 2.0 * z[q][4] + z[t][4]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][4] - 2.0 * y[q][4] + y[t][4]);
  }

  for (o = 0; o < 5; o++) {
    q = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
    q = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (q = 3; q <= h - 4; q++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    q = h - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o]);
    q = h - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 5.0 * y[q][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
465,npb-3.3-SP-exact_rhs3,C,340,26,5,0,112,0,1815064752,64,CPU,85.07130500000002,184.40336000000002,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  r = get_global_id(1) + 1;
  p = get_global_id(0) + 1;
  if (r > (i - 2) || p > (g - 2))
    return;

  int u = (r - 1) * g + (p - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  m = (double)r * (1.0 / (double)(12 - 1));
  k = (double)p * (1.0 / (double)(12 - 1));

  for (q = 0; q < h; q++) {
    l = (double)q * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[q][o] = j[o];
    }
    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[q][o] = n * j[o];
    }

    aa[q] = z[q][2] * z[q][2];
    z[q][0] = aa[q] + z[q][1] * z[q][1] + z[q][3] * z[q][3];
    ab[q] = 0.5 * (z[q][1] * y[q][1] + z[q][2] * y[q][2] + z[q][3] * y[q][3]);
  }

  for (q = 1; q <= h - 2; q++) {
    t = q - 1;
    s = q + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][2] - y[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][0] - 2.0 * y[q][0] + y[t][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][1] * z[s][2] - y[t][1] * z[t][2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][1] - 2.0 * z[q][1] + z[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][1] - 2.0 * y[q][1] + y[t][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[s][2] * z[s][2] + 0.4 * (y[s][4] - ab[s])) - (y[t][2] * z[t][2] + 0.4 * (y[t][4] - ab[t]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][2] - 2.0 * z[q][2] + z[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][2] - 2.0 * y[q][2] + y[t][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][3] * z[s][2] - y[t][3] * z[t][2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][3] - 2.0 * z[q][3] + z[t][3]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][3] - 2.0 * y[q][3] + y[t][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[s][2] * (1.4 * y[s][4] - 0.4 * ab[s]) - z[t][2] * (1.4 * y[t][4] - 0.4 * ab[t])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][0] - 2.0 * z[q][0] + z[t][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[s] - 2.0 * aa[q] + aa[t]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][4] - 2.0 * z[q][4] + z[t][4]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][4] - 2.0 * y[q][4] + y[t][4]);
  }

  for (o = 0; o < 5; o++) {
    q = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
    q = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (q = 3; q <= h - 4; q++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    q = h - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o]);
    q = h - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 5.0 * y[q][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
466,npb-3.3-SP-exact_rhs3,S,340,26,5,0,112,0,804152,60,CPU,0.165048,0.179571,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  r = get_global_id(1) + 1;
  p = get_global_id(0) + 1;
  if (r > (i - 2) || p > (g - 2))
    return;

  int u = (r - 1) * g + (p - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  m = (double)r * (1.0 / (double)(12 - 1));
  k = (double)p * (1.0 / (double)(12 - 1));

  for (q = 0; q < h; q++) {
    l = (double)q * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[q][o] = j[o];
    }
    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[q][o] = n * j[o];
    }

    aa[q] = z[q][2] * z[q][2];
    z[q][0] = aa[q] + z[q][1] * z[q][1] + z[q][3] * z[q][3];
    ab[q] = 0.5 * (z[q][1] * y[q][1] + z[q][2] * y[q][2] + z[q][3] * y[q][3]);
  }

  for (q = 1; q <= h - 2; q++) {
    t = q - 1;
    s = q + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][2] - y[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][0] - 2.0 * y[q][0] + y[t][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][1] * z[s][2] - y[t][1] * z[t][2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][1] - 2.0 * z[q][1] + z[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][1] - 2.0 * y[q][1] + y[t][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[s][2] * z[s][2] + 0.4 * (y[s][4] - ab[s])) - (y[t][2] * z[t][2] + 0.4 * (y[t][4] - ab[t]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][2] - 2.0 * z[q][2] + z[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][2] - 2.0 * y[q][2] + y[t][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][3] * z[s][2] - y[t][3] * z[t][2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][3] - 2.0 * z[q][3] + z[t][3]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][3] - 2.0 * y[q][3] + y[t][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[s][2] * (1.4 * y[s][4] - 0.4 * ab[s]) - z[t][2] * (1.4 * y[t][4] - 0.4 * ab[t])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][0] - 2.0 * z[q][0] + z[t][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[s] - 2.0 * aa[q] + aa[t]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][4] - 2.0 * z[q][4] + z[t][4]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][4] - 2.0 * y[q][4] + y[t][4]);
  }

  for (o = 0; o < 5; o++) {
    q = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
    q = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (q = 3; q <= h - 4; q++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    q = h - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o]);
    q = h - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 5.0 * y[q][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
467,npb-3.3-SP-exact_rhs3,W,340,26,5,0,112,0,20402112,34,GPU,0.7462340000000001,0.59543,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  r = get_global_id(1) + 1;
  p = get_global_id(0) + 1;
  if (r > (i - 2) || p > (g - 2))
    return;

  int u = (r - 1) * g + (p - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  m = (double)r * (1.0 / (double)(12 - 1));
  k = (double)p * (1.0 / (double)(12 - 1));

  for (q = 0; q < h; q++) {
    l = (double)q * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[q][o] = j[o];
    }
    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[q][o] = n * j[o];
    }

    aa[q] = z[q][2] * z[q][2];
    z[q][0] = aa[q] + z[q][1] * z[q][1] + z[q][3] * z[q][3];
    ab[q] = 0.5 * (z[q][1] * y[q][1] + z[q][2] * y[q][2] + z[q][3] * y[q][3]);
  }

  for (q = 1; q <= h - 2; q++) {
    t = q - 1;
    s = q + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][2] - y[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][0] - 2.0 * y[q][0] + y[t][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][1] * z[s][2] - y[t][1] * z[t][2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][1] - 2.0 * z[q][1] + z[t][1]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][1] - 2.0 * y[q][1] + y[t][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[s][2] * z[s][2] + 0.4 * (y[s][4] - ab[s])) - (y[t][2] * z[t][2] + 0.4 * (y[t][4] - ab[t]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][2] - 2.0 * z[q][2] + z[t][2]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][2] - 2.0 * y[q][2] + y[t][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[s][3] * z[s][2] - y[t][3] * z[t][2]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][3] - 2.0 * z[q][3] + z[t][3]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][3] - 2.0 * y[q][3] + y[t][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[s][2] * (1.4 * y[s][4] - 0.4 * ab[s]) - z[t][2] * (1.4 * y[t][4] - 0.4 * ab[t])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][0] - 2.0 * z[q][0] + z[t][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[s] - 2.0 * aa[q] + aa[t]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[s][4] - 2.0 * z[q][4] + z[t][4]) + (0.75 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[s][4] - 2.0 * y[q][4] + y[t][4]);
  }

  for (o = 0; o < 5; o++) {
    q = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
    q = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (q = 3; q <= h - 4; q++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o] + y[q + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    q = h - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 6.0 * y[q][o] - 4.0 * y[q + 1][o]);
    q = h - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[q - 2][o] - 4.0 * y[q - 1][o] + 5.0 * y[q][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
468,npb-3.3-SP-exact_rhs4,A,340,26,5,0,112,0,113094832,62,CPU,5.097334,7.543866,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  q = get_global_id(1) + 1;
  p = get_global_id(0) + 1;
  if (q > (h - 2) || p > (g - 2))
    return;

  int u = (q - 1) * g + (p - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  l = (double)q * (1.0 / (double)(12 - 1));
  k = (double)p * (1.0 / (double)(12 - 1));

  for (r = 0; r < i; r++) {
    m = (double)r * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[r][o] = j[o];
    }

    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[r][o] = n * j[o];
    }

    aa[r] = z[r][3] * z[r][3];
    z[r][0] = aa[r] + z[r][1] * z[r][1] + z[r][2] * z[r][2];
    ab[r] = 0.5 * (z[r][1] * y[r][1] + z[r][2] * y[r][2] + z[r][3] * y[r][3]);
  }

  for (r = 1; r <= i - 2; r++) {
    s = r - 1;
    t = r + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][3] - y[s][3]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][0] - 2.0 * y[r][0] + y[s][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][1] * z[t][3] - y[s][1] * z[s][3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][1] - 2.0 * z[r][1] + z[s][1]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][1] - 2.0 * y[r][1] + y[s][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][2] * z[t][3] - y[s][2] * z[s][3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][2] - 2.0 * z[r][2] + z[s][2]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][2] - 2.0 * y[r][2] + y[s][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[t][3] * z[t][3] + 0.4 * (y[t][4] - ab[t])) - (y[s][3] * z[s][3] + 0.4 * (y[s][4] - ab[s]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][3] - 2.0 * z[r][3] + z[s][3]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][3] - 2.0 * y[r][3] + y[s][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[t][3] * (1.4 * y[t][4] - 0.4 * ab[t]) - z[s][3] * (1.4 * y[s][4] - 0.4 * ab[s])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][0] - 2.0 * z[r][0] + z[s][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[t] - 2.0 * aa[r] + aa[s]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][4] - 2.0 * z[r][4] + z[s][4]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][4] - 2.0 * y[r][4] + y[s][4]);
  }

  for (o = 0; o < 5; o++) {
    r = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
    r = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (r = 3; r <= i - 4; r++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    r = i - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o]);
    r = i - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 5.0 * y[r][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
469,npb-3.3-SP-exact_rhs4,B,340,26,5,0,112,0,454882072,32,CPU,22.067384,36.508346,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  q = get_global_id(1) + 1;
  p = get_global_id(0) + 1;
  if (q > (h - 2) || p > (g - 2))
    return;

  int u = (q - 1) * g + (p - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  l = (double)q * (1.0 / (double)(12 - 1));
  k = (double)p * (1.0 / (double)(12 - 1));

  for (r = 0; r < i; r++) {
    m = (double)r * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[r][o] = j[o];
    }

    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[r][o] = n * j[o];
    }

    aa[r] = z[r][3] * z[r][3];
    z[r][0] = aa[r] + z[r][1] * z[r][1] + z[r][2] * z[r][2];
    ab[r] = 0.5 * (z[r][1] * y[r][1] + z[r][2] * y[r][2] + z[r][3] * y[r][3]);
  }

  for (r = 1; r <= i - 2; r++) {
    s = r - 1;
    t = r + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][3] - y[s][3]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][0] - 2.0 * y[r][0] + y[s][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][1] * z[t][3] - y[s][1] * z[s][3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][1] - 2.0 * z[r][1] + z[s][1]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][1] - 2.0 * y[r][1] + y[s][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][2] * z[t][3] - y[s][2] * z[s][3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][2] - 2.0 * z[r][2] + z[s][2]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][2] - 2.0 * y[r][2] + y[s][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[t][3] * z[t][3] + 0.4 * (y[t][4] - ab[t])) - (y[s][3] * z[s][3] + 0.4 * (y[s][4] - ab[s]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][3] - 2.0 * z[r][3] + z[s][3]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][3] - 2.0 * y[r][3] + y[s][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[t][3] * (1.4 * y[t][4] - 0.4 * ab[t]) - z[s][3] * (1.4 * y[s][4] - 0.4 * ab[s])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][0] - 2.0 * z[r][0] + z[s][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[t] - 2.0 * aa[r] + aa[s]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][4] - 2.0 * z[r][4] + z[s][4]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][4] - 2.0 * y[r][4] + y[s][4]);
  }

  for (o = 0; o < 5; o++) {
    r = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
    r = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (r = 3; r <= i - 4; r++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    r = i - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o]);
    r = i - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 5.0 * y[r][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
470,npb-3.3-SP-exact_rhs4,C,340,26,5,0,112,0,1815064752,64,CPU,99.498498,184.558355,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  q = get_global_id(1) + 1;
  p = get_global_id(0) + 1;
  if (q > (h - 2) || p > (g - 2))
    return;

  int u = (q - 1) * g + (p - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  l = (double)q * (1.0 / (double)(12 - 1));
  k = (double)p * (1.0 / (double)(12 - 1));

  for (r = 0; r < i; r++) {
    m = (double)r * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[r][o] = j[o];
    }

    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[r][o] = n * j[o];
    }

    aa[r] = z[r][3] * z[r][3];
    z[r][0] = aa[r] + z[r][1] * z[r][1] + z[r][2] * z[r][2];
    ab[r] = 0.5 * (z[r][1] * y[r][1] + z[r][2] * y[r][2] + z[r][3] * y[r][3]);
  }

  for (r = 1; r <= i - 2; r++) {
    s = r - 1;
    t = r + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][3] - y[s][3]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][0] - 2.0 * y[r][0] + y[s][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][1] * z[t][3] - y[s][1] * z[s][3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][1] - 2.0 * z[r][1] + z[s][1]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][1] - 2.0 * y[r][1] + y[s][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][2] * z[t][3] - y[s][2] * z[s][3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][2] - 2.0 * z[r][2] + z[s][2]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][2] - 2.0 * y[r][2] + y[s][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[t][3] * z[t][3] + 0.4 * (y[t][4] - ab[t])) - (y[s][3] * z[s][3] + 0.4 * (y[s][4] - ab[s]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][3] - 2.0 * z[r][3] + z[s][3]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][3] - 2.0 * y[r][3] + y[s][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[t][3] * (1.4 * y[t][4] - 0.4 * ab[t]) - z[s][3] * (1.4 * y[s][4] - 0.4 * ab[s])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][0] - 2.0 * z[r][0] + z[s][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[t] - 2.0 * aa[r] + aa[s]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][4] - 2.0 * z[r][4] + z[s][4]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][4] - 2.0 * y[r][4] + y[s][4]);
  }

  for (o = 0; o < 5; o++) {
    r = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
    r = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (r = 3; r <= i - 4; r++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    r = i - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o]);
    r = i - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 5.0 * y[r][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
471,npb-3.3-SP-exact_rhs4,S,340,26,5,0,112,0,804152,60,CPU,0.17208800000000002,0.176877,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  q = get_global_id(1) + 1;
  p = get_global_id(0) + 1;
  if (q > (h - 2) || p > (g - 2))
    return;

  int u = (q - 1) * g + (p - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  l = (double)q * (1.0 / (double)(12 - 1));
  k = (double)p * (1.0 / (double)(12 - 1));

  for (r = 0; r < i; r++) {
    m = (double)r * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[r][o] = j[o];
    }

    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[r][o] = n * j[o];
    }

    aa[r] = z[r][3] * z[r][3];
    z[r][0] = aa[r] + z[r][1] * z[r][1] + z[r][2] * z[r][2];
    ab[r] = 0.5 * (z[r][1] * y[r][1] + z[r][2] * y[r][2] + z[r][3] * y[r][3]);
  }

  for (r = 1; r <= i - 2; r++) {
    s = r - 1;
    t = r + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][3] - y[s][3]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][0] - 2.0 * y[r][0] + y[s][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][1] * z[t][3] - y[s][1] * z[s][3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][1] - 2.0 * z[r][1] + z[s][1]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][1] - 2.0 * y[r][1] + y[s][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][2] * z[t][3] - y[s][2] * z[s][3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][2] - 2.0 * z[r][2] + z[s][2]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][2] - 2.0 * y[r][2] + y[s][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[t][3] * z[t][3] + 0.4 * (y[t][4] - ab[t])) - (y[s][3] * z[s][3] + 0.4 * (y[s][4] - ab[s]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][3] - 2.0 * z[r][3] + z[s][3]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][3] - 2.0 * y[r][3] + y[s][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[t][3] * (1.4 * y[t][4] - 0.4 * ab[t]) - z[s][3] * (1.4 * y[s][4] - 0.4 * ab[s])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][0] - 2.0 * z[r][0] + z[s][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[t] - 2.0 * aa[r] + aa[s]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][4] - 2.0 * z[r][4] + z[s][4]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][4] - 2.0 * y[r][4] + y[s][4]);
  }

  for (o = 0; o < 5; o++) {
    r = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
    r = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (r = 3; r <= i - 4; r++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    r = i - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o]);
    r = i - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 5.0 * y[r][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
472,npb-3.3-SP-exact_rhs4,W,340,26,5,0,112,0,20402112,34,GPU,0.773709,0.615648,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __constant double* f, int g, int h, int i) {
  double j[5], k, l, m, n;
  int o, p, q, r, s, t;

  q = get_global_id(1) + 1;
  p = get_global_id(0) + 1;
  if (q > (h - 2) || p > (g - 2))
    return;

  int u = (q - 1) * g + (p - 1);
  int v = u * 12 * 5;
  int w = u * 12;

  __global double(*x)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;
  __global double(*y)[5] = (__global double(*)[5]) & b[v];
  __global double(*z)[5] = (__global double(*)[5]) & c[v];
  __global double* aa = (__global double*)&d[w];
  __global double* ab = (__global double*)&e[w];

  l = (double)q * (1.0 / (double)(12 - 1));
  k = (double)p * (1.0 / (double)(12 - 1));

  for (r = 0; r < i; r++) {
    m = (double)r * (1.0 / (double)(12 - 1));

    A(k, l, m, j, f);
    for (o = 0; o < 5; o++) {
      y[r][o] = j[o];
    }

    n = 1.0 / j[0];

    for (o = 1; o < 5; o++) {
      z[r][o] = n * j[o];
    }

    aa[r] = z[r][3] * z[r][3];
    z[r][0] = aa[r] + z[r][1] * z[r][1] + z[r][2] * z[r][2];
    ab[r] = 0.5 * (z[r][1] * y[r][1] + z[r][2] * y[r][2] + z[r][3] * y[r][3]);
  }

  for (r = 1; r <= i - 2; r++) {
    s = r - 1;
    t = r + 1;

    x[r][q][p][0] = x[r][q][p][0] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][3] - y[s][3]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][0] - 2.0 * y[r][0] + y[s][0]);

    x[r][q][p][1] = x[r][q][p][1] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][1] * z[t][3] - y[s][1] * z[s][3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][1] - 2.0 * z[r][1] + z[s][1]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][1] - 2.0 * y[r][1] + y[s][1]);

    x[r][q][p][2] = x[r][q][p][2] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (y[t][2] * z[t][3] - y[s][2] * z[s][3]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][2] - 2.0 * z[r][2] + z[s][2]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][2] - 2.0 * y[r][2] + y[s][2]);

    x[r][q][p][3] = x[r][q][p][3] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * ((y[t][3] * z[t][3] + 0.4 * (y[t][4] - ab[t])) - (y[s][3] * z[s][3] + 0.4 * (y[s][4] - ab[s]))) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (4.0 / 3.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][3] - 2.0 * z[r][3] + z[s][3]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][3] - 2.0 * y[r][3] + y[s][3]);

    x[r][q][p][4] = x[r][q][p][4] - (1.0 / (2.0 * (1.0 / (double)(12 - 1)))) * (z[t][3] * (1.4 * y[t][4] - 0.4 * ab[t]) - z[s][3] * (1.4 * y[s][4] - 0.4 * ab[s])) + 0.5 * (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 - (1.4 * 1.4)) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][0] - 2.0 * z[r][0] + z[s][0]) + (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.0 / 6.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (aa[t] - 2.0 * aa[r] + aa[s]) +
                    (((0.1 * 1.0) * (1.0 / (1.0 / (double)(12 - 1)))) * (1.4 * 1.4) * (1.0 / (1.0 / (double)(12 - 1)))) * (z[t][4] - 2.0 * z[r][4] + z[s][4]) + (1.0 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * (y[t][4] - 2.0 * y[r][4] + y[s][4]);
  }

  for (o = 0; o < 5; o++) {
    r = 1;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (5.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
    r = 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (-4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
  }

  for (o = 0; o < 5; o++) {
    for (r = 3; r <= i - 4; r++) {
      x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o] + y[r + 2][o]);
    }
  }

  for (o = 0; o < 5; o++) {
    r = i - 3;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 6.0 * y[r][o] - 4.0 * y[r + 1][o]);
    r = i - 2;
    x[r][q][p][o] = x[r][q][p][o] - (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))) * (y[r - 2][o] - 4.0 * y[r - 1][o] + 5.0 * y[r][o]);
  }
}","[  8   8   1 ..., 127   0 127]"
473,npb-3.3-SP-exact_rhs5,A,19,4,1,0,2,0,113095432,62,GPU,1.025288,0.25397800000000004,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(2) + 1;
  int f = get_global_id(1) + 1;
  int g = get_global_id(0) + 1;
  if (e > (d - 2) || f > (c - 2) || g > (b - 2))
    return;

  int h;
  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[e][f][g][h] = -1.0 * i[e][f][g][h];
  }
}","[129 129 129 ..., 127   0 127]"
474,npb-3.3-SP-exact_rhs5,B,19,4,1,0,2,0,454882552,32,GPU,4.7677010000000015,0.788794,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(2) + 1;
  int f = get_global_id(1) + 1;
  int g = get_global_id(0) + 1;
  if (e > (d - 2) || f > (c - 2) || g > (b - 2))
    return;

  int h;
  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[e][f][g][h] = -1.0 * i[e][f][g][h];
  }
}","[129 129 129 ..., 127   0 127]"
475,npb-3.3-SP-exact_rhs5,C,19,4,1,0,2,0,1815065192,64,GPU,17.555286,3.038336,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(2) + 1;
  int f = get_global_id(1) + 1;
  int g = get_global_id(0) + 1;
  if (e > (d - 2) || f > (c - 2) || g > (b - 2))
    return;

  int h;
  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[e][f][g][h] = -1.0 * i[e][f][g][h];
  }
}","[129 129 129 ..., 127   0 127]"
476,npb-3.3-SP-exact_rhs5,S,19,4,1,0,2,0,804152,60,GPU,0.11586600000000001,0.075776,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(2) + 1;
  int f = get_global_id(1) + 1;
  int g = get_global_id(0) + 1;
  if (e > (d - 2) || f > (c - 2) || g > (b - 2))
    return;

  int h;
  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[e][f][g][h] = -1.0 * i[e][f][g][h];
  }
}","[129 129 129 ..., 127   0 127]"
477,npb-3.3-SP-exact_rhs5,W,19,4,1,0,2,0,20402112,34,GPU,0.21731599999999998,0.110426,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(2) + 1;
  int f = get_global_id(1) + 1;
  int g = get_global_id(0) + 1;
  if (e > (d - 2) || f > (c - 2) || g > (b - 2))
    return;

  int h;
  __global double(*i)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5] = (__global double(*)[12 / 2 * 2 + 1][12 / 2 * 2 + 1][5])a;

  for (h = 0; h < 5; h++) {
    i[e][f][g][h] = -1.0 * i[e][f][g][h];
  }
}","[129 129 129 ..., 127   0 127]"
478,npb-3.3-SP-initialize1,A,12,4,1,0,1,0,113095432,64,GPU,3.227895,0.287875,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(1);
  int f = get_global_id(0);
  if (e >= d || f >= c)
    return;

  int g;
  __global double(*h)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  for (g = 0; g < b; g++) {
    h[e][f][g][0] = 1.0;
    h[e][f][g][1] = 0.0;
    h[e][f][g][2] = 0.0;
    h[e][f][g][3] = 0.0;
    h[e][f][g][4] = 1.0;
  }
}","[129 129 129 ..., 127   0 127]"
479,npb-3.3-SP-initialize1,B,12,4,1,0,1,0,454882552,32,GPU,13.567637,1.376243,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(1);
  int f = get_global_id(0);
  if (e >= d || f >= c)
    return;

  int g;
  __global double(*h)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  for (g = 0; g < b; g++) {
    h[e][f][g][0] = 1.0;
    h[e][f][g][1] = 0.0;
    h[e][f][g][2] = 0.0;
    h[e][f][g][3] = 0.0;
    h[e][f][g][4] = 1.0;
  }
}","[129 129 129 ..., 127   0 127]"
480,npb-3.3-SP-initialize1,C,12,4,1,0,1,0,1815065192,64,GPU,45.751465,7.2563869999999975,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(1);
  int f = get_global_id(0);
  if (e >= d || f >= c)
    return;

  int g;
  __global double(*h)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  for (g = 0; g < b; g++) {
    h[e][f][g][0] = 1.0;
    h[e][f][g][1] = 0.0;
    h[e][f][g][2] = 0.0;
    h[e][f][g][3] = 0.0;
    h[e][f][g][4] = 1.0;
  }
}","[129 129 129 ..., 127   0 127]"
481,npb-3.3-SP-initialize1,S,12,4,1,0,1,0,804152,60,GPU,0.114504,0.081014,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(1);
  int f = get_global_id(0);
  if (e >= d || f >= c)
    return;

  int g;
  __global double(*h)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  for (g = 0; g < b; g++) {
    h[e][f][g][0] = 1.0;
    h[e][f][g][1] = 0.0;
    h[e][f][g][2] = 0.0;
    h[e][f][g][3] = 0.0;
    h[e][f][g][4] = 1.0;
  }
}","[129 129 129 ..., 127   0 127]"
482,npb-3.3-SP-initialize1,W,12,4,1,0,1,0,20402112,36,GPU,0.182473,0.11726700000000001,"__kernel void A(__global double* a, int b, int c, int d) {
  int e = get_global_id(1);
  int f = get_global_id(0);
  if (e >= d || f >= c)
    return;

  int g;
  __global double(*h)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  for (g = 0; g < b; g++) {
    h[e][f][g][0] = 1.0;
    h[e][f][g][1] = 0.0;
    h[e][f][g][2] = 0.0;
    h[e][f][g][3] = 0.0;
    h[e][f][g][4] = 1.0;
  }
}","[129 129 129 ..., 127   0 127]"
483,npb-3.3-SP-initialize2,A,116,10,7,0,40,0,113095432,64,GPU,9.709254,1.184432,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k, l;
  double m, n, o, p[2][3][5], q, r, s;

  h = get_global_id(2);
  g = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || g >= d || f >= c)
    return;

  __global double(*t)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  o = (double)h * (1.0 / (double)(12 - 1));
  n = (double)g * (1.0 / (double)(12 - 1));
  m = (double)f * (1.0 / (double)(12 - 1));

  for (j = 0; j < 2; j++) {
    q = (double)j;
    A(q, n, o, &p[j][0][0], b);
  }

  for (k = 0; k < 2; k++) {
    r = (double)k;
    A(m, r, o, &p[k][1][0], b);
  }

  for (l = 0; l < 2; l++) {
    s = (double)l;
    A(m, n, s, &p[l][2][0], b);
  }

  for (i = 0; i < 5; i++) {
    q = m * p[1][0][i] + (1.0 - m) * p[0][0][i];
    r = n * p[1][1][i] + (1.0 - n) * p[0][1][i];
    s = o * p[1][2][i] + (1.0 - o) * p[0][2][i];

    t[h][g][f][i] = q + r + s - q * r - q * s - r * s + q * r * s;
  }
}","[129 129 129 ..., 127   0 127]"
484,npb-3.3-SP-initialize2,B,116,10,7,0,40,0,454882552,32,GPU,40.03487,5.617242,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k, l;
  double m, n, o, p[2][3][5], q, r, s;

  h = get_global_id(2);
  g = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || g >= d || f >= c)
    return;

  __global double(*t)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  o = (double)h * (1.0 / (double)(12 - 1));
  n = (double)g * (1.0 / (double)(12 - 1));
  m = (double)f * (1.0 / (double)(12 - 1));

  for (j = 0; j < 2; j++) {
    q = (double)j;
    A(q, n, o, &p[j][0][0], b);
  }

  for (k = 0; k < 2; k++) {
    r = (double)k;
    A(m, r, o, &p[k][1][0], b);
  }

  for (l = 0; l < 2; l++) {
    s = (double)l;
    A(m, n, s, &p[l][2][0], b);
  }

  for (i = 0; i < 5; i++) {
    q = m * p[1][0][i] + (1.0 - m) * p[0][0][i];
    r = n * p[1][1][i] + (1.0 - n) * p[0][1][i];
    s = o * p[1][2][i] + (1.0 - o) * p[0][2][i];

    t[h][g][f][i] = q + r + s - q * r - q * s - r * s + q * r * s;
  }
}","[129 129 129 ..., 127   0 127]"
485,npb-3.3-SP-initialize2,C,116,10,7,0,40,0,1815065192,64,GPU,156.521895,21.030755,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k, l;
  double m, n, o, p[2][3][5], q, r, s;

  h = get_global_id(2);
  g = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || g >= d || f >= c)
    return;

  __global double(*t)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  o = (double)h * (1.0 / (double)(12 - 1));
  n = (double)g * (1.0 / (double)(12 - 1));
  m = (double)f * (1.0 / (double)(12 - 1));

  for (j = 0; j < 2; j++) {
    q = (double)j;
    A(q, n, o, &p[j][0][0], b);
  }

  for (k = 0; k < 2; k++) {
    r = (double)k;
    A(m, r, o, &p[k][1][0], b);
  }

  for (l = 0; l < 2; l++) {
    s = (double)l;
    A(m, n, s, &p[l][2][0], b);
  }

  for (i = 0; i < 5; i++) {
    q = m * p[1][0][i] + (1.0 - m) * p[0][0][i];
    r = n * p[1][1][i] + (1.0 - n) * p[0][1][i];
    s = o * p[1][2][i] + (1.0 - o) * p[0][2][i];

    t[h][g][f][i] = q + r + s - q * r - q * s - r * s + q * r * s;
  }
}","[129 129 129 ..., 127   0 127]"
486,npb-3.3-SP-initialize2,S,116,10,7,0,40,0,804152,60,GPU,0.165327,0.08912,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k, l;
  double m, n, o, p[2][3][5], q, r, s;

  h = get_global_id(2);
  g = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || g >= d || f >= c)
    return;

  __global double(*t)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  o = (double)h * (1.0 / (double)(12 - 1));
  n = (double)g * (1.0 / (double)(12 - 1));
  m = (double)f * (1.0 / (double)(12 - 1));

  for (j = 0; j < 2; j++) {
    q = (double)j;
    A(q, n, o, &p[j][0][0], b);
  }

  for (k = 0; k < 2; k++) {
    r = (double)k;
    A(m, r, o, &p[k][1][0], b);
  }

  for (l = 0; l < 2; l++) {
    s = (double)l;
    A(m, n, s, &p[l][2][0], b);
  }

  for (i = 0; i < 5; i++) {
    q = m * p[1][0][i] + (1.0 - m) * p[0][0][i];
    r = n * p[1][1][i] + (1.0 - n) * p[0][1][i];
    s = o * p[1][2][i] + (1.0 - o) * p[0][2][i];

    t[h][g][f][i] = q + r + s - q * r - q * s - r * s + q * r * s;
  }
}","[129 129 129 ..., 127   0 127]"
487,npb-3.3-SP-initialize2,W,116,10,7,0,40,0,20402112,36,GPU,1.827821,0.433421,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i, j, k, l;
  double m, n, o, p[2][3][5], q, r, s;

  h = get_global_id(2);
  g = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || g >= d || f >= c)
    return;

  __global double(*t)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  o = (double)h * (1.0 / (double)(12 - 1));
  n = (double)g * (1.0 / (double)(12 - 1));
  m = (double)f * (1.0 / (double)(12 - 1));

  for (j = 0; j < 2; j++) {
    q = (double)j;
    A(q, n, o, &p[j][0][0], b);
  }

  for (k = 0; k < 2; k++) {
    r = (double)k;
    A(m, r, o, &p[k][1][0], b);
  }

  for (l = 0; l < 2; l++) {
    s = (double)l;
    A(m, n, s, &p[l][2][0], b);
  }

  for (i = 0; i < 5; i++) {
    q = m * p[1][0][i] + (1.0 - m) * p[0][0][i];
    r = n * p[1][1][i] + (1.0 - n) * p[0][1][i];
    s = o * p[1][2][i] + (1.0 - o) * p[0][2][i];

    t[h][g][f][i] = q + r + s - q * r - q * s - r * s + q * r * s;
  }
}","[129 129 129 ..., 127   0 127]"
488,npb-3.3-SP-initialize3,A,67,6,5,0,28,0,113095432,64,GPU,0.136852,0.097626,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  h = get_global_id(1);
  g = get_global_id(0);
  if (h >= e || g >= d)
    return;

  __global double(*n)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  l = (double)h * (1.0 / (double)(12 - 1));
  k = (double)g * (1.0 / (double)(12 - 1));

  j = 0.0;
  f = 0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  j = 1.0;
  f = c - 1;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
489,npb-3.3-SP-initialize3,B,67,6,5,0,28,0,454882552,32,GPU,0.277212,0.132582,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  h = get_global_id(1);
  g = get_global_id(0);
  if (h >= e || g >= d)
    return;

  __global double(*n)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  l = (double)h * (1.0 / (double)(12 - 1));
  k = (double)g * (1.0 / (double)(12 - 1));

  j = 0.0;
  f = 0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  j = 1.0;
  f = c - 1;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
490,npb-3.3-SP-initialize3,C,67,6,5,0,28,0,1815065192,64,GPU,0.606768,0.217002,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  h = get_global_id(1);
  g = get_global_id(0);
  if (h >= e || g >= d)
    return;

  __global double(*n)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  l = (double)h * (1.0 / (double)(12 - 1));
  k = (double)g * (1.0 / (double)(12 - 1));

  j = 0.0;
  f = 0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  j = 1.0;
  f = c - 1;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
491,npb-3.3-SP-initialize3,S,67,6,5,0,28,0,804152,60,GPU,0.099852,0.085837,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  h = get_global_id(1);
  g = get_global_id(0);
  if (h >= e || g >= d)
    return;

  __global double(*n)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  l = (double)h * (1.0 / (double)(12 - 1));
  k = (double)g * (1.0 / (double)(12 - 1));

  j = 0.0;
  f = 0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  j = 1.0;
  f = c - 1;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
492,npb-3.3-SP-initialize3,W,67,6,5,0,28,0,20402112,36,GPU,0.096988,0.091488,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  h = get_global_id(1);
  g = get_global_id(0);
  if (h >= e || g >= d)
    return;

  __global double(*n)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  l = (double)h * (1.0 / (double)(12 - 1));
  k = (double)g * (1.0 / (double)(12 - 1));

  j = 0.0;
  f = 0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  j = 1.0;
  f = c - 1;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
493,npb-3.3-SP-initialize4,A,67,6,5,0,28,0,113095432,64,GPU,0.147531,0.09588200000000001,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  h = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || f >= c)
    return;

  __global double(*n)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  l = (double)h * (1.0 / (double)(12 - 1));
  j = (double)f * (1.0 / (double)(12 - 1));

  k = 0.0;
  g = 0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  k = 1.0;
  g = d - 1;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
494,npb-3.3-SP-initialize4,B,67,6,5,0,28,0,454882552,32,GPU,0.24204,0.128928,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  h = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || f >= c)
    return;

  __global double(*n)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  l = (double)h * (1.0 / (double)(12 - 1));
  j = (double)f * (1.0 / (double)(12 - 1));

  k = 0.0;
  g = 0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  k = 1.0;
  g = d - 1;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
495,npb-3.3-SP-initialize4,C,67,6,5,0,28,0,1815065192,64,GPU,0.41353999999999996,0.199507,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  h = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || f >= c)
    return;

  __global double(*n)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  l = (double)h * (1.0 / (double)(12 - 1));
  j = (double)f * (1.0 / (double)(12 - 1));

  k = 0.0;
  g = 0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  k = 1.0;
  g = d - 1;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
496,npb-3.3-SP-initialize4,S,67,6,5,0,28,0,804152,60,CPU,0.076343,0.086464,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  h = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || f >= c)
    return;

  __global double(*n)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  l = (double)h * (1.0 / (double)(12 - 1));
  j = (double)f * (1.0 / (double)(12 - 1));

  k = 0.0;
  g = 0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  k = 1.0;
  g = d - 1;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
497,npb-3.3-SP-initialize4,W,67,6,5,0,28,0,20401432,36,CPU,0.082726,0.091696,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  h = get_global_id(1);
  f = get_global_id(0);
  if (h >= e || f >= c)
    return;

  __global double(*n)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  l = (double)h * (1.0 / (double)(12 - 1));
  j = (double)f * (1.0 / (double)(12 - 1));

  k = 0.0;
  g = 0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  k = 1.0;
  g = d - 1;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
498,npb-3.3-SP-initialize5,A,67,6,5,0,28,0,113095432,64,GPU,0.146839,0.095373,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  g = get_global_id(1);
  f = get_global_id(0);
  if (g >= d || f >= c)
    return;

  __global double(*n)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  k = (double)g * (1.0 / (double)(12 - 1));
  j = (double)f * (1.0 / (double)(12 - 1));

  l = 0.0;
  h = 0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  l = 1.0;
  h = e - 1;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
499,npb-3.3-SP-initialize5,B,67,6,5,0,28,0,454882552,32,GPU,0.23208800000000002,0.12595499999999998,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  g = get_global_id(1);
  f = get_global_id(0);
  if (g >= d || f >= c)
    return;

  __global double(*n)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  k = (double)g * (1.0 / (double)(12 - 1));
  j = (double)f * (1.0 / (double)(12 - 1));

  l = 0.0;
  h = 0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  l = 1.0;
  h = e - 1;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
500,npb-3.3-SP-initialize5,C,67,6,5,0,28,0,1815065192,64,GPU,0.412087,0.19385,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  g = get_global_id(1);
  f = get_global_id(0);
  if (g >= d || f >= c)
    return;

  __global double(*n)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  k = (double)g * (1.0 / (double)(12 - 1));
  j = (double)f * (1.0 / (double)(12 - 1));

  l = 0.0;
  h = 0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  l = 1.0;
  h = e - 1;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
501,npb-3.3-SP-initialize5,S,67,6,5,0,28,0,804152,60,CPU,0.084424,0.086275,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  g = get_global_id(1);
  f = get_global_id(0);
  if (g >= d || f >= c)
    return;

  __global double(*n)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  k = (double)g * (1.0 / (double)(12 - 1));
  j = (double)f * (1.0 / (double)(12 - 1));

  l = 0.0;
  h = 0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  l = 1.0;
  h = e - 1;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
502,npb-3.3-SP-initialize5,W,67,6,5,0,28,0,20402112,36,GPU,0.093503,0.091546,"__kernel void A(__global double* a, __global double* b, int c, int d, int e) {
  int f, g, h, i;
  double j, k, l, m[5];

  g = get_global_id(1);
  f = get_global_id(0);
  if (g >= d || f >= c)
    return;

  __global double(*n)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  k = (double)g * (1.0 / (double)(12 - 1));
  j = (double)f * (1.0 / (double)(12 - 1));

  l = 0.0;
  h = 0;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }

  l = 1.0;
  h = e - 1;
  A(j, k, l, m, b);
  for (i = 0; i < 5; i++) {
    n[h][g][f][i] = m[i];
  }
}","[129 129 129 ..., 127   0 127]"
503,npb-3.3-SP-ninvr,A,52,3,1,0,10,0,113095432,62,GPU,1.076992,0.241425,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g;
  double h, i, j, k, l, m, n;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  e = get_global_id(0) + 1;
  if (g > d || f > c || e > b)
    return;

  __global double(*o)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  h = o[g][f][e][0];
  i = o[g][f][e][1];
  j = o[g][f][e][2];
  k = o[g][f][e][3];
  l = o[g][f][e][4];

  m = sqrt(0.5) * j;
  n = 0.5 * (k + l);

  o[g][f][e][0] = -i;
  o[g][f][e][1] = h;
  o[g][f][e][2] = sqrt(0.5) * (k - l);
  o[g][f][e][3] = -m + n;
  o[g][f][e][4] = m + n;
}","[129 129 129 ...,  26   0 127]"
504,npb-3.3-SP-ninvr,B,52,3,1,0,10,0,454882552,32,GPU,4.807589,0.7817350000000001,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g;
  double h, i, j, k, l, m, n;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  e = get_global_id(0) + 1;
  if (g > d || f > c || e > b)
    return;

  __global double(*o)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  h = o[g][f][e][0];
  i = o[g][f][e][1];
  j = o[g][f][e][2];
  k = o[g][f][e][3];
  l = o[g][f][e][4];

  m = sqrt(0.5) * j;
  n = 0.5 * (k + l);

  o[g][f][e][0] = -i;
  o[g][f][e][1] = h;
  o[g][f][e][2] = sqrt(0.5) * (k - l);
  o[g][f][e][3] = -m + n;
  o[g][f][e][4] = m + n;
}","[129 129 129 ...,  26   0 127]"
505,npb-3.3-SP-ninvr,C,52,3,1,0,10,0,1815065192,64,GPU,17.5257,3.0242880000000003,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g;
  double h, i, j, k, l, m, n;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  e = get_global_id(0) + 1;
  if (g > d || f > c || e > b)
    return;

  __global double(*o)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  h = o[g][f][e][0];
  i = o[g][f][e][1];
  j = o[g][f][e][2];
  k = o[g][f][e][3];
  l = o[g][f][e][4];

  m = sqrt(0.5) * j;
  n = 0.5 * (k + l);

  o[g][f][e][0] = -i;
  o[g][f][e][1] = h;
  o[g][f][e][2] = sqrt(0.5) * (k - l);
  o[g][f][e][3] = -m + n;
  o[g][f][e][4] = m + n;
}","[129 129 129 ...,  26   0 127]"
506,npb-3.3-SP-ninvr,S,52,3,1,0,10,0,804152,60,GPU,0.08441799999999999,0.075807,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g;
  double h, i, j, k, l, m, n;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  e = get_global_id(0) + 1;
  if (g > d || f > c || e > b)
    return;

  __global double(*o)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  h = o[g][f][e][0];
  i = o[g][f][e][1];
  j = o[g][f][e][2];
  k = o[g][f][e][3];
  l = o[g][f][e][4];

  m = sqrt(0.5) * j;
  n = 0.5 * (k + l);

  o[g][f][e][0] = -i;
  o[g][f][e][1] = h;
  o[g][f][e][2] = sqrt(0.5) * (k - l);
  o[g][f][e][3] = -m + n;
  o[g][f][e][4] = m + n;
}","[129 129 129 ...,  26   0 127]"
507,npb-3.3-SP-ninvr,W,52,3,1,0,10,0,20402112,34,GPU,0.17568699999999998,0.11136099999999999,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g;
  double h, i, j, k, l, m, n;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  e = get_global_id(0) + 1;
  if (g > d || f > c || e > b)
    return;

  __global double(*o)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  h = o[g][f][e][0];
  i = o[g][f][e][1];
  j = o[g][f][e][2];
  k = o[g][f][e][3];
  l = o[g][f][e][4];

  m = sqrt(0.5) * j;
  n = 0.5 * (k + l);

  o[g][f][e][0] = -i;
  o[g][f][e][1] = h;
  o[g][f][e][2] = sqrt(0.5) * (k - l);
  o[g][f][e][3] = -m + n;
  o[g][f][e][4] = m + n;
}","[129 129 129 ...,  26   0 127]"
508,npb-3.3-SP-pinvr,A,52,3,1,0,10,0,113095432,62,GPU,1.073971,0.241792,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g;
  double h, i, j, k, l, m, n;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  e = get_global_id(0) + 1;
  if (g > d || f > c || e > b)
    return;

  __global double(*o)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  h = o[g][f][e][0];
  i = o[g][f][e][1];
  j = o[g][f][e][2];
  k = o[g][f][e][3];
  l = o[g][f][e][4];

  m = sqrt(0.5) * h;
  n = 0.5 * (k + l);

  o[g][f][e][0] = sqrt(0.5) * (k - l);
  o[g][f][e][1] = -j;
  o[g][f][e][2] = i;
  o[g][f][e][3] = -m + n;
  o[g][f][e][4] = m + n;
}","[129 129 129 ...,  26   0 127]"
509,npb-3.3-SP-pinvr,B,52,3,1,0,10,0,454882552,32,GPU,4.817934999999999,0.779997,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g;
  double h, i, j, k, l, m, n;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  e = get_global_id(0) + 1;
  if (g > d || f > c || e > b)
    return;

  __global double(*o)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  h = o[g][f][e][0];
  i = o[g][f][e][1];
  j = o[g][f][e][2];
  k = o[g][f][e][3];
  l = o[g][f][e][4];

  m = sqrt(0.5) * h;
  n = 0.5 * (k + l);

  o[g][f][e][0] = sqrt(0.5) * (k - l);
  o[g][f][e][1] = -j;
  o[g][f][e][2] = i;
  o[g][f][e][3] = -m + n;
  o[g][f][e][4] = m + n;
}","[129 129 129 ...,  26   0 127]"
510,npb-3.3-SP-pinvr,C,52,3,1,0,10,0,1815065192,64,GPU,17.544223000000002,3.01305,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g;
  double h, i, j, k, l, m, n;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  e = get_global_id(0) + 1;
  if (g > d || f > c || e > b)
    return;

  __global double(*o)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  h = o[g][f][e][0];
  i = o[g][f][e][1];
  j = o[g][f][e][2];
  k = o[g][f][e][3];
  l = o[g][f][e][4];

  m = sqrt(0.5) * h;
  n = 0.5 * (k + l);

  o[g][f][e][0] = sqrt(0.5) * (k - l);
  o[g][f][e][1] = -j;
  o[g][f][e][2] = i;
  o[g][f][e][3] = -m + n;
  o[g][f][e][4] = m + n;
}","[129 129 129 ...,  26   0 127]"
511,npb-3.3-SP-pinvr,S,52,3,1,0,10,0,804152,60,GPU,0.084521,0.074913,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g;
  double h, i, j, k, l, m, n;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  e = get_global_id(0) + 1;
  if (g > d || f > c || e > b)
    return;

  __global double(*o)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  h = o[g][f][e][0];
  i = o[g][f][e][1];
  j = o[g][f][e][2];
  k = o[g][f][e][3];
  l = o[g][f][e][4];

  m = sqrt(0.5) * h;
  n = 0.5 * (k + l);

  o[g][f][e][0] = sqrt(0.5) * (k - l);
  o[g][f][e][1] = -j;
  o[g][f][e][2] = i;
  o[g][f][e][3] = -m + n;
  o[g][f][e][4] = m + n;
}","[129 129 129 ...,  26   0 127]"
512,npb-3.3-SP-pinvr,W,52,3,1,0,10,0,20402112,34,GPU,0.17606,0.11064700000000001,"__kernel void A(__global double* a, int b, int c, int d) {
  int e, f, g;
  double h, i, j, k, l, m, n;

  g = get_global_id(2) + 1;
  f = get_global_id(1) + 1;
  e = get_global_id(0) + 1;
  if (g > d || f > c || e > b)
    return;

  __global double(*o)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

  h = o[g][f][e][0];
  i = o[g][f][e][1];
  j = o[g][f][e][2];
  k = o[g][f][e][3];
  l = o[g][f][e][4];

  m = sqrt(0.5) * h;
  n = 0.5 * (k + l);

  o[g][f][e][0] = sqrt(0.5) * (k - l);
  o[g][f][e][1] = -j;
  o[g][f][e][2] = i;
  o[g][f][e][3] = -m + n;
  o[g][f][e][4] = m + n;
}","[129 129 129 ...,  26   0 127]"
513,npb-3.3-SP-rhs_norm,A,21,9,11,8,2,0,113094832,6,CPU,0.402366,2.140109,"__kernel void A(__global double* a, __global double* b, __local double* c, int d, int e, int f) {
  int g, h, i, j, k;
  double l;
  __local double* m;

  i = get_global_id(0) + 1;
  k = get_local_id(0);
  m = &c[k * 5];

  for (j = 0; j < 5; j++) {
    m[j] = 0.0;
  }

  if (i <= f) {
    __global double(*n)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

    for (h = 1; h <= e; h++) {
      for (g = 1; g <= d; g++) {
        for (j = 0; j < 5; j++) {
          l = n[i][h][g][j];
          m[j] = m[j] + l * l;
        }
      }
    }
  }

  barrier(1);

  if (k == 0) {
    for (g = 1; g < get_local_size(0); g++) {
      __local double* o = &c[g * 5];
      for (j = 0; j < 5; j++) {
        m[j] += o[j];
      }
    }

    __global double* p = &b[get_group_id(0) * 5];
    for (j = 0; j < 5; j++) {
      p[j] = m[j];
    }
  }
}","[129 129 129 ..., 127   0 127]"
514,npb-3.3-SP-rhs_norm,B,21,9,11,8,2,0,454882072,10,CPU,2.736427,5.600954,"__kernel void A(__global double* a, __global double* b, __local double* c, int d, int e, int f) {
  int g, h, i, j, k;
  double l;
  __local double* m;

  i = get_global_id(0) + 1;
  k = get_local_id(0);
  m = &c[k * 5];

  for (j = 0; j < 5; j++) {
    m[j] = 0.0;
  }

  if (i <= f) {
    __global double(*n)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

    for (h = 1; h <= e; h++) {
      for (g = 1; g <= d; g++) {
        for (j = 0; j < 5; j++) {
          l = n[i][h][g][j];
          m[j] = m[j] + l * l;
        }
      }
    }
  }

  barrier(1);

  if (k == 0) {
    for (g = 1; g < get_local_size(0); g++) {
      __local double* o = &c[g * 5];
      for (j = 0; j < 5; j++) {
        m[j] += o[j];
      }
    }

    __global double* p = &b[get_group_id(0) * 5];
    for (j = 0; j < 5; j++) {
      p[j] = m[j];
    }
  }
}","[129 129 129 ..., 127   0 127]"
515,npb-3.3-SP-rhs_norm,C,21,9,11,8,2,0,1815064752,16,CPU,8.938765,14.79776,"__kernel void A(__global double* a, __global double* b, __local double* c, int d, int e, int f) {
  int g, h, i, j, k;
  double l;
  __local double* m;

  i = get_global_id(0) + 1;
  k = get_local_id(0);
  m = &c[k * 5];

  for (j = 0; j < 5; j++) {
    m[j] = 0.0;
  }

  if (i <= f) {
    __global double(*n)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

    for (h = 1; h <= e; h++) {
      for (g = 1; g <= d; g++) {
        for (j = 0; j < 5; j++) {
          l = n[i][h][g][j];
          m[j] = m[j] + l * l;
        }
      }
    }
  }

  barrier(1);

  if (k == 0) {
    for (g = 1; g < get_local_size(0); g++) {
      __local double* o = &c[g * 5];
      for (j = 0; j < 5; j++) {
        m[j] += o[j];
      }
    }

    __global double* p = &b[get_group_id(0) * 5];
    for (j = 0; j < 5; j++) {
      p[j] = m[j];
    }
  }
}","[129 129 129 ..., 127   0 127]"
516,npb-3.3-SP-rhs_norm,S,21,9,11,8,2,0,804152,1,CPU,0.08354400000000001,0.10840999999999999,"__kernel void A(__global double* a, __global double* b, __local double* c, int d, int e, int f) {
  int g, h, i, j, k;
  double l;
  __local double* m;

  i = get_global_id(0) + 1;
  k = get_local_id(0);
  m = &c[k * 5];

  for (j = 0; j < 5; j++) {
    m[j] = 0.0;
  }

  if (i <= f) {
    __global double(*n)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

    for (h = 1; h <= e; h++) {
      for (g = 1; g <= d; g++) {
        for (j = 0; j < 5; j++) {
          l = n[i][h][g][j];
          m[j] = m[j] + l * l;
        }
      }
    }
  }

  barrier(1);

  if (k == 0) {
    for (g = 1; g < get_local_size(0); g++) {
      __local double* o = &c[g * 5];
      for (j = 0; j < 5; j++) {
        m[j] += o[j];
      }
    }

    __global double* p = &b[get_group_id(0) * 5];
    for (j = 0; j < 5; j++) {
      p[j] = m[j];
    }
  }
}","[129 129 129 ..., 127   0 127]"
517,npb-3.3-SP-rhs_norm,W,21,9,11,8,2,0,20401432,3,CPU,0.110376,0.49229399999999995,"__kernel void A(__global double* a, __global double* b, __local double* c, int d, int e, int f) {
  int g, h, i, j, k;
  double l;
  __local double* m;

  i = get_global_id(0) + 1;
  k = get_local_id(0);
  m = &c[k * 5];

  for (j = 0; j < 5; j++) {
    m[j] = 0.0;
  }

  if (i <= f) {
    __global double(*n)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;

    for (h = 1; h <= e; h++) {
      for (g = 1; g <= d; g++) {
        for (j = 0; j < 5; j++) {
          l = n[i][h][g][j];
          m[j] = m[j] + l * l;
        }
      }
    }
  }

  barrier(1);

  if (k == 0) {
    for (g = 1; g < get_local_size(0); g++) {
      __local double* o = &c[g * 5];
      for (j = 0; j < 5; j++) {
        m[j] += o[j];
      }
    }

    __global double* p = &b[get_group_id(0) * 5];
    for (j = 0; j < 5; j++) {
      p[j] = m[j];
    }
  }
}","[129 129 129 ..., 127   0 127]"
518,npb-3.3-SP-txinvr,A,144,3,7,0,16,0,113095432,62,GPU,1.9491459999999998,0.304546,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global double* g, int h, int i, int j) {
  int k, l, m;
  double n, o, p, q, r, s, t, u, v, w, x, y, z, aa;

  m = get_global_id(2) + 1;
  l = get_global_id(1) + 1;
  k = get_global_id(0) + 1;
  if (m > j || l > i || k > h)
    return;

  __global double(*ab)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])a;
  __global double(*ac)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ad)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*ae)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*af)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*ag)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*ah)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])g;

  r = af[m][l][k];
  s = ab[m][l][k];
  t = ac[m][l][k];
  u = ad[m][l][k];
  q = ag[m][l][k];
  aa = q * q;

  v = ah[m][l][k][0];
  w = ah[m][l][k][1];
  x = ah[m][l][k][2];
  y = ah[m][l][k][3];
  z = ah[m][l][k][4];

  n = 0.4 / aa * (ae[m][l][k] * v - s * w - t * x - u * y + z);
  o = sqrt(0.5) * r * (s * v - w);
  p = (sqrt(0.5) * r * q) * n;

  ah[m][l][k][0] = v - n;
  ah[m][l][k][1] = -r * (u * v - y);
  ah[m][l][k][2] = r * (t * v - x);
  ah[m][l][k][3] = -o + p;
  ah[m][l][k][4] = o + p;
}","[  1  17   1 ...,  26   0 127]"
519,npb-3.3-SP-txinvr,B,144,3,7,0,16,0,454882552,32,GPU,8.39874,0.9661280000000001,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global double* g, int h, int i, int j) {
  int k, l, m;
  double n, o, p, q, r, s, t, u, v, w, x, y, z, aa;

  m = get_global_id(2) + 1;
  l = get_global_id(1) + 1;
  k = get_global_id(0) + 1;
  if (m > j || l > i || k > h)
    return;

  __global double(*ab)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])a;
  __global double(*ac)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ad)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*ae)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*af)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*ag)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*ah)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])g;

  r = af[m][l][k];
  s = ab[m][l][k];
  t = ac[m][l][k];
  u = ad[m][l][k];
  q = ag[m][l][k];
  aa = q * q;

  v = ah[m][l][k][0];
  w = ah[m][l][k][1];
  x = ah[m][l][k][2];
  y = ah[m][l][k][3];
  z = ah[m][l][k][4];

  n = 0.4 / aa * (ae[m][l][k] * v - s * w - t * x - u * y + z);
  o = sqrt(0.5) * r * (s * v - w);
  p = (sqrt(0.5) * r * q) * n;

  ah[m][l][k][0] = v - n;
  ah[m][l][k][1] = -r * (u * v - y);
  ah[m][l][k][2] = r * (t * v - x);
  ah[m][l][k][3] = -o + p;
  ah[m][l][k][4] = o + p;
}","[  1  17   1 ...,  26   0 127]"
520,npb-3.3-SP-txinvr,C,144,3,7,0,16,0,1815065192,64,GPU,30.281579999999998,3.7526580000000003,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global double* g, int h, int i, int j) {
  int k, l, m;
  double n, o, p, q, r, s, t, u, v, w, x, y, z, aa;

  m = get_global_id(2) + 1;
  l = get_global_id(1) + 1;
  k = get_global_id(0) + 1;
  if (m > j || l > i || k > h)
    return;

  __global double(*ab)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])a;
  __global double(*ac)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ad)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*ae)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*af)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*ag)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*ah)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])g;

  r = af[m][l][k];
  s = ab[m][l][k];
  t = ac[m][l][k];
  u = ad[m][l][k];
  q = ag[m][l][k];
  aa = q * q;

  v = ah[m][l][k][0];
  w = ah[m][l][k][1];
  x = ah[m][l][k][2];
  y = ah[m][l][k][3];
  z = ah[m][l][k][4];

  n = 0.4 / aa * (ae[m][l][k] * v - s * w - t * x - u * y + z);
  o = sqrt(0.5) * r * (s * v - w);
  p = (sqrt(0.5) * r * q) * n;

  ah[m][l][k][0] = v - n;
  ah[m][l][k][1] = -r * (u * v - y);
  ah[m][l][k][2] = r * (t * v - x);
  ah[m][l][k][3] = -o + p;
  ah[m][l][k][4] = o + p;
}","[  1  17   1 ...,  26   0 127]"
521,npb-3.3-SP-txinvr,S,144,3,7,0,16,0,804152,60,GPU,0.087952,0.07627,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global double* g, int h, int i, int j) {
  int k, l, m;
  double n, o, p, q, r, s, t, u, v, w, x, y, z, aa;

  m = get_global_id(2) + 1;
  l = get_global_id(1) + 1;
  k = get_global_id(0) + 1;
  if (m > j || l > i || k > h)
    return;

  __global double(*ab)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])a;
  __global double(*ac)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ad)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*ae)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*af)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*ag)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*ah)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])g;

  r = af[m][l][k];
  s = ab[m][l][k];
  t = ac[m][l][k];
  u = ad[m][l][k];
  q = ag[m][l][k];
  aa = q * q;

  v = ah[m][l][k][0];
  w = ah[m][l][k][1];
  x = ah[m][l][k][2];
  y = ah[m][l][k][3];
  z = ah[m][l][k][4];

  n = 0.4 / aa * (ae[m][l][k] * v - s * w - t * x - u * y + z);
  o = sqrt(0.5) * r * (s * v - w);
  p = (sqrt(0.5) * r * q) * n;

  ah[m][l][k][0] = v - n;
  ah[m][l][k][1] = -r * (u * v - y);
  ah[m][l][k][2] = r * (t * v - x);
  ah[m][l][k][3] = -o + p;
  ah[m][l][k][4] = o + p;
}","[  1  17   1 ...,  26   0 127]"
522,npb-3.3-SP-txinvr,W,144,3,7,0,16,0,20402112,34,GPU,0.250235,0.11735999999999999,"__kernel void A(__global const double* a, __global const double* b, __global const double* c, __global const double* d, __global const double* e, __global const double* f, __global double* g, int h, int i, int j) {
  int k, l, m;
  double n, o, p, q, r, s, t, u, v, w, x, y, z, aa;

  m = get_global_id(2) + 1;
  l = get_global_id(1) + 1;
  k = get_global_id(0) + 1;
  if (m > j || l > i || k > h)
    return;

  __global double(*ab)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])a;
  __global double(*ac)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ad)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*ae)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*af)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*ag)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*ah)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])g;

  r = af[m][l][k];
  s = ab[m][l][k];
  t = ac[m][l][k];
  u = ad[m][l][k];
  q = ag[m][l][k];
  aa = q * q;

  v = ah[m][l][k][0];
  w = ah[m][l][k][1];
  x = ah[m][l][k][2];
  y = ah[m][l][k][3];
  z = ah[m][l][k][4];

  n = 0.4 / aa * (ae[m][l][k] * v - s * w - t * x - u * y + z);
  o = sqrt(0.5) * r * (s * v - w);
  p = (sqrt(0.5) * r * q) * n;

  ah[m][l][k][0] = v - n;
  ah[m][l][k][1] = -r * (u * v - y);
  ah[m][l][k][2] = r * (t * v - x);
  ah[m][l][k][3] = -o + p;
  ah[m][l][k][4] = o + p;
}","[  1  17   1 ...,  26   0 127]"
523,npb-3.3-SP-tzetar,A,129,3,7,0,16,0,113095432,62,GPU,2.538412,0.328735,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, int h, int i, int j) {
  int k, l, m;
  double n, o, p, q, r, s, t, u, v, w, x, y;
  double z, aa, ab;

  m = get_global_id(2) + 1;
  l = get_global_id(1) + 1;
  k = get_global_id(0) + 1;
  if (m > j || l > i || k > h)
    return;

  __global double(*ac)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*ad)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ae)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*af)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*ag)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*ah)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*ai)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])g;

  r = ad[m][l][k];
  s = ae[m][l][k];
  t = af[m][l][k];
  q = ah[m][l][k];

  aa = q * q;

  u = ai[m][l][k][0];
  v = ai[m][l][k][1];
  w = ai[m][l][k][2];
  x = ai[m][l][k][3];
  y = ai[m][l][k][4];

  ab = ac[m][l][k][0];
  z = sqrt(0.5) * ab;

  n = z / q * (x + y);
  o = w + n;
  p = z * (x - y);

  ai[m][l][k][0] = o;
  ai[m][l][k][1] = -ab * v + r * o;
  ai[m][l][k][2] = ab * u + s * o;
  ai[m][l][k][3] = t * o + p;
  ai[m][l][k][4] = ab * (-r * v + s * u) + ag[m][l][k] * o + 2.5 * aa * n + t * p;
}","[  1  16  52 ...,  26   0 127]"
524,npb-3.3-SP-tzetar,B,129,3,7,0,16,0,454882552,32,GPU,9.963849,1.108024,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, int h, int i, int j) {
  int k, l, m;
  double n, o, p, q, r, s, t, u, v, w, x, y;
  double z, aa, ab;

  m = get_global_id(2) + 1;
  l = get_global_id(1) + 1;
  k = get_global_id(0) + 1;
  if (m > j || l > i || k > h)
    return;

  __global double(*ac)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*ad)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ae)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*af)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*ag)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*ah)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*ai)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])g;

  r = ad[m][l][k];
  s = ae[m][l][k];
  t = af[m][l][k];
  q = ah[m][l][k];

  aa = q * q;

  u = ai[m][l][k][0];
  v = ai[m][l][k][1];
  w = ai[m][l][k][2];
  x = ai[m][l][k][3];
  y = ai[m][l][k][4];

  ab = ac[m][l][k][0];
  z = sqrt(0.5) * ab;

  n = z / q * (x + y);
  o = w + n;
  p = z * (x - y);

  ai[m][l][k][0] = o;
  ai[m][l][k][1] = -ab * v + r * o;
  ai[m][l][k][2] = ab * u + s * o;
  ai[m][l][k][3] = t * o + p;
  ai[m][l][k][4] = ab * (-r * v + s * u) + ag[m][l][k] * o + 2.5 * aa * n + t * p;
}","[  1  16  52 ...,  26   0 127]"
525,npb-3.3-SP-tzetar,C,129,3,7,0,16,0,1815065192,64,GPU,36.392268,4.268594,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, int h, int i, int j) {
  int k, l, m;
  double n, o, p, q, r, s, t, u, v, w, x, y;
  double z, aa, ab;

  m = get_global_id(2) + 1;
  l = get_global_id(1) + 1;
  k = get_global_id(0) + 1;
  if (m > j || l > i || k > h)
    return;

  __global double(*ac)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*ad)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ae)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*af)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*ag)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*ah)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*ai)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])g;

  r = ad[m][l][k];
  s = ae[m][l][k];
  t = af[m][l][k];
  q = ah[m][l][k];

  aa = q * q;

  u = ai[m][l][k][0];
  v = ai[m][l][k][1];
  w = ai[m][l][k][2];
  x = ai[m][l][k][3];
  y = ai[m][l][k][4];

  ab = ac[m][l][k][0];
  z = sqrt(0.5) * ab;

  n = z / q * (x + y);
  o = w + n;
  p = z * (x - y);

  ai[m][l][k][0] = o;
  ai[m][l][k][1] = -ab * v + r * o;
  ai[m][l][k][2] = ab * u + s * o;
  ai[m][l][k][3] = t * o + p;
  ai[m][l][k][4] = ab * (-r * v + s * u) + ag[m][l][k] * o + 2.5 * aa * n + t * p;
}","[  1  16  52 ...,  26   0 127]"
526,npb-3.3-SP-tzetar,S,129,3,7,0,16,0,804152,60,GPU,0.08742799999999999,0.077206,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, int h, int i, int j) {
  int k, l, m;
  double n, o, p, q, r, s, t, u, v, w, x, y;
  double z, aa, ab;

  m = get_global_id(2) + 1;
  l = get_global_id(1) + 1;
  k = get_global_id(0) + 1;
  if (m > j || l > i || k > h)
    return;

  __global double(*ac)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*ad)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ae)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*af)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*ag)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*ah)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*ai)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])g;

  r = ad[m][l][k];
  s = ae[m][l][k];
  t = af[m][l][k];
  q = ah[m][l][k];

  aa = q * q;

  u = ai[m][l][k][0];
  v = ai[m][l][k][1];
  w = ai[m][l][k][2];
  x = ai[m][l][k][3];
  y = ai[m][l][k][4];

  ab = ac[m][l][k][0];
  z = sqrt(0.5) * ab;

  n = z / q * (x + y);
  o = w + n;
  p = z * (x - y);

  ai[m][l][k][0] = o;
  ai[m][l][k][1] = -ab * v + r * o;
  ai[m][l][k][2] = ab * u + s * o;
  ai[m][l][k][3] = t * o + p;
  ai[m][l][k][4] = ab * (-r * v + s * u) + ag[m][l][k] * o + 2.5 * aa * n + t * p;
}","[  1  16  52 ...,  26   0 127]"
527,npb-3.3-SP-tzetar,W,129,3,7,0,16,0,20402112,34,GPU,0.339303,0.124129,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, int h, int i, int j) {
  int k, l, m;
  double n, o, p, q, r, s, t, u, v, w, x, y;
  double z, aa, ab;

  m = get_global_id(2) + 1;
  l = get_global_id(1) + 1;
  k = get_global_id(0) + 1;
  if (m > j || l > i || k > h)
    return;

  __global double(*ac)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])a;
  __global double(*ad)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*ae)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*af)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])d;
  __global double(*ag)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])e;
  __global double(*ah)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])f;
  __global double(*ai)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])g;

  r = ad[m][l][k];
  s = ae[m][l][k];
  t = af[m][l][k];
  q = ah[m][l][k];

  aa = q * q;

  u = ai[m][l][k][0];
  v = ai[m][l][k][1];
  w = ai[m][l][k][2];
  x = ai[m][l][k][3];
  y = ai[m][l][k][4];

  ab = ac[m][l][k][0];
  z = sqrt(0.5) * ab;

  n = z / q * (x + y);
  o = w + n;
  p = z * (x - y);

  ai[m][l][k][0] = o;
  ai[m][l][k][1] = -ab * v + r * o;
  ai[m][l][k][2] = ab * u + s * o;
  ai[m][l][k][3] = t * o + p;
  ai[m][l][k][4] = ab * (-r * v + s * u) + ag[m][l][k] * o + 2.5 * aa * n + t * p;
}","[  1  16  52 ...,  26   0 127]"
528,npb-3.3-SP-x_solve,A,829,135,9,0,232,0,113094832,62,CPU,5.191868,6.022881,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, __global double* h, __global double* i, int j, int k, int l, int m) {
  int n, o, p, q, r, s;
  double t, u, v;
  double w[5], x[5], y[5];
  double z[5], aa[5], ab[5];
  double ac[5], ad[5], ae[5];
  double af[5], ag[5], ah[5];
  double ai, aj, ak;
  double al, am, an;
  double ao, ap, aq;

  p = get_global_id(1) + 1;
  o = get_global_id(0) + 1;
  if (p > l || o > k)
    return;

  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])a;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])d;

  int av = (p - 1) * k + (o - 1);
  int aw = av * 12;
  __global double* ax = (__global double*)&e[aw];
  __global double* ay = (__global double*)&f[aw];

  aw = av * ((12 / 2 * 2) + 1) * 5;
  __global double(*az)[5] = (__global double(*)[5]) & g[aw];
  __global double(*ba)[5] = (__global double(*)[5]) & h[aw];
  __global double(*bb)[5] = (__global double(*)[5]) & i[aw];

  for (s = 0; s < 5; s++) {
    az[0][s] = 0.0;
    ba[0][s] = 0.0;
    bb[0][s] = 0.0;
    az[j + 1][s] = 0.0;
    ba[j + 1][s] = 0.0;
    bb[j + 1][s] = 0.0;
  }
  az[0][2] = 1.0;
  ba[0][2] = 1.0;
  bb[0][2] = 1.0;
  az[j + 1][2] = 1.0;
  ba[j + 1][2] = 1.0;
  bb[j + 1][2] = 1.0;
  t = (0.1 * 1.0) * as[p][o][0];
  ax[0] = ai = ar[p][o][0];
  ay[0] = al = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  ao = at[p][o][0];

  t = (0.1 * 1.0) * as[p][o][1];
  ax[1] = aj = ar[p][o][1];
  ay[1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  ap = at[p][o][1];
  n = 1;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o][n + 1];
  ax[n + 1] = aj = ar[p][o][n + 1];
  ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o][n + 1];
  az[n][0] = w[0] = 0.0;
  az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an;
  az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[n][0] = w[0];
  ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[n][2] = w[2];
  ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[n][4] = w[4];
  bb[n][0] = w[0];
  bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[n][2] = w[2];
  bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[n][4] = w[4];

  n = 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o][n + 1];
  ax[n + 1] = aj = ar[p][o][n + 1];
  ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o][n + 1];
  az[n][0] = w[0] = 0.0;
  az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[n][0] = w[0];
  ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[n][2] = w[2];
  ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[n][4] = w[4];
  bb[n][0] = w[0];
  bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[n][2] = w[2];
  bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[n][4] = w[4];

  for (n = 3; n <= m - 4; n++) {
    ak = ai;
    ai = aj;
    an = al;
    al = am;
    t = (0.1 * 1.0) * as[p][o][n + 1];
    ax[n + 1] = aj = ar[p][o][n + 1];
    ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
    aq = ao;
    ao = ap;
    ap = at[p][o][n + 1];
    az[n][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[n][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    ba[n][0] = w[0];
    ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    ba[n][2] = w[2];
    ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    ba[n][4] = w[4];
    bb[n][0] = w[0];
    bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    bb[n][2] = w[2];
    bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    bb[n][4] = w[4];
  }

  n = m - 3;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o][n + 1];
  ax[n + 1] = aj = ar[p][o][n + 1];
  ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o][n + 1];
  az[n][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][4] = w[4] = 0.0;
  ba[n][0] = w[0];
  ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[n][2] = w[2];
  ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[n][4] = w[4];
  bb[n][0] = w[0];
  bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[n][2] = w[2];
  bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[n][4] = w[4];

  n = m - 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o][n + 1];
  ax[n + 1] = aj = ar[p][o][n + 1];
  ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o][n + 1];
  az[n][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am;
  az[n][4] = w[4] = 0.0;
  ba[n][0] = w[0];
  ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[n][2] = w[2];
  ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[n][4] = w[4];
  bb[n][0] = w[0];
  bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[n][2] = w[2];
  bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[n][4] = w[4];
  x[2] = az[0][2];
  x[3] = az[0][3];
  y[1] = az[1][1];
  y[2] = az[1][2];

  ag[0] = au[p][o][0][0];
  ag[1] = au[p][o][0][1];
  ag[2] = au[p][o][0][2];
  ah[0] = au[p][o][1][0];
  ah[1] = au[p][o][1][1];
  ah[2] = au[p][o][1][2];

  for (n = 0; n <= m - 3; n++) {
    q = n + 1;
    r = n + 2;

    w[2] = x[2];
    w[3] = x[3];
    w[4] = az[n][4];
    af[0] = ag[0];
    af[1] = ag[1];
    af[2] = ag[2];

    u = 1.0 / w[2];
    az[n][3] = w[3] = u * w[3];
    az[n][4] = w[4] = u * w[4];
    for (s = 0; s < 3; s++) {
      au[p][o][n][s] = af[s] = u * af[s];
    }

    x[1] = y[1];
    x[2] = y[2];
    x[3] = az[q][3];
    ag[0] = ah[0];
    ag[1] = ah[1];
    ag[2] = ah[2];

    az[q][2] = x[2] = x[2] - x[1] * w[3];
    x[3] = x[3] - x[1] * w[4];
    for (s = 0; s < 3; s++) {
      ag[s] = ag[s] - x[1] * af[s];
    }

    y[0] = az[r][0];
    y[1] = az[r][1];
    y[2] = az[r][2];
    ah[0] = au[p][o][r][0];
    ah[1] = au[p][o][r][1];
    ah[2] = au[p][o][r][2];

    az[r][1] = y[1] = y[1] - y[0] * w[3];
    y[2] = y[2] - y[0] * w[4];
    for (s = 0; s < 3; s++) {
      ah[s] = ah[s] - y[0] * af[s];
    }
  }

  n = m - 2;
  q = m - 1;

  w[2] = x[2];
  w[3] = x[3];
  w[4] = az[n][4];
  af[0] = ag[0];
  af[1] = ag[1];
  af[2] = ag[2];

  u = 1.0 / w[2];
  az[n][3] = w[3] = u * w[3];
  az[n][4] = w[4] = u * w[4];
  for (s = 0; s < 3; s++) {
    au[p][o][n][s] = af[s] = u * af[s];
  }

  x[1] = y[1];
  x[2] = y[2];
  x[3] = az[q][3];
  ag[0] = ah[0];
  ag[1] = ah[1];
  ag[2] = ah[2];

  az[q][2] = x[2] = x[2] - x[1] * w[3];
  az[q][3] = x[3] - x[1] * w[4];
  for (s = 0; s < 3; s++) {
    ag[s] = ag[s] - x[1] * af[s];
  }

  v = 1.0 / x[2];
  for (s = 0; s < 3; s++) {
    au[p][o][q][s] = v * ag[s];
  }

  aa[2] = ba[0][2];
  aa[3] = ba[0][3];
  ab[1] = ba[1][1];
  ab[2] = ba[1][2];
  ad[2] = bb[0][2];
  ad[3] = bb[0][3];
  ae[1] = bb[1][1];
  ae[2] = bb[1][2];

  ag[3] = au[p][o][0][3];
  ag[4] = au[p][o][0][4];
  ah[3] = au[p][o][1][3];
  ah[4] = au[p][o][1][4];

  for (n = 0; n <= m - 3; n++) {
    q = n + 1;
    r = n + 2;

    s = 3;

    z[2] = aa[2];
    z[3] = aa[3];
    z[4] = ba[n][4];
    af[s] = ag[s];
    u = 1.0 / z[2];
    ba[n][3] = z[3] = u * z[3];
    ba[n][4] = z[4] = u * z[4];
    au[p][o][n][s] = af[s] = u * af[s];

    aa[1] = ab[1];
    aa[2] = ab[2];
    aa[3] = ba[q][3];
    ag[s] = ah[s];
    ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
    aa[3] = aa[3] - aa[1] * z[4];
    ag[s] = ag[s] - aa[1] * af[s];

    ab[0] = ba[r][0];
    ab[1] = ba[r][1];
    ab[2] = ba[r][2];
    ah[s] = au[p][o][r][s];
    ba[r][1] = ab[1] = ab[1] - ab[0] * z[3];
    ab[2] = ab[2] - ab[0] * z[4];
    ah[s] = ah[s] - ab[0] * af[s];

    s = 4;

    ac[2] = ad[2];
    ac[3] = ad[3];
    ac[4] = bb[n][4];
    af[s] = ag[s];
    u = 1.0 / ac[2];
    bb[n][3] = ac[3] = u * ac[3];
    bb[n][4] = ac[4] = u * ac[4];
    au[p][o][n][s] = af[s] = u * af[s];

    ad[1] = ae[1];
    ad[2] = ae[2];
    ad[3] = bb[q][3];
    ag[s] = ah[s];
    bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
    ad[3] = ad[3] - ad[1] * ac[4];
    ag[s] = ag[s] - ad[1] * af[s];

    ae[0] = bb[r][0];
    ae[1] = bb[r][1];
    ae[2] = bb[r][2];
    ah[s] = au[p][o][r][s];
    bb[r][1] = ae[1] = ae[1] - ae[0] * ac[3];
    ae[2] = ae[2] - ae[0] * ac[4];
    ah[s] = ah[s] - ae[0] * af[s];
  }

  n = m - 2;
  q = m - 1;

  s = 3;

  z[2] = aa[2];
  z[3] = aa[3];
  z[4] = ba[n][4];
  af[s] = ag[s];
  u = 1.0 / z[2];
  ba[n][3] = z[3] = u * z[3];
  ba[n][4] = z[4] = u * z[4];
  au[p][o][n][s] = af[s] = u * af[s];

  aa[1] = ab[1];
  aa[2] = ab[2];
  aa[3] = ba[q][3];
  ag[s] = ah[s];
  ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
  ba[q][3] = aa[3] = aa[3] - aa[1] * z[4];
  ag[s] = ag[s] - aa[1] * af[s];

  s = 4;

  ac[2] = ad[2];
  ac[3] = ad[3];
  ac[4] = bb[n][4];
  af[s] = ag[s];
  u = 1.0 / ac[2];
  bb[n][3] = ac[3] = u * ac[3];
  bb[n][4] = ac[4] = u * ac[4];
  au[p][o][n][s] = af[s] = u * af[s];

  ad[1] = ae[1];
  ad[2] = ae[2];
  ad[3] = bb[q][3];
  ag[s] = ah[s];
  bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
  bb[q][3] = ad[3] = ad[3] - ad[1] * ac[4];
  ag[s] = ag[s] - ad[1] * af[s];

  au[p][o][q][3] = ag[3] / aa[2];
  au[p][o][q][4] = ag[4] / ad[2];

  n = m - 2;
  q = m - 1;
  w[3] = az[n][3];

  for (s = 0; s < 3; s++) {
    ag[s] = au[p][o][q][s];
    au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s];
  }

  ag[3] = au[p][o][q][3];
  au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[n][3] * ag[3];
  ag[4] = au[p][o][q][4];
  au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[n][3] * ag[4];

  for (n = m - 3; n >= 0; n--) {
    q = n + 1;
    r = n + 2;
    w[3] = az[n][3];
    w[4] = az[n][4];
    for (s = 0; s < 3; s++) {
      ah[s] = ag[s];
      ag[s] = af[s];
      au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s] - w[4] * ah[s];
    }

    ah[3] = ag[3];
    ag[3] = af[3];
    au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[n][3] * ag[3] - ba[n][4] * ah[3];
    ah[4] = ag[4];
    ag[4] = af[4];
    au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[n][3] * ag[4] - bb[n][4] * ah[4];
  }
}","[ 51  17  52 ..., 127   0 127]"
529,npb-3.3-SP-x_solve,B,829,135,9,0,232,0,454882072,32,CPU,22.022122,34.07425,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, __global double* h, __global double* i, int j, int k, int l, int m) {
  int n, o, p, q, r, s;
  double t, u, v;
  double w[5], x[5], y[5];
  double z[5], aa[5], ab[5];
  double ac[5], ad[5], ae[5];
  double af[5], ag[5], ah[5];
  double ai, aj, ak;
  double al, am, an;
  double ao, ap, aq;

  p = get_global_id(1) + 1;
  o = get_global_id(0) + 1;
  if (p > l || o > k)
    return;

  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])a;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])d;

  int av = (p - 1) * k + (o - 1);
  int aw = av * 12;
  __global double* ax = (__global double*)&e[aw];
  __global double* ay = (__global double*)&f[aw];

  aw = av * ((12 / 2 * 2) + 1) * 5;
  __global double(*az)[5] = (__global double(*)[5]) & g[aw];
  __global double(*ba)[5] = (__global double(*)[5]) & h[aw];
  __global double(*bb)[5] = (__global double(*)[5]) & i[aw];

  for (s = 0; s < 5; s++) {
    az[0][s] = 0.0;
    ba[0][s] = 0.0;
    bb[0][s] = 0.0;
    az[j + 1][s] = 0.0;
    ba[j + 1][s] = 0.0;
    bb[j + 1][s] = 0.0;
  }
  az[0][2] = 1.0;
  ba[0][2] = 1.0;
  bb[0][2] = 1.0;
  az[j + 1][2] = 1.0;
  ba[j + 1][2] = 1.0;
  bb[j + 1][2] = 1.0;
  t = (0.1 * 1.0) * as[p][o][0];
  ax[0] = ai = ar[p][o][0];
  ay[0] = al = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  ao = at[p][o][0];

  t = (0.1 * 1.0) * as[p][o][1];
  ax[1] = aj = ar[p][o][1];
  ay[1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  ap = at[p][o][1];
  n = 1;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o][n + 1];
  ax[n + 1] = aj = ar[p][o][n + 1];
  ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o][n + 1];
  az[n][0] = w[0] = 0.0;
  az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an;
  az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[n][0] = w[0];
  ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[n][2] = w[2];
  ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[n][4] = w[4];
  bb[n][0] = w[0];
  bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[n][2] = w[2];
  bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[n][4] = w[4];

  n = 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o][n + 1];
  ax[n + 1] = aj = ar[p][o][n + 1];
  ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o][n + 1];
  az[n][0] = w[0] = 0.0;
  az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[n][0] = w[0];
  ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[n][2] = w[2];
  ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[n][4] = w[4];
  bb[n][0] = w[0];
  bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[n][2] = w[2];
  bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[n][4] = w[4];

  for (n = 3; n <= m - 4; n++) {
    ak = ai;
    ai = aj;
    an = al;
    al = am;
    t = (0.1 * 1.0) * as[p][o][n + 1];
    ax[n + 1] = aj = ar[p][o][n + 1];
    ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
    aq = ao;
    ao = ap;
    ap = at[p][o][n + 1];
    az[n][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[n][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    ba[n][0] = w[0];
    ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    ba[n][2] = w[2];
    ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    ba[n][4] = w[4];
    bb[n][0] = w[0];
    bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    bb[n][2] = w[2];
    bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    bb[n][4] = w[4];
  }

  n = m - 3;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o][n + 1];
  ax[n + 1] = aj = ar[p][o][n + 1];
  ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o][n + 1];
  az[n][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][4] = w[4] = 0.0;
  ba[n][0] = w[0];
  ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[n][2] = w[2];
  ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[n][4] = w[4];
  bb[n][0] = w[0];
  bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[n][2] = w[2];
  bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[n][4] = w[4];

  n = m - 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o][n + 1];
  ax[n + 1] = aj = ar[p][o][n + 1];
  ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o][n + 1];
  az[n][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am;
  az[n][4] = w[4] = 0.0;
  ba[n][0] = w[0];
  ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[n][2] = w[2];
  ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[n][4] = w[4];
  bb[n][0] = w[0];
  bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[n][2] = w[2];
  bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[n][4] = w[4];
  x[2] = az[0][2];
  x[3] = az[0][3];
  y[1] = az[1][1];
  y[2] = az[1][2];

  ag[0] = au[p][o][0][0];
  ag[1] = au[p][o][0][1];
  ag[2] = au[p][o][0][2];
  ah[0] = au[p][o][1][0];
  ah[1] = au[p][o][1][1];
  ah[2] = au[p][o][1][2];

  for (n = 0; n <= m - 3; n++) {
    q = n + 1;
    r = n + 2;

    w[2] = x[2];
    w[3] = x[3];
    w[4] = az[n][4];
    af[0] = ag[0];
    af[1] = ag[1];
    af[2] = ag[2];

    u = 1.0 / w[2];
    az[n][3] = w[3] = u * w[3];
    az[n][4] = w[4] = u * w[4];
    for (s = 0; s < 3; s++) {
      au[p][o][n][s] = af[s] = u * af[s];
    }

    x[1] = y[1];
    x[2] = y[2];
    x[3] = az[q][3];
    ag[0] = ah[0];
    ag[1] = ah[1];
    ag[2] = ah[2];

    az[q][2] = x[2] = x[2] - x[1] * w[3];
    x[3] = x[3] - x[1] * w[4];
    for (s = 0; s < 3; s++) {
      ag[s] = ag[s] - x[1] * af[s];
    }

    y[0] = az[r][0];
    y[1] = az[r][1];
    y[2] = az[r][2];
    ah[0] = au[p][o][r][0];
    ah[1] = au[p][o][r][1];
    ah[2] = au[p][o][r][2];

    az[r][1] = y[1] = y[1] - y[0] * w[3];
    y[2] = y[2] - y[0] * w[4];
    for (s = 0; s < 3; s++) {
      ah[s] = ah[s] - y[0] * af[s];
    }
  }

  n = m - 2;
  q = m - 1;

  w[2] = x[2];
  w[3] = x[3];
  w[4] = az[n][4];
  af[0] = ag[0];
  af[1] = ag[1];
  af[2] = ag[2];

  u = 1.0 / w[2];
  az[n][3] = w[3] = u * w[3];
  az[n][4] = w[4] = u * w[4];
  for (s = 0; s < 3; s++) {
    au[p][o][n][s] = af[s] = u * af[s];
  }

  x[1] = y[1];
  x[2] = y[2];
  x[3] = az[q][3];
  ag[0] = ah[0];
  ag[1] = ah[1];
  ag[2] = ah[2];

  az[q][2] = x[2] = x[2] - x[1] * w[3];
  az[q][3] = x[3] - x[1] * w[4];
  for (s = 0; s < 3; s++) {
    ag[s] = ag[s] - x[1] * af[s];
  }

  v = 1.0 / x[2];
  for (s = 0; s < 3; s++) {
    au[p][o][q][s] = v * ag[s];
  }

  aa[2] = ba[0][2];
  aa[3] = ba[0][3];
  ab[1] = ba[1][1];
  ab[2] = ba[1][2];
  ad[2] = bb[0][2];
  ad[3] = bb[0][3];
  ae[1] = bb[1][1];
  ae[2] = bb[1][2];

  ag[3] = au[p][o][0][3];
  ag[4] = au[p][o][0][4];
  ah[3] = au[p][o][1][3];
  ah[4] = au[p][o][1][4];

  for (n = 0; n <= m - 3; n++) {
    q = n + 1;
    r = n + 2;

    s = 3;

    z[2] = aa[2];
    z[3] = aa[3];
    z[4] = ba[n][4];
    af[s] = ag[s];
    u = 1.0 / z[2];
    ba[n][3] = z[3] = u * z[3];
    ba[n][4] = z[4] = u * z[4];
    au[p][o][n][s] = af[s] = u * af[s];

    aa[1] = ab[1];
    aa[2] = ab[2];
    aa[3] = ba[q][3];
    ag[s] = ah[s];
    ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
    aa[3] = aa[3] - aa[1] * z[4];
    ag[s] = ag[s] - aa[1] * af[s];

    ab[0] = ba[r][0];
    ab[1] = ba[r][1];
    ab[2] = ba[r][2];
    ah[s] = au[p][o][r][s];
    ba[r][1] = ab[1] = ab[1] - ab[0] * z[3];
    ab[2] = ab[2] - ab[0] * z[4];
    ah[s] = ah[s] - ab[0] * af[s];

    s = 4;

    ac[2] = ad[2];
    ac[3] = ad[3];
    ac[4] = bb[n][4];
    af[s] = ag[s];
    u = 1.0 / ac[2];
    bb[n][3] = ac[3] = u * ac[3];
    bb[n][4] = ac[4] = u * ac[4];
    au[p][o][n][s] = af[s] = u * af[s];

    ad[1] = ae[1];
    ad[2] = ae[2];
    ad[3] = bb[q][3];
    ag[s] = ah[s];
    bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
    ad[3] = ad[3] - ad[1] * ac[4];
    ag[s] = ag[s] - ad[1] * af[s];

    ae[0] = bb[r][0];
    ae[1] = bb[r][1];
    ae[2] = bb[r][2];
    ah[s] = au[p][o][r][s];
    bb[r][1] = ae[1] = ae[1] - ae[0] * ac[3];
    ae[2] = ae[2] - ae[0] * ac[4];
    ah[s] = ah[s] - ae[0] * af[s];
  }

  n = m - 2;
  q = m - 1;

  s = 3;

  z[2] = aa[2];
  z[3] = aa[3];
  z[4] = ba[n][4];
  af[s] = ag[s];
  u = 1.0 / z[2];
  ba[n][3] = z[3] = u * z[3];
  ba[n][4] = z[4] = u * z[4];
  au[p][o][n][s] = af[s] = u * af[s];

  aa[1] = ab[1];
  aa[2] = ab[2];
  aa[3] = ba[q][3];
  ag[s] = ah[s];
  ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
  ba[q][3] = aa[3] = aa[3] - aa[1] * z[4];
  ag[s] = ag[s] - aa[1] * af[s];

  s = 4;

  ac[2] = ad[2];
  ac[3] = ad[3];
  ac[4] = bb[n][4];
  af[s] = ag[s];
  u = 1.0 / ac[2];
  bb[n][3] = ac[3] = u * ac[3];
  bb[n][4] = ac[4] = u * ac[4];
  au[p][o][n][s] = af[s] = u * af[s];

  ad[1] = ae[1];
  ad[2] = ae[2];
  ad[3] = bb[q][3];
  ag[s] = ah[s];
  bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
  bb[q][3] = ad[3] = ad[3] - ad[1] * ac[4];
  ag[s] = ag[s] - ad[1] * af[s];

  au[p][o][q][3] = ag[3] / aa[2];
  au[p][o][q][4] = ag[4] / ad[2];

  n = m - 2;
  q = m - 1;
  w[3] = az[n][3];

  for (s = 0; s < 3; s++) {
    ag[s] = au[p][o][q][s];
    au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s];
  }

  ag[3] = au[p][o][q][3];
  au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[n][3] * ag[3];
  ag[4] = au[p][o][q][4];
  au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[n][3] * ag[4];

  for (n = m - 3; n >= 0; n--) {
    q = n + 1;
    r = n + 2;
    w[3] = az[n][3];
    w[4] = az[n][4];
    for (s = 0; s < 3; s++) {
      ah[s] = ag[s];
      ag[s] = af[s];
      au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s] - w[4] * ah[s];
    }

    ah[3] = ag[3];
    ag[3] = af[3];
    au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[n][3] * ag[3] - ba[n][4] * ah[3];
    ah[4] = ag[4];
    ag[4] = af[4];
    au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[n][3] * ag[4] - bb[n][4] * ah[4];
  }
}","[ 51  17  52 ..., 127   0 127]"
530,npb-3.3-SP-x_solve,C,829,135,9,0,232,0,1815064752,64,CPU,90.055493,150.46841799999999,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, __global double* h, __global double* i, int j, int k, int l, int m) {
  int n, o, p, q, r, s;
  double t, u, v;
  double w[5], x[5], y[5];
  double z[5], aa[5], ab[5];
  double ac[5], ad[5], ae[5];
  double af[5], ag[5], ah[5];
  double ai, aj, ak;
  double al, am, an;
  double ao, ap, aq;

  p = get_global_id(1) + 1;
  o = get_global_id(0) + 1;
  if (p > l || o > k)
    return;

  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])a;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])d;

  int av = (p - 1) * k + (o - 1);
  int aw = av * 12;
  __global double* ax = (__global double*)&e[aw];
  __global double* ay = (__global double*)&f[aw];

  aw = av * ((12 / 2 * 2) + 1) * 5;
  __global double(*az)[5] = (__global double(*)[5]) & g[aw];
  __global double(*ba)[5] = (__global double(*)[5]) & h[aw];
  __global double(*bb)[5] = (__global double(*)[5]) & i[aw];

  for (s = 0; s < 5; s++) {
    az[0][s] = 0.0;
    ba[0][s] = 0.0;
    bb[0][s] = 0.0;
    az[j + 1][s] = 0.0;
    ba[j + 1][s] = 0.0;
    bb[j + 1][s] = 0.0;
  }
  az[0][2] = 1.0;
  ba[0][2] = 1.0;
  bb[0][2] = 1.0;
  az[j + 1][2] = 1.0;
  ba[j + 1][2] = 1.0;
  bb[j + 1][2] = 1.0;
  t = (0.1 * 1.0) * as[p][o][0];
  ax[0] = ai = ar[p][o][0];
  ay[0] = al = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  ao = at[p][o][0];

  t = (0.1 * 1.0) * as[p][o][1];
  ax[1] = aj = ar[p][o][1];
  ay[1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  ap = at[p][o][1];
  n = 1;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o][n + 1];
  ax[n + 1] = aj = ar[p][o][n + 1];
  ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o][n + 1];
  az[n][0] = w[0] = 0.0;
  az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an;
  az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[n][0] = w[0];
  ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[n][2] = w[2];
  ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[n][4] = w[4];
  bb[n][0] = w[0];
  bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[n][2] = w[2];
  bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[n][4] = w[4];

  n = 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o][n + 1];
  ax[n + 1] = aj = ar[p][o][n + 1];
  ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o][n + 1];
  az[n][0] = w[0] = 0.0;
  az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[n][0] = w[0];
  ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[n][2] = w[2];
  ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[n][4] = w[4];
  bb[n][0] = w[0];
  bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[n][2] = w[2];
  bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[n][4] = w[4];

  for (n = 3; n <= m - 4; n++) {
    ak = ai;
    ai = aj;
    an = al;
    al = am;
    t = (0.1 * 1.0) * as[p][o][n + 1];
    ax[n + 1] = aj = ar[p][o][n + 1];
    ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
    aq = ao;
    ao = ap;
    ap = at[p][o][n + 1];
    az[n][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[n][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    ba[n][0] = w[0];
    ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    ba[n][2] = w[2];
    ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    ba[n][4] = w[4];
    bb[n][0] = w[0];
    bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    bb[n][2] = w[2];
    bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    bb[n][4] = w[4];
  }

  n = m - 3;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o][n + 1];
  ax[n + 1] = aj = ar[p][o][n + 1];
  ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o][n + 1];
  az[n][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][4] = w[4] = 0.0;
  ba[n][0] = w[0];
  ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[n][2] = w[2];
  ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[n][4] = w[4];
  bb[n][0] = w[0];
  bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[n][2] = w[2];
  bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[n][4] = w[4];

  n = m - 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o][n + 1];
  ax[n + 1] = aj = ar[p][o][n + 1];
  ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o][n + 1];
  az[n][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am;
  az[n][4] = w[4] = 0.0;
  ba[n][0] = w[0];
  ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[n][2] = w[2];
  ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[n][4] = w[4];
  bb[n][0] = w[0];
  bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[n][2] = w[2];
  bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[n][4] = w[4];
  x[2] = az[0][2];
  x[3] = az[0][3];
  y[1] = az[1][1];
  y[2] = az[1][2];

  ag[0] = au[p][o][0][0];
  ag[1] = au[p][o][0][1];
  ag[2] = au[p][o][0][2];
  ah[0] = au[p][o][1][0];
  ah[1] = au[p][o][1][1];
  ah[2] = au[p][o][1][2];

  for (n = 0; n <= m - 3; n++) {
    q = n + 1;
    r = n + 2;

    w[2] = x[2];
    w[3] = x[3];
    w[4] = az[n][4];
    af[0] = ag[0];
    af[1] = ag[1];
    af[2] = ag[2];

    u = 1.0 / w[2];
    az[n][3] = w[3] = u * w[3];
    az[n][4] = w[4] = u * w[4];
    for (s = 0; s < 3; s++) {
      au[p][o][n][s] = af[s] = u * af[s];
    }

    x[1] = y[1];
    x[2] = y[2];
    x[3] = az[q][3];
    ag[0] = ah[0];
    ag[1] = ah[1];
    ag[2] = ah[2];

    az[q][2] = x[2] = x[2] - x[1] * w[3];
    x[3] = x[3] - x[1] * w[4];
    for (s = 0; s < 3; s++) {
      ag[s] = ag[s] - x[1] * af[s];
    }

    y[0] = az[r][0];
    y[1] = az[r][1];
    y[2] = az[r][2];
    ah[0] = au[p][o][r][0];
    ah[1] = au[p][o][r][1];
    ah[2] = au[p][o][r][2];

    az[r][1] = y[1] = y[1] - y[0] * w[3];
    y[2] = y[2] - y[0] * w[4];
    for (s = 0; s < 3; s++) {
      ah[s] = ah[s] - y[0] * af[s];
    }
  }

  n = m - 2;
  q = m - 1;

  w[2] = x[2];
  w[3] = x[3];
  w[4] = az[n][4];
  af[0] = ag[0];
  af[1] = ag[1];
  af[2] = ag[2];

  u = 1.0 / w[2];
  az[n][3] = w[3] = u * w[3];
  az[n][4] = w[4] = u * w[4];
  for (s = 0; s < 3; s++) {
    au[p][o][n][s] = af[s] = u * af[s];
  }

  x[1] = y[1];
  x[2] = y[2];
  x[3] = az[q][3];
  ag[0] = ah[0];
  ag[1] = ah[1];
  ag[2] = ah[2];

  az[q][2] = x[2] = x[2] - x[1] * w[3];
  az[q][3] = x[3] - x[1] * w[4];
  for (s = 0; s < 3; s++) {
    ag[s] = ag[s] - x[1] * af[s];
  }

  v = 1.0 / x[2];
  for (s = 0; s < 3; s++) {
    au[p][o][q][s] = v * ag[s];
  }

  aa[2] = ba[0][2];
  aa[3] = ba[0][3];
  ab[1] = ba[1][1];
  ab[2] = ba[1][2];
  ad[2] = bb[0][2];
  ad[3] = bb[0][3];
  ae[1] = bb[1][1];
  ae[2] = bb[1][2];

  ag[3] = au[p][o][0][3];
  ag[4] = au[p][o][0][4];
  ah[3] = au[p][o][1][3];
  ah[4] = au[p][o][1][4];

  for (n = 0; n <= m - 3; n++) {
    q = n + 1;
    r = n + 2;

    s = 3;

    z[2] = aa[2];
    z[3] = aa[3];
    z[4] = ba[n][4];
    af[s] = ag[s];
    u = 1.0 / z[2];
    ba[n][3] = z[3] = u * z[3];
    ba[n][4] = z[4] = u * z[4];
    au[p][o][n][s] = af[s] = u * af[s];

    aa[1] = ab[1];
    aa[2] = ab[2];
    aa[3] = ba[q][3];
    ag[s] = ah[s];
    ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
    aa[3] = aa[3] - aa[1] * z[4];
    ag[s] = ag[s] - aa[1] * af[s];

    ab[0] = ba[r][0];
    ab[1] = ba[r][1];
    ab[2] = ba[r][2];
    ah[s] = au[p][o][r][s];
    ba[r][1] = ab[1] = ab[1] - ab[0] * z[3];
    ab[2] = ab[2] - ab[0] * z[4];
    ah[s] = ah[s] - ab[0] * af[s];

    s = 4;

    ac[2] = ad[2];
    ac[3] = ad[3];
    ac[4] = bb[n][4];
    af[s] = ag[s];
    u = 1.0 / ac[2];
    bb[n][3] = ac[3] = u * ac[3];
    bb[n][4] = ac[4] = u * ac[4];
    au[p][o][n][s] = af[s] = u * af[s];

    ad[1] = ae[1];
    ad[2] = ae[2];
    ad[3] = bb[q][3];
    ag[s] = ah[s];
    bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
    ad[3] = ad[3] - ad[1] * ac[4];
    ag[s] = ag[s] - ad[1] * af[s];

    ae[0] = bb[r][0];
    ae[1] = bb[r][1];
    ae[2] = bb[r][2];
    ah[s] = au[p][o][r][s];
    bb[r][1] = ae[1] = ae[1] - ae[0] * ac[3];
    ae[2] = ae[2] - ae[0] * ac[4];
    ah[s] = ah[s] - ae[0] * af[s];
  }

  n = m - 2;
  q = m - 1;

  s = 3;

  z[2] = aa[2];
  z[3] = aa[3];
  z[4] = ba[n][4];
  af[s] = ag[s];
  u = 1.0 / z[2];
  ba[n][3] = z[3] = u * z[3];
  ba[n][4] = z[4] = u * z[4];
  au[p][o][n][s] = af[s] = u * af[s];

  aa[1] = ab[1];
  aa[2] = ab[2];
  aa[3] = ba[q][3];
  ag[s] = ah[s];
  ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
  ba[q][3] = aa[3] = aa[3] - aa[1] * z[4];
  ag[s] = ag[s] - aa[1] * af[s];

  s = 4;

  ac[2] = ad[2];
  ac[3] = ad[3];
  ac[4] = bb[n][4];
  af[s] = ag[s];
  u = 1.0 / ac[2];
  bb[n][3] = ac[3] = u * ac[3];
  bb[n][4] = ac[4] = u * ac[4];
  au[p][o][n][s] = af[s] = u * af[s];

  ad[1] = ae[1];
  ad[2] = ae[2];
  ad[3] = bb[q][3];
  ag[s] = ah[s];
  bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
  bb[q][3] = ad[3] = ad[3] - ad[1] * ac[4];
  ag[s] = ag[s] - ad[1] * af[s];

  au[p][o][q][3] = ag[3] / aa[2];
  au[p][o][q][4] = ag[4] / ad[2];

  n = m - 2;
  q = m - 1;
  w[3] = az[n][3];

  for (s = 0; s < 3; s++) {
    ag[s] = au[p][o][q][s];
    au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s];
  }

  ag[3] = au[p][o][q][3];
  au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[n][3] * ag[3];
  ag[4] = au[p][o][q][4];
  au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[n][3] * ag[4];

  for (n = m - 3; n >= 0; n--) {
    q = n + 1;
    r = n + 2;
    w[3] = az[n][3];
    w[4] = az[n][4];
    for (s = 0; s < 3; s++) {
      ah[s] = ag[s];
      ag[s] = af[s];
      au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s] - w[4] * ah[s];
    }

    ah[3] = ag[3];
    ag[3] = af[3];
    au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[n][3] * ag[3] - ba[n][4] * ah[3];
    ah[4] = ag[4];
    ag[4] = af[4];
    au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[n][3] * ag[4] - bb[n][4] * ah[4];
  }
}","[ 51  17  52 ..., 127   0 127]"
531,npb-3.3-SP-x_solve,S,829,135,9,0,232,0,804152,60,CPU,0.09599500000000001,0.158803,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, __global double* h, __global double* i, int j, int k, int l, int m) {
  int n, o, p, q, r, s;
  double t, u, v;
  double w[5], x[5], y[5];
  double z[5], aa[5], ab[5];
  double ac[5], ad[5], ae[5];
  double af[5], ag[5], ah[5];
  double ai, aj, ak;
  double al, am, an;
  double ao, ap, aq;

  p = get_global_id(1) + 1;
  o = get_global_id(0) + 1;
  if (p > l || o > k)
    return;

  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])a;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])d;

  int av = (p - 1) * k + (o - 1);
  int aw = av * 12;
  __global double* ax = (__global double*)&e[aw];
  __global double* ay = (__global double*)&f[aw];

  aw = av * ((12 / 2 * 2) + 1) * 5;
  __global double(*az)[5] = (__global double(*)[5]) & g[aw];
  __global double(*ba)[5] = (__global double(*)[5]) & h[aw];
  __global double(*bb)[5] = (__global double(*)[5]) & i[aw];

  for (s = 0; s < 5; s++) {
    az[0][s] = 0.0;
    ba[0][s] = 0.0;
    bb[0][s] = 0.0;
    az[j + 1][s] = 0.0;
    ba[j + 1][s] = 0.0;
    bb[j + 1][s] = 0.0;
  }
  az[0][2] = 1.0;
  ba[0][2] = 1.0;
  bb[0][2] = 1.0;
  az[j + 1][2] = 1.0;
  ba[j + 1][2] = 1.0;
  bb[j + 1][2] = 1.0;
  t = (0.1 * 1.0) * as[p][o][0];
  ax[0] = ai = ar[p][o][0];
  ay[0] = al = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  ao = at[p][o][0];

  t = (0.1 * 1.0) * as[p][o][1];
  ax[1] = aj = ar[p][o][1];
  ay[1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  ap = at[p][o][1];
  n = 1;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o][n + 1];
  ax[n + 1] = aj = ar[p][o][n + 1];
  ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o][n + 1];
  az[n][0] = w[0] = 0.0;
  az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an;
  az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[n][0] = w[0];
  ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[n][2] = w[2];
  ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[n][4] = w[4];
  bb[n][0] = w[0];
  bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[n][2] = w[2];
  bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[n][4] = w[4];

  n = 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o][n + 1];
  ax[n + 1] = aj = ar[p][o][n + 1];
  ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o][n + 1];
  az[n][0] = w[0] = 0.0;
  az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[n][0] = w[0];
  ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[n][2] = w[2];
  ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[n][4] = w[4];
  bb[n][0] = w[0];
  bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[n][2] = w[2];
  bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[n][4] = w[4];

  for (n = 3; n <= m - 4; n++) {
    ak = ai;
    ai = aj;
    an = al;
    al = am;
    t = (0.1 * 1.0) * as[p][o][n + 1];
    ax[n + 1] = aj = ar[p][o][n + 1];
    ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
    aq = ao;
    ao = ap;
    ap = at[p][o][n + 1];
    az[n][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[n][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    ba[n][0] = w[0];
    ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    ba[n][2] = w[2];
    ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    ba[n][4] = w[4];
    bb[n][0] = w[0];
    bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    bb[n][2] = w[2];
    bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    bb[n][4] = w[4];
  }

  n = m - 3;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o][n + 1];
  ax[n + 1] = aj = ar[p][o][n + 1];
  ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o][n + 1];
  az[n][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][4] = w[4] = 0.0;
  ba[n][0] = w[0];
  ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[n][2] = w[2];
  ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[n][4] = w[4];
  bb[n][0] = w[0];
  bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[n][2] = w[2];
  bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[n][4] = w[4];

  n = m - 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o][n + 1];
  ax[n + 1] = aj = ar[p][o][n + 1];
  ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o][n + 1];
  az[n][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am;
  az[n][4] = w[4] = 0.0;
  ba[n][0] = w[0];
  ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[n][2] = w[2];
  ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[n][4] = w[4];
  bb[n][0] = w[0];
  bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[n][2] = w[2];
  bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[n][4] = w[4];
  x[2] = az[0][2];
  x[3] = az[0][3];
  y[1] = az[1][1];
  y[2] = az[1][2];

  ag[0] = au[p][o][0][0];
  ag[1] = au[p][o][0][1];
  ag[2] = au[p][o][0][2];
  ah[0] = au[p][o][1][0];
  ah[1] = au[p][o][1][1];
  ah[2] = au[p][o][1][2];

  for (n = 0; n <= m - 3; n++) {
    q = n + 1;
    r = n + 2;

    w[2] = x[2];
    w[3] = x[3];
    w[4] = az[n][4];
    af[0] = ag[0];
    af[1] = ag[1];
    af[2] = ag[2];

    u = 1.0 / w[2];
    az[n][3] = w[3] = u * w[3];
    az[n][4] = w[4] = u * w[4];
    for (s = 0; s < 3; s++) {
      au[p][o][n][s] = af[s] = u * af[s];
    }

    x[1] = y[1];
    x[2] = y[2];
    x[3] = az[q][3];
    ag[0] = ah[0];
    ag[1] = ah[1];
    ag[2] = ah[2];

    az[q][2] = x[2] = x[2] - x[1] * w[3];
    x[3] = x[3] - x[1] * w[4];
    for (s = 0; s < 3; s++) {
      ag[s] = ag[s] - x[1] * af[s];
    }

    y[0] = az[r][0];
    y[1] = az[r][1];
    y[2] = az[r][2];
    ah[0] = au[p][o][r][0];
    ah[1] = au[p][o][r][1];
    ah[2] = au[p][o][r][2];

    az[r][1] = y[1] = y[1] - y[0] * w[3];
    y[2] = y[2] - y[0] * w[4];
    for (s = 0; s < 3; s++) {
      ah[s] = ah[s] - y[0] * af[s];
    }
  }

  n = m - 2;
  q = m - 1;

  w[2] = x[2];
  w[3] = x[3];
  w[4] = az[n][4];
  af[0] = ag[0];
  af[1] = ag[1];
  af[2] = ag[2];

  u = 1.0 / w[2];
  az[n][3] = w[3] = u * w[3];
  az[n][4] = w[4] = u * w[4];
  for (s = 0; s < 3; s++) {
    au[p][o][n][s] = af[s] = u * af[s];
  }

  x[1] = y[1];
  x[2] = y[2];
  x[3] = az[q][3];
  ag[0] = ah[0];
  ag[1] = ah[1];
  ag[2] = ah[2];

  az[q][2] = x[2] = x[2] - x[1] * w[3];
  az[q][3] = x[3] - x[1] * w[4];
  for (s = 0; s < 3; s++) {
    ag[s] = ag[s] - x[1] * af[s];
  }

  v = 1.0 / x[2];
  for (s = 0; s < 3; s++) {
    au[p][o][q][s] = v * ag[s];
  }

  aa[2] = ba[0][2];
  aa[3] = ba[0][3];
  ab[1] = ba[1][1];
  ab[2] = ba[1][2];
  ad[2] = bb[0][2];
  ad[3] = bb[0][3];
  ae[1] = bb[1][1];
  ae[2] = bb[1][2];

  ag[3] = au[p][o][0][3];
  ag[4] = au[p][o][0][4];
  ah[3] = au[p][o][1][3];
  ah[4] = au[p][o][1][4];

  for (n = 0; n <= m - 3; n++) {
    q = n + 1;
    r = n + 2;

    s = 3;

    z[2] = aa[2];
    z[3] = aa[3];
    z[4] = ba[n][4];
    af[s] = ag[s];
    u = 1.0 / z[2];
    ba[n][3] = z[3] = u * z[3];
    ba[n][4] = z[4] = u * z[4];
    au[p][o][n][s] = af[s] = u * af[s];

    aa[1] = ab[1];
    aa[2] = ab[2];
    aa[3] = ba[q][3];
    ag[s] = ah[s];
    ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
    aa[3] = aa[3] - aa[1] * z[4];
    ag[s] = ag[s] - aa[1] * af[s];

    ab[0] = ba[r][0];
    ab[1] = ba[r][1];
    ab[2] = ba[r][2];
    ah[s] = au[p][o][r][s];
    ba[r][1] = ab[1] = ab[1] - ab[0] * z[3];
    ab[2] = ab[2] - ab[0] * z[4];
    ah[s] = ah[s] - ab[0] * af[s];

    s = 4;

    ac[2] = ad[2];
    ac[3] = ad[3];
    ac[4] = bb[n][4];
    af[s] = ag[s];
    u = 1.0 / ac[2];
    bb[n][3] = ac[3] = u * ac[3];
    bb[n][4] = ac[4] = u * ac[4];
    au[p][o][n][s] = af[s] = u * af[s];

    ad[1] = ae[1];
    ad[2] = ae[2];
    ad[3] = bb[q][3];
    ag[s] = ah[s];
    bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
    ad[3] = ad[3] - ad[1] * ac[4];
    ag[s] = ag[s] - ad[1] * af[s];

    ae[0] = bb[r][0];
    ae[1] = bb[r][1];
    ae[2] = bb[r][2];
    ah[s] = au[p][o][r][s];
    bb[r][1] = ae[1] = ae[1] - ae[0] * ac[3];
    ae[2] = ae[2] - ae[0] * ac[4];
    ah[s] = ah[s] - ae[0] * af[s];
  }

  n = m - 2;
  q = m - 1;

  s = 3;

  z[2] = aa[2];
  z[3] = aa[3];
  z[4] = ba[n][4];
  af[s] = ag[s];
  u = 1.0 / z[2];
  ba[n][3] = z[3] = u * z[3];
  ba[n][4] = z[4] = u * z[4];
  au[p][o][n][s] = af[s] = u * af[s];

  aa[1] = ab[1];
  aa[2] = ab[2];
  aa[3] = ba[q][3];
  ag[s] = ah[s];
  ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
  ba[q][3] = aa[3] = aa[3] - aa[1] * z[4];
  ag[s] = ag[s] - aa[1] * af[s];

  s = 4;

  ac[2] = ad[2];
  ac[3] = ad[3];
  ac[4] = bb[n][4];
  af[s] = ag[s];
  u = 1.0 / ac[2];
  bb[n][3] = ac[3] = u * ac[3];
  bb[n][4] = ac[4] = u * ac[4];
  au[p][o][n][s] = af[s] = u * af[s];

  ad[1] = ae[1];
  ad[2] = ae[2];
  ad[3] = bb[q][3];
  ag[s] = ah[s];
  bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
  bb[q][3] = ad[3] = ad[3] - ad[1] * ac[4];
  ag[s] = ag[s] - ad[1] * af[s];

  au[p][o][q][3] = ag[3] / aa[2];
  au[p][o][q][4] = ag[4] / ad[2];

  n = m - 2;
  q = m - 1;
  w[3] = az[n][3];

  for (s = 0; s < 3; s++) {
    ag[s] = au[p][o][q][s];
    au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s];
  }

  ag[3] = au[p][o][q][3];
  au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[n][3] * ag[3];
  ag[4] = au[p][o][q][4];
  au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[n][3] * ag[4];

  for (n = m - 3; n >= 0; n--) {
    q = n + 1;
    r = n + 2;
    w[3] = az[n][3];
    w[4] = az[n][4];
    for (s = 0; s < 3; s++) {
      ah[s] = ag[s];
      ag[s] = af[s];
      au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s] - w[4] * ah[s];
    }

    ah[3] = ag[3];
    ag[3] = af[3];
    au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[n][3] * ag[3] - ba[n][4] * ah[3];
    ah[4] = ag[4];
    ag[4] = af[4];
    au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[n][3] * ag[4] - bb[n][4] * ah[4];
  }
}","[ 51  17  52 ..., 127   0 127]"
532,npb-3.3-SP-x_solve,W,829,135,9,0,232,0,20401432,34,CPU,0.585437,0.720145,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, __global double* h, __global double* i, int j, int k, int l, int m) {
  int n, o, p, q, r, s;
  double t, u, v;
  double w[5], x[5], y[5];
  double z[5], aa[5], ab[5];
  double ac[5], ad[5], ae[5];
  double af[5], ag[5], ah[5];
  double ai, aj, ak;
  double al, am, an;
  double ao, ap, aq;

  p = get_global_id(1) + 1;
  o = get_global_id(0) + 1;
  if (p > l || o > k)
    return;

  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])a;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])d;

  int av = (p - 1) * k + (o - 1);
  int aw = av * 12;
  __global double* ax = (__global double*)&e[aw];
  __global double* ay = (__global double*)&f[aw];

  aw = av * ((12 / 2 * 2) + 1) * 5;
  __global double(*az)[5] = (__global double(*)[5]) & g[aw];
  __global double(*ba)[5] = (__global double(*)[5]) & h[aw];
  __global double(*bb)[5] = (__global double(*)[5]) & i[aw];

  for (s = 0; s < 5; s++) {
    az[0][s] = 0.0;
    ba[0][s] = 0.0;
    bb[0][s] = 0.0;
    az[j + 1][s] = 0.0;
    ba[j + 1][s] = 0.0;
    bb[j + 1][s] = 0.0;
  }
  az[0][2] = 1.0;
  ba[0][2] = 1.0;
  bb[0][2] = 1.0;
  az[j + 1][2] = 1.0;
  ba[j + 1][2] = 1.0;
  bb[j + 1][2] = 1.0;
  t = (0.1 * 1.0) * as[p][o][0];
  ax[0] = ai = ar[p][o][0];
  ay[0] = al = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  ao = at[p][o][0];

  t = (0.1 * 1.0) * as[p][o][1];
  ax[1] = aj = ar[p][o][1];
  ay[1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  ap = at[p][o][1];
  n = 1;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o][n + 1];
  ax[n + 1] = aj = ar[p][o][n + 1];
  ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o][n + 1];
  az[n][0] = w[0] = 0.0;
  az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an;
  az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[n][0] = w[0];
  ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[n][2] = w[2];
  ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[n][4] = w[4];
  bb[n][0] = w[0];
  bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[n][2] = w[2];
  bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[n][4] = w[4];

  n = 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o][n + 1];
  ax[n + 1] = aj = ar[p][o][n + 1];
  ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o][n + 1];
  az[n][0] = w[0] = 0.0;
  az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[n][0] = w[0];
  ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[n][2] = w[2];
  ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[n][4] = w[4];
  bb[n][0] = w[0];
  bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[n][2] = w[2];
  bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[n][4] = w[4];

  for (n = 3; n <= m - 4; n++) {
    ak = ai;
    ai = aj;
    an = al;
    al = am;
    t = (0.1 * 1.0) * as[p][o][n + 1];
    ax[n + 1] = aj = ar[p][o][n + 1];
    ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
    aq = ao;
    ao = ap;
    ap = at[p][o][n + 1];
    az[n][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[n][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    ba[n][0] = w[0];
    ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    ba[n][2] = w[2];
    ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    ba[n][4] = w[4];
    bb[n][0] = w[0];
    bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    bb[n][2] = w[2];
    bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    bb[n][4] = w[4];
  }

  n = m - 3;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o][n + 1];
  ax[n + 1] = aj = ar[p][o][n + 1];
  ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o][n + 1];
  az[n][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][4] = w[4] = 0.0;
  ba[n][0] = w[0];
  ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[n][2] = w[2];
  ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[n][4] = w[4];
  bb[n][0] = w[0];
  bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[n][2] = w[2];
  bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[n][4] = w[4];

  n = m - 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o][n + 1];
  ax[n + 1] = aj = ar[p][o][n + 1];
  ay[n + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o][n + 1];
  az[n][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[n][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[n][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am;
  az[n][4] = w[4] = 0.0;
  ba[n][0] = w[0];
  ba[n][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[n][2] = w[2];
  ba[n][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[n][4] = w[4];
  bb[n][0] = w[0];
  bb[n][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[n][2] = w[2];
  bb[n][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[n][4] = w[4];
  x[2] = az[0][2];
  x[3] = az[0][3];
  y[1] = az[1][1];
  y[2] = az[1][2];

  ag[0] = au[p][o][0][0];
  ag[1] = au[p][o][0][1];
  ag[2] = au[p][o][0][2];
  ah[0] = au[p][o][1][0];
  ah[1] = au[p][o][1][1];
  ah[2] = au[p][o][1][2];

  for (n = 0; n <= m - 3; n++) {
    q = n + 1;
    r = n + 2;

    w[2] = x[2];
    w[3] = x[3];
    w[4] = az[n][4];
    af[0] = ag[0];
    af[1] = ag[1];
    af[2] = ag[2];

    u = 1.0 / w[2];
    az[n][3] = w[3] = u * w[3];
    az[n][4] = w[4] = u * w[4];
    for (s = 0; s < 3; s++) {
      au[p][o][n][s] = af[s] = u * af[s];
    }

    x[1] = y[1];
    x[2] = y[2];
    x[3] = az[q][3];
    ag[0] = ah[0];
    ag[1] = ah[1];
    ag[2] = ah[2];

    az[q][2] = x[2] = x[2] - x[1] * w[3];
    x[3] = x[3] - x[1] * w[4];
    for (s = 0; s < 3; s++) {
      ag[s] = ag[s] - x[1] * af[s];
    }

    y[0] = az[r][0];
    y[1] = az[r][1];
    y[2] = az[r][2];
    ah[0] = au[p][o][r][0];
    ah[1] = au[p][o][r][1];
    ah[2] = au[p][o][r][2];

    az[r][1] = y[1] = y[1] - y[0] * w[3];
    y[2] = y[2] - y[0] * w[4];
    for (s = 0; s < 3; s++) {
      ah[s] = ah[s] - y[0] * af[s];
    }
  }

  n = m - 2;
  q = m - 1;

  w[2] = x[2];
  w[3] = x[3];
  w[4] = az[n][4];
  af[0] = ag[0];
  af[1] = ag[1];
  af[2] = ag[2];

  u = 1.0 / w[2];
  az[n][3] = w[3] = u * w[3];
  az[n][4] = w[4] = u * w[4];
  for (s = 0; s < 3; s++) {
    au[p][o][n][s] = af[s] = u * af[s];
  }

  x[1] = y[1];
  x[2] = y[2];
  x[3] = az[q][3];
  ag[0] = ah[0];
  ag[1] = ah[1];
  ag[2] = ah[2];

  az[q][2] = x[2] = x[2] - x[1] * w[3];
  az[q][3] = x[3] - x[1] * w[4];
  for (s = 0; s < 3; s++) {
    ag[s] = ag[s] - x[1] * af[s];
  }

  v = 1.0 / x[2];
  for (s = 0; s < 3; s++) {
    au[p][o][q][s] = v * ag[s];
  }

  aa[2] = ba[0][2];
  aa[3] = ba[0][3];
  ab[1] = ba[1][1];
  ab[2] = ba[1][2];
  ad[2] = bb[0][2];
  ad[3] = bb[0][3];
  ae[1] = bb[1][1];
  ae[2] = bb[1][2];

  ag[3] = au[p][o][0][3];
  ag[4] = au[p][o][0][4];
  ah[3] = au[p][o][1][3];
  ah[4] = au[p][o][1][4];

  for (n = 0; n <= m - 3; n++) {
    q = n + 1;
    r = n + 2;

    s = 3;

    z[2] = aa[2];
    z[3] = aa[3];
    z[4] = ba[n][4];
    af[s] = ag[s];
    u = 1.0 / z[2];
    ba[n][3] = z[3] = u * z[3];
    ba[n][4] = z[4] = u * z[4];
    au[p][o][n][s] = af[s] = u * af[s];

    aa[1] = ab[1];
    aa[2] = ab[2];
    aa[3] = ba[q][3];
    ag[s] = ah[s];
    ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
    aa[3] = aa[3] - aa[1] * z[4];
    ag[s] = ag[s] - aa[1] * af[s];

    ab[0] = ba[r][0];
    ab[1] = ba[r][1];
    ab[2] = ba[r][2];
    ah[s] = au[p][o][r][s];
    ba[r][1] = ab[1] = ab[1] - ab[0] * z[3];
    ab[2] = ab[2] - ab[0] * z[4];
    ah[s] = ah[s] - ab[0] * af[s];

    s = 4;

    ac[2] = ad[2];
    ac[3] = ad[3];
    ac[4] = bb[n][4];
    af[s] = ag[s];
    u = 1.0 / ac[2];
    bb[n][3] = ac[3] = u * ac[3];
    bb[n][4] = ac[4] = u * ac[4];
    au[p][o][n][s] = af[s] = u * af[s];

    ad[1] = ae[1];
    ad[2] = ae[2];
    ad[3] = bb[q][3];
    ag[s] = ah[s];
    bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
    ad[3] = ad[3] - ad[1] * ac[4];
    ag[s] = ag[s] - ad[1] * af[s];

    ae[0] = bb[r][0];
    ae[1] = bb[r][1];
    ae[2] = bb[r][2];
    ah[s] = au[p][o][r][s];
    bb[r][1] = ae[1] = ae[1] - ae[0] * ac[3];
    ae[2] = ae[2] - ae[0] * ac[4];
    ah[s] = ah[s] - ae[0] * af[s];
  }

  n = m - 2;
  q = m - 1;

  s = 3;

  z[2] = aa[2];
  z[3] = aa[3];
  z[4] = ba[n][4];
  af[s] = ag[s];
  u = 1.0 / z[2];
  ba[n][3] = z[3] = u * z[3];
  ba[n][4] = z[4] = u * z[4];
  au[p][o][n][s] = af[s] = u * af[s];

  aa[1] = ab[1];
  aa[2] = ab[2];
  aa[3] = ba[q][3];
  ag[s] = ah[s];
  ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
  ba[q][3] = aa[3] = aa[3] - aa[1] * z[4];
  ag[s] = ag[s] - aa[1] * af[s];

  s = 4;

  ac[2] = ad[2];
  ac[3] = ad[3];
  ac[4] = bb[n][4];
  af[s] = ag[s];
  u = 1.0 / ac[2];
  bb[n][3] = ac[3] = u * ac[3];
  bb[n][4] = ac[4] = u * ac[4];
  au[p][o][n][s] = af[s] = u * af[s];

  ad[1] = ae[1];
  ad[2] = ae[2];
  ad[3] = bb[q][3];
  ag[s] = ah[s];
  bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
  bb[q][3] = ad[3] = ad[3] - ad[1] * ac[4];
  ag[s] = ag[s] - ad[1] * af[s];

  au[p][o][q][3] = ag[3] / aa[2];
  au[p][o][q][4] = ag[4] / ad[2];

  n = m - 2;
  q = m - 1;
  w[3] = az[n][3];

  for (s = 0; s < 3; s++) {
    ag[s] = au[p][o][q][s];
    au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s];
  }

  ag[3] = au[p][o][q][3];
  au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[n][3] * ag[3];
  ag[4] = au[p][o][q][4];
  au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[n][3] * ag[4];

  for (n = m - 3; n >= 0; n--) {
    q = n + 1;
    r = n + 2;
    w[3] = az[n][3];
    w[4] = az[n][4];
    for (s = 0; s < 3; s++) {
      ah[s] = ag[s];
      ag[s] = af[s];
      au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s] - w[4] * ah[s];
    }

    ah[3] = ag[3];
    ag[3] = af[3];
    au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[n][3] * ag[3] - ba[n][4] * ah[3];
    ah[4] = ag[4];
    ag[4] = af[4];
    au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[n][3] * ag[4] - bb[n][4] * ah[4];
  }
}","[ 51  17  52 ..., 127   0 127]"
533,npb-3.3-SP-y_solve,A,829,135,9,0,233,0,113095432,62,GPU,5.767824,4.132469,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, __global double* h, __global double* i, int j, int k, int l, int m) {
  int n, o, p, q, r, s;
  double t, u, v;
  double w[5], x[5], y[5];
  double z[5], aa[5], ab[5];
  double ac[5], ad[5], ae[5];
  double af[5], ag[5], ah[5];
  double ai, aj, ak;
  double al, am, an;
  double ao, ap, aq;

  p = get_global_id(1) + 1;
  n = get_global_id(0) + 1;
  if (p > l || n > j)
    return;

  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])a;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])d;

  int av = (p - 1) * j + (n - 1);
  int aw = av * 12;
  __global double* ax = (__global double*)&e[aw];
  __global double* ay = (__global double*)&f[aw];

  aw = av * ((12 / 2 * 2) + 1) * 5;
  __global double(*az)[5] = (__global double(*)[5]) & g[aw];
  __global double(*ba)[5] = (__global double(*)[5]) & h[aw];
  __global double(*bb)[5] = (__global double(*)[5]) & i[aw];

  for (s = 0; s < 5; s++) {
    az[0][s] = 0.0;
    ba[0][s] = 0.0;
    bb[0][s] = 0.0;
    az[k + 1][s] = 0.0;
    ba[k + 1][s] = 0.0;
    bb[k + 1][s] = 0.0;
  }
  az[0][2] = 1.0;
  ba[0][2] = 1.0;
  bb[0][2] = 1.0;
  az[k + 1][2] = 1.0;
  ba[k + 1][2] = 1.0;
  bb[k + 1][2] = 1.0;

  t = (0.1 * 1.0) * as[p][0][n];
  ax[0] = ai = ar[p][0][n];
  ay[0] = al = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  ao = at[p][0][n];

  t = (0.1 * 1.0) * as[p][1][n];
  ax[1] = aj = ar[p][1][n];
  ay[1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  ap = at[p][1][n];
  o = 1;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o + 1][n];
  ax[o + 1] = aj = ar[p][o + 1][n];
  ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o + 1][n];
  az[o][0] = w[0] = 0.0;
  az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an;
  az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[o][0] = w[0];
  ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[o][2] = w[2];
  ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[o][4] = w[4];
  bb[o][0] = w[0];
  bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[o][2] = w[2];
  bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[o][4] = w[4];

  o = 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o + 1][n];
  ax[o + 1] = aj = ar[p][o + 1][n];
  ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o + 1][n];
  az[o][0] = w[0] = 0.0;
  az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[o][0] = w[0];
  ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[o][2] = w[2];
  ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[o][4] = w[4];
  bb[o][0] = w[0];
  bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[o][2] = w[2];
  bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[o][4] = w[4];

  for (o = 3; o <= m - 4; o++) {
    ak = ai;
    ai = aj;
    an = al;
    al = am;
    t = (0.1 * 1.0) * as[p][o + 1][n];
    ax[o + 1] = aj = ar[p][o + 1][n];
    ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
    aq = ao;
    ao = ap;
    ap = at[p][o + 1][n];
    az[o][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[o][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    ba[o][0] = w[0];
    ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    ba[o][2] = w[2];
    ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    ba[o][4] = w[4];
    bb[o][0] = w[0];
    bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    bb[o][2] = w[2];
    bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    bb[o][4] = w[4];
  }

  o = m - 3;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o + 1][n];
  ax[o + 1] = aj = ar[p][o + 1][n];
  ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o + 1][n];
  az[o][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][4] = w[4] = 0.0;
  ba[o][0] = w[0];
  ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[o][2] = w[2];
  ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[o][4] = w[4];
  bb[o][0] = w[0];
  bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[o][2] = w[2];
  bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[o][4] = w[4];

  o = m - 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o + 1][n];
  ax[o + 1] = aj = ar[p][o + 1][n];
  ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o + 1][n];
  az[o][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am;
  az[o][4] = w[4] = 0.0;
  ba[o][0] = w[0];
  ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[o][2] = w[2];
  ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[o][4] = w[4];
  bb[o][0] = w[0];
  bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[o][2] = w[2];
  bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[o][4] = w[4];

  x[2] = az[0][2];
  x[3] = az[0][3];
  y[1] = az[1][1];
  y[2] = az[1][2];

  ag[0] = au[p][0][n][0];
  ag[1] = au[p][0][n][1];
  ag[2] = au[p][0][n][2];
  ah[0] = au[p][1][n][0];
  ah[1] = au[p][1][n][1];
  ah[2] = au[p][1][n][2];

  for (o = 0; o <= m - 3; o++) {
    q = o + 1;
    r = o + 2;

    w[2] = x[2];
    w[3] = x[3];
    w[4] = az[o][4];
    af[0] = ag[0];
    af[1] = ag[1];
    af[2] = ag[2];

    u = 1.0 / w[2];
    az[o][3] = w[3] = u * w[3];
    az[o][4] = w[4] = u * w[4];
    for (s = 0; s < 3; s++) {
      au[p][o][n][s] = af[s] = u * af[s];
    }

    x[1] = y[1];
    x[2] = y[2];
    x[3] = az[q][3];
    ag[0] = ah[0];
    ag[1] = ah[1];
    ag[2] = ah[2];

    az[q][2] = x[2] = x[2] - x[1] * w[3];
    x[3] = x[3] - x[1] * w[4];
    for (s = 0; s < 3; s++) {
      ag[s] = ag[s] - x[1] * af[s];
    }

    y[0] = az[r][0];
    y[1] = az[r][1];
    y[2] = az[r][2];
    ah[0] = au[p][r][n][0];
    ah[1] = au[p][r][n][1];
    ah[2] = au[p][r][n][2];

    az[r][1] = y[1] = y[1] - y[0] * w[3];
    y[2] = y[2] - y[0] * w[4];
    for (s = 0; s < 3; s++) {
      ah[s] = ah[s] - y[0] * af[s];
    }
  }

  o = m - 2;
  q = m - 1;

  w[2] = x[2];
  w[3] = x[3];
  w[4] = az[o][4];
  af[0] = ag[0];
  af[1] = ag[1];
  af[2] = ag[2];

  u = 1.0 / w[2];
  az[o][3] = w[3] = u * w[3];
  az[o][4] = w[4] = u * w[4];
  for (s = 0; s < 3; s++) {
    au[p][o][n][s] = af[s] = u * af[s];
  }

  x[1] = y[1];
  x[2] = y[2];
  x[3] = az[q][3];
  ag[0] = ah[0];
  ag[1] = ah[1];
  ag[2] = ah[2];

  az[q][2] = x[2] = x[2] - x[1] * w[3];
  az[q][3] = x[3] - x[1] * w[4];
  for (s = 0; s < 3; s++) {
    ag[s] = ag[s] - x[1] * af[s];
  }

  v = 1.0 / x[2];
  for (s = 0; s < 3; s++) {
    au[p][q][n][s] = v * ag[s];
  }

  aa[2] = ba[0][2];
  aa[3] = ba[0][3];
  ab[1] = ba[1][1];
  ab[2] = ba[1][2];
  ad[2] = bb[0][2];
  ad[3] = bb[0][3];
  ae[1] = bb[1][1];
  ae[2] = bb[1][2];

  ag[3] = au[p][0][n][3];
  ag[4] = au[p][0][n][4];
  ah[3] = au[p][1][n][3];
  ah[4] = au[p][1][n][4];

  for (o = 0; o <= m - 3; o++) {
    q = o + 1;
    r = o + 2;

    s = 3;

    z[2] = aa[2];
    z[3] = aa[3];
    z[4] = ba[o][4];
    af[s] = ag[s];
    u = 1.0 / z[2];
    ba[o][3] = z[3] = u * z[3];
    ba[o][4] = z[4] = u * z[4];
    au[p][o][n][s] = af[s] = u * af[s];

    aa[1] = ab[1];
    aa[2] = ab[2];
    aa[3] = ba[q][3];
    ag[s] = ah[s];
    ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
    aa[3] = aa[3] - aa[1] * z[4];
    ag[s] = ag[s] - aa[1] * af[s];

    ab[0] = ba[r][0];
    ab[1] = ba[r][1];
    ab[2] = ba[r][2];
    ah[s] = au[p][r][n][s];
    ba[r][1] = ab[1] = ab[1] - ab[0] * z[3];
    ab[2] = ab[2] - ab[0] * z[4];
    ah[s] = ah[s] - ab[0] * af[s];

    s = 4;

    ac[2] = ad[2];
    ac[3] = ad[3];
    ac[4] = bb[o][4];
    af[s] = ag[s];
    u = 1.0 / ac[2];
    bb[o][3] = ac[3] = u * ac[3];
    bb[o][4] = ac[4] = u * ac[4];
    au[p][o][n][s] = af[s] = u * af[s];

    ad[1] = ae[1];
    ad[2] = ae[2];
    ad[3] = bb[q][3];
    ag[s] = ah[s];
    bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
    ad[3] = ad[3] - ad[1] * ac[4];
    ag[s] = ag[s] - ad[1] * af[s];

    ae[0] = bb[r][0];
    ae[1] = bb[r][1];
    ae[2] = bb[r][2];
    ah[s] = au[p][r][n][s];
    bb[r][1] = ae[1] = ae[1] - ae[0] * ac[3];
    ae[2] = ae[2] - ae[0] * ac[4];
    ah[s] = ah[s] - ae[0] * af[s];
  }

  o = m - 2;
  q = m - 1;

  s = 3;

  z[2] = aa[2];
  z[3] = aa[3];
  z[4] = ba[o][4];
  af[s] = ag[s];
  u = 1.0 / z[2];
  ba[o][3] = z[3] = u * z[3];
  ba[o][4] = z[4] = u * z[4];
  au[p][o][n][s] = af[s] = u * af[s];

  aa[1] = ab[1];
  aa[2] = ab[2];
  aa[3] = ba[q][3];
  ag[s] = ah[s];
  ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
  ba[q][3] = aa[3] = aa[3] - aa[1] * z[4];
  ag[s] = ag[s] - aa[1] * af[s];

  s = 4;

  ac[2] = ad[2];
  ac[3] = ad[3];
  ac[4] = bb[o][4];
  af[s] = ag[s];
  u = 1.0 / ac[2];
  bb[o][3] = ac[3] = u * ac[3];
  bb[o][4] = ac[4] = u * ac[4];
  au[p][o][n][s] = af[s] = u * af[s];

  ad[1] = ae[1];
  ad[2] = ae[2];
  ad[3] = bb[q][3];
  ag[s] = ah[s];
  bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
  bb[q][3] = ad[3] = ad[3] - ad[1] * ac[4];
  ag[s] = ag[s] - ad[1] * af[s];

  au[p][q][n][3] = ag[3] / aa[2];
  au[p][q][n][4] = ag[4] / ad[2];

  o = m - 2;
  q = m - 1;
  w[3] = az[o][3];
  for (s = 0; s < 3; s++) {
    ag[s] = au[p][q][n][s];
    au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * au[p][q][n][s];
  }

  ag[3] = au[p][q][n][3];
  au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[o][3] * ag[3];
  ag[4] = au[p][q][n][4];
  au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[o][3] * ag[4];

  for (o = m - 3; o >= 0; o--) {
    q = o + 1;
    r = o + 2;
    w[3] = az[o][3];
    w[4] = az[o][4];
    for (s = 0; s < 3; s++) {
      ah[s] = ag[s];
      ag[s] = af[s];
      au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s] - w[4] * ah[s];
    }

    ah[3] = ag[3];
    ag[3] = af[3];
    au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[o][3] * ag[3] - ba[o][4] * ah[3];
    ah[4] = ag[4];
    ag[4] = af[4];
    au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[o][3] * ag[4] - bb[o][4] * ah[4];
  }
}","[ 51  18  52 ..., 127   0 127]"
534,npb-3.3-SP-y_solve,B,829,135,9,0,233,0,454882072,32,CPU,23.865347,24.087671,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, __global double* h, __global double* i, int j, int k, int l, int m) {
  int n, o, p, q, r, s;
  double t, u, v;
  double w[5], x[5], y[5];
  double z[5], aa[5], ab[5];
  double ac[5], ad[5], ae[5];
  double af[5], ag[5], ah[5];
  double ai, aj, ak;
  double al, am, an;
  double ao, ap, aq;

  p = get_global_id(1) + 1;
  n = get_global_id(0) + 1;
  if (p > l || n > j)
    return;

  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])a;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])d;

  int av = (p - 1) * j + (n - 1);
  int aw = av * 12;
  __global double* ax = (__global double*)&e[aw];
  __global double* ay = (__global double*)&f[aw];

  aw = av * ((12 / 2 * 2) + 1) * 5;
  __global double(*az)[5] = (__global double(*)[5]) & g[aw];
  __global double(*ba)[5] = (__global double(*)[5]) & h[aw];
  __global double(*bb)[5] = (__global double(*)[5]) & i[aw];

  for (s = 0; s < 5; s++) {
    az[0][s] = 0.0;
    ba[0][s] = 0.0;
    bb[0][s] = 0.0;
    az[k + 1][s] = 0.0;
    ba[k + 1][s] = 0.0;
    bb[k + 1][s] = 0.0;
  }
  az[0][2] = 1.0;
  ba[0][2] = 1.0;
  bb[0][2] = 1.0;
  az[k + 1][2] = 1.0;
  ba[k + 1][2] = 1.0;
  bb[k + 1][2] = 1.0;

  t = (0.1 * 1.0) * as[p][0][n];
  ax[0] = ai = ar[p][0][n];
  ay[0] = al = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  ao = at[p][0][n];

  t = (0.1 * 1.0) * as[p][1][n];
  ax[1] = aj = ar[p][1][n];
  ay[1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  ap = at[p][1][n];
  o = 1;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o + 1][n];
  ax[o + 1] = aj = ar[p][o + 1][n];
  ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o + 1][n];
  az[o][0] = w[0] = 0.0;
  az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an;
  az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[o][0] = w[0];
  ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[o][2] = w[2];
  ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[o][4] = w[4];
  bb[o][0] = w[0];
  bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[o][2] = w[2];
  bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[o][4] = w[4];

  o = 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o + 1][n];
  ax[o + 1] = aj = ar[p][o + 1][n];
  ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o + 1][n];
  az[o][0] = w[0] = 0.0;
  az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[o][0] = w[0];
  ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[o][2] = w[2];
  ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[o][4] = w[4];
  bb[o][0] = w[0];
  bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[o][2] = w[2];
  bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[o][4] = w[4];

  for (o = 3; o <= m - 4; o++) {
    ak = ai;
    ai = aj;
    an = al;
    al = am;
    t = (0.1 * 1.0) * as[p][o + 1][n];
    ax[o + 1] = aj = ar[p][o + 1][n];
    ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
    aq = ao;
    ao = ap;
    ap = at[p][o + 1][n];
    az[o][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[o][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    ba[o][0] = w[0];
    ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    ba[o][2] = w[2];
    ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    ba[o][4] = w[4];
    bb[o][0] = w[0];
    bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    bb[o][2] = w[2];
    bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    bb[o][4] = w[4];
  }

  o = m - 3;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o + 1][n];
  ax[o + 1] = aj = ar[p][o + 1][n];
  ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o + 1][n];
  az[o][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][4] = w[4] = 0.0;
  ba[o][0] = w[0];
  ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[o][2] = w[2];
  ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[o][4] = w[4];
  bb[o][0] = w[0];
  bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[o][2] = w[2];
  bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[o][4] = w[4];

  o = m - 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o + 1][n];
  ax[o + 1] = aj = ar[p][o + 1][n];
  ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o + 1][n];
  az[o][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am;
  az[o][4] = w[4] = 0.0;
  ba[o][0] = w[0];
  ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[o][2] = w[2];
  ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[o][4] = w[4];
  bb[o][0] = w[0];
  bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[o][2] = w[2];
  bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[o][4] = w[4];

  x[2] = az[0][2];
  x[3] = az[0][3];
  y[1] = az[1][1];
  y[2] = az[1][2];

  ag[0] = au[p][0][n][0];
  ag[1] = au[p][0][n][1];
  ag[2] = au[p][0][n][2];
  ah[0] = au[p][1][n][0];
  ah[1] = au[p][1][n][1];
  ah[2] = au[p][1][n][2];

  for (o = 0; o <= m - 3; o++) {
    q = o + 1;
    r = o + 2;

    w[2] = x[2];
    w[3] = x[3];
    w[4] = az[o][4];
    af[0] = ag[0];
    af[1] = ag[1];
    af[2] = ag[2];

    u = 1.0 / w[2];
    az[o][3] = w[3] = u * w[3];
    az[o][4] = w[4] = u * w[4];
    for (s = 0; s < 3; s++) {
      au[p][o][n][s] = af[s] = u * af[s];
    }

    x[1] = y[1];
    x[2] = y[2];
    x[3] = az[q][3];
    ag[0] = ah[0];
    ag[1] = ah[1];
    ag[2] = ah[2];

    az[q][2] = x[2] = x[2] - x[1] * w[3];
    x[3] = x[3] - x[1] * w[4];
    for (s = 0; s < 3; s++) {
      ag[s] = ag[s] - x[1] * af[s];
    }

    y[0] = az[r][0];
    y[1] = az[r][1];
    y[2] = az[r][2];
    ah[0] = au[p][r][n][0];
    ah[1] = au[p][r][n][1];
    ah[2] = au[p][r][n][2];

    az[r][1] = y[1] = y[1] - y[0] * w[3];
    y[2] = y[2] - y[0] * w[4];
    for (s = 0; s < 3; s++) {
      ah[s] = ah[s] - y[0] * af[s];
    }
  }

  o = m - 2;
  q = m - 1;

  w[2] = x[2];
  w[3] = x[3];
  w[4] = az[o][4];
  af[0] = ag[0];
  af[1] = ag[1];
  af[2] = ag[2];

  u = 1.0 / w[2];
  az[o][3] = w[3] = u * w[3];
  az[o][4] = w[4] = u * w[4];
  for (s = 0; s < 3; s++) {
    au[p][o][n][s] = af[s] = u * af[s];
  }

  x[1] = y[1];
  x[2] = y[2];
  x[3] = az[q][3];
  ag[0] = ah[0];
  ag[1] = ah[1];
  ag[2] = ah[2];

  az[q][2] = x[2] = x[2] - x[1] * w[3];
  az[q][3] = x[3] - x[1] * w[4];
  for (s = 0; s < 3; s++) {
    ag[s] = ag[s] - x[1] * af[s];
  }

  v = 1.0 / x[2];
  for (s = 0; s < 3; s++) {
    au[p][q][n][s] = v * ag[s];
  }

  aa[2] = ba[0][2];
  aa[3] = ba[0][3];
  ab[1] = ba[1][1];
  ab[2] = ba[1][2];
  ad[2] = bb[0][2];
  ad[3] = bb[0][3];
  ae[1] = bb[1][1];
  ae[2] = bb[1][2];

  ag[3] = au[p][0][n][3];
  ag[4] = au[p][0][n][4];
  ah[3] = au[p][1][n][3];
  ah[4] = au[p][1][n][4];

  for (o = 0; o <= m - 3; o++) {
    q = o + 1;
    r = o + 2;

    s = 3;

    z[2] = aa[2];
    z[3] = aa[3];
    z[4] = ba[o][4];
    af[s] = ag[s];
    u = 1.0 / z[2];
    ba[o][3] = z[3] = u * z[3];
    ba[o][4] = z[4] = u * z[4];
    au[p][o][n][s] = af[s] = u * af[s];

    aa[1] = ab[1];
    aa[2] = ab[2];
    aa[3] = ba[q][3];
    ag[s] = ah[s];
    ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
    aa[3] = aa[3] - aa[1] * z[4];
    ag[s] = ag[s] - aa[1] * af[s];

    ab[0] = ba[r][0];
    ab[1] = ba[r][1];
    ab[2] = ba[r][2];
    ah[s] = au[p][r][n][s];
    ba[r][1] = ab[1] = ab[1] - ab[0] * z[3];
    ab[2] = ab[2] - ab[0] * z[4];
    ah[s] = ah[s] - ab[0] * af[s];

    s = 4;

    ac[2] = ad[2];
    ac[3] = ad[3];
    ac[4] = bb[o][4];
    af[s] = ag[s];
    u = 1.0 / ac[2];
    bb[o][3] = ac[3] = u * ac[3];
    bb[o][4] = ac[4] = u * ac[4];
    au[p][o][n][s] = af[s] = u * af[s];

    ad[1] = ae[1];
    ad[2] = ae[2];
    ad[3] = bb[q][3];
    ag[s] = ah[s];
    bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
    ad[3] = ad[3] - ad[1] * ac[4];
    ag[s] = ag[s] - ad[1] * af[s];

    ae[0] = bb[r][0];
    ae[1] = bb[r][1];
    ae[2] = bb[r][2];
    ah[s] = au[p][r][n][s];
    bb[r][1] = ae[1] = ae[1] - ae[0] * ac[3];
    ae[2] = ae[2] - ae[0] * ac[4];
    ah[s] = ah[s] - ae[0] * af[s];
  }

  o = m - 2;
  q = m - 1;

  s = 3;

  z[2] = aa[2];
  z[3] = aa[3];
  z[4] = ba[o][4];
  af[s] = ag[s];
  u = 1.0 / z[2];
  ba[o][3] = z[3] = u * z[3];
  ba[o][4] = z[4] = u * z[4];
  au[p][o][n][s] = af[s] = u * af[s];

  aa[1] = ab[1];
  aa[2] = ab[2];
  aa[3] = ba[q][3];
  ag[s] = ah[s];
  ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
  ba[q][3] = aa[3] = aa[3] - aa[1] * z[4];
  ag[s] = ag[s] - aa[1] * af[s];

  s = 4;

  ac[2] = ad[2];
  ac[3] = ad[3];
  ac[4] = bb[o][4];
  af[s] = ag[s];
  u = 1.0 / ac[2];
  bb[o][3] = ac[3] = u * ac[3];
  bb[o][4] = ac[4] = u * ac[4];
  au[p][o][n][s] = af[s] = u * af[s];

  ad[1] = ae[1];
  ad[2] = ae[2];
  ad[3] = bb[q][3];
  ag[s] = ah[s];
  bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
  bb[q][3] = ad[3] = ad[3] - ad[1] * ac[4];
  ag[s] = ag[s] - ad[1] * af[s];

  au[p][q][n][3] = ag[3] / aa[2];
  au[p][q][n][4] = ag[4] / ad[2];

  o = m - 2;
  q = m - 1;
  w[3] = az[o][3];
  for (s = 0; s < 3; s++) {
    ag[s] = au[p][q][n][s];
    au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * au[p][q][n][s];
  }

  ag[3] = au[p][q][n][3];
  au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[o][3] * ag[3];
  ag[4] = au[p][q][n][4];
  au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[o][3] * ag[4];

  for (o = m - 3; o >= 0; o--) {
    q = o + 1;
    r = o + 2;
    w[3] = az[o][3];
    w[4] = az[o][4];
    for (s = 0; s < 3; s++) {
      ah[s] = ag[s];
      ag[s] = af[s];
      au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s] - w[4] * ah[s];
    }

    ah[3] = ag[3];
    ag[3] = af[3];
    au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[o][3] * ag[3] - ba[o][4] * ah[3];
    ah[4] = ag[4];
    ag[4] = af[4];
    au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[o][3] * ag[4] - bb[o][4] * ah[4];
  }
}","[ 51  18  52 ..., 127   0 127]"
535,npb-3.3-SP-y_solve,C,829,135,9,0,233,0,1815064752,64,CPU,97.36393199999999,105.938236,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, __global double* h, __global double* i, int j, int k, int l, int m) {
  int n, o, p, q, r, s;
  double t, u, v;
  double w[5], x[5], y[5];
  double z[5], aa[5], ab[5];
  double ac[5], ad[5], ae[5];
  double af[5], ag[5], ah[5];
  double ai, aj, ak;
  double al, am, an;
  double ao, ap, aq;

  p = get_global_id(1) + 1;
  n = get_global_id(0) + 1;
  if (p > l || n > j)
    return;

  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])a;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])d;

  int av = (p - 1) * j + (n - 1);
  int aw = av * 12;
  __global double* ax = (__global double*)&e[aw];
  __global double* ay = (__global double*)&f[aw];

  aw = av * ((12 / 2 * 2) + 1) * 5;
  __global double(*az)[5] = (__global double(*)[5]) & g[aw];
  __global double(*ba)[5] = (__global double(*)[5]) & h[aw];
  __global double(*bb)[5] = (__global double(*)[5]) & i[aw];

  for (s = 0; s < 5; s++) {
    az[0][s] = 0.0;
    ba[0][s] = 0.0;
    bb[0][s] = 0.0;
    az[k + 1][s] = 0.0;
    ba[k + 1][s] = 0.0;
    bb[k + 1][s] = 0.0;
  }
  az[0][2] = 1.0;
  ba[0][2] = 1.0;
  bb[0][2] = 1.0;
  az[k + 1][2] = 1.0;
  ba[k + 1][2] = 1.0;
  bb[k + 1][2] = 1.0;

  t = (0.1 * 1.0) * as[p][0][n];
  ax[0] = ai = ar[p][0][n];
  ay[0] = al = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  ao = at[p][0][n];

  t = (0.1 * 1.0) * as[p][1][n];
  ax[1] = aj = ar[p][1][n];
  ay[1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  ap = at[p][1][n];
  o = 1;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o + 1][n];
  ax[o + 1] = aj = ar[p][o + 1][n];
  ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o + 1][n];
  az[o][0] = w[0] = 0.0;
  az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an;
  az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[o][0] = w[0];
  ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[o][2] = w[2];
  ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[o][4] = w[4];
  bb[o][0] = w[0];
  bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[o][2] = w[2];
  bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[o][4] = w[4];

  o = 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o + 1][n];
  ax[o + 1] = aj = ar[p][o + 1][n];
  ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o + 1][n];
  az[o][0] = w[0] = 0.0;
  az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[o][0] = w[0];
  ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[o][2] = w[2];
  ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[o][4] = w[4];
  bb[o][0] = w[0];
  bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[o][2] = w[2];
  bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[o][4] = w[4];

  for (o = 3; o <= m - 4; o++) {
    ak = ai;
    ai = aj;
    an = al;
    al = am;
    t = (0.1 * 1.0) * as[p][o + 1][n];
    ax[o + 1] = aj = ar[p][o + 1][n];
    ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
    aq = ao;
    ao = ap;
    ap = at[p][o + 1][n];
    az[o][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[o][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    ba[o][0] = w[0];
    ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    ba[o][2] = w[2];
    ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    ba[o][4] = w[4];
    bb[o][0] = w[0];
    bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    bb[o][2] = w[2];
    bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    bb[o][4] = w[4];
  }

  o = m - 3;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o + 1][n];
  ax[o + 1] = aj = ar[p][o + 1][n];
  ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o + 1][n];
  az[o][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][4] = w[4] = 0.0;
  ba[o][0] = w[0];
  ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[o][2] = w[2];
  ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[o][4] = w[4];
  bb[o][0] = w[0];
  bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[o][2] = w[2];
  bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[o][4] = w[4];

  o = m - 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o + 1][n];
  ax[o + 1] = aj = ar[p][o + 1][n];
  ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o + 1][n];
  az[o][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am;
  az[o][4] = w[4] = 0.0;
  ba[o][0] = w[0];
  ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[o][2] = w[2];
  ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[o][4] = w[4];
  bb[o][0] = w[0];
  bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[o][2] = w[2];
  bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[o][4] = w[4];

  x[2] = az[0][2];
  x[3] = az[0][3];
  y[1] = az[1][1];
  y[2] = az[1][2];

  ag[0] = au[p][0][n][0];
  ag[1] = au[p][0][n][1];
  ag[2] = au[p][0][n][2];
  ah[0] = au[p][1][n][0];
  ah[1] = au[p][1][n][1];
  ah[2] = au[p][1][n][2];

  for (o = 0; o <= m - 3; o++) {
    q = o + 1;
    r = o + 2;

    w[2] = x[2];
    w[3] = x[3];
    w[4] = az[o][4];
    af[0] = ag[0];
    af[1] = ag[1];
    af[2] = ag[2];

    u = 1.0 / w[2];
    az[o][3] = w[3] = u * w[3];
    az[o][4] = w[4] = u * w[4];
    for (s = 0; s < 3; s++) {
      au[p][o][n][s] = af[s] = u * af[s];
    }

    x[1] = y[1];
    x[2] = y[2];
    x[3] = az[q][3];
    ag[0] = ah[0];
    ag[1] = ah[1];
    ag[2] = ah[2];

    az[q][2] = x[2] = x[2] - x[1] * w[3];
    x[3] = x[3] - x[1] * w[4];
    for (s = 0; s < 3; s++) {
      ag[s] = ag[s] - x[1] * af[s];
    }

    y[0] = az[r][0];
    y[1] = az[r][1];
    y[2] = az[r][2];
    ah[0] = au[p][r][n][0];
    ah[1] = au[p][r][n][1];
    ah[2] = au[p][r][n][2];

    az[r][1] = y[1] = y[1] - y[0] * w[3];
    y[2] = y[2] - y[0] * w[4];
    for (s = 0; s < 3; s++) {
      ah[s] = ah[s] - y[0] * af[s];
    }
  }

  o = m - 2;
  q = m - 1;

  w[2] = x[2];
  w[3] = x[3];
  w[4] = az[o][4];
  af[0] = ag[0];
  af[1] = ag[1];
  af[2] = ag[2];

  u = 1.0 / w[2];
  az[o][3] = w[3] = u * w[3];
  az[o][4] = w[4] = u * w[4];
  for (s = 0; s < 3; s++) {
    au[p][o][n][s] = af[s] = u * af[s];
  }

  x[1] = y[1];
  x[2] = y[2];
  x[3] = az[q][3];
  ag[0] = ah[0];
  ag[1] = ah[1];
  ag[2] = ah[2];

  az[q][2] = x[2] = x[2] - x[1] * w[3];
  az[q][3] = x[3] - x[1] * w[4];
  for (s = 0; s < 3; s++) {
    ag[s] = ag[s] - x[1] * af[s];
  }

  v = 1.0 / x[2];
  for (s = 0; s < 3; s++) {
    au[p][q][n][s] = v * ag[s];
  }

  aa[2] = ba[0][2];
  aa[3] = ba[0][3];
  ab[1] = ba[1][1];
  ab[2] = ba[1][2];
  ad[2] = bb[0][2];
  ad[3] = bb[0][3];
  ae[1] = bb[1][1];
  ae[2] = bb[1][2];

  ag[3] = au[p][0][n][3];
  ag[4] = au[p][0][n][4];
  ah[3] = au[p][1][n][3];
  ah[4] = au[p][1][n][4];

  for (o = 0; o <= m - 3; o++) {
    q = o + 1;
    r = o + 2;

    s = 3;

    z[2] = aa[2];
    z[3] = aa[3];
    z[4] = ba[o][4];
    af[s] = ag[s];
    u = 1.0 / z[2];
    ba[o][3] = z[3] = u * z[3];
    ba[o][4] = z[4] = u * z[4];
    au[p][o][n][s] = af[s] = u * af[s];

    aa[1] = ab[1];
    aa[2] = ab[2];
    aa[3] = ba[q][3];
    ag[s] = ah[s];
    ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
    aa[3] = aa[3] - aa[1] * z[4];
    ag[s] = ag[s] - aa[1] * af[s];

    ab[0] = ba[r][0];
    ab[1] = ba[r][1];
    ab[2] = ba[r][2];
    ah[s] = au[p][r][n][s];
    ba[r][1] = ab[1] = ab[1] - ab[0] * z[3];
    ab[2] = ab[2] - ab[0] * z[4];
    ah[s] = ah[s] - ab[0] * af[s];

    s = 4;

    ac[2] = ad[2];
    ac[3] = ad[3];
    ac[4] = bb[o][4];
    af[s] = ag[s];
    u = 1.0 / ac[2];
    bb[o][3] = ac[3] = u * ac[3];
    bb[o][4] = ac[4] = u * ac[4];
    au[p][o][n][s] = af[s] = u * af[s];

    ad[1] = ae[1];
    ad[2] = ae[2];
    ad[3] = bb[q][3];
    ag[s] = ah[s];
    bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
    ad[3] = ad[3] - ad[1] * ac[4];
    ag[s] = ag[s] - ad[1] * af[s];

    ae[0] = bb[r][0];
    ae[1] = bb[r][1];
    ae[2] = bb[r][2];
    ah[s] = au[p][r][n][s];
    bb[r][1] = ae[1] = ae[1] - ae[0] * ac[3];
    ae[2] = ae[2] - ae[0] * ac[4];
    ah[s] = ah[s] - ae[0] * af[s];
  }

  o = m - 2;
  q = m - 1;

  s = 3;

  z[2] = aa[2];
  z[3] = aa[3];
  z[4] = ba[o][4];
  af[s] = ag[s];
  u = 1.0 / z[2];
  ba[o][3] = z[3] = u * z[3];
  ba[o][4] = z[4] = u * z[4];
  au[p][o][n][s] = af[s] = u * af[s];

  aa[1] = ab[1];
  aa[2] = ab[2];
  aa[3] = ba[q][3];
  ag[s] = ah[s];
  ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
  ba[q][3] = aa[3] = aa[3] - aa[1] * z[4];
  ag[s] = ag[s] - aa[1] * af[s];

  s = 4;

  ac[2] = ad[2];
  ac[3] = ad[3];
  ac[4] = bb[o][4];
  af[s] = ag[s];
  u = 1.0 / ac[2];
  bb[o][3] = ac[3] = u * ac[3];
  bb[o][4] = ac[4] = u * ac[4];
  au[p][o][n][s] = af[s] = u * af[s];

  ad[1] = ae[1];
  ad[2] = ae[2];
  ad[3] = bb[q][3];
  ag[s] = ah[s];
  bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
  bb[q][3] = ad[3] = ad[3] - ad[1] * ac[4];
  ag[s] = ag[s] - ad[1] * af[s];

  au[p][q][n][3] = ag[3] / aa[2];
  au[p][q][n][4] = ag[4] / ad[2];

  o = m - 2;
  q = m - 1;
  w[3] = az[o][3];
  for (s = 0; s < 3; s++) {
    ag[s] = au[p][q][n][s];
    au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * au[p][q][n][s];
  }

  ag[3] = au[p][q][n][3];
  au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[o][3] * ag[3];
  ag[4] = au[p][q][n][4];
  au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[o][3] * ag[4];

  for (o = m - 3; o >= 0; o--) {
    q = o + 1;
    r = o + 2;
    w[3] = az[o][3];
    w[4] = az[o][4];
    for (s = 0; s < 3; s++) {
      ah[s] = ag[s];
      ag[s] = af[s];
      au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s] - w[4] * ah[s];
    }

    ah[3] = ag[3];
    ag[3] = af[3];
    au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[o][3] * ag[3] - ba[o][4] * ah[3];
    ah[4] = ag[4];
    ag[4] = af[4];
    au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[o][3] * ag[4] - bb[o][4] * ah[4];
  }
}","[ 51  18  52 ..., 127   0 127]"
536,npb-3.3-SP-y_solve,S,829,135,9,0,233,0,804152,60,CPU,0.095157,0.151499,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, __global double* h, __global double* i, int j, int k, int l, int m) {
  int n, o, p, q, r, s;
  double t, u, v;
  double w[5], x[5], y[5];
  double z[5], aa[5], ab[5];
  double ac[5], ad[5], ae[5];
  double af[5], ag[5], ah[5];
  double ai, aj, ak;
  double al, am, an;
  double ao, ap, aq;

  p = get_global_id(1) + 1;
  n = get_global_id(0) + 1;
  if (p > l || n > j)
    return;

  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])a;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])d;

  int av = (p - 1) * j + (n - 1);
  int aw = av * 12;
  __global double* ax = (__global double*)&e[aw];
  __global double* ay = (__global double*)&f[aw];

  aw = av * ((12 / 2 * 2) + 1) * 5;
  __global double(*az)[5] = (__global double(*)[5]) & g[aw];
  __global double(*ba)[5] = (__global double(*)[5]) & h[aw];
  __global double(*bb)[5] = (__global double(*)[5]) & i[aw];

  for (s = 0; s < 5; s++) {
    az[0][s] = 0.0;
    ba[0][s] = 0.0;
    bb[0][s] = 0.0;
    az[k + 1][s] = 0.0;
    ba[k + 1][s] = 0.0;
    bb[k + 1][s] = 0.0;
  }
  az[0][2] = 1.0;
  ba[0][2] = 1.0;
  bb[0][2] = 1.0;
  az[k + 1][2] = 1.0;
  ba[k + 1][2] = 1.0;
  bb[k + 1][2] = 1.0;

  t = (0.1 * 1.0) * as[p][0][n];
  ax[0] = ai = ar[p][0][n];
  ay[0] = al = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  ao = at[p][0][n];

  t = (0.1 * 1.0) * as[p][1][n];
  ax[1] = aj = ar[p][1][n];
  ay[1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  ap = at[p][1][n];
  o = 1;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o + 1][n];
  ax[o + 1] = aj = ar[p][o + 1][n];
  ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o + 1][n];
  az[o][0] = w[0] = 0.0;
  az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an;
  az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[o][0] = w[0];
  ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[o][2] = w[2];
  ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[o][4] = w[4];
  bb[o][0] = w[0];
  bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[o][2] = w[2];
  bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[o][4] = w[4];

  o = 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o + 1][n];
  ax[o + 1] = aj = ar[p][o + 1][n];
  ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o + 1][n];
  az[o][0] = w[0] = 0.0;
  az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[o][0] = w[0];
  ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[o][2] = w[2];
  ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[o][4] = w[4];
  bb[o][0] = w[0];
  bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[o][2] = w[2];
  bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[o][4] = w[4];

  for (o = 3; o <= m - 4; o++) {
    ak = ai;
    ai = aj;
    an = al;
    al = am;
    t = (0.1 * 1.0) * as[p][o + 1][n];
    ax[o + 1] = aj = ar[p][o + 1][n];
    ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
    aq = ao;
    ao = ap;
    ap = at[p][o + 1][n];
    az[o][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[o][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    ba[o][0] = w[0];
    ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    ba[o][2] = w[2];
    ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    ba[o][4] = w[4];
    bb[o][0] = w[0];
    bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    bb[o][2] = w[2];
    bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    bb[o][4] = w[4];
  }

  o = m - 3;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o + 1][n];
  ax[o + 1] = aj = ar[p][o + 1][n];
  ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o + 1][n];
  az[o][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][4] = w[4] = 0.0;
  ba[o][0] = w[0];
  ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[o][2] = w[2];
  ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[o][4] = w[4];
  bb[o][0] = w[0];
  bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[o][2] = w[2];
  bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[o][4] = w[4];

  o = m - 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o + 1][n];
  ax[o + 1] = aj = ar[p][o + 1][n];
  ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o + 1][n];
  az[o][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am;
  az[o][4] = w[4] = 0.0;
  ba[o][0] = w[0];
  ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[o][2] = w[2];
  ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[o][4] = w[4];
  bb[o][0] = w[0];
  bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[o][2] = w[2];
  bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[o][4] = w[4];

  x[2] = az[0][2];
  x[3] = az[0][3];
  y[1] = az[1][1];
  y[2] = az[1][2];

  ag[0] = au[p][0][n][0];
  ag[1] = au[p][0][n][1];
  ag[2] = au[p][0][n][2];
  ah[0] = au[p][1][n][0];
  ah[1] = au[p][1][n][1];
  ah[2] = au[p][1][n][2];

  for (o = 0; o <= m - 3; o++) {
    q = o + 1;
    r = o + 2;

    w[2] = x[2];
    w[3] = x[3];
    w[4] = az[o][4];
    af[0] = ag[0];
    af[1] = ag[1];
    af[2] = ag[2];

    u = 1.0 / w[2];
    az[o][3] = w[3] = u * w[3];
    az[o][4] = w[4] = u * w[4];
    for (s = 0; s < 3; s++) {
      au[p][o][n][s] = af[s] = u * af[s];
    }

    x[1] = y[1];
    x[2] = y[2];
    x[3] = az[q][3];
    ag[0] = ah[0];
    ag[1] = ah[1];
    ag[2] = ah[2];

    az[q][2] = x[2] = x[2] - x[1] * w[3];
    x[3] = x[3] - x[1] * w[4];
    for (s = 0; s < 3; s++) {
      ag[s] = ag[s] - x[1] * af[s];
    }

    y[0] = az[r][0];
    y[1] = az[r][1];
    y[2] = az[r][2];
    ah[0] = au[p][r][n][0];
    ah[1] = au[p][r][n][1];
    ah[2] = au[p][r][n][2];

    az[r][1] = y[1] = y[1] - y[0] * w[3];
    y[2] = y[2] - y[0] * w[4];
    for (s = 0; s < 3; s++) {
      ah[s] = ah[s] - y[0] * af[s];
    }
  }

  o = m - 2;
  q = m - 1;

  w[2] = x[2];
  w[3] = x[3];
  w[4] = az[o][4];
  af[0] = ag[0];
  af[1] = ag[1];
  af[2] = ag[2];

  u = 1.0 / w[2];
  az[o][3] = w[3] = u * w[3];
  az[o][4] = w[4] = u * w[4];
  for (s = 0; s < 3; s++) {
    au[p][o][n][s] = af[s] = u * af[s];
  }

  x[1] = y[1];
  x[2] = y[2];
  x[3] = az[q][3];
  ag[0] = ah[0];
  ag[1] = ah[1];
  ag[2] = ah[2];

  az[q][2] = x[2] = x[2] - x[1] * w[3];
  az[q][3] = x[3] - x[1] * w[4];
  for (s = 0; s < 3; s++) {
    ag[s] = ag[s] - x[1] * af[s];
  }

  v = 1.0 / x[2];
  for (s = 0; s < 3; s++) {
    au[p][q][n][s] = v * ag[s];
  }

  aa[2] = ba[0][2];
  aa[3] = ba[0][3];
  ab[1] = ba[1][1];
  ab[2] = ba[1][2];
  ad[2] = bb[0][2];
  ad[3] = bb[0][3];
  ae[1] = bb[1][1];
  ae[2] = bb[1][2];

  ag[3] = au[p][0][n][3];
  ag[4] = au[p][0][n][4];
  ah[3] = au[p][1][n][3];
  ah[4] = au[p][1][n][4];

  for (o = 0; o <= m - 3; o++) {
    q = o + 1;
    r = o + 2;

    s = 3;

    z[2] = aa[2];
    z[3] = aa[3];
    z[4] = ba[o][4];
    af[s] = ag[s];
    u = 1.0 / z[2];
    ba[o][3] = z[3] = u * z[3];
    ba[o][4] = z[4] = u * z[4];
    au[p][o][n][s] = af[s] = u * af[s];

    aa[1] = ab[1];
    aa[2] = ab[2];
    aa[3] = ba[q][3];
    ag[s] = ah[s];
    ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
    aa[3] = aa[3] - aa[1] * z[4];
    ag[s] = ag[s] - aa[1] * af[s];

    ab[0] = ba[r][0];
    ab[1] = ba[r][1];
    ab[2] = ba[r][2];
    ah[s] = au[p][r][n][s];
    ba[r][1] = ab[1] = ab[1] - ab[0] * z[3];
    ab[2] = ab[2] - ab[0] * z[4];
    ah[s] = ah[s] - ab[0] * af[s];

    s = 4;

    ac[2] = ad[2];
    ac[3] = ad[3];
    ac[4] = bb[o][4];
    af[s] = ag[s];
    u = 1.0 / ac[2];
    bb[o][3] = ac[3] = u * ac[3];
    bb[o][4] = ac[4] = u * ac[4];
    au[p][o][n][s] = af[s] = u * af[s];

    ad[1] = ae[1];
    ad[2] = ae[2];
    ad[3] = bb[q][3];
    ag[s] = ah[s];
    bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
    ad[3] = ad[3] - ad[1] * ac[4];
    ag[s] = ag[s] - ad[1] * af[s];

    ae[0] = bb[r][0];
    ae[1] = bb[r][1];
    ae[2] = bb[r][2];
    ah[s] = au[p][r][n][s];
    bb[r][1] = ae[1] = ae[1] - ae[0] * ac[3];
    ae[2] = ae[2] - ae[0] * ac[4];
    ah[s] = ah[s] - ae[0] * af[s];
  }

  o = m - 2;
  q = m - 1;

  s = 3;

  z[2] = aa[2];
  z[3] = aa[3];
  z[4] = ba[o][4];
  af[s] = ag[s];
  u = 1.0 / z[2];
  ba[o][3] = z[3] = u * z[3];
  ba[o][4] = z[4] = u * z[4];
  au[p][o][n][s] = af[s] = u * af[s];

  aa[1] = ab[1];
  aa[2] = ab[2];
  aa[3] = ba[q][3];
  ag[s] = ah[s];
  ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
  ba[q][3] = aa[3] = aa[3] - aa[1] * z[4];
  ag[s] = ag[s] - aa[1] * af[s];

  s = 4;

  ac[2] = ad[2];
  ac[3] = ad[3];
  ac[4] = bb[o][4];
  af[s] = ag[s];
  u = 1.0 / ac[2];
  bb[o][3] = ac[3] = u * ac[3];
  bb[o][4] = ac[4] = u * ac[4];
  au[p][o][n][s] = af[s] = u * af[s];

  ad[1] = ae[1];
  ad[2] = ae[2];
  ad[3] = bb[q][3];
  ag[s] = ah[s];
  bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
  bb[q][3] = ad[3] = ad[3] - ad[1] * ac[4];
  ag[s] = ag[s] - ad[1] * af[s];

  au[p][q][n][3] = ag[3] / aa[2];
  au[p][q][n][4] = ag[4] / ad[2];

  o = m - 2;
  q = m - 1;
  w[3] = az[o][3];
  for (s = 0; s < 3; s++) {
    ag[s] = au[p][q][n][s];
    au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * au[p][q][n][s];
  }

  ag[3] = au[p][q][n][3];
  au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[o][3] * ag[3];
  ag[4] = au[p][q][n][4];
  au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[o][3] * ag[4];

  for (o = m - 3; o >= 0; o--) {
    q = o + 1;
    r = o + 2;
    w[3] = az[o][3];
    w[4] = az[o][4];
    for (s = 0; s < 3; s++) {
      ah[s] = ag[s];
      ag[s] = af[s];
      au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s] - w[4] * ah[s];
    }

    ah[3] = ag[3];
    ag[3] = af[3];
    au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[o][3] * ag[3] - ba[o][4] * ah[3];
    ah[4] = ag[4];
    ag[4] = af[4];
    au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[o][3] * ag[4] - bb[o][4] * ah[4];
  }
}","[ 51  18  52 ..., 127   0 127]"
537,npb-3.3-SP-y_solve,W,829,135,9,0,233,0,20401432,34,CPU,0.520154,0.644093,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, __global double* h, __global double* i, int j, int k, int l, int m) {
  int n, o, p, q, r, s;
  double t, u, v;
  double w[5], x[5], y[5];
  double z[5], aa[5], ab[5];
  double ac[5], ad[5], ae[5];
  double af[5], ag[5], ah[5];
  double ai, aj, ak;
  double al, am, an;
  double ao, ap, aq;

  p = get_global_id(1) + 1;
  n = get_global_id(0) + 1;
  if (p > l || n > j)
    return;

  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])a;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])d;

  int av = (p - 1) * j + (n - 1);
  int aw = av * 12;
  __global double* ax = (__global double*)&e[aw];
  __global double* ay = (__global double*)&f[aw];

  aw = av * ((12 / 2 * 2) + 1) * 5;
  __global double(*az)[5] = (__global double(*)[5]) & g[aw];
  __global double(*ba)[5] = (__global double(*)[5]) & h[aw];
  __global double(*bb)[5] = (__global double(*)[5]) & i[aw];

  for (s = 0; s < 5; s++) {
    az[0][s] = 0.0;
    ba[0][s] = 0.0;
    bb[0][s] = 0.0;
    az[k + 1][s] = 0.0;
    ba[k + 1][s] = 0.0;
    bb[k + 1][s] = 0.0;
  }
  az[0][2] = 1.0;
  ba[0][2] = 1.0;
  bb[0][2] = 1.0;
  az[k + 1][2] = 1.0;
  ba[k + 1][2] = 1.0;
  bb[k + 1][2] = 1.0;

  t = (0.1 * 1.0) * as[p][0][n];
  ax[0] = ai = ar[p][0][n];
  ay[0] = al = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  ao = at[p][0][n];

  t = (0.1 * 1.0) * as[p][1][n];
  ax[1] = aj = ar[p][1][n];
  ay[1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  ap = at[p][1][n];
  o = 1;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o + 1][n];
  ax[o + 1] = aj = ar[p][o + 1][n];
  ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o + 1][n];
  az[o][0] = w[0] = 0.0;
  az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an;
  az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[o][0] = w[0];
  ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[o][2] = w[2];
  ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[o][4] = w[4];
  bb[o][0] = w[0];
  bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[o][2] = w[2];
  bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[o][4] = w[4];

  o = 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o + 1][n];
  ax[o + 1] = aj = ar[p][o + 1][n];
  ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o + 1][n];
  az[o][0] = w[0] = 0.0;
  az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[o][0] = w[0];
  ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[o][2] = w[2];
  ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[o][4] = w[4];
  bb[o][0] = w[0];
  bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[o][2] = w[2];
  bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[o][4] = w[4];

  for (o = 3; o <= m - 4; o++) {
    ak = ai;
    ai = aj;
    an = al;
    al = am;
    t = (0.1 * 1.0) * as[p][o + 1][n];
    ax[o + 1] = aj = ar[p][o + 1][n];
    ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
    aq = ao;
    ao = ap;
    ap = at[p][o + 1][n];
    az[o][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[o][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    ba[o][0] = w[0];
    ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    ba[o][2] = w[2];
    ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    ba[o][4] = w[4];
    bb[o][0] = w[0];
    bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    bb[o][2] = w[2];
    bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    bb[o][4] = w[4];
  }

  o = m - 3;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o + 1][n];
  ax[o + 1] = aj = ar[p][o + 1][n];
  ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o + 1][n];
  az[o][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][4] = w[4] = 0.0;
  ba[o][0] = w[0];
  ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[o][2] = w[2];
  ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[o][4] = w[4];
  bb[o][0] = w[0];
  bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[o][2] = w[2];
  bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[o][4] = w[4];

  o = m - 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p][o + 1][n];
  ax[o + 1] = aj = ar[p][o + 1][n];
  ay[o + 1] = am = ((((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) > (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))) ? (((0.75 + (4.0 / 3.0) * t) > (0.75 + (1.4 * 1.4) * t) ? (0.75 + (4.0 / 3.0) * t) : (0.75 + (1.4 * 1.4) * t))) : (((((0.75) > (0.75) ? (0.75) : (0.75)) + t) > (0.75) ? (((0.75) > (0.75) ? (0.75) : (0.75)) + t) : (0.75))));
  aq = ao;
  ao = ap;
  ap = at[p][o + 1][n];
  az[o][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[o][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[o][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am;
  az[o][4] = w[4] = 0.0;
  ba[o][0] = w[0];
  ba[o][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[o][2] = w[2];
  ba[o][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[o][4] = w[4];
  bb[o][0] = w[0];
  bb[o][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[o][2] = w[2];
  bb[o][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[o][4] = w[4];

  x[2] = az[0][2];
  x[3] = az[0][3];
  y[1] = az[1][1];
  y[2] = az[1][2];

  ag[0] = au[p][0][n][0];
  ag[1] = au[p][0][n][1];
  ag[2] = au[p][0][n][2];
  ah[0] = au[p][1][n][0];
  ah[1] = au[p][1][n][1];
  ah[2] = au[p][1][n][2];

  for (o = 0; o <= m - 3; o++) {
    q = o + 1;
    r = o + 2;

    w[2] = x[2];
    w[3] = x[3];
    w[4] = az[o][4];
    af[0] = ag[0];
    af[1] = ag[1];
    af[2] = ag[2];

    u = 1.0 / w[2];
    az[o][3] = w[3] = u * w[3];
    az[o][4] = w[4] = u * w[4];
    for (s = 0; s < 3; s++) {
      au[p][o][n][s] = af[s] = u * af[s];
    }

    x[1] = y[1];
    x[2] = y[2];
    x[3] = az[q][3];
    ag[0] = ah[0];
    ag[1] = ah[1];
    ag[2] = ah[2];

    az[q][2] = x[2] = x[2] - x[1] * w[3];
    x[3] = x[3] - x[1] * w[4];
    for (s = 0; s < 3; s++) {
      ag[s] = ag[s] - x[1] * af[s];
    }

    y[0] = az[r][0];
    y[1] = az[r][1];
    y[2] = az[r][2];
    ah[0] = au[p][r][n][0];
    ah[1] = au[p][r][n][1];
    ah[2] = au[p][r][n][2];

    az[r][1] = y[1] = y[1] - y[0] * w[3];
    y[2] = y[2] - y[0] * w[4];
    for (s = 0; s < 3; s++) {
      ah[s] = ah[s] - y[0] * af[s];
    }
  }

  o = m - 2;
  q = m - 1;

  w[2] = x[2];
  w[3] = x[3];
  w[4] = az[o][4];
  af[0] = ag[0];
  af[1] = ag[1];
  af[2] = ag[2];

  u = 1.0 / w[2];
  az[o][3] = w[3] = u * w[3];
  az[o][4] = w[4] = u * w[4];
  for (s = 0; s < 3; s++) {
    au[p][o][n][s] = af[s] = u * af[s];
  }

  x[1] = y[1];
  x[2] = y[2];
  x[3] = az[q][3];
  ag[0] = ah[0];
  ag[1] = ah[1];
  ag[2] = ah[2];

  az[q][2] = x[2] = x[2] - x[1] * w[3];
  az[q][3] = x[3] - x[1] * w[4];
  for (s = 0; s < 3; s++) {
    ag[s] = ag[s] - x[1] * af[s];
  }

  v = 1.0 / x[2];
  for (s = 0; s < 3; s++) {
    au[p][q][n][s] = v * ag[s];
  }

  aa[2] = ba[0][2];
  aa[3] = ba[0][3];
  ab[1] = ba[1][1];
  ab[2] = ba[1][2];
  ad[2] = bb[0][2];
  ad[3] = bb[0][3];
  ae[1] = bb[1][1];
  ae[2] = bb[1][2];

  ag[3] = au[p][0][n][3];
  ag[4] = au[p][0][n][4];
  ah[3] = au[p][1][n][3];
  ah[4] = au[p][1][n][4];

  for (o = 0; o <= m - 3; o++) {
    q = o + 1;
    r = o + 2;

    s = 3;

    z[2] = aa[2];
    z[3] = aa[3];
    z[4] = ba[o][4];
    af[s] = ag[s];
    u = 1.0 / z[2];
    ba[o][3] = z[3] = u * z[3];
    ba[o][4] = z[4] = u * z[4];
    au[p][o][n][s] = af[s] = u * af[s];

    aa[1] = ab[1];
    aa[2] = ab[2];
    aa[3] = ba[q][3];
    ag[s] = ah[s];
    ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
    aa[3] = aa[3] - aa[1] * z[4];
    ag[s] = ag[s] - aa[1] * af[s];

    ab[0] = ba[r][0];
    ab[1] = ba[r][1];
    ab[2] = ba[r][2];
    ah[s] = au[p][r][n][s];
    ba[r][1] = ab[1] = ab[1] - ab[0] * z[3];
    ab[2] = ab[2] - ab[0] * z[4];
    ah[s] = ah[s] - ab[0] * af[s];

    s = 4;

    ac[2] = ad[2];
    ac[3] = ad[3];
    ac[4] = bb[o][4];
    af[s] = ag[s];
    u = 1.0 / ac[2];
    bb[o][3] = ac[3] = u * ac[3];
    bb[o][4] = ac[4] = u * ac[4];
    au[p][o][n][s] = af[s] = u * af[s];

    ad[1] = ae[1];
    ad[2] = ae[2];
    ad[3] = bb[q][3];
    ag[s] = ah[s];
    bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
    ad[3] = ad[3] - ad[1] * ac[4];
    ag[s] = ag[s] - ad[1] * af[s];

    ae[0] = bb[r][0];
    ae[1] = bb[r][1];
    ae[2] = bb[r][2];
    ah[s] = au[p][r][n][s];
    bb[r][1] = ae[1] = ae[1] - ae[0] * ac[3];
    ae[2] = ae[2] - ae[0] * ac[4];
    ah[s] = ah[s] - ae[0] * af[s];
  }

  o = m - 2;
  q = m - 1;

  s = 3;

  z[2] = aa[2];
  z[3] = aa[3];
  z[4] = ba[o][4];
  af[s] = ag[s];
  u = 1.0 / z[2];
  ba[o][3] = z[3] = u * z[3];
  ba[o][4] = z[4] = u * z[4];
  au[p][o][n][s] = af[s] = u * af[s];

  aa[1] = ab[1];
  aa[2] = ab[2];
  aa[3] = ba[q][3];
  ag[s] = ah[s];
  ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
  ba[q][3] = aa[3] = aa[3] - aa[1] * z[4];
  ag[s] = ag[s] - aa[1] * af[s];

  s = 4;

  ac[2] = ad[2];
  ac[3] = ad[3];
  ac[4] = bb[o][4];
  af[s] = ag[s];
  u = 1.0 / ac[2];
  bb[o][3] = ac[3] = u * ac[3];
  bb[o][4] = ac[4] = u * ac[4];
  au[p][o][n][s] = af[s] = u * af[s];

  ad[1] = ae[1];
  ad[2] = ae[2];
  ad[3] = bb[q][3];
  ag[s] = ah[s];
  bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
  bb[q][3] = ad[3] = ad[3] - ad[1] * ac[4];
  ag[s] = ag[s] - ad[1] * af[s];

  au[p][q][n][3] = ag[3] / aa[2];
  au[p][q][n][4] = ag[4] / ad[2];

  o = m - 2;
  q = m - 1;
  w[3] = az[o][3];
  for (s = 0; s < 3; s++) {
    ag[s] = au[p][q][n][s];
    au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * au[p][q][n][s];
  }

  ag[3] = au[p][q][n][3];
  au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[o][3] * ag[3];
  ag[4] = au[p][q][n][4];
  au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[o][3] * ag[4];

  for (o = m - 3; o >= 0; o--) {
    q = o + 1;
    r = o + 2;
    w[3] = az[o][3];
    w[4] = az[o][4];
    for (s = 0; s < 3; s++) {
      ah[s] = ag[s];
      ag[s] = af[s];
      au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s] - w[4] * ah[s];
    }

    ah[3] = ag[3];
    ag[3] = af[3];
    au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[o][3] * ag[3] - ba[o][4] * ah[3];
    ah[4] = ag[4];
    ag[4] = af[4];
    au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[o][3] * ag[4] - bb[o][4] * ah[4];
  }
}","[ 51  18  52 ..., 127   0 127]"
538,npb-3.3-SP-z_solve,A,828,135,9,0,232,0,113095432,62,GPU,5.766558,4.111482,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, __global double* h, __global double* i, int j, int k, int l, int m) {
  int n, o, p, q, r, s;
  double t, u, v;
  double w[5], x[5], y[5];
  double z[5], aa[5], ab[5];
  double ac[5], ad[5], ae[5];
  double af[5], ag[5], ah[5];
  double ai, aj, ak;
  double al, am, an;
  double ao, ap, aq;

  o = get_global_id(1) + 1;
  n = get_global_id(0) + 1;
  if (o > k || n > j)
    return;

  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])a;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])d;

  int av = (o - 1) * j + (n - 1);
  int aw = av * 12;
  __global double* ax = (__global double*)&e[aw];
  __global double* ay = (__global double*)&f[aw];

  aw = av * ((12 / 2 * 2) + 1) * 5;
  __global double(*az)[5] = (__global double(*)[5]) & g[aw];
  __global double(*ba)[5] = (__global double(*)[5]) & h[aw];
  __global double(*bb)[5] = (__global double(*)[5]) & i[aw];

  for (s = 0; s < 5; s++) {
    az[0][s] = 0.0;
    ba[0][s] = 0.0;
    bb[0][s] = 0.0;
    az[l + 1][s] = 0.0;
    ba[l + 1][s] = 0.0;
    bb[l + 1][s] = 0.0;
  }
  az[0][2] = 1.0;
  ba[0][2] = 1.0;
  bb[0][2] = 1.0;
  az[l + 1][2] = 1.0;
  ba[l + 1][2] = 1.0;
  bb[l + 1][2] = 1.0;

  t = (0.1 * 1.0) * as[0][o][n];
  ax[0] = ai = ar[0][o][n];
  ay[0] = al = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  ao = at[0][o][n];

  t = (0.1 * 1.0) * as[1][o][n];
  ax[1] = aj = ar[1][o][n];
  ay[1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  ap = at[1][o][n];
  p = 1;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p + 1][o][n];
  ax[p + 1] = aj = ar[p + 1][o][n];
  ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  aq = ao;
  ao = ap;
  ap = at[p + 1][o][n];
  az[p][0] = w[0] = 0.0;
  az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an;
  az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[p][0] = w[0];
  ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[p][2] = w[2];
  ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[p][4] = w[4];
  bb[p][0] = w[0];
  bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[p][2] = w[2];
  bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[p][4] = w[4];

  p = 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p + 1][o][n];
  ax[p + 1] = aj = ar[p + 1][o][n];
  ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  aq = ao;
  ao = ap;
  ap = at[p + 1][o][n];
  az[p][0] = w[0] = 0.0;
  az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[p][0] = w[0];
  ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[p][2] = w[2];
  ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[p][4] = w[4];
  bb[p][0] = w[0];
  bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[p][2] = w[2];
  bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[p][4] = w[4];

  for (p = 3; p <= l - 2; p++) {
    ak = ai;
    ai = aj;
    an = al;
    al = am;
    t = (0.1 * 1.0) * as[p + 1][o][n];
    ax[p + 1] = aj = ar[p + 1][o][n];
    ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
    aq = ao;
    ao = ap;
    ap = at[p + 1][o][n];
    az[p][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[p][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    ba[p][0] = w[0];
    ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    ba[p][2] = w[2];
    ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    ba[p][4] = w[4];
    bb[p][0] = w[0];
    bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    bb[p][2] = w[2];
    bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    bb[p][4] = w[4];
  }

  p = l - 1;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p + 1][o][n];
  ax[p + 1] = aj = ar[p + 1][o][n];
  ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  aq = ao;
  ao = ap;
  ap = at[p + 1][o][n];
  az[p][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][4] = w[4] = 0.0;
  ba[p][0] = w[0];
  ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[p][2] = w[2];
  ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[p][4] = w[4];
  bb[p][0] = w[0];
  bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[p][2] = w[2];
  bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[p][4] = w[4];

  p = l;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p + 1][o][n];
  ax[p + 1] = aj = ar[p + 1][o][n];
  ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  aq = ao;
  ao = ap;
  ap = at[p + 1][o][n];
  az[p][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am;
  az[p][4] = w[4] = 0.0;
  ba[p][0] = w[0];
  ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[p][2] = w[2];
  ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[p][4] = w[4];
  bb[p][0] = w[0];
  bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[p][2] = w[2];
  bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[p][4] = w[4];

  x[2] = az[0][2];
  x[3] = az[0][3];
  y[1] = az[1][1];
  y[2] = az[1][2];

  ag[0] = au[0][o][n][0];
  ag[1] = au[0][o][n][1];
  ag[2] = au[0][o][n][2];
  ah[0] = au[1][o][n][0];
  ah[1] = au[1][o][n][1];
  ah[2] = au[1][o][n][2];

  for (p = 0; p <= m - 3; p++) {
    q = p + 1;
    r = p + 2;

    w[2] = x[2];
    w[3] = x[3];
    w[4] = az[p][4];
    af[0] = ag[0];
    af[1] = ag[1];
    af[2] = ag[2];

    u = 1.0 / w[2];
    az[p][3] = w[3] = u * w[3];
    az[p][4] = w[4] = u * w[4];
    for (s = 0; s < 3; s++) {
      au[p][o][n][s] = af[s] = u * af[s];
    }

    x[1] = y[1];
    x[2] = y[2];
    x[3] = az[q][3];
    ag[0] = ah[0];
    ag[1] = ah[1];
    ag[2] = ah[2];

    az[q][2] = x[2] = x[2] - x[1] * w[3];
    x[3] = x[3] - x[1] * w[4];
    for (s = 0; s < 3; s++) {
      ag[s] = ag[s] - x[1] * af[s];
    }

    y[0] = az[r][0];
    y[1] = az[r][1];
    y[2] = az[r][2];
    ah[0] = au[r][o][n][0];
    ah[1] = au[r][o][n][1];
    ah[2] = au[r][o][n][2];

    az[r][1] = y[1] = y[1] - y[0] * w[3];
    y[2] = y[2] - y[0] * w[4];
    for (s = 0; s < 3; s++) {
      ah[s] = ah[s] - y[0] * af[s];
    }
  }

  p = m - 2;
  q = m - 1;

  w[2] = x[2];
  w[3] = x[3];
  w[4] = az[p][4];
  af[0] = ag[0];
  af[1] = ag[1];
  af[2] = ag[2];

  u = 1.0 / w[2];
  az[p][3] = w[3] = u * w[3];
  az[p][4] = w[4] = u * w[4];
  for (s = 0; s < 3; s++) {
    au[p][o][n][s] = af[s] = u * af[s];
  }

  x[1] = y[1];
  x[2] = y[2];
  x[3] = az[q][3];
  ag[0] = ah[0];
  ag[1] = ah[1];
  ag[2] = ah[2];

  az[q][2] = x[2] = x[2] - x[1] * w[3];
  az[q][3] = x[3] - x[1] * w[4];
  for (s = 0; s < 3; s++) {
    ag[s] = ag[s] - x[1] * af[s];
  }

  v = 1.0 / x[2];
  for (s = 0; s < 3; s++) {
    au[q][o][n][s] = v * ag[s];
  }

  aa[2] = ba[0][2];
  aa[3] = ba[0][3];
  ab[1] = ba[1][1];
  ab[2] = ba[1][2];
  ad[2] = bb[0][2];
  ad[3] = bb[0][3];
  ae[1] = bb[1][1];
  ae[2] = bb[1][2];

  ag[3] = au[0][o][n][3];
  ag[4] = au[0][o][n][4];
  ah[3] = au[1][o][n][3];
  ah[4] = au[1][o][n][4];

  for (p = 0; p <= m - 3; p++) {
    q = p + 1;
    r = p + 2;

    s = 3;

    z[2] = aa[2];
    z[3] = aa[3];
    z[4] = ba[p][4];
    af[s] = ag[s];
    u = 1.0 / z[2];
    ba[p][3] = z[3] = u * z[3];
    ba[p][4] = z[4] = u * z[4];
    au[p][o][n][s] = af[s] = u * af[s];

    aa[1] = ab[1];
    aa[2] = ab[2];
    aa[3] = ba[q][3];
    ag[s] = ah[s];
    ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
    aa[3] = aa[3] - aa[1] * z[4];
    ag[s] = ag[s] - aa[1] * af[s];

    ab[0] = ba[r][0];
    ab[1] = ba[r][1];
    ab[2] = ba[r][2];
    ah[s] = au[r][o][n][s];
    ba[r][1] = ab[1] = ab[1] - ab[0] * z[3];
    ab[2] = ab[2] - ab[0] * z[4];
    ah[s] = ah[s] - ab[0] * af[s];

    s = 4;

    ac[2] = ad[2];
    ac[3] = ad[3];
    ac[4] = bb[p][4];
    af[s] = ag[s];
    u = 1.0 / ac[2];
    bb[p][3] = ac[3] = u * ac[3];
    bb[p][4] = ac[4] = u * ac[4];
    au[p][o][n][s] = af[s] = u * af[s];

    ad[1] = ae[1];
    ad[2] = ae[2];
    ad[3] = bb[q][3];
    ag[s] = ah[s];
    bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
    ad[3] = ad[3] - ad[1] * ac[4];
    ag[s] = ag[s] - ad[1] * af[s];

    ae[0] = bb[r][0];
    ae[1] = bb[r][1];
    ae[2] = bb[r][2];
    ah[s] = au[r][o][n][s];
    bb[r][1] = ae[1] = ae[1] - ae[0] * ac[3];
    ae[2] = ae[2] - ae[0] * ac[4];
    ah[s] = ah[s] - ae[0] * af[s];
  }

  p = m - 2;
  q = m - 1;

  s = 3;

  z[2] = aa[2];
  z[3] = aa[3];
  z[4] = ba[p][4];
  af[s] = ag[s];
  u = 1.0 / z[2];
  ba[p][3] = z[3] = u * z[3];
  ba[p][4] = z[4] = u * z[4];
  au[p][o][n][s] = af[s] = u * af[s];

  aa[1] = ab[1];
  aa[2] = ab[2];
  aa[3] = ba[q][3];
  ag[s] = ah[s];
  ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
  ba[q][3] = aa[3] = aa[3] - aa[1] * z[4];
  ag[s] = ag[s] - aa[1] * af[s];

  s = 4;

  ac[2] = ad[2];
  ac[3] = ad[3];
  ac[4] = bb[p][4];
  af[s] = ag[s];
  u = 1.0 / ac[2];
  bb[p][3] = ac[3] = u * ac[3];
  bb[p][4] = ac[4] = u * ac[4];
  au[p][o][n][s] = af[s] = u * af[s];

  ad[1] = ae[1];
  ad[2] = ae[2];
  ad[3] = bb[q][3];
  ag[s] = ah[s];
  bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
  bb[q][3] = ad[3] = ad[3] - ad[1] * ac[4];
  ag[s] = ag[s] - ad[1] * af[s];

  au[q][o][n][3] = ag[3] / aa[2];
  au[q][o][n][4] = ag[4] / ad[2];

  p = m - 2;
  q = m - 1;
  w[3] = az[p][3];
  for (s = 0; s < 3; s++) {
    ag[s] = au[q][o][n][s];
    au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s];
  }

  ag[3] = au[q][o][n][3];
  au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[p][3] * ag[3];
  ag[4] = au[q][o][n][4];
  au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[p][3] * ag[4];
  for (p = m - 3; p >= 0; p--) {
    q = p + 1;
    r = p + 2;
    w[3] = az[p][3];
    w[4] = az[p][4];
    for (s = 0; s < 3; s++) {
      ah[s] = ag[s];
      ag[s] = af[s];
      au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s] - w[4] * ah[s];
    }

    ah[3] = ag[3];
    ag[3] = af[3];
    au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[p][3] * ag[3] - ba[p][4] * ah[3];
    ah[4] = ag[4];
    ag[4] = af[4];
    au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[p][3] * ag[4] - bb[p][4] * ah[4];
  }
}","[ 63  76  51 ..., 127   0 127]"
539,npb-3.3-SP-z_solve,B,828,135,9,0,232,0,454882552,32,GPU,25.753387,22.752406,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, __global double* h, __global double* i, int j, int k, int l, int m) {
  int n, o, p, q, r, s;
  double t, u, v;
  double w[5], x[5], y[5];
  double z[5], aa[5], ab[5];
  double ac[5], ad[5], ae[5];
  double af[5], ag[5], ah[5];
  double ai, aj, ak;
  double al, am, an;
  double ao, ap, aq;

  o = get_global_id(1) + 1;
  n = get_global_id(0) + 1;
  if (o > k || n > j)
    return;

  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])a;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])d;

  int av = (o - 1) * j + (n - 1);
  int aw = av * 12;
  __global double* ax = (__global double*)&e[aw];
  __global double* ay = (__global double*)&f[aw];

  aw = av * ((12 / 2 * 2) + 1) * 5;
  __global double(*az)[5] = (__global double(*)[5]) & g[aw];
  __global double(*ba)[5] = (__global double(*)[5]) & h[aw];
  __global double(*bb)[5] = (__global double(*)[5]) & i[aw];

  for (s = 0; s < 5; s++) {
    az[0][s] = 0.0;
    ba[0][s] = 0.0;
    bb[0][s] = 0.0;
    az[l + 1][s] = 0.0;
    ba[l + 1][s] = 0.0;
    bb[l + 1][s] = 0.0;
  }
  az[0][2] = 1.0;
  ba[0][2] = 1.0;
  bb[0][2] = 1.0;
  az[l + 1][2] = 1.0;
  ba[l + 1][2] = 1.0;
  bb[l + 1][2] = 1.0;

  t = (0.1 * 1.0) * as[0][o][n];
  ax[0] = ai = ar[0][o][n];
  ay[0] = al = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  ao = at[0][o][n];

  t = (0.1 * 1.0) * as[1][o][n];
  ax[1] = aj = ar[1][o][n];
  ay[1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  ap = at[1][o][n];
  p = 1;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p + 1][o][n];
  ax[p + 1] = aj = ar[p + 1][o][n];
  ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  aq = ao;
  ao = ap;
  ap = at[p + 1][o][n];
  az[p][0] = w[0] = 0.0;
  az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an;
  az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[p][0] = w[0];
  ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[p][2] = w[2];
  ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[p][4] = w[4];
  bb[p][0] = w[0];
  bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[p][2] = w[2];
  bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[p][4] = w[4];

  p = 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p + 1][o][n];
  ax[p + 1] = aj = ar[p + 1][o][n];
  ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  aq = ao;
  ao = ap;
  ap = at[p + 1][o][n];
  az[p][0] = w[0] = 0.0;
  az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[p][0] = w[0];
  ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[p][2] = w[2];
  ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[p][4] = w[4];
  bb[p][0] = w[0];
  bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[p][2] = w[2];
  bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[p][4] = w[4];

  for (p = 3; p <= l - 2; p++) {
    ak = ai;
    ai = aj;
    an = al;
    al = am;
    t = (0.1 * 1.0) * as[p + 1][o][n];
    ax[p + 1] = aj = ar[p + 1][o][n];
    ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
    aq = ao;
    ao = ap;
    ap = at[p + 1][o][n];
    az[p][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[p][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    ba[p][0] = w[0];
    ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    ba[p][2] = w[2];
    ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    ba[p][4] = w[4];
    bb[p][0] = w[0];
    bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    bb[p][2] = w[2];
    bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    bb[p][4] = w[4];
  }

  p = l - 1;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p + 1][o][n];
  ax[p + 1] = aj = ar[p + 1][o][n];
  ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  aq = ao;
  ao = ap;
  ap = at[p + 1][o][n];
  az[p][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][4] = w[4] = 0.0;
  ba[p][0] = w[0];
  ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[p][2] = w[2];
  ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[p][4] = w[4];
  bb[p][0] = w[0];
  bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[p][2] = w[2];
  bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[p][4] = w[4];

  p = l;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p + 1][o][n];
  ax[p + 1] = aj = ar[p + 1][o][n];
  ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  aq = ao;
  ao = ap;
  ap = at[p + 1][o][n];
  az[p][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am;
  az[p][4] = w[4] = 0.0;
  ba[p][0] = w[0];
  ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[p][2] = w[2];
  ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[p][4] = w[4];
  bb[p][0] = w[0];
  bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[p][2] = w[2];
  bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[p][4] = w[4];

  x[2] = az[0][2];
  x[3] = az[0][3];
  y[1] = az[1][1];
  y[2] = az[1][2];

  ag[0] = au[0][o][n][0];
  ag[1] = au[0][o][n][1];
  ag[2] = au[0][o][n][2];
  ah[0] = au[1][o][n][0];
  ah[1] = au[1][o][n][1];
  ah[2] = au[1][o][n][2];

  for (p = 0; p <= m - 3; p++) {
    q = p + 1;
    r = p + 2;

    w[2] = x[2];
    w[3] = x[3];
    w[4] = az[p][4];
    af[0] = ag[0];
    af[1] = ag[1];
    af[2] = ag[2];

    u = 1.0 / w[2];
    az[p][3] = w[3] = u * w[3];
    az[p][4] = w[4] = u * w[4];
    for (s = 0; s < 3; s++) {
      au[p][o][n][s] = af[s] = u * af[s];
    }

    x[1] = y[1];
    x[2] = y[2];
    x[3] = az[q][3];
    ag[0] = ah[0];
    ag[1] = ah[1];
    ag[2] = ah[2];

    az[q][2] = x[2] = x[2] - x[1] * w[3];
    x[3] = x[3] - x[1] * w[4];
    for (s = 0; s < 3; s++) {
      ag[s] = ag[s] - x[1] * af[s];
    }

    y[0] = az[r][0];
    y[1] = az[r][1];
    y[2] = az[r][2];
    ah[0] = au[r][o][n][0];
    ah[1] = au[r][o][n][1];
    ah[2] = au[r][o][n][2];

    az[r][1] = y[1] = y[1] - y[0] * w[3];
    y[2] = y[2] - y[0] * w[4];
    for (s = 0; s < 3; s++) {
      ah[s] = ah[s] - y[0] * af[s];
    }
  }

  p = m - 2;
  q = m - 1;

  w[2] = x[2];
  w[3] = x[3];
  w[4] = az[p][4];
  af[0] = ag[0];
  af[1] = ag[1];
  af[2] = ag[2];

  u = 1.0 / w[2];
  az[p][3] = w[3] = u * w[3];
  az[p][4] = w[4] = u * w[4];
  for (s = 0; s < 3; s++) {
    au[p][o][n][s] = af[s] = u * af[s];
  }

  x[1] = y[1];
  x[2] = y[2];
  x[3] = az[q][3];
  ag[0] = ah[0];
  ag[1] = ah[1];
  ag[2] = ah[2];

  az[q][2] = x[2] = x[2] - x[1] * w[3];
  az[q][3] = x[3] - x[1] * w[4];
  for (s = 0; s < 3; s++) {
    ag[s] = ag[s] - x[1] * af[s];
  }

  v = 1.0 / x[2];
  for (s = 0; s < 3; s++) {
    au[q][o][n][s] = v * ag[s];
  }

  aa[2] = ba[0][2];
  aa[3] = ba[0][3];
  ab[1] = ba[1][1];
  ab[2] = ba[1][2];
  ad[2] = bb[0][2];
  ad[3] = bb[0][3];
  ae[1] = bb[1][1];
  ae[2] = bb[1][2];

  ag[3] = au[0][o][n][3];
  ag[4] = au[0][o][n][4];
  ah[3] = au[1][o][n][3];
  ah[4] = au[1][o][n][4];

  for (p = 0; p <= m - 3; p++) {
    q = p + 1;
    r = p + 2;

    s = 3;

    z[2] = aa[2];
    z[3] = aa[3];
    z[4] = ba[p][4];
    af[s] = ag[s];
    u = 1.0 / z[2];
    ba[p][3] = z[3] = u * z[3];
    ba[p][4] = z[4] = u * z[4];
    au[p][o][n][s] = af[s] = u * af[s];

    aa[1] = ab[1];
    aa[2] = ab[2];
    aa[3] = ba[q][3];
    ag[s] = ah[s];
    ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
    aa[3] = aa[3] - aa[1] * z[4];
    ag[s] = ag[s] - aa[1] * af[s];

    ab[0] = ba[r][0];
    ab[1] = ba[r][1];
    ab[2] = ba[r][2];
    ah[s] = au[r][o][n][s];
    ba[r][1] = ab[1] = ab[1] - ab[0] * z[3];
    ab[2] = ab[2] - ab[0] * z[4];
    ah[s] = ah[s] - ab[0] * af[s];

    s = 4;

    ac[2] = ad[2];
    ac[3] = ad[3];
    ac[4] = bb[p][4];
    af[s] = ag[s];
    u = 1.0 / ac[2];
    bb[p][3] = ac[3] = u * ac[3];
    bb[p][4] = ac[4] = u * ac[4];
    au[p][o][n][s] = af[s] = u * af[s];

    ad[1] = ae[1];
    ad[2] = ae[2];
    ad[3] = bb[q][3];
    ag[s] = ah[s];
    bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
    ad[3] = ad[3] - ad[1] * ac[4];
    ag[s] = ag[s] - ad[1] * af[s];

    ae[0] = bb[r][0];
    ae[1] = bb[r][1];
    ae[2] = bb[r][2];
    ah[s] = au[r][o][n][s];
    bb[r][1] = ae[1] = ae[1] - ae[0] * ac[3];
    ae[2] = ae[2] - ae[0] * ac[4];
    ah[s] = ah[s] - ae[0] * af[s];
  }

  p = m - 2;
  q = m - 1;

  s = 3;

  z[2] = aa[2];
  z[3] = aa[3];
  z[4] = ba[p][4];
  af[s] = ag[s];
  u = 1.0 / z[2];
  ba[p][3] = z[3] = u * z[3];
  ba[p][4] = z[4] = u * z[4];
  au[p][o][n][s] = af[s] = u * af[s];

  aa[1] = ab[1];
  aa[2] = ab[2];
  aa[3] = ba[q][3];
  ag[s] = ah[s];
  ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
  ba[q][3] = aa[3] = aa[3] - aa[1] * z[4];
  ag[s] = ag[s] - aa[1] * af[s];

  s = 4;

  ac[2] = ad[2];
  ac[3] = ad[3];
  ac[4] = bb[p][4];
  af[s] = ag[s];
  u = 1.0 / ac[2];
  bb[p][3] = ac[3] = u * ac[3];
  bb[p][4] = ac[4] = u * ac[4];
  au[p][o][n][s] = af[s] = u * af[s];

  ad[1] = ae[1];
  ad[2] = ae[2];
  ad[3] = bb[q][3];
  ag[s] = ah[s];
  bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
  bb[q][3] = ad[3] = ad[3] - ad[1] * ac[4];
  ag[s] = ag[s] - ad[1] * af[s];

  au[q][o][n][3] = ag[3] / aa[2];
  au[q][o][n][4] = ag[4] / ad[2];

  p = m - 2;
  q = m - 1;
  w[3] = az[p][3];
  for (s = 0; s < 3; s++) {
    ag[s] = au[q][o][n][s];
    au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s];
  }

  ag[3] = au[q][o][n][3];
  au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[p][3] * ag[3];
  ag[4] = au[q][o][n][4];
  au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[p][3] * ag[4];
  for (p = m - 3; p >= 0; p--) {
    q = p + 1;
    r = p + 2;
    w[3] = az[p][3];
    w[4] = az[p][4];
    for (s = 0; s < 3; s++) {
      ah[s] = ag[s];
      ag[s] = af[s];
      au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s] - w[4] * ah[s];
    }

    ah[3] = ag[3];
    ag[3] = af[3];
    au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[p][3] * ag[3] - ba[p][4] * ah[3];
    ah[4] = ag[4];
    ag[4] = af[4];
    au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[p][3] * ag[4] - bb[p][4] * ah[4];
  }
}","[ 63  76  51 ..., 127   0 127]"
540,npb-3.3-SP-z_solve,C,828,135,9,0,232,0,1815064752,64,CPU,100.07592700000001,100.12080999999999,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, __global double* h, __global double* i, int j, int k, int l, int m) {
  int n, o, p, q, r, s;
  double t, u, v;
  double w[5], x[5], y[5];
  double z[5], aa[5], ab[5];
  double ac[5], ad[5], ae[5];
  double af[5], ag[5], ah[5];
  double ai, aj, ak;
  double al, am, an;
  double ao, ap, aq;

  o = get_global_id(1) + 1;
  n = get_global_id(0) + 1;
  if (o > k || n > j)
    return;

  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])a;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])d;

  int av = (o - 1) * j + (n - 1);
  int aw = av * 12;
  __global double* ax = (__global double*)&e[aw];
  __global double* ay = (__global double*)&f[aw];

  aw = av * ((12 / 2 * 2) + 1) * 5;
  __global double(*az)[5] = (__global double(*)[5]) & g[aw];
  __global double(*ba)[5] = (__global double(*)[5]) & h[aw];
  __global double(*bb)[5] = (__global double(*)[5]) & i[aw];

  for (s = 0; s < 5; s++) {
    az[0][s] = 0.0;
    ba[0][s] = 0.0;
    bb[0][s] = 0.0;
    az[l + 1][s] = 0.0;
    ba[l + 1][s] = 0.0;
    bb[l + 1][s] = 0.0;
  }
  az[0][2] = 1.0;
  ba[0][2] = 1.0;
  bb[0][2] = 1.0;
  az[l + 1][2] = 1.0;
  ba[l + 1][2] = 1.0;
  bb[l + 1][2] = 1.0;

  t = (0.1 * 1.0) * as[0][o][n];
  ax[0] = ai = ar[0][o][n];
  ay[0] = al = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  ao = at[0][o][n];

  t = (0.1 * 1.0) * as[1][o][n];
  ax[1] = aj = ar[1][o][n];
  ay[1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  ap = at[1][o][n];
  p = 1;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p + 1][o][n];
  ax[p + 1] = aj = ar[p + 1][o][n];
  ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  aq = ao;
  ao = ap;
  ap = at[p + 1][o][n];
  az[p][0] = w[0] = 0.0;
  az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an;
  az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[p][0] = w[0];
  ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[p][2] = w[2];
  ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[p][4] = w[4];
  bb[p][0] = w[0];
  bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[p][2] = w[2];
  bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[p][4] = w[4];

  p = 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p + 1][o][n];
  ax[p + 1] = aj = ar[p + 1][o][n];
  ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  aq = ao;
  ao = ap;
  ap = at[p + 1][o][n];
  az[p][0] = w[0] = 0.0;
  az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[p][0] = w[0];
  ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[p][2] = w[2];
  ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[p][4] = w[4];
  bb[p][0] = w[0];
  bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[p][2] = w[2];
  bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[p][4] = w[4];

  for (p = 3; p <= l - 2; p++) {
    ak = ai;
    ai = aj;
    an = al;
    al = am;
    t = (0.1 * 1.0) * as[p + 1][o][n];
    ax[p + 1] = aj = ar[p + 1][o][n];
    ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
    aq = ao;
    ao = ap;
    ap = at[p + 1][o][n];
    az[p][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[p][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    ba[p][0] = w[0];
    ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    ba[p][2] = w[2];
    ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    ba[p][4] = w[4];
    bb[p][0] = w[0];
    bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    bb[p][2] = w[2];
    bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    bb[p][4] = w[4];
  }

  p = l - 1;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p + 1][o][n];
  ax[p + 1] = aj = ar[p + 1][o][n];
  ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  aq = ao;
  ao = ap;
  ap = at[p + 1][o][n];
  az[p][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][4] = w[4] = 0.0;
  ba[p][0] = w[0];
  ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[p][2] = w[2];
  ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[p][4] = w[4];
  bb[p][0] = w[0];
  bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[p][2] = w[2];
  bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[p][4] = w[4];

  p = l;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p + 1][o][n];
  ax[p + 1] = aj = ar[p + 1][o][n];
  ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  aq = ao;
  ao = ap;
  ap = at[p + 1][o][n];
  az[p][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am;
  az[p][4] = w[4] = 0.0;
  ba[p][0] = w[0];
  ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[p][2] = w[2];
  ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[p][4] = w[4];
  bb[p][0] = w[0];
  bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[p][2] = w[2];
  bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[p][4] = w[4];

  x[2] = az[0][2];
  x[3] = az[0][3];
  y[1] = az[1][1];
  y[2] = az[1][2];

  ag[0] = au[0][o][n][0];
  ag[1] = au[0][o][n][1];
  ag[2] = au[0][o][n][2];
  ah[0] = au[1][o][n][0];
  ah[1] = au[1][o][n][1];
  ah[2] = au[1][o][n][2];

  for (p = 0; p <= m - 3; p++) {
    q = p + 1;
    r = p + 2;

    w[2] = x[2];
    w[3] = x[3];
    w[4] = az[p][4];
    af[0] = ag[0];
    af[1] = ag[1];
    af[2] = ag[2];

    u = 1.0 / w[2];
    az[p][3] = w[3] = u * w[3];
    az[p][4] = w[4] = u * w[4];
    for (s = 0; s < 3; s++) {
      au[p][o][n][s] = af[s] = u * af[s];
    }

    x[1] = y[1];
    x[2] = y[2];
    x[3] = az[q][3];
    ag[0] = ah[0];
    ag[1] = ah[1];
    ag[2] = ah[2];

    az[q][2] = x[2] = x[2] - x[1] * w[3];
    x[3] = x[3] - x[1] * w[4];
    for (s = 0; s < 3; s++) {
      ag[s] = ag[s] - x[1] * af[s];
    }

    y[0] = az[r][0];
    y[1] = az[r][1];
    y[2] = az[r][2];
    ah[0] = au[r][o][n][0];
    ah[1] = au[r][o][n][1];
    ah[2] = au[r][o][n][2];

    az[r][1] = y[1] = y[1] - y[0] * w[3];
    y[2] = y[2] - y[0] * w[4];
    for (s = 0; s < 3; s++) {
      ah[s] = ah[s] - y[0] * af[s];
    }
  }

  p = m - 2;
  q = m - 1;

  w[2] = x[2];
  w[3] = x[3];
  w[4] = az[p][4];
  af[0] = ag[0];
  af[1] = ag[1];
  af[2] = ag[2];

  u = 1.0 / w[2];
  az[p][3] = w[3] = u * w[3];
  az[p][4] = w[4] = u * w[4];
  for (s = 0; s < 3; s++) {
    au[p][o][n][s] = af[s] = u * af[s];
  }

  x[1] = y[1];
  x[2] = y[2];
  x[3] = az[q][3];
  ag[0] = ah[0];
  ag[1] = ah[1];
  ag[2] = ah[2];

  az[q][2] = x[2] = x[2] - x[1] * w[3];
  az[q][3] = x[3] - x[1] * w[4];
  for (s = 0; s < 3; s++) {
    ag[s] = ag[s] - x[1] * af[s];
  }

  v = 1.0 / x[2];
  for (s = 0; s < 3; s++) {
    au[q][o][n][s] = v * ag[s];
  }

  aa[2] = ba[0][2];
  aa[3] = ba[0][3];
  ab[1] = ba[1][1];
  ab[2] = ba[1][2];
  ad[2] = bb[0][2];
  ad[3] = bb[0][3];
  ae[1] = bb[1][1];
  ae[2] = bb[1][2];

  ag[3] = au[0][o][n][3];
  ag[4] = au[0][o][n][4];
  ah[3] = au[1][o][n][3];
  ah[4] = au[1][o][n][4];

  for (p = 0; p <= m - 3; p++) {
    q = p + 1;
    r = p + 2;

    s = 3;

    z[2] = aa[2];
    z[3] = aa[3];
    z[4] = ba[p][4];
    af[s] = ag[s];
    u = 1.0 / z[2];
    ba[p][3] = z[3] = u * z[3];
    ba[p][4] = z[4] = u * z[4];
    au[p][o][n][s] = af[s] = u * af[s];

    aa[1] = ab[1];
    aa[2] = ab[2];
    aa[3] = ba[q][3];
    ag[s] = ah[s];
    ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
    aa[3] = aa[3] - aa[1] * z[4];
    ag[s] = ag[s] - aa[1] * af[s];

    ab[0] = ba[r][0];
    ab[1] = ba[r][1];
    ab[2] = ba[r][2];
    ah[s] = au[r][o][n][s];
    ba[r][1] = ab[1] = ab[1] - ab[0] * z[3];
    ab[2] = ab[2] - ab[0] * z[4];
    ah[s] = ah[s] - ab[0] * af[s];

    s = 4;

    ac[2] = ad[2];
    ac[3] = ad[3];
    ac[4] = bb[p][4];
    af[s] = ag[s];
    u = 1.0 / ac[2];
    bb[p][3] = ac[3] = u * ac[3];
    bb[p][4] = ac[4] = u * ac[4];
    au[p][o][n][s] = af[s] = u * af[s];

    ad[1] = ae[1];
    ad[2] = ae[2];
    ad[3] = bb[q][3];
    ag[s] = ah[s];
    bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
    ad[3] = ad[3] - ad[1] * ac[4];
    ag[s] = ag[s] - ad[1] * af[s];

    ae[0] = bb[r][0];
    ae[1] = bb[r][1];
    ae[2] = bb[r][2];
    ah[s] = au[r][o][n][s];
    bb[r][1] = ae[1] = ae[1] - ae[0] * ac[3];
    ae[2] = ae[2] - ae[0] * ac[4];
    ah[s] = ah[s] - ae[0] * af[s];
  }

  p = m - 2;
  q = m - 1;

  s = 3;

  z[2] = aa[2];
  z[3] = aa[3];
  z[4] = ba[p][4];
  af[s] = ag[s];
  u = 1.0 / z[2];
  ba[p][3] = z[3] = u * z[3];
  ba[p][4] = z[4] = u * z[4];
  au[p][o][n][s] = af[s] = u * af[s];

  aa[1] = ab[1];
  aa[2] = ab[2];
  aa[3] = ba[q][3];
  ag[s] = ah[s];
  ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
  ba[q][3] = aa[3] = aa[3] - aa[1] * z[4];
  ag[s] = ag[s] - aa[1] * af[s];

  s = 4;

  ac[2] = ad[2];
  ac[3] = ad[3];
  ac[4] = bb[p][4];
  af[s] = ag[s];
  u = 1.0 / ac[2];
  bb[p][3] = ac[3] = u * ac[3];
  bb[p][4] = ac[4] = u * ac[4];
  au[p][o][n][s] = af[s] = u * af[s];

  ad[1] = ae[1];
  ad[2] = ae[2];
  ad[3] = bb[q][3];
  ag[s] = ah[s];
  bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
  bb[q][3] = ad[3] = ad[3] - ad[1] * ac[4];
  ag[s] = ag[s] - ad[1] * af[s];

  au[q][o][n][3] = ag[3] / aa[2];
  au[q][o][n][4] = ag[4] / ad[2];

  p = m - 2;
  q = m - 1;
  w[3] = az[p][3];
  for (s = 0; s < 3; s++) {
    ag[s] = au[q][o][n][s];
    au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s];
  }

  ag[3] = au[q][o][n][3];
  au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[p][3] * ag[3];
  ag[4] = au[q][o][n][4];
  au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[p][3] * ag[4];
  for (p = m - 3; p >= 0; p--) {
    q = p + 1;
    r = p + 2;
    w[3] = az[p][3];
    w[4] = az[p][4];
    for (s = 0; s < 3; s++) {
      ah[s] = ag[s];
      ag[s] = af[s];
      au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s] - w[4] * ah[s];
    }

    ah[3] = ag[3];
    ag[3] = af[3];
    au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[p][3] * ag[3] - ba[p][4] * ah[3];
    ah[4] = ag[4];
    ag[4] = af[4];
    au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[p][3] * ag[4] - bb[p][4] * ah[4];
  }
}","[ 63  76  51 ..., 127   0 127]"
541,npb-3.3-SP-z_solve,S,828,135,9,0,232,0,804152,60,CPU,0.09414,0.14996099999999998,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, __global double* h, __global double* i, int j, int k, int l, int m) {
  int n, o, p, q, r, s;
  double t, u, v;
  double w[5], x[5], y[5];
  double z[5], aa[5], ab[5];
  double ac[5], ad[5], ae[5];
  double af[5], ag[5], ah[5];
  double ai, aj, ak;
  double al, am, an;
  double ao, ap, aq;

  o = get_global_id(1) + 1;
  n = get_global_id(0) + 1;
  if (o > k || n > j)
    return;

  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])a;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])d;

  int av = (o - 1) * j + (n - 1);
  int aw = av * 12;
  __global double* ax = (__global double*)&e[aw];
  __global double* ay = (__global double*)&f[aw];

  aw = av * ((12 / 2 * 2) + 1) * 5;
  __global double(*az)[5] = (__global double(*)[5]) & g[aw];
  __global double(*ba)[5] = (__global double(*)[5]) & h[aw];
  __global double(*bb)[5] = (__global double(*)[5]) & i[aw];

  for (s = 0; s < 5; s++) {
    az[0][s] = 0.0;
    ba[0][s] = 0.0;
    bb[0][s] = 0.0;
    az[l + 1][s] = 0.0;
    ba[l + 1][s] = 0.0;
    bb[l + 1][s] = 0.0;
  }
  az[0][2] = 1.0;
  ba[0][2] = 1.0;
  bb[0][2] = 1.0;
  az[l + 1][2] = 1.0;
  ba[l + 1][2] = 1.0;
  bb[l + 1][2] = 1.0;

  t = (0.1 * 1.0) * as[0][o][n];
  ax[0] = ai = ar[0][o][n];
  ay[0] = al = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  ao = at[0][o][n];

  t = (0.1 * 1.0) * as[1][o][n];
  ax[1] = aj = ar[1][o][n];
  ay[1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  ap = at[1][o][n];
  p = 1;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p + 1][o][n];
  ax[p + 1] = aj = ar[p + 1][o][n];
  ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  aq = ao;
  ao = ap;
  ap = at[p + 1][o][n];
  az[p][0] = w[0] = 0.0;
  az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an;
  az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[p][0] = w[0];
  ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[p][2] = w[2];
  ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[p][4] = w[4];
  bb[p][0] = w[0];
  bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[p][2] = w[2];
  bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[p][4] = w[4];

  p = 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p + 1][o][n];
  ax[p + 1] = aj = ar[p + 1][o][n];
  ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  aq = ao;
  ao = ap;
  ap = at[p + 1][o][n];
  az[p][0] = w[0] = 0.0;
  az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[p][0] = w[0];
  ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[p][2] = w[2];
  ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[p][4] = w[4];
  bb[p][0] = w[0];
  bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[p][2] = w[2];
  bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[p][4] = w[4];

  for (p = 3; p <= l - 2; p++) {
    ak = ai;
    ai = aj;
    an = al;
    al = am;
    t = (0.1 * 1.0) * as[p + 1][o][n];
    ax[p + 1] = aj = ar[p + 1][o][n];
    ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
    aq = ao;
    ao = ap;
    ap = at[p + 1][o][n];
    az[p][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[p][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    ba[p][0] = w[0];
    ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    ba[p][2] = w[2];
    ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    ba[p][4] = w[4];
    bb[p][0] = w[0];
    bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    bb[p][2] = w[2];
    bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    bb[p][4] = w[4];
  }

  p = l - 1;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p + 1][o][n];
  ax[p + 1] = aj = ar[p + 1][o][n];
  ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  aq = ao;
  ao = ap;
  ap = at[p + 1][o][n];
  az[p][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][4] = w[4] = 0.0;
  ba[p][0] = w[0];
  ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[p][2] = w[2];
  ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[p][4] = w[4];
  bb[p][0] = w[0];
  bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[p][2] = w[2];
  bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[p][4] = w[4];

  p = l;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p + 1][o][n];
  ax[p + 1] = aj = ar[p + 1][o][n];
  ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  aq = ao;
  ao = ap;
  ap = at[p + 1][o][n];
  az[p][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am;
  az[p][4] = w[4] = 0.0;
  ba[p][0] = w[0];
  ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[p][2] = w[2];
  ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[p][4] = w[4];
  bb[p][0] = w[0];
  bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[p][2] = w[2];
  bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[p][4] = w[4];

  x[2] = az[0][2];
  x[3] = az[0][3];
  y[1] = az[1][1];
  y[2] = az[1][2];

  ag[0] = au[0][o][n][0];
  ag[1] = au[0][o][n][1];
  ag[2] = au[0][o][n][2];
  ah[0] = au[1][o][n][0];
  ah[1] = au[1][o][n][1];
  ah[2] = au[1][o][n][2];

  for (p = 0; p <= m - 3; p++) {
    q = p + 1;
    r = p + 2;

    w[2] = x[2];
    w[3] = x[3];
    w[4] = az[p][4];
    af[0] = ag[0];
    af[1] = ag[1];
    af[2] = ag[2];

    u = 1.0 / w[2];
    az[p][3] = w[3] = u * w[3];
    az[p][4] = w[4] = u * w[4];
    for (s = 0; s < 3; s++) {
      au[p][o][n][s] = af[s] = u * af[s];
    }

    x[1] = y[1];
    x[2] = y[2];
    x[3] = az[q][3];
    ag[0] = ah[0];
    ag[1] = ah[1];
    ag[2] = ah[2];

    az[q][2] = x[2] = x[2] - x[1] * w[3];
    x[3] = x[3] - x[1] * w[4];
    for (s = 0; s < 3; s++) {
      ag[s] = ag[s] - x[1] * af[s];
    }

    y[0] = az[r][0];
    y[1] = az[r][1];
    y[2] = az[r][2];
    ah[0] = au[r][o][n][0];
    ah[1] = au[r][o][n][1];
    ah[2] = au[r][o][n][2];

    az[r][1] = y[1] = y[1] - y[0] * w[3];
    y[2] = y[2] - y[0] * w[4];
    for (s = 0; s < 3; s++) {
      ah[s] = ah[s] - y[0] * af[s];
    }
  }

  p = m - 2;
  q = m - 1;

  w[2] = x[2];
  w[3] = x[3];
  w[4] = az[p][4];
  af[0] = ag[0];
  af[1] = ag[1];
  af[2] = ag[2];

  u = 1.0 / w[2];
  az[p][3] = w[3] = u * w[3];
  az[p][4] = w[4] = u * w[4];
  for (s = 0; s < 3; s++) {
    au[p][o][n][s] = af[s] = u * af[s];
  }

  x[1] = y[1];
  x[2] = y[2];
  x[3] = az[q][3];
  ag[0] = ah[0];
  ag[1] = ah[1];
  ag[2] = ah[2];

  az[q][2] = x[2] = x[2] - x[1] * w[3];
  az[q][3] = x[3] - x[1] * w[4];
  for (s = 0; s < 3; s++) {
    ag[s] = ag[s] - x[1] * af[s];
  }

  v = 1.0 / x[2];
  for (s = 0; s < 3; s++) {
    au[q][o][n][s] = v * ag[s];
  }

  aa[2] = ba[0][2];
  aa[3] = ba[0][3];
  ab[1] = ba[1][1];
  ab[2] = ba[1][2];
  ad[2] = bb[0][2];
  ad[3] = bb[0][3];
  ae[1] = bb[1][1];
  ae[2] = bb[1][2];

  ag[3] = au[0][o][n][3];
  ag[4] = au[0][o][n][4];
  ah[3] = au[1][o][n][3];
  ah[4] = au[1][o][n][4];

  for (p = 0; p <= m - 3; p++) {
    q = p + 1;
    r = p + 2;

    s = 3;

    z[2] = aa[2];
    z[3] = aa[3];
    z[4] = ba[p][4];
    af[s] = ag[s];
    u = 1.0 / z[2];
    ba[p][3] = z[3] = u * z[3];
    ba[p][4] = z[4] = u * z[4];
    au[p][o][n][s] = af[s] = u * af[s];

    aa[1] = ab[1];
    aa[2] = ab[2];
    aa[3] = ba[q][3];
    ag[s] = ah[s];
    ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
    aa[3] = aa[3] - aa[1] * z[4];
    ag[s] = ag[s] - aa[1] * af[s];

    ab[0] = ba[r][0];
    ab[1] = ba[r][1];
    ab[2] = ba[r][2];
    ah[s] = au[r][o][n][s];
    ba[r][1] = ab[1] = ab[1] - ab[0] * z[3];
    ab[2] = ab[2] - ab[0] * z[4];
    ah[s] = ah[s] - ab[0] * af[s];

    s = 4;

    ac[2] = ad[2];
    ac[3] = ad[3];
    ac[4] = bb[p][4];
    af[s] = ag[s];
    u = 1.0 / ac[2];
    bb[p][3] = ac[3] = u * ac[3];
    bb[p][4] = ac[4] = u * ac[4];
    au[p][o][n][s] = af[s] = u * af[s];

    ad[1] = ae[1];
    ad[2] = ae[2];
    ad[3] = bb[q][3];
    ag[s] = ah[s];
    bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
    ad[3] = ad[3] - ad[1] * ac[4];
    ag[s] = ag[s] - ad[1] * af[s];

    ae[0] = bb[r][0];
    ae[1] = bb[r][1];
    ae[2] = bb[r][2];
    ah[s] = au[r][o][n][s];
    bb[r][1] = ae[1] = ae[1] - ae[0] * ac[3];
    ae[2] = ae[2] - ae[0] * ac[4];
    ah[s] = ah[s] - ae[0] * af[s];
  }

  p = m - 2;
  q = m - 1;

  s = 3;

  z[2] = aa[2];
  z[3] = aa[3];
  z[4] = ba[p][4];
  af[s] = ag[s];
  u = 1.0 / z[2];
  ba[p][3] = z[3] = u * z[3];
  ba[p][4] = z[4] = u * z[4];
  au[p][o][n][s] = af[s] = u * af[s];

  aa[1] = ab[1];
  aa[2] = ab[2];
  aa[3] = ba[q][3];
  ag[s] = ah[s];
  ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
  ba[q][3] = aa[3] = aa[3] - aa[1] * z[4];
  ag[s] = ag[s] - aa[1] * af[s];

  s = 4;

  ac[2] = ad[2];
  ac[3] = ad[3];
  ac[4] = bb[p][4];
  af[s] = ag[s];
  u = 1.0 / ac[2];
  bb[p][3] = ac[3] = u * ac[3];
  bb[p][4] = ac[4] = u * ac[4];
  au[p][o][n][s] = af[s] = u * af[s];

  ad[1] = ae[1];
  ad[2] = ae[2];
  ad[3] = bb[q][3];
  ag[s] = ah[s];
  bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
  bb[q][3] = ad[3] = ad[3] - ad[1] * ac[4];
  ag[s] = ag[s] - ad[1] * af[s];

  au[q][o][n][3] = ag[3] / aa[2];
  au[q][o][n][4] = ag[4] / ad[2];

  p = m - 2;
  q = m - 1;
  w[3] = az[p][3];
  for (s = 0; s < 3; s++) {
    ag[s] = au[q][o][n][s];
    au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s];
  }

  ag[3] = au[q][o][n][3];
  au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[p][3] * ag[3];
  ag[4] = au[q][o][n][4];
  au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[p][3] * ag[4];
  for (p = m - 3; p >= 0; p--) {
    q = p + 1;
    r = p + 2;
    w[3] = az[p][3];
    w[4] = az[p][4];
    for (s = 0; s < 3; s++) {
      ah[s] = ag[s];
      ag[s] = af[s];
      au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s] - w[4] * ah[s];
    }

    ah[3] = ag[3];
    ag[3] = af[3];
    au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[p][3] * ag[3] - ba[p][4] * ah[3];
    ah[4] = ag[4];
    ag[4] = af[4];
    au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[p][3] * ag[4] - bb[p][4] * ah[4];
  }
}","[ 63  76  51 ..., 127   0 127]"
542,npb-3.3-SP-z_solve,W,828,135,9,0,232,0,20401432,34,CPU,0.542405,0.6440239999999999,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, __global double* h, __global double* i, int j, int k, int l, int m) {
  int n, o, p, q, r, s;
  double t, u, v;
  double w[5], x[5], y[5];
  double z[5], aa[5], ab[5];
  double ac[5], ad[5], ae[5];
  double af[5], ag[5], ah[5];
  double ai, aj, ak;
  double al, am, an;
  double ao, ap, aq;

  o = get_global_id(1) + 1;
  n = get_global_id(0) + 1;
  if (o > k || n > j)
    return;

  __global double(*ar)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])a;
  __global double(*as)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])b;
  __global double(*at)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1])c;
  __global double(*au)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5] = (__global double(*)[(12 / 2 * 2) + 1][(12 / 2 * 2) + 1][5])d;

  int av = (o - 1) * j + (n - 1);
  int aw = av * 12;
  __global double* ax = (__global double*)&e[aw];
  __global double* ay = (__global double*)&f[aw];

  aw = av * ((12 / 2 * 2) + 1) * 5;
  __global double(*az)[5] = (__global double(*)[5]) & g[aw];
  __global double(*ba)[5] = (__global double(*)[5]) & h[aw];
  __global double(*bb)[5] = (__global double(*)[5]) & i[aw];

  for (s = 0; s < 5; s++) {
    az[0][s] = 0.0;
    ba[0][s] = 0.0;
    bb[0][s] = 0.0;
    az[l + 1][s] = 0.0;
    ba[l + 1][s] = 0.0;
    bb[l + 1][s] = 0.0;
  }
  az[0][2] = 1.0;
  ba[0][2] = 1.0;
  bb[0][2] = 1.0;
  az[l + 1][2] = 1.0;
  ba[l + 1][2] = 1.0;
  bb[l + 1][2] = 1.0;

  t = (0.1 * 1.0) * as[0][o][n];
  ax[0] = ai = ar[0][o][n];
  ay[0] = al = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  ao = at[0][o][n];

  t = (0.1 * 1.0) * as[1][o][n];
  ax[1] = aj = ar[1][o][n];
  ay[1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  ap = at[1][o][n];
  p = 1;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p + 1][o][n];
  ax[p + 1] = aj = ar[p + 1][o][n];
  ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  aq = ao;
  ao = ap;
  ap = at[p + 1][o][n];
  az[p][0] = w[0] = 0.0;
  az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an;
  az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[p][0] = w[0];
  ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[p][2] = w[2];
  ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[p][4] = w[4];
  bb[p][0] = w[0];
  bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[p][2] = w[2];
  bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[p][4] = w[4];

  p = 2;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p + 1][o][n];
  ax[p + 1] = aj = ar[p + 1][o][n];
  ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  aq = ao;
  ao = ap;
  ap = at[p + 1][o][n];
  az[p][0] = w[0] = 0.0;
  az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  ba[p][0] = w[0];
  ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[p][2] = w[2];
  ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[p][4] = w[4];
  bb[p][0] = w[0];
  bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[p][2] = w[2];
  bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[p][4] = w[4];

  for (p = 3; p <= l - 2; p++) {
    ak = ai;
    ai = aj;
    an = al;
    al = am;
    t = (0.1 * 1.0) * as[p + 1][o][n];
    ax[p + 1] = aj = ar[p + 1][o][n];
    ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
    aq = ao;
    ao = ap;
    ap = at[p + 1][o][n];
    az[p][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
    az[p][4] = w[4] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
    ba[p][0] = w[0];
    ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    ba[p][2] = w[2];
    ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    ba[p][4] = w[4];
    bb[p][0] = w[0];
    bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
    bb[p][2] = w[2];
    bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
    bb[p][4] = w[4];
  }

  p = l - 1;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p + 1][o][n];
  ax[p + 1] = aj = ar[p + 1][o][n];
  ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  aq = ao;
  ao = ap;
  ap = at[p + 1][o][n];
  az[p][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (6.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][4] = w[4] = 0.0;
  ba[p][0] = w[0];
  ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[p][2] = w[2];
  ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[p][4] = w[4];
  bb[p][0] = w[0];
  bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[p][2] = w[2];
  bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[p][4] = w[4];

  p = l;
  ak = ai;
  ai = aj;
  an = al;
  al = am;
  t = (0.1 * 1.0) * as[p + 1][o][n];
  ax[p + 1] = aj = ar[p + 1][o][n];
  ay[p + 1] = am = ((((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) > (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))) ? (((1.0 + (4.0 / 3.0) * t) > (1.0 + (1.4 * 1.4) * t) ? (1.0 + (4.0 / 3.0) * t) : (1.0 + (1.4 * 1.4) * t))) : (((((1.0) > (1.0) ? (1.0) : (1.0)) + t) > (1.0) ? (((1.0) > (1.0) ? (1.0) : (1.0)) + t) : (1.0))));
  aq = ao;
  ao = ap;
  ap = at[p + 1][o][n];
  az[p][0] = w[0] = 0.0 + (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0))))));
  az[p][1] = w[1] = -(0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ak - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * an - (4.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][2] = w[2] = 1.0 + (2.0 * (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1)))))) * al + (5.0 * (0.015 * (0.25 * ((0.75) > (((0.75) > (1.0) ? (0.75) : (1.0))) ? (0.75) : (((0.75) > (1.0) ? (0.75) : (1.0)))))));
  az[p][3] = w[3] = (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aj - (0.015 * (1.0 / ((1.0 / (double)(12 - 1)) * (1.0 / (double)(12 - 1))))) * am;
  az[p][4] = w[4] = 0.0;
  ba[p][0] = w[0];
  ba[p][1] = w[1] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  ba[p][2] = w[2];
  ba[p][3] = w[3] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  ba[p][4] = w[4];
  bb[p][0] = w[0];
  bb[p][1] = w[1] + (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * aq;
  bb[p][2] = w[2];
  bb[p][3] = w[3] - (0.015 * (1.0 / (2.0 * (1.0 / (double)(12 - 1))))) * ap;
  bb[p][4] = w[4];

  x[2] = az[0][2];
  x[3] = az[0][3];
  y[1] = az[1][1];
  y[2] = az[1][2];

  ag[0] = au[0][o][n][0];
  ag[1] = au[0][o][n][1];
  ag[2] = au[0][o][n][2];
  ah[0] = au[1][o][n][0];
  ah[1] = au[1][o][n][1];
  ah[2] = au[1][o][n][2];

  for (p = 0; p <= m - 3; p++) {
    q = p + 1;
    r = p + 2;

    w[2] = x[2];
    w[3] = x[3];
    w[4] = az[p][4];
    af[0] = ag[0];
    af[1] = ag[1];
    af[2] = ag[2];

    u = 1.0 / w[2];
    az[p][3] = w[3] = u * w[3];
    az[p][4] = w[4] = u * w[4];
    for (s = 0; s < 3; s++) {
      au[p][o][n][s] = af[s] = u * af[s];
    }

    x[1] = y[1];
    x[2] = y[2];
    x[3] = az[q][3];
    ag[0] = ah[0];
    ag[1] = ah[1];
    ag[2] = ah[2];

    az[q][2] = x[2] = x[2] - x[1] * w[3];
    x[3] = x[3] - x[1] * w[4];
    for (s = 0; s < 3; s++) {
      ag[s] = ag[s] - x[1] * af[s];
    }

    y[0] = az[r][0];
    y[1] = az[r][1];
    y[2] = az[r][2];
    ah[0] = au[r][o][n][0];
    ah[1] = au[r][o][n][1];
    ah[2] = au[r][o][n][2];

    az[r][1] = y[1] = y[1] - y[0] * w[3];
    y[2] = y[2] - y[0] * w[4];
    for (s = 0; s < 3; s++) {
      ah[s] = ah[s] - y[0] * af[s];
    }
  }

  p = m - 2;
  q = m - 1;

  w[2] = x[2];
  w[3] = x[3];
  w[4] = az[p][4];
  af[0] = ag[0];
  af[1] = ag[1];
  af[2] = ag[2];

  u = 1.0 / w[2];
  az[p][3] = w[3] = u * w[3];
  az[p][4] = w[4] = u * w[4];
  for (s = 0; s < 3; s++) {
    au[p][o][n][s] = af[s] = u * af[s];
  }

  x[1] = y[1];
  x[2] = y[2];
  x[3] = az[q][3];
  ag[0] = ah[0];
  ag[1] = ah[1];
  ag[2] = ah[2];

  az[q][2] = x[2] = x[2] - x[1] * w[3];
  az[q][3] = x[3] - x[1] * w[4];
  for (s = 0; s < 3; s++) {
    ag[s] = ag[s] - x[1] * af[s];
  }

  v = 1.0 / x[2];
  for (s = 0; s < 3; s++) {
    au[q][o][n][s] = v * ag[s];
  }

  aa[2] = ba[0][2];
  aa[3] = ba[0][3];
  ab[1] = ba[1][1];
  ab[2] = ba[1][2];
  ad[2] = bb[0][2];
  ad[3] = bb[0][3];
  ae[1] = bb[1][1];
  ae[2] = bb[1][2];

  ag[3] = au[0][o][n][3];
  ag[4] = au[0][o][n][4];
  ah[3] = au[1][o][n][3];
  ah[4] = au[1][o][n][4];

  for (p = 0; p <= m - 3; p++) {
    q = p + 1;
    r = p + 2;

    s = 3;

    z[2] = aa[2];
    z[3] = aa[3];
    z[4] = ba[p][4];
    af[s] = ag[s];
    u = 1.0 / z[2];
    ba[p][3] = z[3] = u * z[3];
    ba[p][4] = z[4] = u * z[4];
    au[p][o][n][s] = af[s] = u * af[s];

    aa[1] = ab[1];
    aa[2] = ab[2];
    aa[3] = ba[q][3];
    ag[s] = ah[s];
    ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
    aa[3] = aa[3] - aa[1] * z[4];
    ag[s] = ag[s] - aa[1] * af[s];

    ab[0] = ba[r][0];
    ab[1] = ba[r][1];
    ab[2] = ba[r][2];
    ah[s] = au[r][o][n][s];
    ba[r][1] = ab[1] = ab[1] - ab[0] * z[3];
    ab[2] = ab[2] - ab[0] * z[4];
    ah[s] = ah[s] - ab[0] * af[s];

    s = 4;

    ac[2] = ad[2];
    ac[3] = ad[3];
    ac[4] = bb[p][4];
    af[s] = ag[s];
    u = 1.0 / ac[2];
    bb[p][3] = ac[3] = u * ac[3];
    bb[p][4] = ac[4] = u * ac[4];
    au[p][o][n][s] = af[s] = u * af[s];

    ad[1] = ae[1];
    ad[2] = ae[2];
    ad[3] = bb[q][3];
    ag[s] = ah[s];
    bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
    ad[3] = ad[3] - ad[1] * ac[4];
    ag[s] = ag[s] - ad[1] * af[s];

    ae[0] = bb[r][0];
    ae[1] = bb[r][1];
    ae[2] = bb[r][2];
    ah[s] = au[r][o][n][s];
    bb[r][1] = ae[1] = ae[1] - ae[0] * ac[3];
    ae[2] = ae[2] - ae[0] * ac[4];
    ah[s] = ah[s] - ae[0] * af[s];
  }

  p = m - 2;
  q = m - 1;

  s = 3;

  z[2] = aa[2];
  z[3] = aa[3];
  z[4] = ba[p][4];
  af[s] = ag[s];
  u = 1.0 / z[2];
  ba[p][3] = z[3] = u * z[3];
  ba[p][4] = z[4] = u * z[4];
  au[p][o][n][s] = af[s] = u * af[s];

  aa[1] = ab[1];
  aa[2] = ab[2];
  aa[3] = ba[q][3];
  ag[s] = ah[s];
  ba[q][2] = aa[2] = aa[2] - aa[1] * z[3];
  ba[q][3] = aa[3] = aa[3] - aa[1] * z[4];
  ag[s] = ag[s] - aa[1] * af[s];

  s = 4;

  ac[2] = ad[2];
  ac[3] = ad[3];
  ac[4] = bb[p][4];
  af[s] = ag[s];
  u = 1.0 / ac[2];
  bb[p][3] = ac[3] = u * ac[3];
  bb[p][4] = ac[4] = u * ac[4];
  au[p][o][n][s] = af[s] = u * af[s];

  ad[1] = ae[1];
  ad[2] = ae[2];
  ad[3] = bb[q][3];
  ag[s] = ah[s];
  bb[q][2] = ad[2] = ad[2] - ad[1] * ac[3];
  bb[q][3] = ad[3] = ad[3] - ad[1] * ac[4];
  ag[s] = ag[s] - ad[1] * af[s];

  au[q][o][n][3] = ag[3] / aa[2];
  au[q][o][n][4] = ag[4] / ad[2];

  p = m - 2;
  q = m - 1;
  w[3] = az[p][3];
  for (s = 0; s < 3; s++) {
    ag[s] = au[q][o][n][s];
    au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s];
  }

  ag[3] = au[q][o][n][3];
  au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[p][3] * ag[3];
  ag[4] = au[q][o][n][4];
  au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[p][3] * ag[4];
  for (p = m - 3; p >= 0; p--) {
    q = p + 1;
    r = p + 2;
    w[3] = az[p][3];
    w[4] = az[p][4];
    for (s = 0; s < 3; s++) {
      ah[s] = ag[s];
      ag[s] = af[s];
      au[p][o][n][s] = af[s] = au[p][o][n][s] - w[3] * ag[s] - w[4] * ah[s];
    }

    ah[3] = ag[3];
    ag[3] = af[3];
    au[p][o][n][3] = af[3] = au[p][o][n][3] - ba[p][3] * ag[3] - ba[p][4] * ah[3];
    ah[4] = ag[4];
    ag[4] = af[4];
    au[p][o][n][4] = af[4] = au[p][o][n][4] - bb[p][3] * ag[4] - bb[p][4] * ah[4];
  }
}","[ 63  76  51 ..., 127   0 127]"
543,nvidia-4.2-DotProduct-DotProduct,default,14,1,9,0,5,0,46006272,256,CPU,22.445654,31.087238,"__kernel void A(__global float* a, __global float* b, __global float* c, int d) {
  int e = get_global_id(0);

  if (e >= d) {
    return;
  }

  int f = e << 2;
  c[e] = a[f] * b[f] + a[f + 1] * b[f + 1] + a[f + 2] * b[f + 2] + a[f + 3] * b[f + 3];
}
","[129 129 129 ...,   0 127   0]"
544,nvidia-4.2-FDTD3d-FiniteDifferences,default,45,10,18,9,5,0,452985076,256,GPU,800.273766,445.16499699999997,"__kernel void A(__global float* const a, __global const float* const b, __constant float* const c, const int d, const int e, const int f, const int g) {
  bool h = true;
  const int i = get_global_id(0);
  const int j = get_global_id(1);
  const int k = get_local_id(0);
  const int l = get_local_id(1);
  const int m = get_local_size(0);
  const int n = get_local_size(1);
  __local float o[16 + 2 * 16][8 + 2 * 16];

  const int p = d + 2 * 16;
  const int q = p * (e + 2 * 16);

  int r = 0;
  int s = 0;

  r += 16 * p + 16 + g;

  r += j * p + i;

  float t[16];
  float u[16];
  float v;

  const int w = k + 16;
  const int x = l + 16;

  if (i >= d)
    h = false;
  if (j >= e)
    h = false;

  for (int y = 16 - 2; y >= 0; y--) {
    u[y] = b[r];
    r += q;
  }

  v = b[r];
  s = r;
  r += q;

  for (int y = 0; y < 16; y++) {
    t[y] = b[r];
    r += q;
  }

  for (int z = 0; z < f; z++) {
    for (int y = 16 - 1; y > 0; y--)
      u[y] = u[y - 1];
    u[0] = v;
    v = t[0];
    for (int y = 0; y < 16 - 1; y++)
      t[y] = t[y + 1];
    t[16 - 1] = b[r];

    r += q;
    s += q;
    barrier(1);
    if (l < 16) {
      o[l][w] = b[s - 16 * p];
      o[l + n + 16][w] = b[s + n * p];
    }

    if (k < 16) {
      o[x][k] = b[s - 16];
      o[x][k + m + 16] = b[s + m];
    }
    o[x][w] = v;
    barrier(1);

    float aa = c[0] * v;
    for (int y = 1; y <= 16; y++) {
      aa += c[y] * (t[y - 1] + u[y - 1] + o[x - y][w] + o[x + y][w] + o[x][w - y] + o[x][w + y]);
    }

    if (h)
      a[s] = aa;
  }
}
","[ 16   8  26 ...,   0 127   0]"
545,nvidia-4.2-MatVecMul-MatVecMulCoalesced0,default,3,4,5,2,3,0,440404400,256,CPU,226.576003,337.533472,"__kernel void A(const __global float* a, const __global float* b, uint c, uint d, __global float* e, __local float* f) {
  for (uint g = get_group_id(0); g < d; g += get_num_groups(0)) {
    const __global float* h = a + g * c;

    float i = 0;
    for (uint j = get_local_id(0); j < c; j += get_local_size(0))
      i += h[j] * b[j];

    f[get_local_id(0)] = i;

    barrier(1);

    if (get_local_id(0) == 0) {
      float k = 0;
      for (uint l = 0; l < get_local_size(0); ++l)
        k += f[l];
      e[g] = k;
    }

    barrier(1);
  }
}","[129 129 129 ..., 127   0 127]"
546,nvidia-4.2-MatVecMul-MatVecMulCoalesced1,default,6,5,7,4,3,0,440404400,256,GPU,391.300554,308.40813399999996,"__kernel void A(const __global float* a, const __global float* b, uint c, uint d, __global float* e, __local float* f) {
  for (uint g = get_group_id(0); g < d; g += get_num_groups(0)) {
    const __global float* h = a + g * c;

    float i = 0;
    for (uint j = get_local_id(0); j < c; j += get_local_size(0))
      i += h[j] * b[j];

    f[get_local_id(0)] = i;

    for (uint k = 1; k < get_local_size(0); k *= 2) {
      barrier(1);

      uint l = 2 * k * get_local_id(0);

      if (l < get_local_size(0)) {
        f[l] += f[l + k];
      }
    }

    if (get_local_id(0) == 0)
      e[g] = f[0];

    barrier(1);
  }
}","[129 129 129 ..., 127   0 127]"
547,nvidia-4.2-MatVecMul-MatVecMulCoalesced2,default,5,5,7,4,3,0,440404400,256,GPU,389.4035,307.559469,"__kernel void A(const __global float* a, const __global float* b, uint c, uint d, __global float* e, __local float* f) {
  for (uint g = get_group_id(0); g < d; g += get_num_groups(0)) {
    const __global float* h = a + g * c;

    float i = 0;
    for (uint j = get_local_id(0); j < c; j += get_local_size(0))
      i += h[j] * b[j];

    f[get_local_id(0)] = i;

    for (uint k = get_local_size(0) / 2; k > 0; k /= 2) {
      barrier(1);

      if (get_local_id(0) < k) {
        f[get_local_id(0)] += f[get_local_id(0) + k];
      }
    }

    if (get_local_id(0) == 0)
      e[g] = f[0];

    barrier(1);
  }
}","[129 129 129 ..., 127   0 127]"
548,nvidia-4.2-MatVecMul-MatVecMulCoalesced3,default,14,9,27,22,3,0,440404400,256,GPU,330.279325,305.658541,"__kernel void A(const __global float* a, const __global float* b, uint c, uint d, __global float* e, __local float* f) {
  for (uint g = get_group_id(0); g < d; g += get_num_groups(0)) {
    const __global float* h = a + g * c;

    float i = 0;
    for (uint j = get_local_id(0); j < c; j += get_local_size(0))
      i += h[j] * b[j];

    f[get_local_id(0)] = i;

    barrier(1);

    uint k = get_local_id(0) & (32 - 1);

    float l = 0.0f;
    if (get_local_id(0) < get_local_size(0) / 2) {
      volatile __local float* m = f + 2 * get_local_id(0) - k;
      m[0] += m[32];
      m[0] += m[16];
      m[0] += m[8];
      m[0] += m[4];
      m[0] += m[2];
      m[0] += m[1];
      l = m[0];
    }

    barrier(1);

    if (k == 0)
      f[get_local_id(0) / 32] = l;

    barrier(1);

    uint n = get_local_size(0) / (2 * 32);

    if (get_local_id(0) < n / 2) {
      volatile __local float* m = f + get_local_id(0);
      if (n >= 8)
        m[0] += m[4];
      if (n >= 4)
        m[0] += m[2];
      if (n >= 2)
        m[0] += m[1];
    }

    if (get_local_id(0) == 0)
      e[g] = f[0];

    barrier(1);
  }
}","[129 129 129 ..., 127   0 127]"
549,nvidia-4.2-MatVecMul-MatVecMulUncoalesced0,default,3,2,3,0,3,0,440404400,256,CPU,149.02926100000005,340.749274,"__kernel void A(const __global float* a, const __global float* b, uint c, uint d, __global float* e) {
  uint f = get_global_id(0);
  if (f < d) {
    const __global float* g = a + f * c;

    float h = 0;
    for (int i = 0; i < c; ++i)
      h += g[i] * b[i];

    e[f] = h;
  }
}","[129 129 129 ..., 127   0 127]"
550,nvidia-4.2-MatVecMul-MatVecMulUncoalesced1,default,3,2,3,0,3,0,440404400,256,CPU,149.31134699999996,306.494944,"__kernel void A(const __global float* a, const __global float* b, uint c, uint d, __global float* e) {
  for (uint f = get_global_id(0); f < d; f += get_global_size(0)) {
    const __global float* g = a + f * c;

    float h = 0;
    for (uint i = 0; i < c; ++i)
      h += g[i] * b[i];

    e[f] = h;
  }
}","[129 129 129 ..., 127   0 127]"
551,nvidia-4.2-MatrixMul-matrixMul,default,23,3,7,4,0,0,179200,256,GPU,0.54973,0.08391,"__kernel void A(__global float* a, __global float* b, __global float* c, __local float* d, __local float* e, int f, int g, int h) {
  int i = get_group_id(0);
  int j = get_group_id(1);

  int k = get_local_id(0);
  int l = get_local_id(1);

  int m = f * 64 * j;

  int n = m + f - 1;

  int o = 64;

  int p = 64 * i;

  int q = 64 * g;

  float r = 0.0f;

  for (int s = m, t = p; s <= n; s += o, t += q) {
    d[k + l * 64] = b[s + f * l + k];
    e[k + l * 64] = c[t + g * l + k];

    barrier(1);

    for (int u = 0; u < 64; ++u)
      r += d[u + l * 64] * e[k + u * 64];

    barrier(1);
  }

  if (get_global_id(1) < h)

    a[get_global_id(1) * get_global_size(0) + get_global_id(0)] = r;
}
","[129 129 129 ...,   0 127   0]"
552,nvidia-4.2-MersenneTwister-BoxMuller,default,26,1,6,0,0,0,96075776,128,GPU,425.108332,60.304421999999995,"__kernel void A(__global float* a, int b) {
  int c = get_global_id(0);

  for (int d = 0; d < b; d += 2)
    B(&a[c + (d + 0) * 4096], &a[c + (d + 1) * 4096]);
}","[129 129 129 ...,  26   0 127]"
553,nvidia-4.2-MersenneTwister-MersenneTwister,default,26,4,5,0,4,0,96075776,128,GPU,362.543388,59.399565,"__kernel void A(__global float* a, __global unsigned int* b, __global unsigned int* c, __global unsigned int* d, __global unsigned int* e, int f) {
  int g = get_global_id(0);

  int h, i, j, k;
  unsigned int l, m, n, o;
  unsigned int p[19], q, r, s;

  q = b[g];
  r = c[g];
  s = d[g];

  p[0] = e[g];
  for (h = 1; h < 19; h++)
    p[h] = (1812433253U * (p[h - 1] ^ (p[h - 1] >> 30)) + h) & 0xFFFFFFFFU;

  h = 0;
  m = p[0];
  for (k = 0; k < f; k++) {
    i = h + 1;
    j = h + 9;
    if (i >= 19)
      i -= 19;
    if (j >= 19)
      j -= 19;
    l = m;
    m = p[i];
    n = p[j];

    o = (l & 0xFFFFFFFEU) | (m & 0x1U);
    o = n ^ (o >> 1) ^ ((o & 1) ? q : 0);

    p[h] = o;
    h = i;

    o ^= (o >> 12);
    o ^= (o << 7) & r;
    o ^= (o << 15) & s;
    o ^= (o >> 18);

    a[g + k * 4096] = ((float)o + 1.0f) / 4294967296.0f;
  }
}","[129 129 129 ..., 127   0 127]"
554,nvidia-4.2-VectorAdd-VectorAdd,default,1,1,3,0,3,0,137339904,256,CPU,71.003148,89.567181,"__kernel void A(__global const float* a, __global const float* b, __global float* c, int d) {
  int e = get_global_id(0);

  if (e >= d) {
    return;
  }

  c[e] = a[e] + b[e];
}
","[129 129 129 ...,   0 127   0]"
555,parboil-0.2-bfs-BFS_kernel,1M,2,8,18,2,8,0,71936020,223,CPU,61.124127,102.191889,"__kernel void A(__global int* a, __global int* b, __global float2* c, __global float2* d, __global int* e, __global int* f, __global int* g, int h, int i, int j, __local int* k, __local int* l, __local int* m) {
  if (get_local_id(0) == 0) {
    *k = 0;
  }
  barrier(1);

  int n = get_global_id(0);

  if (n < h) {
    int o = a[n];
    e[o] = 16677221;
    int p = f[o];

    float2 q = c[o];

    for (int r = q.x; r < q.y + q.x; r++)

    {
      float2 s = d[r];
      int t = s.x;
      int u = s.y;
      u += p;
      int v = atom_min(&f[t], u);
      if (v > u) {
        if (e[t] > 16677216) {
          int w = atom_xchg(&e[t], i);

          if (w != i) {
            int x = atom_add(k, 1);
            l[x] = t;
          }
        }
      }
    }
  }
  barrier(1);

  if (get_local_id(0) == 0) {
    int y = *k;

    *m = atom_add(g, y);
  }
  barrier(1);

  int z = get_local_id(0);

  while (z < *k) {
    b[*m + z] = l[z];

    z += get_local_size(0);
  }
}","[129 129 129 ..., 127   0 127]"
556,parboil-0.2-bfs-BFS_kernel,NY,2,8,18,2,8,0,12425636,207,CPU,18.536832999999998,26.8309,"__kernel void A(__global int* a, __global int* b, __global float2* c, __global float2* d, __global int* e, __global int* f, __global int* g, int h, int i, int j, __local int* k, __local int* l, __local int* m) {
  if (get_local_id(0) == 0) {
    *k = 0;
  }
  barrier(1);

  int n = get_global_id(0);

  if (n < h) {
    int o = a[n];
    e[o] = 16677221;
    int p = f[o];

    float2 q = c[o];

    for (int r = q.x; r < q.y + q.x; r++)

    {
      float2 s = d[r];
      int t = s.x;
      int u = s.y;
      u += p;
      int v = atom_min(&f[t], u);
      if (v > u) {
        if (e[t] > 16677216) {
          int w = atom_xchg(&e[t], i);

          if (w != i) {
            int x = atom_add(k, 1);
            l[x] = t;
          }
        }
      }
    }
  }
  barrier(1);

  if (get_local_id(0) == 0) {
    int y = *k;

    *m = atom_add(g, y);
  }
  barrier(1);

  int z = get_local_id(0);

  while (z < *k) {
    b[*m + z] = l[z];

    z += get_local_size(0);
  }
}","[129 129 129 ..., 127   0 127]"
557,parboil-0.2-bfs-BFS_kernel,SF,2,8,18,2,8,0,88080156,255,CPU,45.644763,86.14688199999998,"__kernel void A(__global int* a, __global int* b, __global float2* c, __global float2* d, __global int* e, __global int* f, __global int* g, int h, int i, int j, __local int* k, __local int* l, __local int* m) {
  if (get_local_id(0) == 0) {
    *k = 0;
  }
  barrier(1);

  int n = get_global_id(0);

  if (n < h) {
    int o = a[n];
    e[o] = 16677221;
    int p = f[o];

    float2 q = c[o];

    for (int r = q.x; r < q.y + q.x; r++)

    {
      float2 s = d[r];
      int t = s.x;
      int u = s.y;
      u += p;
      int v = atom_min(&f[t], u);
      if (v > u) {
        if (e[t] > 16677216) {
          int w = atom_xchg(&e[t], i);

          if (w != i) {
            int x = atom_add(k, 1);
            l[x] = t;
          }
        }
      }
    }
  }
  barrier(1);

  if (get_local_id(0) == 0) {
    int y = *k;

    *m = atom_add(g, y);
  }
  barrier(1);

  int z = get_local_id(0);

  while (z < *k) {
    b[*m + z] = l[z];

    z += get_local_size(0);
  }
}","[129 129 129 ..., 127   0 127]"
558,parboil-0.2-bfs-BFS_kernel,UT,2,8,18,2,8,0,10691676,171,CPU,20.256719,30.27592700000001,"__kernel void A(__global int* a, __global int* b, __global float2* c, __global float2* d, __global int* e, __global int* f, __global int* g, int h, int i, int j, __local int* k, __local int* l, __local int* m) {
  if (get_local_id(0) == 0) {
    *k = 0;
  }
  barrier(1);

  int n = get_global_id(0);

  if (n < h) {
    int o = a[n];
    e[o] = 16677221;
    int p = f[o];

    float2 q = c[o];

    for (int r = q.x; r < q.y + q.x; r++)

    {
      float2 s = d[r];
      int t = s.x;
      int u = s.y;
      u += p;
      int v = atom_min(&f[t], u);
      if (v > u) {
        if (e[t] > 16677216) {
          int w = atom_xchg(&e[t], i);

          if (w != i) {
            int x = atom_add(k, 1);
            l[x] = t;
          }
        }
      }
    }
  }
  barrier(1);

  if (get_local_id(0) == 0) {
    int y = *k;

    *m = atom_add(g, y);
  }
  barrier(1);

  int z = get_local_id(0);

  while (z < *k) {
    b[*m + z] = l[z];

    z += get_local_size(0);
  }
}","[129 129 129 ..., 127   0 127]"
559,parboil-0.2-cutcp-opencl_cutoff_potential_lattice,large,102,8,14,6,2,0,40211252,128,GPU,1445.190685,55.86466400000001,"__kernel void A(int a, int b, __global float4* c, int d, float e, float f, float g, __global float* h, int i, __constant int* j, __constant float4* k) {
  __global float4* l = c + d;

  __local float m[32 * 8 * 4];
  __global float* n;
  __local float4 o;

  const int p = (get_local_id(2) * 8 + get_local_id(1)) * 8 + get_local_id(0);

  int q;

  n = h + ((i * get_num_groups(1) + get_group_id(1)) * (get_num_groups(0) >> 2) + (get_group_id(0) >> 2)) * 512 + (get_group_id(0) & 3) * 128;

  float r = (8 * (get_group_id(0) >> 2) + get_local_id(0)) * e;
  float s = (8 * get_group_id(1) + get_local_id(1)) * e;
  float t = (8 * i + 2 * (get_group_id(0) & 3) + get_local_id(2)) * e;

  int u = 0;
  int v;

  o.x = (int)__clc_floor((8 * (get_group_id(0) >> 2) + 4) * e * (1.f / 4.f));
  o.y = (int)__clc_floor((8 * get_group_id(1) + 4) * e * (1.f / 4.f));
  o.z = (int)__clc_floor((8 * i + 4) * e * (1.f / 4.f));

  q = (p >> 4);

  v = 32;

  float w = 0.f;
  for (u = 0; u < *j; u += v) {
    int x;

    int y = 32 * (p >> 4);

    for (x = 0; x < 4 && q < *j; x++, q += 8) {
      int z = o.x + k[q].x;
      int aa = o.y + k[q].y;
      int ab = o.z + k[q].z;

      __global float* ac = ((__global float*)l) + (((ab * b) + aa) * a + z) * 32;

      int ad = p & 15;
      int ae = y + x * 8 * 32;

      m[ae + ad] = ac[ad];
      m[ae + ad + 16] = ac[ad + 16];
    }
    barrier(1 | 2);

    if (u + 32 > *j) {
      v = *j - u;
    }

    for (x = 0; x < v; x++) {
      int z;
      float af;

      for (z = 0; z < 8; z++) {
        float ag = m[x * 32 + z * 4];
        float ah = m[x * 32 + z * 4 + 1];
        float ai = m[x * 32 + z * 4 + 2];
        float aj = m[x * 32 + z * 4 + 3];
        if (0.f == aj)
          break;
        af = (ag - r) * (ag - r) + (ah - s) * (ah - s) + (ai - t) * (ai - t);
        if (af < f) {
          float ak = (1.f - af * g);
          w += aj * (1.f / sqrt(af)) * ak * ak;
        }
      }
    }
    barrier(1 | 2);
  }

  n[p] = w;
}","[ 90  73   7 ...,  26   0 127]"
560,parboil-0.2-cutcp-opencl_cutoff_potential_lattice,small,102,8,14,6,2,0,3376052,128,GPU,182.443401,5.166842,"__kernel void A(int a, int b, __global float4* c, int d, float e, float f, float g, __global float* h, int i, __constant int* j, __constant float4* k) {
  __global float4* l = c + d;

  __local float m[32 * 8 * 4];
  __global float* n;
  __local float4 o;

  const int p = (get_local_id(2) * 8 + get_local_id(1)) * 8 + get_local_id(0);

  int q;

  n = h + ((i * get_num_groups(1) + get_group_id(1)) * (get_num_groups(0) >> 2) + (get_group_id(0) >> 2)) * 512 + (get_group_id(0) & 3) * 128;

  float r = (8 * (get_group_id(0) >> 2) + get_local_id(0)) * e;
  float s = (8 * get_group_id(1) + get_local_id(1)) * e;
  float t = (8 * i + 2 * (get_group_id(0) & 3) + get_local_id(2)) * e;

  int u = 0;
  int v;

  o.x = (int)__clc_floor((8 * (get_group_id(0) >> 2) + 4) * e * (1.f / 4.f));
  o.y = (int)__clc_floor((8 * get_group_id(1) + 4) * e * (1.f / 4.f));
  o.z = (int)__clc_floor((8 * i + 4) * e * (1.f / 4.f));

  q = (p >> 4);

  v = 32;

  float w = 0.f;
  for (u = 0; u < *j; u += v) {
    int x;

    int y = 32 * (p >> 4);

    for (x = 0; x < 4 && q < *j; x++, q += 8) {
      int z = o.x + k[q].x;
      int aa = o.y + k[q].y;
      int ab = o.z + k[q].z;

      __global float* ac = ((__global float*)l) + (((ab * b) + aa) * a + z) * 32;

      int ad = p & 15;
      int ae = y + x * 8 * 32;

      m[ae + ad] = ac[ad];
      m[ae + ad + 16] = ac[ad + 16];
    }
    barrier(1 | 2);

    if (u + 32 > *j) {
      v = *j - u;
    }

    for (x = 0; x < v; x++) {
      int z;
      float af;

      for (z = 0; z < 8; z++) {
        float ag = m[x * 32 + z * 4];
        float ah = m[x * 32 + z * 4 + 1];
        float ai = m[x * 32 + z * 4 + 2];
        float aj = m[x * 32 + z * 4 + 3];
        if (0.f == aj)
          break;
        af = (ag - r) * (ag - r) + (ah - s) * (ah - s) + (ai - t) * (ai - t);
        if (af < f) {
          float ak = (1.f - af * g);
          w += aj * (1.f / sqrt(af)) * ak * ak;
        }
      }
    }
    barrier(1 | 2);
  }

  n[p] = w;
}","[ 90  73   7 ...,  26   0 127]"
561,parboil-0.2-lbm-performStreamCollide_kernel,long,780,0,42,0,0,0,378470400,120,CPU,173.621273,373.336252,"__kernel void A(__global float* a, __global float* b) {
  a += ((0 + 128 * ((0) + (0) * ((120) + (8)) + (2) * ((120) + (8)) * ((120) + (0)))) - (0 + 128 * ((0) + (0) * ((120) + (8)) + (0) * ((120) + (8)) * ((120) + (0)))));
  b += ((0 + 128 * ((0) + (0) * ((120) + (8)) + (2) * ((120) + (8)) * ((120) + (0)))) - (0 + 128 * ((0) + (0) * ((120) + (8)) + (0) * ((120) + (8)) * ((120) + (0)))));

  int c, d, e;
  c = get_local_id(0);
  d = get_group_id(0);
  e = get_group_id(1);

  float f, g, h, i, j, k, l, m;
  float n, o, p, q, r, s, t;
  float u, v, w, x, y;

  g = ((((a)[(C + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])));

  h = ((((a)[(N + 128 * (((0) + c) + ((-1) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])));
  i = ((((a)[(S + 128 * (((0) + c) + ((+1) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])));
  j = ((((a)[(E + 128 * (((-1) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])));
  k = ((((a)[(W + 128 * (((+1) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])));
  l = ((((a)[(T + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((-1) + e) * ((120) + (8)) * ((120) + (0))))])));
  m = ((((a)[(B + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((+1) + e) * ((120) + (8)) * ((120) + (0))))])));

  n = ((((a)[(NE + 128 * (((-1) + c) + ((-1) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])));
  o = ((((a)[(NW + 128 * (((+1) + c) + ((-1) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])));
  p = ((((a)[(SE + 128 * (((-1) + c) + ((+1) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])));
  q = ((((a)[(SW + 128 * (((+1) + c) + ((+1) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])));
  r = ((((a)[(NT + 128 * (((0) + c) + ((-1) + d) * ((120) + (8)) + ((-1) + e) * ((120) + (8)) * ((120) + (0))))])));
  s = ((((a)[(NB + 128 * (((0) + c) + ((-1) + d) * ((120) + (8)) + ((+1) + e) * ((120) + (8)) * ((120) + (0))))])));
  t = ((((a)[(ST + 128 * (((0) + c) + ((+1) + d) * ((120) + (8)) + ((-1) + e) * ((120) + (8)) * ((120) + (0))))])));
  u = ((((a)[(SB + 128 * (((0) + c) + ((+1) + d) * ((120) + (8)) + ((+1) + e) * ((120) + (8)) * ((120) + (0))))])));
  v = ((((a)[(ET + 128 * (((-1) + c) + ((0) + d) * ((120) + (8)) + ((-1) + e) * ((120) + (8)) * ((120) + (0))))])));
  w = ((((a)[(EB + 128 * (((-1) + c) + ((0) + d) * ((120) + (8)) + ((+1) + e) * ((120) + (8)) * ((120) + (0))))])));
  x = ((((a)[(WT + 128 * (((+1) + c) + ((0) + d) * ((120) + (8)) + ((-1) + e) * ((120) + (8)) * ((120) + (0))))])));
  y = ((((a)[(WB + 128 * (((+1) + c) + ((0) + d) * ((120) + (8)) + ((+1) + e) * ((120) + (8)) * ((120) + (0))))])));

  if (__builtin_astype((((a)[(FLAGS + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])), uint) & (OBSTACLE)) {
    f = h;
    h = i;
    i = f;
    f = j;
    j = k;
    k = f;
    f = l;
    l = m;
    m = f;
    f = n;
    n = q;
    q = f;
    f = o;
    o = p;
    p = f;
    f = r;
    r = u;
    u = f;
    f = s;
    s = t;
    t = f;
    f = v;
    v = y;
    y = f;
    f = w;
    w = x;
    x = f;
  } else {
    float z, aa, ab, ac, ad;
    float ae, af, ag;
    ac = g + h + i + j + k + l + m + n + o + p + q + r + s + t + u + v + w + x + y;

    z = +j - k + n - o + p - q + v + w - x - y;

    aa = +h - i + n + o - p - q + r + s - t - u;

    ab = +l - m + r - s + t - u + v - w + x - y;

    z /= ac;
    aa /= ac;
    ab /= ac;

    if (__builtin_astype((((a)[(FLAGS + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])), uint) & (ACCEL)) {
      z = 0.005f;
      aa = 0.002f;
      ab = 0.000f;
    }

    ad = 1.5f * (z * z + aa * aa + ab * ab) - 1.0f;
    ag = (1.95f) * ac;
    ae = (1.0f / 3.0f) * ag;

    ag = (1.95f) * ac;
    ae = (1.0f / 3.0f) * ag;
    af = 1.0f - (1.95f);
    g = af * g + ae * (-ad);
    ae = (1.0f / 18.0f) * ag;
    h = af * h + ae * (aa * (4.5f * aa + 3.0f) - ad);
    i = af * i + ae * (aa * (4.5f * aa - 3.0f) - ad);
    l = af * l + ae * (ab * (4.5f * ab + 3.0f) - ad);
    m = af * m + ae * (ab * (4.5f * ab - 3.0f) - ad);
    j = af * j + ae * (z * (4.5f * z + 3.0f) - ad);
    k = af * k + ae * (z * (4.5f * z - 3.0f) - ad);
    ae = (1.0f / 36.0f) * ag;
    r = af * r + ae * ((+aa + ab) * (4.5f * (+aa + ab) + 3.0f) - ad);
    s = af * s + ae * ((+aa - ab) * (4.5f * (+aa - ab) + 3.0f) - ad);
    t = af * t + ae * ((-aa + ab) * (4.5f * (-aa + ab) + 3.0f) - ad);
    u = af * u + ae * ((-aa - ab) * (4.5f * (-aa - ab) + 3.0f) - ad);
    n = af * n + ae * ((+z + aa) * (4.5f * (+z + aa) + 3.0f) - ad);
    p = af * p + ae * ((+z - aa) * (4.5f * (+z - aa) + 3.0f) - ad);
    v = af * v + ae * ((+z + ab) * (4.5f * (+z + ab) + 3.0f) - ad);
    w = af * w + ae * ((+z - ab) * (4.5f * (+z - ab) + 3.0f) - ad);
    o = af * o + ae * ((-z + aa) * (4.5f * (-z + aa) + 3.0f) - ad);
    q = af * q + ae * ((-z - aa) * (4.5f * (-z - aa) + 3.0f) - ad);
    x = af * x + ae * ((-z + ab) * (4.5f * (-z + ab) + 3.0f) - ad);
    y = af * y + ae * ((-z - ab) * (4.5f * (-z - ab) + 3.0f) - ad);
  }

  ((((b)[(C + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = g;

  ((((b)[(N + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = h;
  ((((b)[(S + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = i;
  ((((b)[(E + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = j;
  ((((b)[(W + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = k;
  ((((b)[(T + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = l;
  ((((b)[(B + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = m;

  ((((b)[(NE + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = n;
  ((((b)[(NW + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = o;
  ((((b)[(SE + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = p;
  ((((b)[(SW + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = q;
  ((((b)[(NT + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = r;
  ((((b)[(NB + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = s;
  ((((b)[(ST + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = t;
  ((((b)[(SB + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = u;
  ((((b)[(ET + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = v;
  ((((b)[(EB + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = w;
  ((((b)[(WT + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = x;
  ((((b)[(WB + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = y;
}
","[  7  65   8 ...,   0 127   0]"
562,parboil-0.2-lbm-performStreamCollide_kernel,short,780,0,42,0,0,0,378470400,120,CPU,173.712334,373.863821,"__kernel void A(__global float* a, __global float* b) {
  a += ((0 + 128 * ((0) + (0) * ((120) + (8)) + (2) * ((120) + (8)) * ((120) + (0)))) - (0 + 128 * ((0) + (0) * ((120) + (8)) + (0) * ((120) + (8)) * ((120) + (0)))));
  b += ((0 + 128 * ((0) + (0) * ((120) + (8)) + (2) * ((120) + (8)) * ((120) + (0)))) - (0 + 128 * ((0) + (0) * ((120) + (8)) + (0) * ((120) + (8)) * ((120) + (0)))));

  int c, d, e;
  c = get_local_id(0);
  d = get_group_id(0);
  e = get_group_id(1);

  float f, g, h, i, j, k, l, m;
  float n, o, p, q, r, s, t;
  float u, v, w, x, y;

  g = ((((a)[(C + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])));

  h = ((((a)[(N + 128 * (((0) + c) + ((-1) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])));
  i = ((((a)[(S + 128 * (((0) + c) + ((+1) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])));
  j = ((((a)[(E + 128 * (((-1) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])));
  k = ((((a)[(W + 128 * (((+1) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])));
  l = ((((a)[(T + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((-1) + e) * ((120) + (8)) * ((120) + (0))))])));
  m = ((((a)[(B + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((+1) + e) * ((120) + (8)) * ((120) + (0))))])));

  n = ((((a)[(NE + 128 * (((-1) + c) + ((-1) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])));
  o = ((((a)[(NW + 128 * (((+1) + c) + ((-1) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])));
  p = ((((a)[(SE + 128 * (((-1) + c) + ((+1) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])));
  q = ((((a)[(SW + 128 * (((+1) + c) + ((+1) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])));
  r = ((((a)[(NT + 128 * (((0) + c) + ((-1) + d) * ((120) + (8)) + ((-1) + e) * ((120) + (8)) * ((120) + (0))))])));
  s = ((((a)[(NB + 128 * (((0) + c) + ((-1) + d) * ((120) + (8)) + ((+1) + e) * ((120) + (8)) * ((120) + (0))))])));
  t = ((((a)[(ST + 128 * (((0) + c) + ((+1) + d) * ((120) + (8)) + ((-1) + e) * ((120) + (8)) * ((120) + (0))))])));
  u = ((((a)[(SB + 128 * (((0) + c) + ((+1) + d) * ((120) + (8)) + ((+1) + e) * ((120) + (8)) * ((120) + (0))))])));
  v = ((((a)[(ET + 128 * (((-1) + c) + ((0) + d) * ((120) + (8)) + ((-1) + e) * ((120) + (8)) * ((120) + (0))))])));
  w = ((((a)[(EB + 128 * (((-1) + c) + ((0) + d) * ((120) + (8)) + ((+1) + e) * ((120) + (8)) * ((120) + (0))))])));
  x = ((((a)[(WT + 128 * (((+1) + c) + ((0) + d) * ((120) + (8)) + ((-1) + e) * ((120) + (8)) * ((120) + (0))))])));
  y = ((((a)[(WB + 128 * (((+1) + c) + ((0) + d) * ((120) + (8)) + ((+1) + e) * ((120) + (8)) * ((120) + (0))))])));

  if (__builtin_astype((((a)[(FLAGS + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])), uint) & (OBSTACLE)) {
    f = h;
    h = i;
    i = f;
    f = j;
    j = k;
    k = f;
    f = l;
    l = m;
    m = f;
    f = n;
    n = q;
    q = f;
    f = o;
    o = p;
    p = f;
    f = r;
    r = u;
    u = f;
    f = s;
    s = t;
    t = f;
    f = v;
    v = y;
    y = f;
    f = w;
    w = x;
    x = f;
  } else {
    float z, aa, ab, ac, ad;
    float ae, af, ag;
    ac = g + h + i + j + k + l + m + n + o + p + q + r + s + t + u + v + w + x + y;

    z = +j - k + n - o + p - q + v + w - x - y;

    aa = +h - i + n + o - p - q + r + s - t - u;

    ab = +l - m + r - s + t - u + v - w + x - y;

    z /= ac;
    aa /= ac;
    ab /= ac;

    if (__builtin_astype((((a)[(FLAGS + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))])), uint) & (ACCEL)) {
      z = 0.005f;
      aa = 0.002f;
      ab = 0.000f;
    }

    ad = 1.5f * (z * z + aa * aa + ab * ab) - 1.0f;
    ag = (1.95f) * ac;
    ae = (1.0f / 3.0f) * ag;

    ag = (1.95f) * ac;
    ae = (1.0f / 3.0f) * ag;
    af = 1.0f - (1.95f);
    g = af * g + ae * (-ad);
    ae = (1.0f / 18.0f) * ag;
    h = af * h + ae * (aa * (4.5f * aa + 3.0f) - ad);
    i = af * i + ae * (aa * (4.5f * aa - 3.0f) - ad);
    l = af * l + ae * (ab * (4.5f * ab + 3.0f) - ad);
    m = af * m + ae * (ab * (4.5f * ab - 3.0f) - ad);
    j = af * j + ae * (z * (4.5f * z + 3.0f) - ad);
    k = af * k + ae * (z * (4.5f * z - 3.0f) - ad);
    ae = (1.0f / 36.0f) * ag;
    r = af * r + ae * ((+aa + ab) * (4.5f * (+aa + ab) + 3.0f) - ad);
    s = af * s + ae * ((+aa - ab) * (4.5f * (+aa - ab) + 3.0f) - ad);
    t = af * t + ae * ((-aa + ab) * (4.5f * (-aa + ab) + 3.0f) - ad);
    u = af * u + ae * ((-aa - ab) * (4.5f * (-aa - ab) + 3.0f) - ad);
    n = af * n + ae * ((+z + aa) * (4.5f * (+z + aa) + 3.0f) - ad);
    p = af * p + ae * ((+z - aa) * (4.5f * (+z - aa) + 3.0f) - ad);
    v = af * v + ae * ((+z + ab) * (4.5f * (+z + ab) + 3.0f) - ad);
    w = af * w + ae * ((+z - ab) * (4.5f * (+z - ab) + 3.0f) - ad);
    o = af * o + ae * ((-z + aa) * (4.5f * (-z + aa) + 3.0f) - ad);
    q = af * q + ae * ((-z - aa) * (4.5f * (-z - aa) + 3.0f) - ad);
    x = af * x + ae * ((-z + ab) * (4.5f * (-z + ab) + 3.0f) - ad);
    y = af * y + ae * ((-z - ab) * (4.5f * (-z - ab) + 3.0f) - ad);
  }

  ((((b)[(C + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = g;

  ((((b)[(N + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = h;
  ((((b)[(S + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = i;
  ((((b)[(E + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = j;
  ((((b)[(W + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = k;
  ((((b)[(T + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = l;
  ((((b)[(B + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = m;

  ((((b)[(NE + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = n;
  ((((b)[(NW + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = o;
  ((((b)[(SE + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = p;
  ((((b)[(SW + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = q;
  ((((b)[(NT + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = r;
  ((((b)[(NB + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = s;
  ((((b)[(ST + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = t;
  ((((b)[(SB + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = u;
  ((((b)[(ET + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = v;
  ((((b)[(EB + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = w;
  ((((b)[(WT + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = x;
  ((((b)[(WB + 128 * (((0) + c) + ((0) + d) * ((120) + (8)) + ((0) + e) * ((120) + (8)) * ((120) + (0))))]))) = y;
}
","[  7  65   8 ...,   0 127   0]"
563,parboil-0.2-sad-larger_sad_calc_16,default,84,1,4,0,8,0,17845344,32,CPU,2.375364,5.3761470000000005,"__kernel void A(__global unsigned short* a, int b, int c) {
  int d = get_group_id(0);
  int e = get_group_id(1);

  int f = mul24(b, c) * 1024;
  int g = (mul24(e, b) + d) * 1024;

  __global unsigned short* h;
  __global unsigned short *i, *j, *k;

  h = a + ((f + g) << 2) + f;

  i = a + ((f + g) << 1) + f;

  j = a + f + g * 2;

  k = a + g;

  for (int l = get_local_id(0); l < (32 + 1) / 2; l += 32) {
      ushort2 m = (ushort2) (h(l)*2], h(l)*2+1]);
      ushort2 n = (ushort2) (h(l)*2], h(l)*2+1]);
      ushort2 o = (ushort2) (h(l/2)*2], h(l/2)*2+1]);
      ushort2 p = (ushort2) (h(l/2)*2], h(l/2)*2+1]);
      ((__global ushort2*)i)[l] = m + o;
      ((__global ushort2*)i)[l + 1024 / 2] = n + p;
      ((__global ushort2*)j)[l] = m + n;
      ((__global ushort2*)j)[l + 1024 / 2] = o + p;
      ((__global ushort2*)k)[l] = (m + n) + (o + p);
  }
}","[129 129 129 ..., 127   0 127]"
564,parboil-0.2-sad-larger_sad_calc_16,large,84,1,4,0,8,0,1449258240,32,CPU,213.106556,434.472666,"__kernel void A(__global unsigned short* a, int b, int c) {
  int d = get_group_id(0);
  int e = get_group_id(1);

  int f = mul24(b, c) * 1024;
  int g = (mul24(e, b) + d) * 1024;

  __global unsigned short* h;
  __global unsigned short *i, *j, *k;

  h = a + ((f + g) << 2) + f;

  i = a + ((f + g) << 1) + f;

  j = a + f + g * 2;

  k = a + g;

  for (int l = get_local_id(0); l < (32 + 1) / 2; l += 32) {
      ushort2 m = (ushort2) (h(l)*2], h(l)*2+1]);
      ushort2 n = (ushort2) (h(l)*2], h(l)*2+1]);
      ushort2 o = (ushort2) (h(l/2)*2], h(l/2)*2+1]);
      ushort2 p = (ushort2) (h(l/2)*2], h(l/2)*2+1]);
      ((__global ushort2*)i)[l] = m + o;
      ((__global ushort2*)i)[l + 1024 / 2] = n + p;
      ((__global ushort2*)j)[l] = m + n;
      ((__global ushort2*)j)[l + 1024 / 2] = o + p;
      ((__global ushort2*)k)[l] = (m + n) + (o + p);
  }
}","[129 129 129 ..., 127   0 127]"
565,parboil-0.2-sad-larger_sad_calc_8,default,110,2,4,0,8,0,17845344,128,CPU,2.760186,5.43015,"__kernel void A(__global unsigned short* a, int b, int c) {
  int d = get_local_id(1) & 1;
  int e = get_local_id(1) >> 1;

  int f = get_group_id(0);
  int g = get_group_id(1);

  int h = mul24(b, c);
  int i = (mul24(g, b) + f) * 1024;

  __global unsigned short* j;
  __global unsigned short *k, *l, *m;

  j = a + (mul24(h, 25) + (e * 8 + d * 2)) * 1024 + i * 16;

  k = a + ((h << 4) + h + (e * 4 + d * 2)) * 1024 + i * 8;

  if (e < 100) {
    l = a + ((h << 3) + h + (e * 4 + d)) * 1024 + i * 8;

    m = a + ((h << 2) + h + (e * 2 + d)) * 1024 + i * 4;
  }

  for (int n = get_local_id(0); n < (32 + 1) / 2; n += 32) {
       ushort2 o = (ushort2) (j(n)*2], j(n)*2+1]);
      ushort2 p = (ushort2) (j(n)*2], j(n)*2+1]);
      ushort2 q = (ushort2) (j(n/2)*2], j(n/2)*2+1]);
      ushort2 r = (ushort2) (j(n/2)*2], j(n/2)*2+1]);
      ((__global ushort2*)k)[n] = o + q;
      ((__global ushort2*)k)[n + 1024 / 2] = p + r;
      ((__global ushort2*)l)[n] = o + p;
      ((__global ushort2*)l)[n + 2 * 1024 / 2] = q + r;
      ((__global ushort2*)m)[n] = (o + p) + (q + r);
  }
}","[129 129 129 ..., 127   0 127]"
566,parboil-0.2-sad-larger_sad_calc_8,large,110,2,4,0,8,0,1449258240,128,CPU,256.054548,439.536058,"__kernel void A(__global unsigned short* a, int b, int c) {
  int d = get_local_id(1) & 1;
  int e = get_local_id(1) >> 1;

  int f = get_group_id(0);
  int g = get_group_id(1);

  int h = mul24(b, c);
  int i = (mul24(g, b) + f) * 1024;

  __global unsigned short* j;
  __global unsigned short *k, *l, *m;

  j = a + (mul24(h, 25) + (e * 8 + d * 2)) * 1024 + i * 16;

  k = a + ((h << 4) + h + (e * 4 + d * 2)) * 1024 + i * 8;

  if (e < 100) {
    l = a + ((h << 3) + h + (e * 4 + d)) * 1024 + i * 8;

    m = a + ((h << 2) + h + (e * 2 + d)) * 1024 + i * 4;
  }

  for (int n = get_local_id(0); n < (32 + 1) / 2; n += 32) {
       ushort2 o = (ushort2) (j(n)*2], j(n)*2+1]);
      ushort2 p = (ushort2) (j(n)*2], j(n)*2+1]);
      ushort2 q = (ushort2) (j(n/2)*2], j(n/2)*2+1]);
      ushort2 r = (ushort2) (j(n/2)*2], j(n/2)*2+1]);
      ((__global ushort2*)k)[n] = o + q;
      ((__global ushort2*)k)[n + 1024 / 2] = p + r;
      ((__global ushort2*)l)[n] = o + p;
      ((__global ushort2*)l)[n + 2 * 1024 / 2] = q + r;
      ((__global ushort2*)m)[n] = (o + p) + (q + r);
  }
}","[129 129 129 ..., 127   0 127]"
567,parboil-0.2-sad-mb_sad_calc,default,55,6,3,0,1,0,17845344,61,GPU,52.599774,6.030547,"__kernel void A(__global unsigned short* a, __global unsigned short* b, int c, int d, __read_only image2d_t e) {
  const sampler_t f;

  int g = (get_local_id(0) / 32) % 128;
  int h = (get_local_id(0) / 32) / 128;
  int i = get_group_id(0);
  int j = get_group_id(1);
  int k = c * 16;

  int l = (g + i * 128) >> 2;
  int m = (h + j * 16) >> 2;
  int n = (g + i * 128) & 0x03;
  int o = (h + j * 16) & 0x03;

  if ((l < c) && (m < d)) {
    int p = ((l << 2) + n) << 2;
    int q = ((m << 2) + o) << 2;

    int r = p - 16;
    int s = q - 16;

    int t = q * k + p;

    int u;
    int v = (get_local_id(0) % 32) * 8;
    int w = v + 8;

    a += c * d * 1024 * (9 + 16) + (m * c + l) * 1024 * 16 + (4 * o + n) * 1024;

    if (w > 32)
      w = 32;

    for (u = v; u < w; u++) {
      unsigned short x = 0;
      int y = r + (u % 4);
      int z = s + (u / 4);

      for (int aa = 0; aa < 4; aa++) {
        for (int ab = 0; ab < 4; ab++) {
          x += b[t + aa * k + ab];
        }
      }

      a[u] = x;
    }
  }
}","[129 129 129 ..., 127   0 127]"
568,parboil-0.2-sad-mb_sad_calc,large,55,6,3,0,1,0,1449258240,61,GPU,4258.258081,483.75447699999995,"__kernel void A(__global unsigned short* a, __global unsigned short* b, int c, int d, __read_only image2d_t e) {
  const sampler_t f;

  int g = (get_local_id(0) / 32) % 128;
  int h = (get_local_id(0) / 32) / 128;
  int i = get_group_id(0);
  int j = get_group_id(1);
  int k = c * 16;

  int l = (g + i * 128) >> 2;
  int m = (h + j * 16) >> 2;
  int n = (g + i * 128) & 0x03;
  int o = (h + j * 16) & 0x03;

  if ((l < c) && (m < d)) {
    int p = ((l << 2) + n) << 2;
    int q = ((m << 2) + o) << 2;

    int r = p - 16;
    int s = q - 16;

    int t = q * k + p;

    int u;
    int v = (get_local_id(0) % 32) * 8;
    int w = v + 8;

    a += c * d * 1024 * (9 + 16) + (m * c + l) * 1024 * 16 + (4 * o + n) * 1024;

    if (w > 32)
      w = 32;

    for (u = v; u < w; u++) {
      unsigned short x = 0;
      int y = r + (u % 4);
      int z = s + (u / 4);

      for (int aa = 0; aa < 4; aa++) {
        for (int ab = 0; ab < 4; ab++) {
          x += b[t + aa * k + ab];
        }
      }

      a[u] = x;
    }
  }
}","[129 129 129 ..., 127   0 127]"
569,parboil-0.2-spmv-A,large,3,2,5,0,5,0,30901580,192,CPU,15.513679999999999,21.814216000000002,"__kernel void A(__global float* a, __global float* b, __global int* c, __global int* d, __global float* e, const int f, __constant int* g, __constant int* h) {
  int i = get_global_id(0);

  if (i < f) {
    float j = 0.0f;

    int k = h[i / 32];

    for (int l = 0; l < k; l++) {
      int m = g[l] + i;
      int n = c[m];

      float o = b[m];
      float p = e[n];

      j += o * p;
    }

    a[d[i]] = j;
  }
}
","[129 129 129 ...,   0 127   0]"
570,parboil-0.2-spmv-A,medium,3,2,5,0,5,0,1384528,32,CPU,0.891747,1.243547,"__kernel void A(__global float* a, __global float* b, __global int* c, __global int* d, __global float* e, const int f, __constant int* g, __constant int* h) {
  int i = get_global_id(0);

  if (i < f) {
    float j = 0.0f;

    int k = h[i / 32];

    for (int l = 0; l < k; l++) {
      int m = g[l] + i;
      int n = c[m];

      float o = b[m];
      float p = e[n];

      j += o * p;
    }

    a[d[i]] = j;
  }
}
","[129 129 129 ...,   0 127   0]"
571,parboil-0.2-spmv-A,small,3,2,5,0,5,0,89240,32,GPU,0.28982199999999997,0.17941500000000002,"__kernel void A(__global float* a, __global float* b, __global int* c, __global int* d, __global float* e, const int f, __constant int* g, __constant int* h) {
  int i = get_global_id(0);

  if (i < f) {
    float j = 0.0f;

    int k = h[i / 32];

    for (int l = 0; l < k; l++) {
      int m = g[l] + i;
      int n = c[m];

      float o = b[m];
      float p = e[n];

      j += o * p;
    }

    a[d[i]] = j;
  }
}
","[129 129 129 ...,   0 127   0]"
572,parboil-0.2-stencil-naive_kernel,default,50,1,8,0,8,0,134217728,256,CPU,97.16917099999999,131.49565800000002,"__kernel void A(float a, float b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_global_id(0) + 1;
  int i = get_global_id(1) + 1;
  int j = get_global_id(2) + 1;

  if (h < e - 1) {
    d[((h) + e * ((i) + f * (j)))] = b * (c[((h) + e * ((i) + f * (j + 1)))] + c[((h) + e * ((i) + f * (j - 1)))] + c[((h) + e * ((i + 1) + f * (j)))] + c[((h) + e * ((i - 1) + f * (j)))] + c[((h + 1) + e * ((i) + f * (j)))] + c[((h - 1) + e * ((i) + f * (j)))]) - c[((h) + e * ((i) + f * (j)))] * a;
  }
}
","[129 129 129 ...,   0 127   0]"
573,parboil-0.2-stencil-naive_kernel,small,50,1,8,0,8,0,4194304,256,GPU,4.81292,4.397409,"__kernel void A(float a, float b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_global_id(0) + 1;
  int i = get_global_id(1) + 1;
  int j = get_global_id(2) + 1;

  if (h < e - 1) {
    d[((h) + e * ((i) + f * (j)))] = b * (c[((h) + e * ((i) + f * (j + 1)))] + c[((h) + e * ((i) + f * (j - 1)))] + c[((h) + e * ((i + 1) + f * (j)))] + c[((h) + e * ((i - 1) + f * (j)))] + c[((h + 1) + e * ((i) + f * (j)))] + c[((h - 1) + e * ((i) + f * (j)))]) - c[((h) + e * ((i) + f * (j)))] * a;
  }
}
","[129 129 129 ...,   0 127   0]"
574,polybench-gpu-1.0-2DConvolution-Convolution2D_kernel,default,57,4,10,0,0,0,134217728,256,GPU,100.052011,86.72404499999998,"__kernel void A(__global float* a, __global float* b, int c, int d) {
  int e = get_global_id(0);
  int f = get_global_id(1);

  float g, h, i, j, k, l, m, n, o;
  g = +0.2;
  j = +0.5;
  m = -0.8;
  h = -0.3;
  k = +0.6;
  n = -0.9;
  i = +0.4;
  l = +0.7;
  o = +0.10;
  if ((f < (c - 1)) && (e < (d - 1)) && (f > 0) && (e > 0)) {
    b[f * d + e] = g * a[(f - 1) * d + (e - 1)] + j * a[(f - 1) * d + (e + 0)] + m * a[(f - 1) * d + (e + 1)] + h * a[(f + 0) * d + (e - 1)] + k * a[(f + 0) * d + (e + 0)] + n * a[(f + 0) * d + (e + 1)] + i * a[(f + 1) * d + (e - 1)] + l * a[(f + 1) * d + (e + 0)] + o * a[(f + 1) * d + (e + 1)];
  }
}","[129 129 129 ..., 127   0 127]"
575,polybench-gpu-1.0-2mm-mm2_kernel1,default,7,3,3,0,0,0,83886080,256,GPU,28608.942737999998,192.79761299999998,"__kernel void A(__global float* a, __global float* b, __global float* c, int d, int e, int f) {
  int g = get_global_id(0);
  int h = get_global_id(1);

  if ((h < d) && (g < e)) {
    int i;
    for (i = 0; i < f; i++) {
      c[h * e + g] += a[h * f + i] * b[i * e + g];
    }
  }
}","[129 129 129 ..., 127   0 127]"
576,polybench-gpu-1.0-2mm-mm2_kernel2,default,7,3,3,0,0,0,83886080,256,GPU,27809.232172000004,193.70010200000002,"__kernel void A(__global float* a, __global float* b, __global float* c, int d, int e, int f) {
  int g = get_global_id(0);
  int h = get_global_id(1);

  if ((h < d) && (g < e)) {
    int i;
    for (i = 0; i < f; i++) {
      c[h * e + g] += a[h * f + i] * b[i * e + g];
    }
  }
}","[129 129 129 ..., 127   0 127]"
577,polybench-gpu-1.0-3DConvolution-Convolution3D_kernel,default,162,6,17,0,0,0,134217728,256,CPU,61.52784000000001,130.420241,"__kernel void A(__global float* a, __global float* b, int c, int d, int e, int f) {
  int g = get_global_id(0);
  int h = get_global_id(1);

  float i, j, k, l, m, n, o, p, q;
  i = +2;
  l = +5;
  o = -8;
  j = -3;
  m = +6;
  p = -9;
  k = +4;
  n = +7;
  q = +10;

  if ((f < (c - 1)) && (h < (d - 1)) && (g < (e - 1)) && (f > 0) && (h > 0) && (g > 0)) {
    b[f * (e * d) + h * e + g] = i * a[(f - 1) * (e * d) + (h - 1) * e + (g - 1)] + k * a[(f + 1) * (e * d) + (h - 1) * e + (g - 1)] + l * a[(f - 1) * (e * d) + (h - 1) * e + (g - 1)] + n * a[(f + 1) * (e * d) + (h - 1) * e + (g - 1)] + o * a[(f - 1) * (e * d) + (h - 1) * e + (g - 1)] + q * a[(f + 1) * (e * d) + (h - 1) * e + (g - 1)] + j * a[(f + 0) * (e * d) + (h - 1) * e + (g + 0)] + m * a[(f + 0) * (e * d) + (h + 0) * e + (g + 0)] + p * a[(f + 0) * (e * d) + (h + 1) * e + (g + 0)] +
                                 i * a[(f - 1) * (e * d) + (h - 1) * e + (g + 1)] + k * a[(f + 1) * (e * d) + (h - 1) * e + (g + 1)] + l * a[(f - 1) * (e * d) + (h + 0) * e + (g + 1)] + n * a[(f + 1) * (e * d) + (h + 0) * e + (g + 1)] + o * a[(f - 1) * (e * d) + (h + 1) * e + (g + 1)] + q * a[(f + 1) * (e * d) + (h + 1) * e + (g + 1)];
  } else {
    b[f * (e * d) + h * e + g] = 0;
  }
}","[  1  10  17 ..., 127   0 127]"
578,polybench-gpu-1.0-3mm-mm3_kernel1,default,7,3,3,0,0,0,7340032,256,GPU,70.97072299999998,8.792845,"__kernel void A(__global float* a, __global float* b, __global float* c, int d, int e, int f) {
  int g = get_global_id(0);
  int h = get_global_id(1);

  if ((h < d) && (g < e)) {
    int i;
    for (i = 0; i < f; i++) {
      c[h * e + g] += a[h * f + i] * b[i * e + g];
    }
  }
}","[129 129 129 ..., 127   0 127]"
579,polybench-gpu-1.0-3mm-mm3_kernel2,default,7,3,3,0,0,0,7340032,256,GPU,70.31302,8.822573,"__kernel void A(__global float* a, __global float* b, __global float* c, int d, int e, int f) {
  int g = get_global_id(0);
  int h = get_global_id(1);

  if ((h < d) && (g < e)) {
    int i;
    for (i = 0; i < f; i++) {
      c[h * e + g] += a[h * f + i] * b[i * e + g];
    }
  }
}","[129 129 129 ..., 127   0 127]"
580,polybench-gpu-1.0-3mm-mm3_kernel3,default,7,3,3,0,0,0,7340032,256,GPU,70.192432,8.797613,"__kernel void A(__global float* a, __global float* b, __global float* c, int d, int e, int f) {
  int g = get_global_id(0);
  int h = get_global_id(1);

  if ((h < d) && (g < e)) {
    int i;
    for (i = 0; i < f; i++) {
      c[h * e + g] += a[h * f + i] * b[i * e + g];
    }
  }
}","[129 129 129 ..., 127   0 127]"
581,polybench-gpu-1.0-atax-atax_kernel1,default,3,2,3,0,2,0,67158016,256,CPU,26.949136,47.084806,"__kernel void A(__global float* a, __global float* b, __global float* c, int d, int e) {
  int f = get_global_id(0);

  if (f < d) {
    int g;
    for (g = 0; g < e; g++) {
      c[f] += a[f * e + g] * b[g];
    }
  }
}","[129 129 129 ..., 127   0 127]"
582,polybench-gpu-1.0-atax-atax_kernel2,default,3,2,3,0,2,0,67158016,256,GPU,114.38086799999999,46.429901,"__kernel void A(__global float* a, __global float* b, __global float* c, int d, int e) {
  int f = get_global_id(0);

  if (f < e) {
    int g;
    for (g = 0; g < d; g++) {
      b[f] += a[g * e + f] * c[g];
    }
  }
}","[129 129 129 ..., 127   0 127]"
583,polybench-gpu-1.0-bicg-bicgKernel1,default,3,2,4,0,3,0,67174400,256,CPU,27.67397,47.118682,"__kernel void A(__global float* a, __global float* b, __global float* c, int d, int e) {
  int f = get_global_id(0);

  if (f < d) {
    c[f] = 0.0;

    int g;
    for (g = 0; g < e; g++) {
      c[f] += a[f * e + g] * b[g];
    }
  }
}
","[129 129 129 ...,   0 127   0]"
584,polybench-gpu-1.0-bicg-bicgKernel2,default,3,2,4,0,3,0,67174400,256,GPU,111.09619099999999,46.467942,"__kernel void A(__global float* a, __global float* b, __global float* c, int d, int e) {
  int f = get_global_id(0);

  if (f < e) {
    c[f] = 0.0;

    int g;
    for (g = 0; g < d; g++) {
      c[f] += a[g * e + f] * b[g];
    }
  }
}","[129 129 129 ..., 127   0 127]"
585,polybench-gpu-1.0-correlation-corr_kernel,default,23,4,6,0,0,0,33603600,256,GPU,5417.521422,2166.647302,"__kernel void A(__global float* a, __global float* b, int c, int d) {
  int e = get_global_id(0) + 1;

  int f, g;
  if ((e >= 1) && (e < c)) {
    a[e * (c + 1) + e] = 1.0;

    for (g = (e + 1); g < (c + 1); g++) {
      for (f = 1; f < (d + 1); f++) {
        a[e * (c + 1) + g] += b[f * (c + 1) + e] * b[f * (c + 1) + g];
      }
      a[g * (c + 1) + e] = a[e * (c + 1) + g];
    }
  }
}","[129 129 129 ..., 127   0 127]"
586,polybench-gpu-1.0-correlation-mean_kernel,default,6,3,4,0,3,0,33603600,256,CPU,25.37265,33.808365,"__kernel void A(__global float* a, __global float* b, float c, int d, int e) {
  int f = get_global_id(0) + 1;

  if ((f >= 1) && (f < (d + 1))) {
    a[f] = 0.0;

    int g;
    for (g = 1; g < (e + 1); g++) {
      a[f] += b[g * (d + 1) + f];
    }

    a[f] /= (float)c;
  }
}","[129 129 129 ..., 127   0 127]"
587,polybench-gpu-1.0-correlation-reduce_kernel,default,26,4,4,0,2,0,33603600,256,CPU,30.556461,33.287757,"__kernel void A(__global float* a, __global float* b, __global float* c, float d, int e, int f) {
  int g = get_global_id(0) + 1;
  int h = get_global_id(1) + 1;

  if ((h >= 1) && (h < (f + 1)) && (g >= 1) && (g < (e + 1))) {
    c[h * (e + 1) + g] -= a[g];
    c[h * (e + 1) + g] /= (sqrt(d) * b[g]);
  }
}","[129 129 129 ..., 127   0 127]"
588,polybench-gpu-1.0-correlation-std_kernel,default,27,4,11,0,9,0,33603600,256,CPU,25.721419,33.809453000000005,"__kernel void A(__global float* a, __global float* b, __global float* c, float d, float e, int f, int g) {
  int h = get_global_id(0) + 1;

  if ((h >= 1) && (h < (f + 1))) {
    b[h] = 0.0;

    int i;
    for (i = 1; i < (g + 1); i++) {
      b[h] += (c[i * (f + 1) + h] - a[h]) * (c[i * (f + 1) + h] - a[h]);
    }
    b[h] /= d;
    b[h] = sqrt(b[h]);
    if (b[h] <= e) {
      b[h] = 1.0;
    }
  }
}","[129 129 129 ..., 127   0 127]"
589,polybench-gpu-1.0-covariance-covar_kernel,default,23,4,6,0,0,0,33595404,256,GPU,5510.626772,2185.144691,"__kernel void A(__global float* a, __global float* b, int c, int d) {
  int e = get_global_id(0) + 1;
  int f, g;

  if ((e >= 1) && (e < (c + 1))) {
    for (g = e; g < (c + 1); g++) {
      a[e * (c + 1) + g] = 0.0;
      for (f = 1; f < (d + 1); f++) {
        a[e * (c + 1) + g] += b[f * (c + 1) + e] * b[f * (c + 1) + g];
      }
      a[g * (c + 1) + e] = a[e * (c + 1) + g];
    }
  }
}","[129 129 129 ..., 127   0 127]"
590,polybench-gpu-1.0-covariance-mean_kernel,default,6,3,4,0,3,0,33595404,256,CPU,24.214302,33.622797,"__kernel void A(__global float* a, __global float* b, float c, int d, int e) {
  int f = get_global_id(0) + 1;

  if ((f >= 1) && (f < (d + 1))) {
    a[f] = 0.0;

    int g;
    for (g = 1; g < (e + 1); g++) {
      a[f] += b[g * (d + 1) + f];
    }
    a[f] /= (float)c;
  }
}","[129 129 129 ..., 127   0 127]"
591,polybench-gpu-1.0-covariance-reduce_kernel,default,7,4,2,0,1,0,33595404,256,CPU,24.19916,33.027296,"__kernel void A(__global float* a, __global float* b, int c, int d) {
  int e = get_global_id(0) + 1;
  int f = get_global_id(1) + 1;

  if ((f >= 1) && (f < (d + 1)) && (e >= 1) && (e < (c + 1))) {
    b[f * (c + 1) + e] -= a[e];
  }
}","[129 129 129 ..., 127   0 127]"
592,polybench-gpu-1.0-gemm-gemm,default,10,3,4,0,0,0,3145728,256,GPU,70.897543,5.2322370000000005,"__kernel void A(__global float* a, __global float* b, __global float* c, float d, float e, int f, int g, int h) {
  int i = get_global_id(0);
  int j = get_global_id(1);

  if ((j < f) && (i < g)) {
    c[j * g + i] *= e;
    int k;
    for (k = 0; k < h; k++) {
      c[j * g + i] += d * a[j * h + k] * b[k * g + i];
    }
  }
}","[129 129 129 ..., 127   0 127]"
593,polybench-gpu-1.0-gesummv-gesummv_kernel,default,9,2,9,0,7,0,134266880,256,CPU,51.696795,93.866067,"__kernel void A(__global float* a, __global float* b, __global float* c, __global float* d, __global float* e, float f, float g, int h) {
  int i = get_global_id(0);

  if (i < h) {
    int j;
    for (j = 0; j < h; j++) {
      e[i] += a[i * h + j] * c[j];
      d[i] += b[i * h + j] * c[j];
    }
    d[i] = f * e[i] + g * d[i];
  }
}","[129 129 129 ..., 127   0 127]"
594,polybench-gpu-1.0-gramschmidt-gramschmidt_kernel1,default,22,2,3,0,0,0,100663296,256,CPU,23.390468,42.955298,"__kernel void A(__global float* a, __global float* b, __global float* c, int d, int e, int f) {
  int g = get_global_id(0);

  if (g == 0) {
    float h = 0.0;
    int i;
    for (i = 0; i < e; i++) {
      h += a[i * f + d] * a[i * f + d];
    }
    b[d * f + d] = sqrt(h);
  }
}","[129 129 129 ..., 127   0 127]"
595,polybench-gpu-1.0-gramschmidt-gramschmidt_kernel2,default,7,1,3,0,0,0,100663296,256,CPU,23.411220999999998,42.710883,"__kernel void A(__global float* a, __global float* b, __global float* c, int d, int e, int f) {
  int g = get_global_id(0);

  if (g < e) {
    c[g * f + d] = a[g * f + d] / b[d * f + d];
  }
}","[129 129 129 ..., 127   0 127]"
596,polybench-gpu-1.0-gramschmidt-gramschmidt_kernel3,default,16,4,7,0,0,0,100663296,256,GPU,71.81841700000003,44.291337,"__kernel void A(__global float* a, __global float* b, __global float* c, int d, int e, int f) {
  int g = get_global_id(0);

  if ((g > d) && (g < f)) {
    b[d * f + g] = 0.0;

    int h;
    for (h = 0; h < e; h++) {
      b[d * f + g] += c[h * f + d] * a[h * f + g];
    }

    for (h = 0; h < e; h++) {
      a[h * f + g] -= c[h * f + d] * b[d * f + g];
    }
  }
}","[129 129 129 ..., 127   0 127]"
597,polybench-gpu-1.0-mvt-mvt_kernel1,default,3,2,3,0,2,0,134348800,256,CPU,47.802033,94.19881600000001,"__kernel void A(__global float* a, __global float* b, __global float* c, int d) {
  int e = get_global_id(0);

  if (e < d) {
    int f;
    for (f = 0; f < d; f++) {
      b[e] += a[e * d + f] * c[f];
    }
  }
}","[129 129 129 ..., 127   0 127]"
598,polybench-gpu-1.0-mvt-mvt_kernel2,default,3,2,3,0,2,0,134348800,256,GPU,133.73726200000002,91.805651,"__kernel void A(__global float* a, __global float* b, __global float* c, int d) {
  int e = get_global_id(0);

  if (e < d) {
    int f;
    for (f = 0; f < d; f++) {
      b[e] += a[f * d + e] * c[f];
    }
  }
}","[129 129 129 ..., 127   0 127]"
599,polybench-gpu-1.0-syr2k-syr2k_kernel,default,17,3,6,0,0,0,50331648,256,GPU,3339.966119,1880.040512,"__kernel void A(__global float* a, __global float* b, __global float* c, float d, float e, int f, int g) {
  int h = get_global_id(0);
  int i = get_global_id(1);

  if ((i < g) && (h < g)) {
    c[i * g + h] *= e;

    int j;
    for (j = 0; j < f; j++) {
      c[i * g + h] += d * a[i * f + j] * b[h * f + j] + d * b[i * f + j] * a[h * f + j];
    }
  }
}","[129 129 129 ..., 127   0 127]"
600,polybench-gpu-1.0-syrk-syrk_kernel,default,10,3,4,0,0,0,8388608,256,GPU,304.98618,99.987814,"__kernel void A(__global float* a, __global float* b, float c, float d, int e, int f) {
  int g = get_global_id(0);
  int h = get_global_id(1);

  if ((h < f) && (g < f)) {
    b[h * f + g] *= d;
    int i;
    for (i = 0; i < e; i++) {
      b[h * f + g] += c * a[h * e + i] * a[g * e + i];
    }
  }
}","[129 129 129 ..., 127   0 127]"
601,rodinia-3.1-backprop-bpnn_adjust_weights_ocl,default,28,2,14,0,14,0,9437460,256,CPU,8.460302,12.936256,"__kernel void A(__global float* a, int b, __global float* c, int d, __global float* e, __global float* f) {
  int g = get_group_id(1);
  int h = get_local_id(0);
  int i = get_local_id(1);

  int j = (b + 1) * 16 * g + (b + 1) * i + h + 1 + (b + 1);
  int k = 16 * g + i + 1;
  int l = h + 1;

  e[j] += ((0.3f * a[l] * c[k]) + (0.3f * f[j]));
  f[j] = ((0.3f * a[l] * c[k]) + (0.3f * f[j]));

  barrier(1);

  if (i == 0 && g == 0) {
    e[l] += ((0.3f * a[l]) + (0.3f * f[l]));
    f[l] = ((0.3f * a[l]) + (0.3f * f[l]));
  }
}","[129 129 129 ..., 127   0 127]"
602,rodinia-3.1-backprop-bpnn_layerforward_ocl,default,37,4,14,10,3,0,9437460,256,GPU,14.083006,12.803757000000001,"__kernel void A(__global float* a, __global float* b, __global float* c, __global float* d, __local float* e, __local float* f, int g, int h) {
  int i = get_group_id(1);
  int j = get_local_id(0);
  int k = get_local_id(1);

  int l = (h + 1) * 16 * i + (h + 1) * k + j + 1 + (h + 1);

  int m = 16 * i + k + 1;

  if (j == 0)
    e[k] = a[m];
  barrier(1);

  f[k * 16 + j] = c[l];
  barrier(1);

  f[k * 16 + j] = f[k * 16 + j] * e[k];
  barrier(1);

  for (int n = 1; n <= 16; n = n * 2) {
    int o = n;

    if (k % o == 0)
      f[k * 16 + j] = f[k * 16 + j] + f[(k + o / 2) * 16 + j];

    barrier(1);
  }

  c[l] = f[k * 16 + j];

  barrier(1);

  if (j == 0) {
    d[i * h + k] = f[j * 16 + k];
  }
}","[129 129 129 ..., 127   0 127]"
603,rodinia-3.1-bfs-BFS_1,default,2,2,10,0,10,0,38999881,256,CPU,13.359851,33.996683000000004,"__kernel void A(const __global int* a, const __global int* b, const __global int* c, __global char* d, __global char* e, __global char* f, __global int* g, const int h) {
  int i = get_global_id(0);
  if (i < h && d[i]) {
    d[i] = false;
    for (int j = a[i]; j < (b[i] + a[i]); j++) {
      int k = c[j];
      if (!f[k]) {
        g[k] = g[i] + 1;
        e[k] = true;
      }
    }
  }
}","[129 129 129 ..., 127   0 127]"
604,rodinia-3.1-bfs-BFS_2,default,0,1,5,0,4,0,38999881,256,CPU,12.657346,33.588006,"__kernel void A(__global char* a, __global char* b, __global char* c, __global char* d, const int e) {
  int f = get_global_id(0);
  if (f < e && b[f]) {
    a[f] = true;
    c[f] = true;
    *d = true;
    b[f] = false;
  }
}","[129 129 129 ..., 127   0 127]"
605,rodinia-3.1-cfd-compute_flux,default,280,5,19,0,0,0,12824132,192,GPU,9.11258,6.129908,"__kernel void A(__global int* a, __global float* b, __global float* c, __constant float* d, __global float* e, __constant float3* f, __constant float3* g, __constant float3* h, __constant float3* i, int j) {
  const float k = (float)(0.2f);

  const int l = get_global_id(0);
  if (l >= j)
    return;
  int m, n;
  float3 o;
  float p;
  float q;

  float r = c[l + 0 * j];
  float3 s;
  s.x = c[l + (1 + 0) * j];
  s.y = c[l + (1 + 1) * j];
  s.z = c[l + (1 + 2) * j];

  float t = c[l + (1 + 3) * j];

  float3 u;
  B(r, s, &u);
  float v = C(u);

  float w = sqrt(v);
  float x = D(r, t, v);
  float y = E(r, x);
  float3 z, aa, ab;
  float3 ac;
  F(r, s, t, x, u, &z, &aa, &ab, &ac);

  float ad = (float)(0.0f);
  float3 ae;
  ae.x = (float)(0.0f);
  ae.y = (float)(0.0f);
  ae.z = (float)(0.0f);
  float af = (float)(0.0f);

  float3 ag;
  float ah, ai;
  float3 aj;
  float3 ak, al, am;
  float3 an;
  float ao, ap, aq;

  for (m = 0; m < 4; m++) {
    n = a[l + m * j];
    o.x = b[l + (m + 0 * 4) * j];
    o.y = b[l + (m + 1 * 4) * j];
    o.z = b[l + (m + 2 * 4) * j];

    p = sqrt(o.x * o.x + o.y * o.y + o.z * o.z);

    if (n >= 0) {
      ah = c[n + 0 * j];
      aj.x = c[n + (1 + 0) * j];
      aj.y = c[n + (1 + 1) * j];
      aj.z = c[n + (1 + 2) * j];
      ai = c[n + (1 + 3) * j];
      B(ah, aj, &ag);
      ao = C(ag);
      aq = D(ah, ai, ao);
      ap = E(ah, aq);
      F(ah, aj, ai, aq, ag, &ak, &al, &am, &an);

      q = -p * k * (float)(0.5f) * (w + sqrt(ao) + y + ap);
      ad += q * (r - ah);
      af += q * (t - ai);
      ae.x += q * (s.x - aj.x);
      ae.y += q * (s.y - aj.y);
      ae.z += q * (s.z - aj.z);

      q = (float)(0.5f) * o.x;
      ad += q * (aj.x + s.x);
      af += q * (an.x + ac.x);
      ae.x += q * (ak.x + z.x);
      ae.y += q * (al.x + aa.x);
      ae.z += q * (am.x + ab.x);

      q = (float)(0.5f) * o.y;
      ad += q * (aj.y + s.y);
      af += q * (an.y + ac.y);
      ae.x += q * (ak.y + z.y);
      ae.y += q * (al.y + aa.y);
      ae.z += q * (am.y + ab.y);

      q = (float)(0.5f) * o.z;
      ad += q * (aj.z + s.z);
      af += q * (an.z + ac.z);
      ae.x += q * (ak.z + z.z);
      ae.y += q * (al.z + aa.z);
      ae.z += q * (am.z + ab.z);
    } else if (n == -1) {
      ae.x += o.x * x;
      ae.y += o.y * x;
      ae.z += o.z * x;
    } else if (n == -2) {
      q = (float)(0.5f) * o.x;
      ad += q * (d[1 + 0] + s.x);
      af += q * (f[0].x + ac.x);
      ae.x += q * (g[0].x + z.x);
      ae.y += q * (h[0].x + aa.x);
      ae.z += q * (i[0].x + ab.x);

      q = (float)(0.5f) * o.y;
      ad += q * (d[1 + 1] + s.y);
      af += q * (f[0].y + ac.y);
      ae.x += q * (g[0].y + z.y);
      ae.y += q * (h[0].y + aa.y);
      ae.z += q * (i[0].y + ab.y);

      q = (float)(0.5f) * o.z;
      ad += q * (d[1 + 2] + s.z);
      af += q * (f[0].z + ac.z);
      ae.x += q * (g[0].z + z.z);
      ae.y += q * (h[0].z + aa.z);
      ae.z += q * (i[0].z + ab.z);
    }
  }

  e[l + 0 * j] = ad;
  e[l + (1 + 0) * j] = ae.x;
  e[l + (1 + 1) * j] = ae.y;
  e[l + (1 + 2) * j] = ae.z;
  e[l + (1 + 3) * j] = af;
}","[  7  63  95 ...,  26   0 127]"
606,rodinia-3.1-cfd-compute_step_factor,default,77,1,7,0,2,0,12824132,192,GPU,6.393171,6.065048,"__kernel void A(__global float* a, __global float* b, __global float* c, int d) {
  const int e = get_global_id(0);
  if (e >= d)
    return;

  float f = a[e + 0 * d];
  float3 g;
  g.x = a[e + (1 + 0) * d];
  g.y = a[e + (1 + 1) * d];
  g.z = a[e + (1 + 2) * d];

  float h = a[e + (1 + 3) * d];

  float3 i;
  B(f, g, &i);
  float j = C(i);

  float k = D(f, h, j);
  float l = E(f, k);

  c[e] = (float)(0.5f) / (sqrt(b[e]) * (sqrt(j) + l));
}","[129 129 129 ...,  26   0 127]"
607,rodinia-3.1-cfd-initialize_variables,default,4,2,1,0,0,0,12824132,192,CPU,5.827221,6.058534,"__kernel void A(__global float* a, __constant float* b, int c) {
  const int d = get_global_id(0);
  if (d >= c)
    return;
  for (int e = 0; e < ((1 + 3) + 1); e++)
    a[d + e * c] = b[e];
}","[129 129 129 ...,  26   0 127]"
608,rodinia-3.1-cfd-memset_kernel,default,0,1,1,0,1,0,12824132,192,CPU,5.73952,6.038355,"__kernel void A(__global char* a, short b, int c) {
  const int d = get_global_id(0);
  if (d >= c)
    return;
  a[d] = b;
}","[129 129 129 ...,  26   0 127]"
609,rodinia-3.1-cfd-time_step,default,55,1,16,0,1,0,12824132,192,CPU,5.62095,6.0715639999999995,"__kernel void A(int a, int b, __global float* c, __global float* d, __global float* e, __global float* f) {
  const int g = get_global_id(0);
  if (g >= b)
    return;

  float h = e[g] / (float)(3 + 1 - a);

  d[g + 0 * b] = c[g + 0 * b] + h * f[g + 0 * b];
  d[g + (1 + 3) * b] = c[g + (1 + 3) * b] + h * f[g + (1 + 3) * b];
  d[g + (1 + 0) * b] = c[g + (1 + 0) * b] + h * f[g + (1 + 0) * b];
  d[g + (1 + 1) * b] = c[g + (1 + 1) * b] + h * f[g + (1 + 1) * b];
  d[g + (1 + 2) * b] = c[g + (1 + 2) * b] + h * f[g + (1 + 2) * b];
}","[129 129 129 ...,  26   0 127]"
610,rodinia-3.1-gaussian-Fan1,default,16,1,3,0,0,0,525312,0,CPU,0.367199,0.8541489999999999,"__kernel void A(__global float* a, __global float* b, __global float* c, const int d, const int e) {
  int f = get_global_id(0);

  if (f < d - 1 - e) {
    *(a + d * (f + e + 1) + e) = *(b + d * (f + e + 1) + e) / *(b + d * e + e);
  }
}","[129 129 129 ..., 127   0 127]"
611,rodinia-3.1-gaussian-Fan2,default,24,3,6,0,1,0,525312,0,CPU,0.4438470000000001,0.8596729999999999,"__kernel void A(__global float* a, __global float* b, __global float* c, const int d, const int e) {
  int f = get_global_id(0);

  int g = get_global_id(0);
  int h = get_global_id(1);
  if (g < d - 1 - e && h < d - e) {
    b[d * (g + 1 + e) + (h + e)] -= a[d * (g + 1 + e) + e] * b[d * e + (h + e)];

    if (h == 0) {
      c[g + 1 + e] -= a[d * (g + 1 + e) + (h + e)] * c[e];
    }
  }
}","[129 129 129 ..., 127   0 127]"
612,rodinia-3.1-hotspot-hotspot,default,60,22,18,15,3,0,3145728,256,GPU,6.6083240000000005,0.7319869999999999,"__kernel void A(int a, global float* b, global float* c, global float* d, int e, int f, int g, int h, float i, float j, float k, float l, float m) {
  local float n[64][64];
  local float o[64][64];
  local float p[64][64];

  float q = 80.0f;
  float r;
  float s, t, u;

  int v = get_group_id(0);
  int w = get_group_id(1);

  int x = get_local_id(0);
  int y = get_local_id(1);

  r = m / i;

  s = 1 / j;
  t = 1 / k;
  u = 1 / l;

  int z = 64 - a * 2;
  int aa = 64 - a * 2;

  int ab = z * w - h;
  int ac = aa * v - g;
  int ad = ab + 64 - 1;
  int ae = ac + 64 - 1;

  int af = ab + y;
  int ag = ac + x;

  int ah = af, ai = ag;
  int aj = e * ah + ai;

  if (((ah) >= (0) && (ah) <= (f - 1)) && ((ai) >= (0) && (ai) <= (e - 1))) {
    n[y][x] = c[aj];
    o[y][x] = b[aj];
  }
  barrier(1);

  int ak = (ab < 0) ? -ab : 0;
  int al = (ad > f - 1) ? 64 - 1 - (ad - f + 1) : 64 - 1;
  int am = (ac < 0) ? -ac : 0;
  int an = (ae > e - 1) ? 64 - 1 - (ae - e + 1) : 64 - 1;

  int ao = y - 1;
  int ap = y + 1;
  int aq = x - 1;
  int ar = x + 1;

  ao = (ao < ak) ? ak : ao;
  ap = (ap > al) ? al : ap;
  aq = (aq < am) ? am : aq;
  ar = (ar > an) ? an : ar;

  bool as;
  for (int at = 0; at < a; at++) {
    as = false;
    if (((x) >= (at + 1) && (x) <= (64 - at - 2)) && ((y) >= (at + 1) && (y) <= (64 - at - 2)) && ((x) >= (am) && (x) <= (an)) && ((y) >= (ak) && (y) <= (al))) {
      as = true;
      p[y][x] = n[y][x] + r * (o[y][x] + (n[ap][x] + n[ao][x] - 2.0f * n[y][x]) * t + (n[y][ar] + n[y][aq] - 2.0f * n[y][x]) * s + (q - n[y][x]) * u);
    }
    barrier(1);

    if (at == a - 1)
      break;
    if (as)
      n[y][x] = p[y][x];

    barrier(1);
  }

  if (as) {
    d[aj] = p[y][x];
  }
}
","[ 12   1  16 ...,   0 127   0]"
613,rodinia-3.1-kmeans-kmeans_kernel_c,default,11,4,5,0,1,0,136350200,256,GPU,157.720721,92.492152,"__kernel void A(__global float* a, __global float* b, __global int* c, int d, int e, int f, int g, int h) {
  unsigned int i = get_global_id(0);
  int j = 0;

  if (i < d) {
    float k = 0x1.fffffep127f;
    for (int l = 0; l < e; l++) {
      float m = 0;
      float n = 0;
      for (int o = 0; o < f; o++) {
        n += (a[o * d + i] - b[l * f + o]) * (a[o * d + i] - b[l * f + o]);
      }

      m = n;
      if (m < k) {
        k = m;
        j = l;
      }
    }

    c[i] = j;
  }

  return;
}","[129 129 129 ...,  26   0 127]"
614,rodinia-3.1-kmeans-kmeans_swap,default,4,2,2,0,0,0,136350200,256,CPU,89.781172,95.06484499999999,"__kernel void A(__global float* a, __global float* b, int c, int d) {
  unsigned int e = get_global_id(0);

  if (e < c) {
    for (int f = 0; f < d; f++)
      b[f * c + e] = a[e * d + f];
  }
}","[129 129 129 ..., 127   0 127]"
615,rodinia-3.1-lavaMD-kernel_gpu_opencl,default,48,7,32,21,4,0,4256000,128,GPU,1024.542367,9.991411,"__kernel void A(__global float* a, __global int* b, __global int* c, __global float4* d, __global float* e, __global float4* f) {
  int g = get_group_id(0);
  int h = get_local_id(0);
  int i = h;

  if (g < b[g]) {
    float j = 2 * a[g] * a[g];

    int k;

    __local float4 l[100];

    int m;
    int n = 0;
    int o;
    int p = 0;

    __local float4 q[100];
    __local float r[100];

    float s;
    float t;
    float u;
    float v;
    float w;
    float x;
    float y;
    float3 z;
    k = c[g];

    while (i < 100) {
      l[i] = d[k + i];
      i = i + 128;
    }
    i = h;

    barrier(1);

    for (n = 0; n < (1 + c[g]); n++) {
      if (n == 0) {
        m = g;
      } else {
        m = c[g];
      }

      o = c[m];

      while (i < 100) {
        q[i] = d[o + i];
        r[i] = e[o + i];
        i = i + 128;
      }
      i = h;

      barrier(1);

      while (i < 100) {
        for (p = 0; p < 100; p++) {
          s = l[i].x + q[p].x - ((l[i].x) * (q[p].x) + (l[i].y) * (q[p].y) + (l[i].z) * (q[p].z));
          t = j * s;
          u = exp(-t);
          v = 2 * u;
          z.x = l[i].x - q[p].x;
          w = v * z.x;
          z.y = l[i].y - q[p].y;
          x = v * z.y;
          z.z = l[i].z - q[p].z;
          y = v * z.z;
          f[k + i].x += r[p] * u;
          f[k + i].x += r[p] * w;
          f[k + i].y += r[p] * x;
          f[k + i].z += r[p] * y;
        }

        i = i + 128;
      }

      i = h;

      barrier(1);
    }
  }
}","[104 101 113 ..., 127   0 127]"
616,rodinia-3.1-leukocyte-GICOV_kernel,default,34,4,3,0,2,0,11693572,256,GPU,112.114833,14.424173000000001,"__kernel void A(int a, __global float* b, __global float* c, __constant float* d, __constant float* e, __constant int* f, __constant int* g, __global float* h, int i, int j) {
  int k, l, m, n, o, p;
  int q = get_global_id(0);
  if (q >= i * j)
    return;

  k = q / i + 20 + 2;
  l = q % i + 20 + 2;

  float r = 0.f;

  for (m = 0; m < 7; m++) {
    float s = 0.f, t = 0.f, u = 0.f;

    for (n = 0; n < 150; n++) {
      p = l + g[(m * 150) + n];
      o = k + f[(m * 150) + n];

      int v = o * a + p;
      float w = b[v] * e[n] + c[v] * d[n];

      s += w;

      float x = w - u;
      u = u + (x / (float)(n + 1));
      t = t + (x * (w - u));
    }

    u = s / ((float)150);

    float y = t / ((float)(150 - 1));

    if (((u * u) / y) > r)
      r = (u * u) / y;
  }

  h[(k * a) + l] = r;
}","[129 129 129 ...,  26   0 127]"
617,rodinia-3.1-leukocyte-IMGVF_kernel,default,136,22,26,21,4,0,11693572,256,GPU,386.87719100000004,17.082582000000002,"__kernel void A(__global float* a, __global float* b, __constant int* c, int __constant* d, __constant int* e, float f, float g, float h, int i, float j) {
  __local float k[41 * 81];

  __local float l[256];

  int m = get_group_id(0);

  int n = c[m];
  __global float* o = &(a[n]);
  __global float* p = &(b[n]);

  int q = d[m];
  int r = e[m];

  int s = q * r;
  int t = (s + 256 - 1) / 256;

  int u = get_local_id(0);
  int v, w, x;
  for (v = 0; v < t; v++) {
    int y = v * 256 + u;
    if (y < s)
      k[y] = o[y];
  }
  barrier(1);

  __local int z;
  if (u == 0)
    z = 0;
  barrier(1);

  const float aa = 1.0f / (float)r;
  const int ab = u % r;
  const int ac = 256 % r;

  float ad = 1.0f / h;

  int ae = 0;
  while ((!z) && (ae < i)) {
    float af = 0.0f;

    int ag = 0, ah = 0;
    x = ab - ac;

    for (v = 0; v < t; v++) {
      ag = w;
      ah = x;

      int y = v * 256;
      w = (u + y) * aa;
      x += ac;
      if (x >= r)
        x -= r;

      float ai, aj;

      if (w < q) {
        int ak = (w == 0) ? 0 : w - 1;
        int al = (w == q - 1) ? q - 1 : w + 1;
        int am = (x == 0) ? 0 : x - 1;
        int an = (x == r - 1) ? r - 1 : x + 1;

        aj = k[(w * r) + x];
        float ao = k[(ak * r) + x] - aj;
        float ap = k[(al * r) + x] - aj;
        float aq = k[(w * r) + am] - aj;
        float ar = k[(w * r) + an] - aj;
        float as = k[(ak * r) + an] - aj;
        float at = k[(al * r) + an] - aj;
        float au = k[(ak * r) + am] - aj;
        float av = k[(al * r) + am] - aj;

        float aw = A((ao * -g) * ad);
        float ax = A((ap * g) * ad);
        float ay = A((aq * -f) * ad);
        float az = A((ar * f) * ad);
        float ba = A((as * (f - g)) * ad);
        float bb = A((at * (f + g)) * ad);
        float bc = A((au * (-f - g)) * ad);
        float bd = A((av * (-f + g)) * ad);

        ai = aj + (0.5f / (8.0f * 0.5f + 1.0f)) * (aw * ao + ax * ap + ay * aq + az * ar + ba * as + bb * at + bc * au + bd * av);

        float be = p[(w * r) + x];
        ai -= ((1.0 / (8.0f * 0.5f + 1.0f)) * be * (ai - be));

        af += __clc_fabs(ai - aj);
      }
      barrier(1);

      if (v > 0) {
        y = (v - 1) * 256;
        if (ag < q)
          k[(ag * r) + ah] = l[u];
      }
      if (v < t - 1) {
        l[u] = ai;
      } else {
        if (w < q)
          k[(w * r) + x] = ai;
      }

      barrier(1);
    }

    l[u] = af;
    barrier(1);

    if (u >= 256) {
      l[u - 256] += l[u];
    }
    barrier(1);

    int bf;
    for (bf = 256 / 2; bf > 0; bf /= 2) {
      if (u < bf) {
        l[u] += l[u + bf];
      }
      barrier(1);
    }

    if (u == 0) {
      float bg = l[u] / (float)(q * r);
      if (bg < j) {
        z = 1;
      }
    }

    barrier(1);

    ae++;
  }

  for (v = 0; v < t; v++) {
    int y = v * 256 + u;
    if (y < s)
      o[y] = k[y];
  }
}","[ 28   1  31 ..., 127   0 127]"
618,rodinia-3.1-leukocyte-dilate_kernel,default,14,10,2,0,1,0,11693572,176,GPU,42.386672999999995,13.154380999999999,"__kernel void A(int a, int b, int c, int d, __constant float* e, __global float* f, __global float* g) {
  int h = c / 2;
  int i = d / 2;

  int j = get_global_id(0);
  int k = j % a;
  int l = j / a;

  if (l > b)
    return;

  float m = 0.0f;

  int n, o, p, q;

  if (l < b) {
    for (n = 0; n < c; n++) {
      q = k - h + n;

      if ((q >= 0) && (q < a)) {
        for (o = 0; o < d; o++) {
          p = l - i + o;

          if ((p >= 0) && (p < b) && (e[(n * d) + o] != 0)) {
            int r = (p * a) + q;
            float s = f[r];

            if (s > m)
              m = s;
          }
        }
      }
    }

    g[(k * b) + l] = m;
  }
}","[129 129 129 ..., 127   0 127]"
619,rodinia-3.1-lud-lud_diagonal,default,33,7,12,10,0,0,4194304,16,CPU,3.7433089999999996,5.537408,"__kernel void A(__global float* a, __local float* b, int c, int d) {
  int e, f;
  int g = get_local_id(0);

  int h = d * c + d;
  for (e = 0; e < 64; e++) {
    b[e * 64 + g] = a[h + g];
    h += c;
  }

  barrier(1);

  for (e = 0; e < 64 - 1; e++) {
    if (g > e) {
      for (f = 0; f < e; f++)
        b[g * 64 + e] -= b[g * 64 + f] * b[f * 64 + e];
      b[g * 64 + e] /= b[e * 64 + e];
    }

    barrier(1);
    if (g > e) {
      for (f = 0; f < e + 1; f++)
        b[(e + 1) * 64 + g] -= b[(e + 1) * 64 + f] * b[f * 64 + g];
    }

    barrier(1);
  }

  h = (d + 1) * c + d;
  for (e = 1; e < 64; e++) {
    a[h + g] = b[e * 64 + g];
    h += c;
  }
}","[129 129 129 ..., 127   0 127]"
620,rodinia-3.1-lud-lud_internal,default,27,1,7,4,0,0,4194304,256,GPU,6.069057,5.54674,"__kernel void A(__global float* a, __local float* b, __local float* c, int d, int e) {
  int f = get_group_id(0);
  int g = get_group_id(1);

  int h = get_local_id(0);
  int i = get_local_id(1);

  int j;
  float k;

  int l = e + (g + 1) * 64;
  int m = e + (f + 1) * 64;

  b[i * 64 + h] = a[(e + i) * d + m + h];
  c[i * 64 + h] = a[(l + i) * d + e + h];

  barrier(1);

  k = 0;
  for (j = 0; j < 64; j++)
    k += c[i * 64 + j] * b[j * 64 + h];
  a[(l + i) * d + m + h] -= k;
}","[129 129 129 ...,  26   0 127]"
621,rodinia-3.1-lud-lud_perimeter,default,68,13,20,14,0,0,4194304,32,CPU,3.808204,5.538377,"__kernel void A(__global float* a, __local float* b, __local float* c, __local float* d, int e, int f) {
  int g, h, i;
  int j;

  int k = get_group_id(0);
  int l = get_local_id(0);

  if (l < 64) {
    j = l;
    i = f * e + f;
    for (g = 0; g < 64 / 2; g++) {
      b[g * 64 + j] = a[i + j];
      i += e;
    }

    i = f * e + f;
    for (g = 0; g < 64; g++) {
      c[g * 64 + j] = a[i + (k + 1) * 64 + j];
      i += e;
    }

  } else {
    j = l - 64;

    i = (f + 64 / 2) * e + f;
    for (g = 64 / 2; g < 64; g++) {
      b[g * 64 + j] = a[i + j];
      i += e;
    }

    i = (f + (k + 1) * 64) * e + f;
    for (g = 0; g < 64; g++) {
      d[g * 64 + j] = a[i + j];
      i += e;
    }
  }
  barrier(1);

  if (l < 64) {
    j = l;
    for (g = 1; g < 64; g++) {
      for (h = 0; h < g; h++)
        c[g * 64 + j] -= b[g * 64 + h] * c[h * 64 + j];
    }
  } else {
    j = l - 64;
    for (g = 0; g < 64; g++) {
      for (h = 0; h < g; h++)
        d[j * 64 + g] -= d[j * 64 + h] * b[h * 64 + g];
      d[j * 64 + g] /= b[g * 64 + g];
    }
  }

  barrier(1);

  if (l < 64) {
    j = l;
    i = (f + 1) * e + f;
    for (g = 1; g < 64; g++) {
      a[i + (k + 1) * 64 + j] = c[g * 64 + j];
      i += e;
    }
  } else {
    j = l - 64;
    i = (f + (k + 1) * 64) * e + f;
    for (g = 0; g < 64; g++) {
      a[i + j] = d[g * 64 + j];
      i += e;
    }
  }
}","[ 21  19   8 ..., 127   0 127]"
622,rodinia-3.1-nn-NearestNeighbor,default,24,1,2,0,0,0,513168,0,CPU,0.41714399999999996,0.457363,"__kernel void A(__global float2* a, __global float* b, const int c, const float d, const float e) {
  int f = get_global_id(0);

  if (f < c) {
    __global float2* g = a + f;

    __global float* h = b + f;
    *h = (float)sqrt((d - g[f].x) * (d - g[f].x) + (e - g[f].y) * (e - g[f].y));
  }
}","[129 129 129 ..., 127   0 127]"
623,rodinia-3.1-nw-nw_kernel1,default,108,11,20,15,1,0,50380812,16,CPU,17.709535,32.737122,"__kernel void A(__global int* a, __global int* b, __global int* c, __local int* d, __local int* e, int f, int g, int h, int i, int j, int k, int l) {
  int m = get_group_id(0);

  int n = get_local_id(0);

  int o = k * f + l;

  int p = m;
  int q = h - 1 - m;

  int r = o + f * 64 * q + 64 * p + n + (f + 1);
  int s = o + f * 64 * q + 64 * p + n + (1);
  int t = o + f * 64 * q + 64 * p + (f);
  int u = o + f * 64 * q + 64 * p;

  if (n == 0) {
    d[0 + n * (64 + 1)] = b[u + n];
  }

  barrier(1);

  for (int v = 0; v < 64; v++)
    e[n + v * 64] = a[r + f * v];

  barrier(1);

  d[0 + (n + 1) * (64 + 1)] = b[t + f * n];

  barrier(1);

  d[(n + 1) + 0 * (64 + 1)] = b[s];

  barrier(1);

  for (int w = 0; w < 64; w++) {
    if (n <= w) {
      int x = n + 1;
      int y = w - n + 1;

      d[x + y * (64 + 1)] = A(d[(x - 1) + (y - 1) * (64 + 1)] + e[(x - 1) + (y - 1) * 64], d[(x - 1) + (y) * (64 + 1)] - (g), d[(x) + (y - 1) * (64 + 1)] - (g));
    }
    barrier(1);
  }

  barrier(1);

  for (int w = 64 - 2; w >= 0; w--) {
    if (n <= w) {
      int x = n + 64 - w;
      int y = 64 - n;

      d[x + y * (64 + 1)] = A(d[(x - 1) + (y - 1) * (64 + 1)] + e[(x - 1) + (y - 1) * 64], d[(x - 1) + (y) * (64 + 1)] - (g), d[(x) + (y - 1) * (64 + 1)] - (g));
    }

    barrier(1);
  }

  for (int v = 0; v < 64; v++)
    b[r + f * v] = d[(n + 1) + (v + 1) * (64 + 1)];

  return;
}","[  1  96  26 ...,  26   0 127]"
624,rodinia-3.1-nw-nw_kernel2,default,109,11,20,15,2,0,50380812,16,CPU,17.661253,32.736686,"__kernel void A(__global int* a, __global int* b, __global int* c, __local int* d, __local int* e, int f, int g, int h, int i, int j, int k, int l) {
  int m = get_group_id(0);

  int n = get_local_id(0);

  int o = k * f + l;

  int p = m + i - h;
  int q = i - m - 1;

  int r = o + f * 64 * q + 64 * p + n + (f + 1);
  int s = o + f * 64 * q + 64 * p + n + (1);
  int t = o + f * 64 * q + 64 * p + (f);
  int u = o + f * 64 * q + 64 * p;

  if (n == 0)
    d[0 + n * (64 + 1)] = b[u];

  for (int v = 0; v < 64; v++)
    e[n + v * 64] = a[r + f * v];

  barrier(1);

  d[0 + (n + 1) * (64 + 1)] = b[t + f * n];

  barrier(1);

  d[(n + 1) + 0 * (64 + 1)] = b[s];

  barrier(1);

  for (int w = 0; w < 64; w++) {
    if (n <= w) {
      int x = n + 1;
      int y = w - n + 1;

      d[x + y * (64 + 1)] = A(d[(x - 1) + (y - 1) * (64 + 1)] + e[(x - 1) + (y - 1) * 64], d[(x - 1) + (y) * (64 + 1)] - (g), d[(x) + (y - 1) * (64 + 1)] - (g));
    }
    barrier(1);
  }

  for (int w = 64 - 2; w >= 0; w--) {
    if (n <= w) {
      int x = n + 64 - w;
      int y = 64 - n;

      d[x + y * (64 + 1)] = A(d[(x - 1) + (y - 1) * (64 + 1)] + e[(x - 1) + (y - 1) * 64], d[(x - 1) + (y) * (64 + 1)] - (g), d[(x) + (y - 1) * (64 + 1)] - (g));
    }

    barrier(1);
  }

  for (int v = 0; v < 64; v++)
    b[r + v * f] = d[(n + 1) + (v + 1) * (64 + 1)];

  return;
}","[ 26   0   0 ...,  26   0 127]"
625,rodinia-3.1-particlefilter-find_index_kernel,default,1,4,6,0,6,0,126564393,512,CPU,103.66546,778.7560440000003,"__kernel void A(__global double* a, __global double* b, __global double* c, __global double* d, __global double* e, __global double* f, __global double* g, int h) {
  int i = get_global_id(0);

  if (i < h) {
    int j = -1;
    int k;

    for (k = 0; k < h; k++) {
      if (c[k] >= d[i]) {
        j = k;
        break;
      }
    }
    if (j == -1) {
      j = h - 1;
    }

    e[i] = a[j];
    f[i] = b[j];
  }
  barrier(2);
}","[129 129 129 ...,  26   0 127]"
626,rodinia-3.1-particlefilter-likelihood_kernel,default,139,11,53,5,34,0,126564393,512,GPU,91.718113,58.607688,"__kernel void A(__global float* a, __global float* b, __global float* c, __global float* d, __global float* e, __global int* f, __global int* g, __global float* h, __global unsigned char* i, __global float* j, __global float* k, const int l, const int m, const int n, int o, const int p, const int q, __global int* r, __global float* s, __local float* t) {
  int u = get_group_id(0);
  int v = get_local_id(0);
  int w = get_global_id(0);
  unsigned x = get_local_size(0);
  int y;
  int z, aa;

  if (w < l) {
    a[w] = c[w];
    b[w] = d[w];

    k[w] = 1 / ((float)(l));

    a[w] = a[w] + 1.0 + 5.0 * H(r, w);
    b[w] = b[w] - 2.0 + 2.0 * H(r, w);
  }

  barrier(2);

  if (w < l) {
    for (y = 0; y < m; y++) {
      z = M(a[w]) + g[y * 2 + 1];
      aa = M(b[w]) + g[y * 2];

      f[w * m + y] = abs(z * p * q + aa * q + o);
      if (f[w * m + y] >= n)
        f[w * m + y] = 0;
    }
    h[w] = E(i, f, m, w);

    h[w] = h[w] / m - 300;

    k[w] = k[w] * exp(h[w]);
  }

  t[v] = 0.0;

  barrier(1 | 2);

  if (w < l) {
    t[v] = k[w];
  }

  barrier(1);

  for (unsigned int ab = x / 2; ab > 0; ab >>= 1) {
    if (v < ab) {
      t[v] += t[v + ab];
    }
    barrier(1);
  }
  if (v == 0) {
    s[u] = t[0];
  }
}","[129 129 129 ..., 127   0 127]"
627,rodinia-3.1-particlefilter-normalize_weights_kernel,default,11,6,21,0,14,0,126564393,512,CPU,14.746386,111.90664,"__kernel void A(__global double* a, int b, __global double* c, __global double* d, __global double* e, __global int* f) {
  int g = get_global_id(0);
  int h = get_local_id(0);
  __local double i;
  __local double j;

  if (0 == h)
    j = c[0];

  barrier(1);

  if (g < b) {
    a[g] = a[g] / j;
  }

  barrier(2);

  if (g == 0) {
    F(d, a, b);
    e[0] = (1 / ((double)(b))) * G(f, g);
  }

  barrier(2);

  if (0 == h)
    i = e[0];

  barrier(1);

  if (g < b) {
    e[g] = i + g / ((double)(b));
  }
}","[129 129 129 ..., 127   0 127]"
628,rodinia-3.1-particlefilter-sum_kernel,default,1,2,2,0,2,0,126564393,512,CPU,13.862587,34.294434,"__kernel void A(__global double* a, int b) {
  int c = get_global_id(0);
  unsigned d = get_local_size(0);

  if (c == 0) {
    int e;
    double f = 0;
    int g = __clc_ceil((double)b / (double)d);
    for (e = 0; e < g; e++) {
      f += a[e];
    }
    a[0] = f;
  }
}","[129 129 129 ..., 127   0 127]"
629,rodinia-3.1-pathfinder-dynproc_kernel,default,25,16,13,8,5,0,40465536,1000,GPU,281.25877,4.209037,"__kernel void A(int a, __global int* b, __global int* c, __global int* d, int e, int f, int g, int h, int i, __local int* j, __local int* k, __global int* l) {
  int m = get_local_size(0);
  int n = get_group_id(0);
  int o = get_local_id(0);

  int p = m - (a * i * 2);

  int q = (p * n) - h;
  int r = q + m - 1;

  int s = q + o;

  int t = (q < 0) ? -q : 0;
  int u = (r > e - 1) ? m - 1 - (r - e + 1) : m - 1;

  int v = o - 1;
  int w = o + 1;

  v = (v < t) ? t : v;
  w = (w > u) ? u : w;

  bool x = ((o) >= (t) && (o) <= (u));

  if (((s) >= (0) && (s) <= (e - 1))) {
    j[o] = c[s];
  }

  barrier(1);

  bool y;
  for (int z = 0; z < a; z++) {
    y = false;

    if (((o) >= (z + 1) && (o) <= (m - z - 2)) && x) {
      y = true;
      int aa = j[v];
      int ab = j[o];
      int ac = j[w];
      int ad = ((aa) <= (ab) ? (aa) : (ab));
      ad = ((ad) <= (ac) ? (ad) : (ac));

      int ae = e * (g + z) + s;
      k[o] = ad + b[ae];

      if (o == 11 && z == 0) {
        int af = c[s];

        l[af] = 1;
      }
    }

    barrier(1);

    if (z == a - 1) {
      break;
    }

    if (y) {
      j[o] = k[o];
    }
    barrier(1);
  }

  if (y) {
    d[s] = k[o];
  }
}
","[129 129 129 ...,   0 127   0]"
630,rodinia-3.1-streamcluster-memset_kernel,default,0,0,1,0,1,0,80543744,256,CPU,777.8945669999997,3640.236157,"__kernel void A(__global char* a, short b, int c) {
  const int d = get_global_id(0);
  a[d] = b;
}","[129 129 129 ...,  26   0 127]"
631,rodinia-3.1-streamcluster-pgain_kernel,default,16,5,13,3,7,0,80543744,256,CPU,863.5010960000003,3640.754419,"__kernel void A(__global float* a, __global long* b, __global float* c, __global float* d, __global float* e, __global int* f, __global char* g, __local float* h, int i, int j, long k, int l) {
  const int m = get_global_id(0);
  const int n = get_local_id(0);

  if (m < i) {
    if (n == 0)
      for (int o = 0; o < j; o++) {
        h[o] = d[o * i + k];
      }
    barrier(1);

    float p = 0.0;
    for (int o = 0; o < j; o++)
      p += (d[(o * i) + m] - h[o]) * (d[(o * i) + m] - h[o]);
    p = p * a[m];

    float q = c[m];

    int r = m * (l + 1);

    if (p < q) {
      g[m] = '1';
      int s = r + l;
      e[s] = p - q;
    }

    else {
      int t = b[m];
      int u = r + f[t];
      e[u] += q - p;
    }
  }
}","[129 129 129 ..., 127   0 127]"
632,shoc-1.1.5-BFS-BFS_kernel_warp,default,15,6,8,0,6,0,40004,1024,CPU,2.306351,3.390369,"__kernel void A(__global unsigned int* a, __global unsigned int* b, __global unsigned int* c, int d, int e, unsigned int f, int g, __global int* h) {
  int i = get_global_id(0);
  int j = i % d;
  int k = i / d;
  int l = k * e;
  int m = e + 1;

  if ((l + e) >= f) {
    m = f - l + 1;
    if (m < 0)
      m = 0;
  }

  for (int n = l; n < m - 1 + l; n++) {
    if (a[n] == g) {
      unsigned int o = b[n + 1] - b[n];
      unsigned int p = b[n];
      for (int q = j; q < o; q += d) {
        int n = c[q + p];
        if (a[n] == 0xffffffff) {
          a[n] = g + 1;
          *h = 1;
        }
      }
    }
  }
}
","[129 129 129 ...,   0 127   0]"
633,shoc-1.1.5-FFT-chk1D_512,default,6,5,5,0,0,0,6291464,64,CPU,3.016713,7.0149289999999995,"__kernel void A(__global float2* a, int b, __global int* c) {
  int d, e = get_local_id(0);
  int f = get_group_id(0) * 512 + e;
  float2 g[8], h[8];

  a = a + f;

  for (d = 0; d < 8; d++) {
    g[d] = a[d * 64];
  }

  for (d = 0; d < 8; d++) {
    h[d] = a[b + d * 64];
  }

  for (d = 0; d < 8; d++) {
    if (g[d].x != h[d].x || g[d].y != h[d].y) {
      *c = 1;
    }
  }
}","[129 129 129 ..., 127   0 127]"
634,shoc-1.1.5-FFT-fft1D_512,default,569,12,22,16,0,0,6291464,64,CPU,4.234063,7.095425,"__kernel void A(__global float2* a) {
  int b = get_local_id(0);
  int c = get_group_id(0) * 512 + b;
  int d = b >> 3;
  int e = b & 7;
  float2 f[8];
  __local float g[8 * 8 * 9];

  a = a + c;

  A(f, a, 64);

  {
    {
      float2 h = *&f[0];
      *&f[0] = J(h, *&f[4]);
      *&f[4] = K(h, *&f[4]);
    };
    {
      float2 h = *&f[1];
      *&f[1] = J(h, *&f[5]);
      *&f[5] = K(h, *&f[5]);
    };
    {
      float2 h = *&f[2];
      *&f[2] = J(h, *&f[6]);
      *&f[6] = K(h, *&f[6]);
    };
    {
      float2 h = *&f[3];
      *&f[3] = J(h, *&f[7]);
      *&f[7] = K(h, *&f[7]);
    };
    f[5] = I(H(f[5], (float2)(1, -1)), 0x1.6a09e667f3bcdp-1);
    f[6] = H(f[6], (float2)(0, -1));
    f[7] = I(H(f[7], (float2)(-1, -1)), 0x1.6a09e667f3bcdp-1);
    {
      {
        float2 h = *&f[0];
        *&f[0] = J(h, *&f[2]);
        *&f[2] = K(h, *&f[2]);
      };
      {
        float2 h = *&f[1];
        *&f[1] = J(h, *&f[3]);
        *&f[3] = K(h, *&f[3]);
      };
      *&f[3] = H(*&f[3], (float2)(0, -1));
      {
        float2 h = *&f[0];
        *&f[0] = J(h, *&f[1]);
        *&f[1] = K(h, *&f[1]);
      };
      {
        float2 h = *&f[2];
        *&f[2] = J(h, *&f[3]);
        *&f[3] = K(h, *&f[3]);
      };
    };
    {
      {
        float2 h = *&f[4];
        *&f[4] = J(h, *&f[6]);
        *&f[6] = K(h, *&f[6]);
      };
      {
        float2 h = *&f[5];
        *&f[5] = J(h, *&f[7]);
        *&f[7] = K(h, *&f[7]);
      };
      *&f[7] = H(*&f[7], (float2)(0, -1));
      {
        float2 h = *&f[4];
        *&f[4] = J(h, *&f[5]);
        *&f[5] = K(h, *&f[5]);
      };
      {
        float2 h = *&f[6];
        *&f[6] = J(h, *&f[7]);
        *&f[7] = K(h, *&f[7]);
      };
    };
  };

  {
    int i[] = {0, 4, 2, 6, 1, 5, 3, 7};
    for (int j = 1; j < 8; j++) {
      f[j] = H(f[j], G((-2 * 3.14 * i[j] / (512)) * (b)));
    }
  };
  {
    C(f, &g[d * 8 + e], 66);
    if ((0xf) & 8)
      barrier(1);
    E(f, &g[e * 66 + d], 8);
    if ((0xf) & 4)
      barrier(1);
    D(f, &g[d * 8 + e], 66);
    if ((0xf) & 2)
      barrier(1);
    F(f, &g[e * 66 + d], 8);
    if ((0xf) & 1)
      barrier(1);
  };

  {
    {
      float2 h = *&f[0];
      *&f[0] = J(h, *&f[4]);
      *&f[4] = K(h, *&f[4]);
    };
    {
      float2 h = *&f[1];
      *&f[1] = J(h, *&f[5]);
      *&f[5] = K(h, *&f[5]);
    };
    {
      float2 h = *&f[2];
      *&f[2] = J(h, *&f[6]);
      *&f[6] = K(h, *&f[6]);
    };
    {
      float2 h = *&f[3];
      *&f[3] = J(h, *&f[7]);
      *&f[7] = K(h, *&f[7]);
    };
    f[5] = I(H(f[5], (float2)(1, -1)), 0x1.6a09e667f3bcdp-1);
    f[6] = H(f[6], (float2)(0, -1));
    f[7] = I(H(f[7], (float2)(-1, -1)), 0x1.6a09e667f3bcdp-1);
    {
      {
        float2 h = *&f[0];
        *&f[0] = J(h, *&f[2]);
        *&f[2] = K(h, *&f[2]);
      };
      {
        float2 h = *&f[1];
        *&f[1] = J(h, *&f[3]);
        *&f[3] = K(h, *&f[3]);
      };
      *&f[3] = H(*&f[3], (float2)(0, -1));
      {
        float2 h = *&f[0];
        *&f[0] = J(h, *&f[1]);
        *&f[1] = K(h, *&f[1]);
      };
      {
        float2 h = *&f[2];
        *&f[2] = J(h, *&f[3]);
        *&f[3] = K(h, *&f[3]);
      };
    };
    {
      {
        float2 h = *&f[4];
        *&f[4] = J(h, *&f[6]);
        *&f[6] = K(h, *&f[6]);
      };
      {
        float2 h = *&f[5];
        *&f[5] = J(h, *&f[7]);
        *&f[7] = K(h, *&f[7]);
      };
      *&f[7] = H(*&f[7], (float2)(0, -1));
      {
        float2 h = *&f[4];
        *&f[4] = J(h, *&f[5]);
        *&f[5] = K(h, *&f[5]);
      };
      {
        float2 h = *&f[6];
        *&f[6] = J(h, *&f[7]);
        *&f[7] = K(h, *&f[7]);
      };
    };
  };

  {
    int i[] = {0, 4, 2, 6, 1, 5, 3, 7};
    for (int j = 1; j < 8; j++) {
      f[j] = H(f[j], G((-2 * 3.14 * i[j] / (64)) * (d)));
    }
  };
  {
    C(f, &g[d * 8 + e], 8 * 9);
    if ((0xE) & 8)
      barrier(1);
    E(f, &g[d * 8 * 9 + e], 8);
    if ((0xE) & 4)
      barrier(1);
    D(f, &g[d * 8 + e], 8 * 9);
    if ((0xE) & 2)
      barrier(1);
    F(f, &g[d * 8 * 9 + e], 8);
    if ((0xE) & 1)
      barrier(1);
  };

  {
    {
      float2 h = *&f[0];
      *&f[0] = J(h, *&f[4]);
      *&f[4] = K(h, *&f[4]);
    };
    {
      float2 h = *&f[1];
      *&f[1] = J(h, *&f[5]);
      *&f[5] = K(h, *&f[5]);
    };
    {
      float2 h = *&f[2];
      *&f[2] = J(h, *&f[6]);
      *&f[6] = K(h, *&f[6]);
    };
    {
      float2 h = *&f[3];
      *&f[3] = J(h, *&f[7]);
      *&f[7] = K(h, *&f[7]);
    };
    f[5] = I(H(f[5], (float2)(1, -1)), 0x1.6a09e667f3bcdp-1);
    f[6] = H(f[6], (float2)(0, -1));
    f[7] = I(H(f[7], (float2)(-1, -1)), 0x1.6a09e667f3bcdp-1);
    {
      {
        float2 h = *&f[0];
        *&f[0] = J(h, *&f[2]);
        *&f[2] = K(h, *&f[2]);
      };
      {
        float2 h = *&f[1];
        *&f[1] = J(h, *&f[3]);
        *&f[3] = K(h, *&f[3]);
      };
      *&f[3] = H(*&f[3], (float2)(0, -1));
      {
        float2 h = *&f[0];
        *&f[0] = J(h, *&f[1]);
        *&f[1] = K(h, *&f[1]);
      };
      {
        float2 h = *&f[2];
        *&f[2] = J(h, *&f[3]);
        *&f[3] = K(h, *&f[3]);
      };
    };
    {
      {
        float2 h = *&f[4];
        *&f[4] = J(h, *&f[6]);
        *&f[6] = K(h, *&f[6]);
      };
      {
        float2 h = *&f[5];
        *&f[5] = J(h, *&f[7]);
        *&f[7] = K(h, *&f[7]);
      };
      *&f[7] = H(*&f[7], (float2)(0, -1));
      {
        float2 h = *&f[4];
        *&f[4] = J(h, *&f[5]);
        *&f[5] = K(h, *&f[5]);
      };
      {
        float2 h = *&f[6];
        *&f[6] = J(h, *&f[7]);
        *&f[7] = K(h, *&f[7]);
      };
    };
  };

  B(f, a, 64);
}","[ 41   7  89 ...,  26   0 127]"
635,shoc-1.1.5-FFT-ifft1D_512,default,571,13,22,16,0,0,6291464,64,CPU,4.2328589999999995,7.096717999999999,"__kernel void A(__global float2* a) {
  int b;
  int c = get_local_id(0);
  int d = get_group_id(0) * 512 + c;
  int e = c >> 3;
  int f = c & 7;
  float2 g[8];
  __local float h[8 * 8 * 9];

  a = a + d;
  A(g, a, 64);

  {
    {
      float2 i = *&g[0];
      *&g[0] = J(i, *&g[4]);
      *&g[4] = K(i, *&g[4]);
    };
    {
      float2 i = *&g[1];
      *&g[1] = J(i, *&g[5]);
      *&g[5] = K(i, *&g[5]);
    };
    {
      float2 i = *&g[2];
      *&g[2] = J(i, *&g[6]);
      *&g[6] = K(i, *&g[6]);
    };
    {
      float2 i = *&g[3];
      *&g[3] = J(i, *&g[7]);
      *&g[7] = K(i, *&g[7]);
    };
    g[5] = I(H(g[5], (float2)(1, 1)), 0x1.6a09e667f3bcdp-1);
    g[6] = H(g[6], (float2)(0, 1));
    g[7] = I(H(g[7], (float2)(-1, 1)), 0x1.6a09e667f3bcdp-1);
    {
      {
        float2 i = *&g[0];
        *&g[0] = J(i, *&g[2]);
        *&g[2] = K(i, *&g[2]);
      };
      {
        float2 i = *&g[1];
        *&g[1] = J(i, *&g[3]);
        *&g[3] = K(i, *&g[3]);
      };
      *&g[3] = H(*&g[3], (float2)(0, 1));
      {
        float2 i = *&g[0];
        *&g[0] = J(i, *&g[1]);
        *&g[1] = K(i, *&g[1]);
      };
      {
        float2 i = *&g[2];
        *&g[2] = J(i, *&g[3]);
        *&g[3] = K(i, *&g[3]);
      };
    };
    {
      {
        float2 i = *&g[4];
        *&g[4] = J(i, *&g[6]);
        *&g[6] = K(i, *&g[6]);
      };
      {
        float2 i = *&g[5];
        *&g[5] = J(i, *&g[7]);
        *&g[7] = K(i, *&g[7]);
      };
      *&g[7] = H(*&g[7], (float2)(0, 1));
      {
        float2 i = *&g[4];
        *&g[4] = J(i, *&g[5]);
        *&g[5] = K(i, *&g[5]);
      };
      {
        float2 i = *&g[6];
        *&g[6] = J(i, *&g[7]);
        *&g[7] = K(i, *&g[7]);
      };
    };
  };

  {
    int j[] = {0, 4, 2, 6, 1, 5, 3, 7};
    for (int k = 1; k < 8; k++)
      g[k] = H(g[k], G((2 * 3.14 * j[k] / (512)) * (c)));
  };
  {
    C(g, &h[e * 8 + f], 66);
    if ((0xf) & 8)
      barrier(1);
    E(g, &h[f * 66 + e], 8);
    if ((0xf) & 4)
      barrier(1);
    D(g, &h[e * 8 + f], 66);
    if ((0xf) & 2)
      barrier(1);
    F(g, &h[f * 66 + e], 8);
    if ((0xf) & 1)
      barrier(1);
  };

  {
    {
      float2 i = *&g[0];
      *&g[0] = J(i, *&g[4]);
      *&g[4] = K(i, *&g[4]);
    };
    {
      float2 i = *&g[1];
      *&g[1] = J(i, *&g[5]);
      *&g[5] = K(i, *&g[5]);
    };
    {
      float2 i = *&g[2];
      *&g[2] = J(i, *&g[6]);
      *&g[6] = K(i, *&g[6]);
    };
    {
      float2 i = *&g[3];
      *&g[3] = J(i, *&g[7]);
      *&g[7] = K(i, *&g[7]);
    };
    g[5] = I(H(g[5], (float2)(1, 1)), 0x1.6a09e667f3bcdp-1);
    g[6] = H(g[6], (float2)(0, 1));
    g[7] = I(H(g[7], (float2)(-1, 1)), 0x1.6a09e667f3bcdp-1);
    {
      {
        float2 i = *&g[0];
        *&g[0] = J(i, *&g[2]);
        *&g[2] = K(i, *&g[2]);
      };
      {
        float2 i = *&g[1];
        *&g[1] = J(i, *&g[3]);
        *&g[3] = K(i, *&g[3]);
      };
      *&g[3] = H(*&g[3], (float2)(0, 1));
      {
        float2 i = *&g[0];
        *&g[0] = J(i, *&g[1]);
        *&g[1] = K(i, *&g[1]);
      };
      {
        float2 i = *&g[2];
        *&g[2] = J(i, *&g[3]);
        *&g[3] = K(i, *&g[3]);
      };
    };
    {
      {
        float2 i = *&g[4];
        *&g[4] = J(i, *&g[6]);
        *&g[6] = K(i, *&g[6]);
      };
      {
        float2 i = *&g[5];
        *&g[5] = J(i, *&g[7]);
        *&g[7] = K(i, *&g[7]);
      };
      *&g[7] = H(*&g[7], (float2)(0, 1));
      {
        float2 i = *&g[4];
        *&g[4] = J(i, *&g[5]);
        *&g[5] = K(i, *&g[5]);
      };
      {
        float2 i = *&g[6];
        *&g[6] = J(i, *&g[7]);
        *&g[7] = K(i, *&g[7]);
      };
    };
  };

  {
    int j[] = {0, 4, 2, 6, 1, 5, 3, 7};
    for (int k = 1; k < 8; k++)
      g[k] = H(g[k], G((2 * 3.14 * j[k] / (64)) * (e)));
  };
  {
    C(g, &h[e * 8 + f], 8 * 9);
    if ((0xE) & 8)
      barrier(1);
    E(g, &h[e * 8 * 9 + f], 8);
    if ((0xE) & 4)
      barrier(1);
    D(g, &h[e * 8 + f], 8 * 9);
    if ((0xE) & 2)
      barrier(1);
    F(g, &h[e * 8 * 9 + f], 8);
    if ((0xE) & 1)
      barrier(1);
  };

  {
    {
      float2 i = *&g[0];
      *&g[0] = J(i, *&g[4]);
      *&g[4] = K(i, *&g[4]);
    };
    {
      float2 i = *&g[1];
      *&g[1] = J(i, *&g[5]);
      *&g[5] = K(i, *&g[5]);
    };
    {
      float2 i = *&g[2];
      *&g[2] = J(i, *&g[6]);
      *&g[6] = K(i, *&g[6]);
    };
    {
      float2 i = *&g[3];
      *&g[3] = J(i, *&g[7]);
      *&g[7] = K(i, *&g[7]);
    };
    g[5] = I(H(g[5], (float2)(1, 1)), 0x1.6a09e667f3bcdp-1);
    g[6] = H(g[6], (float2)(0, 1));
    g[7] = I(H(g[7], (float2)(-1, 1)), 0x1.6a09e667f3bcdp-1);
    {
      {
        float2 i = *&g[0];
        *&g[0] = J(i, *&g[2]);
        *&g[2] = K(i, *&g[2]);
      };
      {
        float2 i = *&g[1];
        *&g[1] = J(i, *&g[3]);
        *&g[3] = K(i, *&g[3]);
      };
      *&g[3] = H(*&g[3], (float2)(0, 1));
      {
        float2 i = *&g[0];
        *&g[0] = J(i, *&g[1]);
        *&g[1] = K(i, *&g[1]);
      };
      {
        float2 i = *&g[2];
        *&g[2] = J(i, *&g[3]);
        *&g[3] = K(i, *&g[3]);
      };
    };
    {
      {
        float2 i = *&g[4];
        *&g[4] = J(i, *&g[6]);
        *&g[6] = K(i, *&g[6]);
      };
      {
        float2 i = *&g[5];
        *&g[5] = J(i, *&g[7]);
        *&g[7] = K(i, *&g[7]);
      };
      *&g[7] = H(*&g[7], (float2)(0, 1));
      {
        float2 i = *&g[4];
        *&g[4] = J(i, *&g[5]);
        *&g[5] = K(i, *&g[5]);
      };
      {
        float2 i = *&g[6];
        *&g[6] = J(i, *&g[7]);
        *&g[7] = K(i, *&g[7]);
      };
    };
  };

  for (b = 0; b < 8; b++) {
    g[b].x = g[b].x / 512.0f;
    g[b].y = g[b].y / 512.0f;
  }

  B(g, a, 64);
}","[  7  90  11 ...,  26   0 127]"
636,shoc-1.1.5-GEMM-sgemmNN,default,294,4,288,260,9,0,2359296,64,CPU,7.6315149999999985,23.414678,"__kernel void A(__global const float* a, int b, __global const float* c, int d, __global float* e, int f, int g, float h, float i) {
  const int j = get_local_id(0);
  const int k = get_local_id(1);
  const int l = get_group_id(0) * 64;
  const int m = get_group_id(1) * 16;
  const int n = j + k * 16;

  int o, p, q, r = 0;

  a += l + n;

  c += j + (m + k) * d;

  e += l + n + (m * f);

  float s[16];
  for (o = 0; o < 16; ++o) {
    s[o] = 0.0;
  }

  __local float t[16][17];

  do {
    __private float u[4];
    for (q = 0; q < 4; ++q) {
      u[q] = a[q * b];
    }

    t[j][k] = c[0 * d];
    t[j][k + 4] = c[4 * d];
    t[j][k + 8] = c[8 * d];
    t[j][k + 12] = c[12 * d];
    barrier(1);

    a += 4 * b;

    do {
      s[0] += u[0] * t[0][0];
      s[1] += u[0] * t[0][1];
      s[2] += u[0] * t[0][2];
      s[3] += u[0] * t[0][3];
      s[4] += u[0] * t[0][4];
      s[5] += u[0] * t[0][5];
      s[6] += u[0] * t[0][6];
      s[7] += u[0] * t[0][7];
      s[8] += u[0] * t[0][8];
      s[9] += u[0] * t[0][9];
      s[10] += u[0] * t[0][10];
      s[11] += u[0] * t[0][11];
      s[12] += u[0] * t[0][12];
      s[13] += u[0] * t[0][13];
      s[14] += u[0] * t[0][14];
      s[15] += u[0] * t[0][15];
    } while (0);
    u[0] = a[0 * b];
    do {
      s[0] += u[1] * t[1][0];
      s[1] += u[1] * t[1][1];
      s[2] += u[1] * t[1][2];
      s[3] += u[1] * t[1][3];
      s[4] += u[1] * t[1][4];
      s[5] += u[1] * t[1][5];
      s[6] += u[1] * t[1][6];
      s[7] += u[1] * t[1][7];
      s[8] += u[1] * t[1][8];
      s[9] += u[1] * t[1][9];
      s[10] += u[1] * t[1][10];
      s[11] += u[1] * t[1][11];
      s[12] += u[1] * t[1][12];
      s[13] += u[1] * t[1][13];
      s[14] += u[1] * t[1][14];
      s[15] += u[1] * t[1][15];
    } while (0);
    u[1] = a[1 * b];
    do {
      s[0] += u[2] * t[2][0];
      s[1] += u[2] * t[2][1];
      s[2] += u[2] * t[2][2];
      s[3] += u[2] * t[2][3];
      s[4] += u[2] * t[2][4];
      s[5] += u[2] * t[2][5];
      s[6] += u[2] * t[2][6];
      s[7] += u[2] * t[2][7];
      s[8] += u[2] * t[2][8];
      s[9] += u[2] * t[2][9];
      s[10] += u[2] * t[2][10];
      s[11] += u[2] * t[2][11];
      s[12] += u[2] * t[2][12];
      s[13] += u[2] * t[2][13];
      s[14] += u[2] * t[2][14];
      s[15] += u[2] * t[2][15];
    } while (0);
    u[2] = a[2 * b];
    do {
      s[0] += u[3] * t[3][0];
      s[1] += u[3] * t[3][1];
      s[2] += u[3] * t[3][2];
      s[3] += u[3] * t[3][3];
      s[4] += u[3] * t[3][4];
      s[5] += u[3] * t[3][5];
      s[6] += u[3] * t[3][6];
      s[7] += u[3] * t[3][7];
      s[8] += u[3] * t[3][8];
      s[9] += u[3] * t[3][9];
      s[10] += u[3] * t[3][10];
      s[11] += u[3] * t[3][11];
      s[12] += u[3] * t[3][12];
      s[13] += u[3] * t[3][13];
      s[14] += u[3] * t[3][14];
      s[15] += u[3] * t[3][15];
    } while (0);
    u[3] = a[3 * b];

    a += 4 * b;
    do {
      s[0] += u[0] * t[4][0];
      s[1] += u[0] * t[4][1];
      s[2] += u[0] * t[4][2];
      s[3] += u[0] * t[4][3];
      s[4] += u[0] * t[4][4];
      s[5] += u[0] * t[4][5];
      s[6] += u[0] * t[4][6];
      s[7] += u[0] * t[4][7];
      s[8] += u[0] * t[4][8];
      s[9] += u[0] * t[4][9];
      s[10] += u[0] * t[4][10];
      s[11] += u[0] * t[4][11];
      s[12] += u[0] * t[4][12];
      s[13] += u[0] * t[4][13];
      s[14] += u[0] * t[4][14];
      s[15] += u[0] * t[4][15];
    } while (0);
    u[0] = a[0 * b];
    do {
      s[0] += u[1] * t[5][0];
      s[1] += u[1] * t[5][1];
      s[2] += u[1] * t[5][2];
      s[3] += u[1] * t[5][3];
      s[4] += u[1] * t[5][4];
      s[5] += u[1] * t[5][5];
      s[6] += u[1] * t[5][6];
      s[7] += u[1] * t[5][7];
      s[8] += u[1] * t[5][8];
      s[9] += u[1] * t[5][9];
      s[10] += u[1] * t[5][10];
      s[11] += u[1] * t[5][11];
      s[12] += u[1] * t[5][12];
      s[13] += u[1] * t[5][13];
      s[14] += u[1] * t[5][14];
      s[15] += u[1] * t[5][15];
    } while (0);
    u[1] = a[1 * b];
    do {
      s[0] += u[2] * t[6][0];
      s[1] += u[2] * t[6][1];
      s[2] += u[2] * t[6][2];
      s[3] += u[2] * t[6][3];
      s[4] += u[2] * t[6][4];
      s[5] += u[2] * t[6][5];
      s[6] += u[2] * t[6][6];
      s[7] += u[2] * t[6][7];
      s[8] += u[2] * t[6][8];
      s[9] += u[2] * t[6][9];
      s[10] += u[2] * t[6][10];
      s[11] += u[2] * t[6][11];
      s[12] += u[2] * t[6][12];
      s[13] += u[2] * t[6][13];
      s[14] += u[2] * t[6][14];
      s[15] += u[2] * t[6][15];
    } while (0);
    u[2] = a[2 * b];
    do {
      s[0] += u[3] * t[7][0];
      s[1] += u[3] * t[7][1];
      s[2] += u[3] * t[7][2];
      s[3] += u[3] * t[7][3];
      s[4] += u[3] * t[7][4];
      s[5] += u[3] * t[7][5];
      s[6] += u[3] * t[7][6];
      s[7] += u[3] * t[7][7];
      s[8] += u[3] * t[7][8];
      s[9] += u[3] * t[7][9];
      s[10] += u[3] * t[7][10];
      s[11] += u[3] * t[7][11];
      s[12] += u[3] * t[7][12];
      s[13] += u[3] * t[7][13];
      s[14] += u[3] * t[7][14];
      s[15] += u[3] * t[7][15];
    } while (0);
    u[3] = a[3 * b];

    a += 4 * b;
    do {
      s[0] += u[0] * t[8][0];
      s[1] += u[0] * t[8][1];
      s[2] += u[0] * t[8][2];
      s[3] += u[0] * t[8][3];
      s[4] += u[0] * t[8][4];
      s[5] += u[0] * t[8][5];
      s[6] += u[0] * t[8][6];
      s[7] += u[0] * t[8][7];
      s[8] += u[0] * t[8][8];
      s[9] += u[0] * t[8][9];
      s[10] += u[0] * t[8][10];
      s[11] += u[0] * t[8][11];
      s[12] += u[0] * t[8][12];
      s[13] += u[0] * t[8][13];
      s[14] += u[0] * t[8][14];
      s[15] += u[0] * t[8][15];
    } while (0);
    u[0] = a[0 * b];
    do {
      s[0] += u[1] * t[9][0];
      s[1] += u[1] * t[9][1];
      s[2] += u[1] * t[9][2];
      s[3] += u[1] * t[9][3];
      s[4] += u[1] * t[9][4];
      s[5] += u[1] * t[9][5];
      s[6] += u[1] * t[9][6];
      s[7] += u[1] * t[9][7];
      s[8] += u[1] * t[9][8];
      s[9] += u[1] * t[9][9];
      s[10] += u[1] * t[9][10];
      s[11] += u[1] * t[9][11];
      s[12] += u[1] * t[9][12];
      s[13] += u[1] * t[9][13];
      s[14] += u[1] * t[9][14];
      s[15] += u[1] * t[9][15];
    } while (0);
    u[1] = a[1 * b];
    do {
      s[0] += u[2] * t[10][0];
      s[1] += u[2] * t[10][1];
      s[2] += u[2] * t[10][2];
      s[3] += u[2] * t[10][3];
      s[4] += u[2] * t[10][4];
      s[5] += u[2] * t[10][5];
      s[6] += u[2] * t[10][6];
      s[7] += u[2] * t[10][7];
      s[8] += u[2] * t[10][8];
      s[9] += u[2] * t[10][9];
      s[10] += u[2] * t[10][10];
      s[11] += u[2] * t[10][11];
      s[12] += u[2] * t[10][12];
      s[13] += u[2] * t[10][13];
      s[14] += u[2] * t[10][14];
      s[15] += u[2] * t[10][15];
    } while (0);
    u[2] = a[2 * b];
    do {
      s[0] += u[3] * t[11][0];
      s[1] += u[3] * t[11][1];
      s[2] += u[3] * t[11][2];
      s[3] += u[3] * t[11][3];
      s[4] += u[3] * t[11][4];
      s[5] += u[3] * t[11][5];
      s[6] += u[3] * t[11][6];
      s[7] += u[3] * t[11][7];
      s[8] += u[3] * t[11][8];
      s[9] += u[3] * t[11][9];
      s[10] += u[3] * t[11][10];
      s[11] += u[3] * t[11][11];
      s[12] += u[3] * t[11][12];
      s[13] += u[3] * t[11][13];
      s[14] += u[3] * t[11][14];
      s[15] += u[3] * t[11][15];
    } while (0);
    u[3] = a[3 * b];

    a += 4 * b;
    do {
      s[0] += u[0] * t[12][0];
      s[1] += u[0] * t[12][1];
      s[2] += u[0] * t[12][2];
      s[3] += u[0] * t[12][3];
      s[4] += u[0] * t[12][4];
      s[5] += u[0] * t[12][5];
      s[6] += u[0] * t[12][6];
      s[7] += u[0] * t[12][7];
      s[8] += u[0] * t[12][8];
      s[9] += u[0] * t[12][9];
      s[10] += u[0] * t[12][10];
      s[11] += u[0] * t[12][11];
      s[12] += u[0] * t[12][12];
      s[13] += u[0] * t[12][13];
      s[14] += u[0] * t[12][14];
      s[15] += u[0] * t[12][15];
    } while (0);
    do {
      s[0] += u[1] * t[13][0];
      s[1] += u[1] * t[13][1];
      s[2] += u[1] * t[13][2];
      s[3] += u[1] * t[13][3];
      s[4] += u[1] * t[13][4];
      s[5] += u[1] * t[13][5];
      s[6] += u[1] * t[13][6];
      s[7] += u[1] * t[13][7];
      s[8] += u[1] * t[13][8];
      s[9] += u[1] * t[13][9];
      s[10] += u[1] * t[13][10];
      s[11] += u[1] * t[13][11];
      s[12] += u[1] * t[13][12];
      s[13] += u[1] * t[13][13];
      s[14] += u[1] * t[13][14];
      s[15] += u[1] * t[13][15];
    } while (0);
    do {
      s[0] += u[2] * t[14][0];
      s[1] += u[2] * t[14][1];
      s[2] += u[2] * t[14][2];
      s[3] += u[2] * t[14][3];
      s[4] += u[2] * t[14][4];
      s[5] += u[2] * t[14][5];
      s[6] += u[2] * t[14][6];
      s[7] += u[2] * t[14][7];
      s[8] += u[2] * t[14][8];
      s[9] += u[2] * t[14][9];
      s[10] += u[2] * t[14][10];
      s[11] += u[2] * t[14][11];
      s[12] += u[2] * t[14][12];
      s[13] += u[2] * t[14][13];
      s[14] += u[2] * t[14][14];
      s[15] += u[2] * t[14][15];
    } while (0);
    do {
      s[0] += u[3] * t[15][0];
      s[1] += u[3] * t[15][1];
      s[2] += u[3] * t[15][2];
      s[3] += u[3] * t[15][3];
      s[4] += u[3] * t[15][4];
      s[5] += u[3] * t[15][5];
      s[6] += u[3] * t[15][6];
      s[7] += u[3] * t[15][7];
      s[8] += u[3] * t[15][8];
      s[9] += u[3] * t[15][9];
      s[10] += u[3] * t[15][10];
      s[11] += u[3] * t[15][11];
      s[12] += u[3] * t[15][12];
      s[13] += u[3] * t[15][13];
      s[14] += u[3] * t[15][14];
      s[15] += u[3] * t[15][15];
    } while (0);

    c += 16;
    r += 16;
    barrier(1);
  } while (r < g);

  for (int o = 0; o < 16; o++, e += f) {
    e[0] = h * s[o] + i * e[0];
  }
}","[ 51  17  52 ..., 127   0 127]"
637,shoc-1.1.5-GEMM-sgemmNT,default,154,5,147,130,6,0,2359296,64,CPU,8.993403,23.415551,"__kernel void A(__global const float* a, int b, __global const float* c, int d, __global float* e, int f, int g, float h, float i) {
  const int j = get_local_id(0);
  const int k = get_local_id(1);
  const int l = get_group_id(0) * 64;
  const int m = get_group_id(1) * 16;
  const int n = j + k * 16;

  int o, p = 0;

  a += l + n;
  c += m + j + (k * d);
  e += l + n + (m * f);

  float q[4];
  for (o = 0; o < 4; ++o) {
    q[o] = a[o * b];
  }
  __private float r;
  r = c[0];

  a += 4 * b;
  c += 4 * d;
  p += 4 * d;

  __local float s[4][16];
  float t[16];
  for (o = 0; o < 16; ++o) {
    t[o] = 0.0;
  }

  do {
    __private float u[4];
    for (o = 0; o < 4; ++o) {
      u[o] = q[o];
    }

    s[k][j] = r;
    barrier(1);

    q[0] = a[0 * b];
    q[1] = a[1 * b];
    q[2] = a[2 * b];
    q[3] = a[3 * b];
    r = c[0];

    do {
      t[0] += u[0] * s[0][0];
      t[1] += u[0] * s[0][1];
      t[2] += u[0] * s[0][2];
      t[3] += u[0] * s[0][3];
      t[4] += u[0] * s[0][4];
      t[5] += u[0] * s[0][5];
      t[6] += u[0] * s[0][6];
      t[7] += u[0] * s[0][7];
      t[8] += u[0] * s[0][8];
      t[9] += u[0] * s[0][9];
      t[10] += u[0] * s[0][10];
      t[11] += u[0] * s[0][11];
      t[12] += u[0] * s[0][12];
      t[13] += u[0] * s[0][13];
      t[14] += u[0] * s[0][14];
      t[15] += u[0] * s[0][15];
    } while (0);
    do {
      t[0] += u[1] * s[1][0];
      t[1] += u[1] * s[1][1];
      t[2] += u[1] * s[1][2];
      t[3] += u[1] * s[1][3];
      t[4] += u[1] * s[1][4];
      t[5] += u[1] * s[1][5];
      t[6] += u[1] * s[1][6];
      t[7] += u[1] * s[1][7];
      t[8] += u[1] * s[1][8];
      t[9] += u[1] * s[1][9];
      t[10] += u[1] * s[1][10];
      t[11] += u[1] * s[1][11];
      t[12] += u[1] * s[1][12];
      t[13] += u[1] * s[1][13];
      t[14] += u[1] * s[1][14];
      t[15] += u[1] * s[1][15];
    } while (0);
    do {
      t[0] += u[2] * s[2][0];
      t[1] += u[2] * s[2][1];
      t[2] += u[2] * s[2][2];
      t[3] += u[2] * s[2][3];
      t[4] += u[2] * s[2][4];
      t[5] += u[2] * s[2][5];
      t[6] += u[2] * s[2][6];
      t[7] += u[2] * s[2][7];
      t[8] += u[2] * s[2][8];
      t[9] += u[2] * s[2][9];
      t[10] += u[2] * s[2][10];
      t[11] += u[2] * s[2][11];
      t[12] += u[2] * s[2][12];
      t[13] += u[2] * s[2][13];
      t[14] += u[2] * s[2][14];
      t[15] += u[2] * s[2][15];
    } while (0);
    do {
      t[0] += u[3] * s[3][0];
      t[1] += u[3] * s[3][1];
      t[2] += u[3] * s[3][2];
      t[3] += u[3] * s[3][3];
      t[4] += u[3] * s[3][4];
      t[5] += u[3] * s[3][5];
      t[6] += u[3] * s[3][6];
      t[7] += u[3] * s[3][7];
      t[8] += u[3] * s[3][8];
      t[9] += u[3] * s[3][9];
      t[10] += u[3] * s[3][10];
      t[11] += u[3] * s[3][11];
      t[12] += u[3] * s[3][12];
      t[13] += u[3] * s[3][13];
      t[14] += u[3] * s[3][14];
      t[15] += u[3] * s[3][15];
    } while (0);

    a += 4 * b;
    c += 4 * d;
    p += 4 * d;
    barrier(1);

  } while (p < g * d);

  s[k][j] = r;
  barrier(1);

  do {
    t[0] += q[0] * s[0][0];
    t[1] += q[0] * s[0][1];
    t[2] += q[0] * s[0][2];
    t[3] += q[0] * s[0][3];
    t[4] += q[0] * s[0][4];
    t[5] += q[0] * s[0][5];
    t[6] += q[0] * s[0][6];
    t[7] += q[0] * s[0][7];
    t[8] += q[0] * s[0][8];
    t[9] += q[0] * s[0][9];
    t[10] += q[0] * s[0][10];
    t[11] += q[0] * s[0][11];
    t[12] += q[0] * s[0][12];
    t[13] += q[0] * s[0][13];
    t[14] += q[0] * s[0][14];
    t[15] += q[0] * s[0][15];
  } while (0);
  do {
    t[0] += q[1] * s[1][0];
    t[1] += q[1] * s[1][1];
    t[2] += q[1] * s[1][2];
    t[3] += q[1] * s[1][3];
    t[4] += q[1] * s[1][4];
    t[5] += q[1] * s[1][5];
    t[6] += q[1] * s[1][6];
    t[7] += q[1] * s[1][7];
    t[8] += q[1] * s[1][8];
    t[9] += q[1] * s[1][9];
    t[10] += q[1] * s[1][10];
    t[11] += q[1] * s[1][11];
    t[12] += q[1] * s[1][12];
    t[13] += q[1] * s[1][13];
    t[14] += q[1] * s[1][14];
    t[15] += q[1] * s[1][15];
  } while (0);
  do {
    t[0] += q[2] * s[2][0];
    t[1] += q[2] * s[2][1];
    t[2] += q[2] * s[2][2];
    t[3] += q[2] * s[2][3];
    t[4] += q[2] * s[2][4];
    t[5] += q[2] * s[2][5];
    t[6] += q[2] * s[2][6];
    t[7] += q[2] * s[2][7];
    t[8] += q[2] * s[2][8];
    t[9] += q[2] * s[2][9];
    t[10] += q[2] * s[2][10];
    t[11] += q[2] * s[2][11];
    t[12] += q[2] * s[2][12];
    t[13] += q[2] * s[2][13];
    t[14] += q[2] * s[2][14];
    t[15] += q[2] * s[2][15];
  } while (0);
  do {
    t[0] += q[3] * s[3][0];
    t[1] += q[3] * s[3][1];
    t[2] += q[3] * s[3][2];
    t[3] += q[3] * s[3][3];
    t[4] += q[3] * s[3][4];
    t[5] += q[3] * s[3][5];
    t[6] += q[3] * s[3][6];
    t[7] += q[3] * s[3][7];
    t[8] += q[3] * s[3][8];
    t[9] += q[3] * s[3][9];
    t[10] += q[3] * s[3][10];
    t[11] += q[3] * s[3][11];
    t[12] += q[3] * s[3][12];
    t[13] += q[3] * s[3][13];
    t[14] += q[3] * s[3][14];
    t[15] += q[3] * s[3][15];
  } while (0);

  for (int o = 0; o < 16; o++, e += f) {
    e[0] = h * t[o] + i * e[0];
  }
}","[  0   2   2 ..., 127   0 127]"
638,shoc-1.1.5-MD-compute_lj_force,default,20,2,4,0,3,0,27525120,128,CPU,15.326464000000001,17.951209,"__kernel void A(__global float4* a, __global float4* b, const int c, __global int* d, const float e, const float f, const float g, const int h) {
  uint i = get_global_id(0);

  float4 j = b[i];
  float4 k = {0.0f, 0.0f, 0.0f, 0.0f};

  int l = 0;
  while (l < c) {
    int m = d[l * h + i];

    float4 n = b[m];

    float o = j.x - n.x;
    float p = j.y - n.y;
    float q = j.z - n.z;
    float r = o * o + p * p + q * q;

    if (r < e) {
      r = 1.0f / r;
      float s = r * r * r;
      float t = r * s * (f * s - g);

      k.x += o * t;
      k.y += p * t;
      k.z += q * t;
    }
    l++;
  }

  a[i] = k;
}
","[129 129 129 ...,   0 127   0]"
639,shoc-1.1.5-MD5Hash-FindKeyWithDigest_Kernel,default,686,6,13,0,12,0,280,256,GPU,203.21370100000001,2.834735,"__kernel void A(unsigned int a, unsigned int b, unsigned int c, unsigned int d, int e, int f, int g, __global int* h, __global unsigned char* i, __global unsigned int* j) {
  int k = (get_group_id(0) * get_local_size(0)) + get_local_id(0);

  int l = k * g;
  unsigned char m[8] = {0, 0, 0, 0, 0, 0, 0, 0};
  B(l, f, g, m);

  for (int n = 0; n < g && l + n < e; ++n) {
    unsigned int o[4];
    A((unsigned int*)m, f, o);
    if (o[0] == a && o[1] == b && o[2] == c && o[3] == d) {
      *h = l + n;
      i[0] = m[0];
      i[1] = m[1];
      i[2] = m[2];
      i[3] = m[3];
      i[4] = m[4];
      i[5] = m[5];
      i[6] = m[6];
      i[7] = m[7];
      j[0] = o[0];
      j[1] = o[1];
      j[2] = o[2];
      j[3] = o[3];
    }
    ++m[0];
  }
}","[129 129 129 ..., 127   0 127]"
640,shoc-1.1.5-Reduction-reduce,default,10,4,8,5,1,0,4195840,256,CPU,2.117275,3.045316,"__kernel void A(__global const float* a, __global float* b, __local float* c, const unsigned int d) {
  const unsigned int e = get_local_id(0);
  unsigned int f = (get_group_id(0) * (get_local_size(0) * 2)) + e;
  const unsigned int g = get_local_size(0) * 2 * get_num_groups(0);
  const unsigned int h = get_local_size(0);

  c[e] = 0;

  while (f < d) {
    c[e] += a[f] + a[f + h];
    f += g;
  }
  barrier(1);

  for (unsigned int i = h / 2; i > 0; i >>= 1) {
    if (e < i) {
      c[e] += c[e + i];
    }
    barrier(1);
  }

  if (e == 0) {
    b[get_group_id(0)] = c[0];
  }
}","[129 129 129 ..., 127   0 127]"
641,shoc-1.1.5-S3D-gr_base,default,167,1,48,0,0,0,57594120,128,CPU,7.021933,13.735407,"__kernel void A(__global const float* a, __global const float* b, __global const float* c, __global float* d, const float e, const float f) {
  const float g = b[get_global_id(0)] * e;
  const float h = a[get_global_id(0)] * f;

  const float i = 0x1.0p-126f;

  float j, k;

  j = 0.0;

  (d[(((1) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((1) - 1) * (8)) + (get_global_id(0))]) * 4.96046521e-1f;
  j += k;
  (d[(((2) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((2) - 1) * (8)) + (get_global_id(0))]) * 9.92093043e-1f;
  j += k;
  (d[(((3) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((3) - 1) * (8)) + (get_global_id(0))]) * 6.25023433e-2f;
  j += k;
  (d[(((4) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((4) - 1) * (8)) + (get_global_id(0))]) * 3.12511716e-2f;
  j += k;
  (d[(((5) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((5) - 1) * (8)) + (get_global_id(0))]) * 5.87980383e-2f;
  j += k;
  (d[(((6) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((6) - 1) * (8)) + (get_global_id(0))]) * 5.55082499e-2f;
  j += k;
  (d[(((7) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((7) - 1) * (8)) + (get_global_id(0))]) * 3.02968146e-2f;
  j += k;
  (d[(((8) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((8) - 1) * (8)) + (get_global_id(0))]) * 2.93990192e-2f;
  j += k;
  (d[(((9) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((9) - 1) * (8)) + (get_global_id(0))]) * 6.65112065e-2f;
  j += k;
  (d[(((10) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((10) - 1) * (8)) + (get_global_id(0))]) * 6.23323639e-2f;
  j += k;
  (d[(((11) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((11) - 1) * (8)) + (get_global_id(0))]) * 3.57008335e-2f;
  j += k;
  (d[(((12) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((12) - 1) * (8)) + (get_global_id(0))]) * 2.27221341e-2f;
  j += k;
  (d[(((13) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((13) - 1) * (8)) + (get_global_id(0))]) * 3.33039255e-2f;
  j += k;
  (d[(((14) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((14) - 1) * (8)) + (get_global_id(0))]) * 3.84050525e-2f;
  j += k;
  (d[(((15) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((15) - 1) * (8)) + (get_global_id(0))]) * 3.56453112e-2f;
  j += k;
  (d[(((16) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((16) - 1) * (8)) + (get_global_id(0))]) * 3.32556033e-2f;
  j += k;
  (d[(((17) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((17) - 1) * (8)) + (get_global_id(0))]) * 2.4372606e-2f;
  j += k;
  (d[(((18) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((18) - 1) * (8)) + (get_global_id(0))]) * 2.37882046e-2f;
  j += k;
  (d[(((19) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((19) - 1) * (8)) + (get_global_id(0))]) * 2.26996304e-2f;
  j += k;
  (d[(((20) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((20) - 1) * (8)) + (get_global_id(0))]) * 2.43467162e-2f;
  j += k;
  (d[(((21) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((21) - 1) * (8)) + (get_global_id(0))]) * 2.37635408e-2f;
  j += k;
  (d[(((22) - 1) * (8)) + (get_global_id(0))]) = k = (c[(((22) - 1) * (8)) + (get_global_id(0))]) * 3.56972032e-2f;
  j += k;

  j = ((h) * (1.0f / ((j * (g)*8.314510e7f))));

  for (unsigned l = 1; l <= 22; l++) {
    (d[(((l)-1) * (8)) + (get_global_id(0))]) = fmax((d[(((l)-1) * (8)) + (get_global_id(0))]), i) * j;
  }
}
","[ 95   1  28 ...,   0 127   0]"
642,shoc-1.1.5-S3D-qssa2_kernel,default,1345,0,361,0,0,0,57594120,128,CPU,8.661719999999999,13.821892000000002,"__kernel void A(__global float* a, __global float* b, __global const float* c) {
  float d = (c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]);
  float e = (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) * d;
  float f = (c[((((((7) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((7) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) * d + (c[((((((7) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) * e;
  float g = (c[((((((2) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((2) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) * d + (c[((((((2) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) * e + (c[((((((2) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) * f;
  float h = (c[((((((1) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((1) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) * d + (c[((((((1) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) * e + (c[((((((1) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) * f + (c[((((((1) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) * g;
  float i = (c[((((((8) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((8) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) * d + (c[((((((8) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) * e;
  float j = (c[((((((6) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((6) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) * e + (c[((((((6) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) * f + (c[((((((6) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) * g;
  float k = (c[((((((9) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((9) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) * d + (c[((((((9) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) * f;
  float l = (c[((((((5) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((5) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) * e;
  float m = (c[((((((10) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((10) * (11)) + 8)) - 1) * (8)) + (get_global_id(0))]) * i;

  (a[(((34) - 1) * (8)) + (get_global_id(0))]) = (a[(((34) - 1) * (8)) + (get_global_id(0))]) * h;
  (a[(((35) - 1) * (8)) + (get_global_id(0))]) = (a[(((35) - 1) * (8)) + (get_global_id(0))]) * h;
  (b[(((35) - 1) * (8)) + (get_global_id(0))]) = (b[(((35) - 1) * (8)) + (get_global_id(0))]) * d;
  (a[(((36) - 1) * (8)) + (get_global_id(0))]) = (a[(((36) - 1) * (8)) + (get_global_id(0))]) * h;
  (b[(((36) - 1) * (8)) + (get_global_id(0))]) = (b[(((36) - 1) * (8)) + (get_global_id(0))]) * g;
  (a[(((37) - 1) * (8)) + (get_global_id(0))]) = (a[(((37) - 1) * (8)) + (get_global_id(0))]) * h;
  (a[(((38) - 1) * (8)) + (get_global_id(0))]) = (a[(((38) - 1) * (8)) + (get_global_id(0))]) * h;
  (b[(((38) - 1) * (8)) + (get_global_id(0))]) = (b[(((38) - 1) * (8)) + (get_global_id(0))]) * d;
  (a[(((39) - 1) * (8)) + (get_global_id(0))]) = (a[(((39) - 1) * (8)) + (get_global_id(0))]) * h;
  (a[(((40) - 1) * (8)) + (get_global_id(0))]) = (a[(((40) - 1) * (8)) + (get_global_id(0))]) * h;
  (b[(((40) - 1) * (8)) + (get_global_id(0))]) = (b[(((40) - 1) * (8)) + (get_global_id(0))]) * d;
  (a[(((41) - 1) * (8)) + (get_global_id(0))]) = (a[(((41) - 1) * (8)) + (get_global_id(0))]) * d;
  (a[(((42) - 1) * (8)) + (get_global_id(0))]) = (a[(((42) - 1) * (8)) + (get_global_id(0))]) * d;
  (a[(((43) - 1) * (8)) + (get_global_id(0))]) = (a[(((43) - 1) * (8)) + (get_global_id(0))]) * d;
  (a[(((44) - 1) * (8)) + (get_global_id(0))]) = (a[(((44) - 1) * (8)) + (get_global_id(0))]) * d;
  (a[(((45) - 1) * (8)) + (get_global_id(0))]) = (a[(((45) - 1) * (8)) + (get_global_id(0))]) * d;
  (a[(((46) - 1) * (8)) + (get_global_id(0))]) = (a[(((46) - 1) * (8)) + (get_global_id(0))]) * d;
  (a[(((47) - 1) * (8)) + (get_global_id(0))]) = (a[(((47) - 1) * (8)) + (get_global_id(0))]) * d;
  (a[(((48) - 1) * (8)) + (get_global_id(0))]) = (a[(((48) - 1) * (8)) + (get_global_id(0))]) * g;
  (a[(((49) - 1) * (8)) + (get_global_id(0))]) = (a[(((49) - 1) * (8)) + (get_global_id(0))]) * g;
  (a[(((50) - 1) * (8)) + (get_global_id(0))]) = (a[(((50) - 1) * (8)) + (get_global_id(0))]) * g;
  (b[(((50) - 1) * (8)) + (get_global_id(0))]) = (b[(((50) - 1) * (8)) + (get_global_id(0))]) * d;
  (a[(((51) - 1) * (8)) + (get_global_id(0))]) = (a[(((51) - 1) * (8)) + (get_global_id(0))]) * g;
  (b[(((51) - 1) * (8)) + (get_global_id(0))]) = (b[(((51) - 1) * (8)) + (get_global_id(0))]) * d;
  (a[(((52) - 1) * (8)) + (get_global_id(0))]) = (a[(((52) - 1) * (8)) + (get_global_id(0))]) * g;
  (a[(((53) - 1) * (8)) + (get_global_id(0))]) = (a[(((53) - 1) * (8)) + (get_global_id(0))]) * g;
  (a[(((54) - 1) * (8)) + (get_global_id(0))]) = (a[(((54) - 1) * (8)) + (get_global_id(0))]) * g;
  (b[(((54) - 1) * (8)) + (get_global_id(0))]) = (b[(((54) - 1) * (8)) + (get_global_id(0))]) * h;
  (a[(((55) - 1) * (8)) + (get_global_id(0))]) = (a[(((55) - 1) * (8)) + (get_global_id(0))]) * g;
  (a[(((56) - 1) * (8)) + (get_global_id(0))]) = (a[(((56) - 1) * (8)) + (get_global_id(0))]) * g;
  (a[(((59) - 1) * (8)) + (get_global_id(0))]) = (a[(((59) - 1) * (8)) + (get_global_id(0))]) * e;
  (b[(((59) - 1) * (8)) + (get_global_id(0))]) = (b[(((59) - 1) * (8)) + (get_global_id(0))]) * g;
  (a[(((60) - 1) * (8)) + (get_global_id(0))]) = (a[(((60) - 1) * (8)) + (get_global_id(0))]) * e;
  (b[(((60) - 1) * (8)) + (get_global_id(0))]) = (b[(((60) - 1) * (8)) + (get_global_id(0))]) * h;
  (a[(((61) - 1) * (8)) + (get_global_id(0))]) = (a[(((61) - 1) * (8)) + (get_global_id(0))]) * e;
  (a[(((62) - 1) * (8)) + (get_global_id(0))]) = (a[(((62) - 1) * (8)) + (get_global_id(0))]) * e;
  (b[(((62) - 1) * (8)) + (get_global_id(0))]) = (b[(((62) - 1) * (8)) + (get_global_id(0))]) * d;
  (a[(((63) - 1) * (8)) + (get_global_id(0))]) = (a[(((63) - 1) * (8)) + (get_global_id(0))]) * e;
  (a[(((64) - 1) * (8)) + (get_global_id(0))]) = (a[(((64) - 1) * (8)) + (get_global_id(0))]) * e;
  (a[(((65) - 1) * (8)) + (get_global_id(0))]) = (a[(((65) - 1) * (8)) + (get_global_id(0))]) * e;
  (a[(((66) - 1) * (8)) + (get_global_id(0))]) = (a[(((66) - 1) * (8)) + (get_global_id(0))]) * e;
  (a[(((67) - 1) * (8)) + (get_global_id(0))]) = (a[(((67) - 1) * (8)) + (get_global_id(0))]) * e;
  (b[(((67) - 1) * (8)) + (get_global_id(0))]) = (b[(((67) - 1) * (8)) + (get_global_id(0))]) * g;
  (a[(((68) - 1) * (8)) + (get_global_id(0))]) = (a[(((68) - 1) * (8)) + (get_global_id(0))]) * e;
  (b[(((68) - 1) * (8)) + (get_global_id(0))]) = (b[(((68) - 1) * (8)) + (get_global_id(0))]) * g;
  (a[(((69) - 1) * (8)) + (get_global_id(0))]) = (a[(((69) - 1) * (8)) + (get_global_id(0))]) * e;
  (b[(((69) - 1) * (8)) + (get_global_id(0))]) = (b[(((69) - 1) * (8)) + (get_global_id(0))]) * g;
  (a[(((70) - 1) * (8)) + (get_global_id(0))]) = (a[(((70) - 1) * (8)) + (get_global_id(0))]) * e;
  (b[(((71) - 1) * (8)) + (get_global_id(0))]) = (b[(((71) - 1) * (8)) + (get_global_id(0))]) * l;
  (b[(((72) - 1) * (8)) + (get_global_id(0))]) = (b[(((72) - 1) * (8)) + (get_global_id(0))]) * d;
  (b[(((73) - 1) * (8)) + (get_global_id(0))]) = (b[(((73) - 1) * (8)) + (get_global_id(0))]) * d;
  (b[(((74) - 1) * (8)) + (get_global_id(0))]) = (b[(((74) - 1) * (8)) + (get_global_id(0))]) * d;
  (b[(((75) - 1) * (8)) + (get_global_id(0))]) = (b[(((75) - 1) * (8)) + (get_global_id(0))]) * d;
  (b[(((76) - 1) * (8)) + (get_global_id(0))]) = (b[(((76) - 1) * (8)) + (get_global_id(0))]) * d;
  (a[(((77) - 1) * (8)) + (get_global_id(0))]) = (a[(((77) - 1) * (8)) + (get_global_id(0))]) * h;
  (b[(((80) - 1) * (8)) + (get_global_id(0))]) = (b[(((80) - 1) * (8)) + (get_global_id(0))]) * g;
  (b[(((81) - 1) * (8)) + (get_global_id(0))]) = (b[(((81) - 1) * (8)) + (get_global_id(0))]) * e;
  (b[(((82) - 1) * (8)) + (get_global_id(0))]) = (b[(((82) - 1) * (8)) + (get_global_id(0))]) * l;
  (b[(((85) - 1) * (8)) + (get_global_id(0))]) = (b[(((85) - 1) * (8)) + (get_global_id(0))]) * l;
  (a[(((87) - 1) * (8)) + (get_global_id(0))]) = (a[(((87) - 1) * (8)) + (get_global_id(0))]) * h;
  (b[(((87) - 1) * (8)) + (get_global_id(0))]) = (b[(((87) - 1) * (8)) + (get_global_id(0))]) * f;
  (a[(((88) - 1) * (8)) + (get_global_id(0))]) = (a[(((88) - 1) * (8)) + (get_global_id(0))]) * d;
  (a[(((89) - 1) * (8)) + (get_global_id(0))]) = (a[(((89) - 1) * (8)) + (get_global_id(0))]) * d;
  (b[(((90) - 1) * (8)) + (get_global_id(0))]) = (b[(((90) - 1) * (8)) + (get_global_id(0))]) * d;
  (a[(((91) - 1) * (8)) + (get_global_id(0))]) = (a[(((91) - 1) * (8)) + (get_global_id(0))]) * g;
  (a[(((92) - 1) * (8)) + (get_global_id(0))]) = (a[(((92) - 1) * (8)) + (get_global_id(0))]) * e;
  (b[(((94) - 1) * (8)) + (get_global_id(0))]) = (b[(((94) - 1) * (8)) + (get_global_id(0))]) * i;
  (a[(((96) - 1) * (8)) + (get_global_id(0))]) = (a[(((96) - 1) * (8)) + (get_global_id(0))]) * l;
  (a[(((97) - 1) * (8)) + (get_global_id(0))]) = (a[(((97) - 1) * (8)) + (get_global_id(0))]) * l;
  (a[(((98) - 1) * (8)) + (get_global_id(0))]) = (a[(((98) - 1) * (8)) + (get_global_id(0))]) * l;
  (b[(((98) - 1) * (8)) + (get_global_id(0))]) = (b[(((98) - 1) * (8)) + (get_global_id(0))]) * e;
  (a[(((99) - 1) * (8)) + (get_global_id(0))]) = (a[(((99) - 1) * (8)) + (get_global_id(0))]) * l;
  (a[(((100) - 1) * (8)) + (get_global_id(0))]) = (a[(((100) - 1) * (8)) + (get_global_id(0))]) * l;
  (a[(((101) - 1) * (8)) + (get_global_id(0))]) = (a[(((101) - 1) * (8)) + (get_global_id(0))]) * l;
  (a[(((105) - 1) * (8)) + (get_global_id(0))]) = (a[(((105) - 1) * (8)) + (get_global_id(0))]) * h;
  (a[(((106) - 1) * (8)) + (get_global_id(0))]) = (a[(((106) - 1) * (8)) + (get_global_id(0))]) * g;
  (a[(((107) - 1) * (8)) + (get_global_id(0))]) = (a[(((107) - 1) * (8)) + (get_global_id(0))]) * e;
  (b[(((108) - 1) * (8)) + (get_global_id(0))]) = (b[(((108) - 1) * (8)) + (get_global_id(0))]) * e;
  (a[(((111) - 1) * (8)) + (get_global_id(0))]) = (a[(((111) - 1) * (8)) + (get_global_id(0))]) * h;
  (a[(((112) - 1) * (8)) + (get_global_id(0))]) = (a[(((112) - 1) * (8)) + (get_global_id(0))]) * g;
  (b[(((112) - 1) * (8)) + (get_global_id(0))]) = (b[(((112) - 1) * (8)) + (get_global_id(0))]) * f;
  (b[(((114) - 1) * (8)) + (get_global_id(0))]) = (b[(((114) - 1) * (8)) + (get_global_id(0))]) * j;
  (a[(((115) - 1) * (8)) + (get_global_id(0))]) = (a[(((115) - 1) * (8)) + (get_global_id(0))]) * f;
  (b[(((117) - 1) * (8)) + (get_global_id(0))]) = (b[(((117) - 1) * (8)) + (get_global_id(0))]) * g;
  (a[(((120) - 1) * (8)) + (get_global_id(0))]) = (a[(((120) - 1) * (8)) + (get_global_id(0))]) * d;
  (b[(((120) - 1) * (8)) + (get_global_id(0))]) = (b[(((120) - 1) * (8)) + (get_global_id(0))]) * f;
  (a[(((122) - 1) * (8)) + (get_global_id(0))]) = (a[(((122) - 1) * (8)) + (get_global_id(0))]) * j;
  (a[(((123) - 1) * (8)) + (get_global_id(0))]) = (a[(((123) - 1) * (8)) + (get_global_id(0))]) * j;
  (b[(((123) - 1) * (8)) + (get_global_id(0))]) = (b[(((123) - 1) * (8)) + (get_global_id(0))]) * g;
  (a[(((124) - 1) * (8)) + (get_global_id(0))]) = (a[(((124) - 1) * (8)) + (get_global_id(0))]) * j;
  (a[(((125) - 1) * (8)) + (get_global_id(0))]) = (a[(((125) - 1) * (8)) + (get_global_id(0))]) * j;
  (b[(((125) - 1) * (8)) + (get_global_id(0))]) = (b[(((125) - 1) * (8)) + (get_global_id(0))]) * g;
  (b[(((126) - 1) * (8)) + (get_global_id(0))]) = (b[(((126) - 1) * (8)) + (get_global_id(0))]) * k;
  (b[(((130) - 1) * (8)) + (get_global_id(0))]) = (b[(((130) - 1) * (8)) + (get_global_id(0))]) * g;
  (a[(((132) - 1) * (8)) + (get_global_id(0))]) = (a[(((132) - 1) * (8)) + (get_global_id(0))]) * f;
  (a[(((133) - 1) * (8)) + (get_global_id(0))]) = (a[(((133) - 1) * (8)) + (get_global_id(0))]) * f;
  (a[(((134) - 1) * (8)) + (get_global_id(0))]) = (a[(((134) - 1) * (8)) + (get_global_id(0))]) * f;
  (b[(((134) - 1) * (8)) + (get_global_id(0))]) = (b[(((134) - 1) * (8)) + (get_global_id(0))]) * j;
  (a[(((135) - 1) * (8)) + (get_global_id(0))]) = (a[(((135) - 1) * (8)) + (get_global_id(0))]) * f;
  (a[(((136) - 1) * (8)) + (get_global_id(0))]) = (a[(((136) - 1) * (8)) + (get_global_id(0))]) * f;
  (a[(((137) - 1) * (8)) + (get_global_id(0))]) = (a[(((137) - 1) * (8)) + (get_global_id(0))]) * f;
  (a[(((138) - 1) * (8)) + (get_global_id(0))]) = (a[(((138) - 1) * (8)) + (get_global_id(0))]) * f;
  (a[(((139) - 1) * (8)) + (get_global_id(0))]) = (a[(((139) - 1) * (8)) + (get_global_id(0))]) * f;
  (b[(((139) - 1) * (8)) + (get_global_id(0))]) = (b[(((139) - 1) * (8)) + (get_global_id(0))]) * k;
  (a[(((140) - 1) * (8)) + (get_global_id(0))]) = (a[(((140) - 1) * (8)) + (get_global_id(0))]) * f;
  (b[(((140) - 1) * (8)) + (get_global_id(0))]) = (b[(((140) - 1) * (8)) + (get_global_id(0))]) * d;
  (a[(((141) - 1) * (8)) + (get_global_id(0))]) = (a[(((141) - 1) * (8)) + (get_global_id(0))]) * f;
  (b[(((141) - 1) * (8)) + (get_global_id(0))]) = (b[(((141) - 1) * (8)) + (get_global_id(0))]) * k;
  (a[(((142) - 1) * (8)) + (get_global_id(0))]) = (a[(((142) - 1) * (8)) + (get_global_id(0))]) * f;
  (a[(((144) - 1) * (8)) + (get_global_id(0))]) = (a[(((144) - 1) * (8)) + (get_global_id(0))]) * f;
  (a[(((145) - 1) * (8)) + (get_global_id(0))]) = (a[(((145) - 1) * (8)) + (get_global_id(0))]) * f;
  (a[(((146) - 1) * (8)) + (get_global_id(0))]) = (a[(((146) - 1) * (8)) + (get_global_id(0))]) * f;
  (a[(((147) - 1) * (8)) + (get_global_id(0))]) = (a[(((147) - 1) * (8)) + (get_global_id(0))]) * k;
  (a[(((148) - 1) * (8)) + (get_global_id(0))]) = (a[(((148) - 1) * (8)) + (get_global_id(0))]) * k;
  (a[(((149) - 1) * (8)) + (get_global_id(0))]) = (a[(((149) - 1) * (8)) + (get_global_id(0))]) * k;
  (b[(((149) - 1) * (8)) + (get_global_id(0))]) = (b[(((149) - 1) * (8)) + (get_global_id(0))]) * d;
  (a[(((150) - 1) * (8)) + (get_global_id(0))]) = (a[(((150) - 1) * (8)) + (get_global_id(0))]) * k;
  (a[(((151) - 1) * (8)) + (get_global_id(0))]) = (a[(((151) - 1) * (8)) + (get_global_id(0))]) * k;
  (a[(((152) - 1) * (8)) + (get_global_id(0))]) = (a[(((152) - 1) * (8)) + (get_global_id(0))]) * k;
  (a[(((153) - 1) * (8)) + (get_global_id(0))]) = (a[(((153) - 1) * (8)) + (get_global_id(0))]) * k;
  (a[(((154) - 1) * (8)) + (get_global_id(0))]) = (a[(((154) - 1) * (8)) + (get_global_id(0))]) * k;
  (b[(((155) - 1) * (8)) + (get_global_id(0))]) = (b[(((155) - 1) * (8)) + (get_global_id(0))]) * j;
  (b[(((156) - 1) * (8)) + (get_global_id(0))]) = (b[(((156) - 1) * (8)) + (get_global_id(0))]) * i;
  (b[(((157) - 1) * (8)) + (get_global_id(0))]) = (b[(((157) - 1) * (8)) + (get_global_id(0))]) * f;
  (b[(((158) - 1) * (8)) + (get_global_id(0))]) = (b[(((158) - 1) * (8)) + (get_global_id(0))]) * f;
  (b[(((159) - 1) * (8)) + (get_global_id(0))]) = (b[(((159) - 1) * (8)) + (get_global_id(0))]) * d;
  (b[(((160) - 1) * (8)) + (get_global_id(0))]) = (b[(((160) - 1) * (8)) + (get_global_id(0))]) * g;
  (b[(((161) - 1) * (8)) + (get_global_id(0))]) = (b[(((161) - 1) * (8)) + (get_global_id(0))]) * f;
  (b[(((162) - 1) * (8)) + (get_global_id(0))]) = (b[(((162) - 1) * (8)) + (get_global_id(0))]) * f;
  (a[(((164) - 1) * (8)) + (get_global_id(0))]) = (a[(((164) - 1) * (8)) + (get_global_id(0))]) * d;
  (b[(((164) - 1) * (8)) + (get_global_id(0))]) = (b[(((164) - 1) * (8)) + (get_global_id(0))]) * i;
  (a[(((165) - 1) * (8)) + (get_global_id(0))]) = (a[(((165) - 1) * (8)) + (get_global_id(0))]) * g;
  (a[(((166) - 1) * (8)) + (get_global_id(0))]) = (a[(((166) - 1) * (8)) + (get_global_id(0))]) * e;
  (b[(((166) - 1) * (8)) + (get_global_id(0))]) = (b[(((166) - 1) * (8)) + (get_global_id(0))]) * j;
  (a[(((167) - 1) * (8)) + (get_global_id(0))]) = (a[(((167) - 1) * (8)) + (get_global_id(0))]) * e;
  (b[(((168) - 1) * (8)) + (get_global_id(0))]) = (b[(((168) - 1) * (8)) + (get_global_id(0))]) * f;
  (b[(((169) - 1) * (8)) + (get_global_id(0))]) = (b[(((169) - 1) * (8)) + (get_global_id(0))]) * m;
  (a[(((170) - 1) * (8)) + (get_global_id(0))]) = (a[(((170) - 1) * (8)) + (get_global_id(0))]) * i;
  (a[(((171) - 1) * (8)) + (get_global_id(0))]) = (a[(((171) - 1) * (8)) + (get_global_id(0))]) * i;
  (a[(((172) - 1) * (8)) + (get_global_id(0))]) = (a[(((172) - 1) * (8)) + (get_global_id(0))]) * i;
  (a[(((173) - 1) * (8)) + (get_global_id(0))]) = (a[(((173) - 1) * (8)) + (get_global_id(0))]) * i;
  (a[(((174) - 1) * (8)) + (get_global_id(0))]) = (a[(((174) - 1) * (8)) + (get_global_id(0))]) * i;
  (a[(((175) - 1) * (8)) + (get_global_id(0))]) = (a[(((175) - 1) * (8)) + (get_global_id(0))]) * i;
  (a[(((176) - 1) * (8)) + (get_global_id(0))]) = (a[(((176) - 1) * (8)) + (get_global_id(0))]) * i;
  (a[(((177) - 1) * (8)) + (get_global_id(0))]) = (a[(((177) - 1) * (8)) + (get_global_id(0))]) * i;
  (a[(((178) - 1) * (8)) + (get_global_id(0))]) = (a[(((178) - 1) * (8)) + (get_global_id(0))]) * i;
  (b[(((180) - 1) * (8)) + (get_global_id(0))]) = (b[(((180) - 1) * (8)) + (get_global_id(0))]) * i;
  (b[(((181) - 1) * (8)) + (get_global_id(0))]) = (b[(((181) - 1) * (8)) + (get_global_id(0))]) * i;
  (b[(((182) - 1) * (8)) + (get_global_id(0))]) = (b[(((182) - 1) * (8)) + (get_global_id(0))]) * i;
  (a[(((183) - 1) * (8)) + (get_global_id(0))]) = (a[(((183) - 1) * (8)) + (get_global_id(0))]) * e;
  (b[(((183) - 1) * (8)) + (get_global_id(0))]) = (b[(((183) - 1) * (8)) + (get_global_id(0))]) * i;
  (b[(((184) - 1) * (8)) + (get_global_id(0))]) = (b[(((184) - 1) * (8)) + (get_global_id(0))]) * i;
  (b[(((186) - 1) * (8)) + (get_global_id(0))]) = (b[(((186) - 1) * (8)) + (get_global_id(0))]) * j;
  (b[(((188) - 1) * (8)) + (get_global_id(0))]) = (b[(((188) - 1) * (8)) + (get_global_id(0))]) * f;
  (a[(((189) - 1) * (8)) + (get_global_id(0))]) = (a[(((189) - 1) * (8)) + (get_global_id(0))]) * d;
  (b[(((190) - 1) * (8)) + (get_global_id(0))]) = (b[(((190) - 1) * (8)) + (get_global_id(0))]) * m;
  (a[(((199) - 1) * (8)) + (get_global_id(0))]) = (a[(((199) - 1) * (8)) + (get_global_id(0))]) * m;
  (b[(((199) - 1) * (8)) + (get_global_id(0))]) = (b[(((199) - 1) * (8)) + (get_global_id(0))]) * i;
  (a[(((200) - 1) * (8)) + (get_global_id(0))]) = (a[(((200) - 1) * (8)) + (get_global_id(0))]) * m;
  (a[(((201) - 1) * (8)) + (get_global_id(0))]) = (a[(((201) - 1) * (8)) + (get_global_id(0))]) * m;
  (b[(((201) - 1) * (8)) + (get_global_id(0))]) = (b[(((201) - 1) * (8)) + (get_global_id(0))]) * i;
  (a[(((202) - 1) * (8)) + (get_global_id(0))]) = (a[(((202) - 1) * (8)) + (get_global_id(0))]) * m;
  (a[(((203) - 1) * (8)) + (get_global_id(0))]) = (a[(((203) - 1) * (8)) + (get_global_id(0))]) * m;
  (a[(((204) - 1) * (8)) + (get_global_id(0))]) = (a[(((204) - 1) * (8)) + (get_global_id(0))]) * m;
  (b[(((204) - 1) * (8)) + (get_global_id(0))]) = (b[(((204) - 1) * (8)) + (get_global_id(0))]) * i;
  (a[(((205) - 1) * (8)) + (get_global_id(0))]) = (a[(((205) - 1) * (8)) + (get_global_id(0))]) * m;
}
","[  7  16  23 ...,   0 127   0]"
643,shoc-1.1.5-S3D-qssa_kernel,default,1660,0,396,0,0,0,57594120,128,CPU,8.745994,13.833279999999998,"__kernel void A(__global float* a, __global float* b, __global float* c) {
  float d;

  (a[(((57) - 1) * (8)) + (get_global_id(0))]) = 0.e0;
  (a[(((58) - 1) * (8)) + (get_global_id(0))]) = 0.e0;
  (a[(((143) - 1) * (8)) + (get_global_id(0))]) = 0.e0;
  (a[(((179) - 1) * (8)) + (get_global_id(0))]) = 0.e0;
  (b[(((194) - 1) * (8)) + (get_global_id(0))]) = 0.e0;
  (a[(((206) - 1) * (8)) + (get_global_id(0))]) = 0.e0;

  d = +(a[(((34) - 1) * (8)) + (get_global_id(0))]) + (a[(((35) - 1) * (8)) + (get_global_id(0))]) + (a[(((36) - 1) * (8)) + (get_global_id(0))]) + (a[(((37) - 1) * (8)) + (get_global_id(0))]) + (a[(((38) - 1) * (8)) + (get_global_id(0))]) + (a[(((39) - 1) * (8)) + (get_global_id(0))]) + (a[(((40) - 1) * (8)) + (get_global_id(0))]) + (a[(((77) - 1) * (8)) + (get_global_id(0))]) + (a[(((87) - 1) * (8)) + (get_global_id(0))]) + (a[(((105) - 1) * (8)) + (get_global_id(0))]) +
      (a[(((111) - 1) * (8)) + (get_global_id(0))]) + (b[(((54) - 1) * (8)) + (get_global_id(0))]) + (b[(((60) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((1) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((34) - 1) * (8)) + (get_global_id(0))]) + (b[(((37) - 1) * (8)) + (get_global_id(0))]) + (b[(((39) - 1) * (8)) + (get_global_id(0))]) + (b[(((57) - 1) * (8)) + (get_global_id(0))]) + (b[(((77) - 1) * (8)) + (get_global_id(0))]) + (b[(((105) - 1) * (8)) + (get_global_id(0))]) + (b[(((111) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));

  (c[((((((1) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((36) - 1) * (8)) + (get_global_id(0))]) + (a[(((54) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((1) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((60) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((1) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((35) - 1) * (8)) + (get_global_id(0))]) + (b[(((38) - 1) * (8)) + (get_global_id(0))]) + (b[(((40) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((1) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((87) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));

  d = +(a[(((48) - 1) * (8)) + (get_global_id(0))]) + (a[(((49) - 1) * (8)) + (get_global_id(0))]) + (a[(((50) - 1) * (8)) + (get_global_id(0))]) + (a[(((51) - 1) * (8)) + (get_global_id(0))]) + (a[(((52) - 1) * (8)) + (get_global_id(0))]) + (a[(((53) - 1) * (8)) + (get_global_id(0))]) + (a[(((54) - 1) * (8)) + (get_global_id(0))]) + (a[(((55) - 1) * (8)) + (get_global_id(0))]) + (a[(((56) - 1) * (8)) + (get_global_id(0))]) + (a[(((91) - 1) * (8)) + (get_global_id(0))]) +
      (a[(((106) - 1) * (8)) + (get_global_id(0))]) + (a[(((112) - 1) * (8)) + (get_global_id(0))]) + (a[(((165) - 1) * (8)) + (get_global_id(0))]) + (b[(((36) - 1) * (8)) + (get_global_id(0))]) + (b[(((59) - 1) * (8)) + (get_global_id(0))]) + (b[(((67) - 1) * (8)) + (get_global_id(0))]) + (b[(((68) - 1) * (8)) + (get_global_id(0))]) + (b[(((69) - 1) * (8)) + (get_global_id(0))]) + (b[(((80) - 1) * (8)) + (get_global_id(0))]) + (b[(((117) - 1) * (8)) + (get_global_id(0))]) +
      (b[(((123) - 1) * (8)) + (get_global_id(0))]) + (b[(((125) - 1) * (8)) + (get_global_id(0))]) + (b[(((130) - 1) * (8)) + (get_global_id(0))]) + (b[(((160) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((2) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((48) - 1) * (8)) + (get_global_id(0))]) + (b[(((49) - 1) * (8)) + (get_global_id(0))]) + (b[(((52) - 1) * (8)) + (get_global_id(0))]) + (b[(((53) - 1) * (8)) + (get_global_id(0))]) + (b[(((55) - 1) * (8)) + (get_global_id(0))]) + (b[(((56) - 1) * (8)) + (get_global_id(0))]) + (b[(((57) - 1) * (8)) + (get_global_id(0))]) + (b[(((58) - 1) * (8)) + (get_global_id(0))]) + (b[(((58) - 1) * (8)) + (get_global_id(0))]) +
                                                                    (a[(((80) - 1) * (8)) + (get_global_id(0))]) + (b[(((91) - 1) * (8)) + (get_global_id(0))]) + (b[(((106) - 1) * (8)) + (get_global_id(0))]) + (a[(((117) - 1) * (8)) + (get_global_id(0))]) + (a[(((130) - 1) * (8)) + (get_global_id(0))]) + (a[(((160) - 1) * (8)) + (get_global_id(0))]) + (b[(((165) - 1) * (8)) + (get_global_id(0))]))) *
                                                                  (1.0f / (d)));

  (c[((((((2) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((36) - 1) * (8)) + (get_global_id(0))]) + (b[(((54) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((2) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((59) - 1) * (8)) + (get_global_id(0))]) + (a[(((67) - 1) * (8)) + (get_global_id(0))]) + (a[(((68) - 1) * (8)) + (get_global_id(0))]) + (a[(((69) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((2) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((50) - 1) * (8)) + (get_global_id(0))]) + (b[(((51) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((2) * (11)) + 6)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((123) - 1) * (8)) + (get_global_id(0))]) + (a[(((125) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((2) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((112) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));

  d = +(a[(((59) - 1) * (8)) + (get_global_id(0))]) + (a[(((60) - 1) * (8)) + (get_global_id(0))]) + (a[(((61) - 1) * (8)) + (get_global_id(0))]) + (a[(((62) - 1) * (8)) + (get_global_id(0))]) + (a[(((63) - 1) * (8)) + (get_global_id(0))]) + (a[(((64) - 1) * (8)) + (get_global_id(0))]) + (a[(((65) - 1) * (8)) + (get_global_id(0))]) + (a[(((66) - 1) * (8)) + (get_global_id(0))]) + (a[(((67) - 1) * (8)) + (get_global_id(0))]) + (a[(((68) - 1) * (8)) + (get_global_id(0))]) +
      (a[(((69) - 1) * (8)) + (get_global_id(0))]) + (a[(((70) - 1) * (8)) + (get_global_id(0))]) + (a[(((92) - 1) * (8)) + (get_global_id(0))]) + (a[(((107) - 1) * (8)) + (get_global_id(0))]) + (a[(((166) - 1) * (8)) + (get_global_id(0))]) + (a[(((167) - 1) * (8)) + (get_global_id(0))]) + (a[(((183) - 1) * (8)) + (get_global_id(0))]) + (b[(((81) - 1) * (8)) + (get_global_id(0))]) + (b[(((98) - 1) * (8)) + (get_global_id(0))]) + (b[(((108) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((61) - 1) * (8)) + (get_global_id(0))]) + (b[(((63) - 1) * (8)) + (get_global_id(0))]) + (b[(((64) - 1) * (8)) + (get_global_id(0))]) + (b[(((65) - 1) * (8)) + (get_global_id(0))]) + (b[(((66) - 1) * (8)) + (get_global_id(0))]) + (b[(((70) - 1) * (8)) + (get_global_id(0))]) + (a[(((81) - 1) * (8)) + (get_global_id(0))]) + (b[(((92) - 1) * (8)) + (get_global_id(0))]) + (b[(((107) - 1) * (8)) + (get_global_id(0))]) +
                                                                    (a[(((108) - 1) * (8)) + (get_global_id(0))]) + (b[(((167) - 1) * (8)) + (get_global_id(0))]))) *
                                                                  (1.0f / (d)));

  (c[((((((3) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((60) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((3) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((59) - 1) * (8)) + (get_global_id(0))]) + (b[(((67) - 1) * (8)) + (get_global_id(0))]) + (b[(((68) - 1) * (8)) + (get_global_id(0))]) + (b[(((69) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((62) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((3) * (11)) + 5)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((98) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((3) * (11)) + 6)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((166) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((3) * (11)) + 8)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((183) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));

  d = +(a[(((41) - 1) * (8)) + (get_global_id(0))]) + (a[(((42) - 1) * (8)) + (get_global_id(0))]) + (a[(((43) - 1) * (8)) + (get_global_id(0))]) + (a[(((44) - 1) * (8)) + (get_global_id(0))]) + (a[(((45) - 1) * (8)) + (get_global_id(0))]) + (a[(((46) - 1) * (8)) + (get_global_id(0))]) + (a[(((47) - 1) * (8)) + (get_global_id(0))]) + (a[(((88) - 1) * (8)) + (get_global_id(0))]) + (a[(((89) - 1) * (8)) + (get_global_id(0))]) + (a[(((120) - 1) * (8)) + (get_global_id(0))]) +
      (a[(((164) - 1) * (8)) + (get_global_id(0))]) + (a[(((189) - 1) * (8)) + (get_global_id(0))]) + (b[(((35) - 1) * (8)) + (get_global_id(0))]) + (b[(((38) - 1) * (8)) + (get_global_id(0))]) + (b[(((40) - 1) * (8)) + (get_global_id(0))]) + (b[(((50) - 1) * (8)) + (get_global_id(0))]) + (b[(((51) - 1) * (8)) + (get_global_id(0))]) + (b[(((62) - 1) * (8)) + (get_global_id(0))]) + (b[(((72) - 1) * (8)) + (get_global_id(0))]) + (b[(((73) - 1) * (8)) + (get_global_id(0))]) +
      (b[(((74) - 1) * (8)) + (get_global_id(0))]) + (b[(((75) - 1) * (8)) + (get_global_id(0))]) + (b[(((76) - 1) * (8)) + (get_global_id(0))]) + (b[(((90) - 1) * (8)) + (get_global_id(0))]) + (b[(((140) - 1) * (8)) + (get_global_id(0))]) + (b[(((149) - 1) * (8)) + (get_global_id(0))]) + (b[(((159) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) =
      (((+(b[(((41) - 1) * (8)) + (get_global_id(0))]) + (b[(((42) - 1) * (8)) + (get_global_id(0))]) + (b[(((43) - 1) * (8)) + (get_global_id(0))]) + (b[(((44) - 1) * (8)) + (get_global_id(0))]) + (b[(((45) - 1) * (8)) + (get_global_id(0))]) + (b[(((46) - 1) * (8)) + (get_global_id(0))]) + (b[(((47) - 1) * (8)) + (get_global_id(0))]) + (a[(((72) - 1) * (8)) + (get_global_id(0))]) + (a[(((73) - 1) * (8)) + (get_global_id(0))]) + (a[(((74) - 1) * (8)) + (get_global_id(0))]) +
         (a[(((75) - 1) * (8)) + (get_global_id(0))]) + (a[(((76) - 1) * (8)) + (get_global_id(0))]) + (b[(((88) - 1) * (8)) + (get_global_id(0))]) + (b[(((89) - 1) * (8)) + (get_global_id(0))]) + (a[(((90) - 1) * (8)) + (get_global_id(0))]) + (b[(((143) - 1) * (8)) + (get_global_id(0))]) + (a[(((159) - 1) * (8)) + (get_global_id(0))]) + (b[(((179) - 1) * (8)) + (get_global_id(0))]) + (b[(((189) - 1) * (8)) + (get_global_id(0))]) + (a[(((194) - 1) * (8)) + (get_global_id(0))]))) *
       (1.0f / (d)));

  (c[((((((4) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((35) - 1) * (8)) + (get_global_id(0))]) + (a[(((38) - 1) * (8)) + (get_global_id(0))]) + (a[(((40) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((4) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((50) - 1) * (8)) + (get_global_id(0))]) + (a[(((51) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((62) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((4) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((120) - 1) * (8)) + (get_global_id(0))]) + (a[(((140) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((4) * (11)) + 8)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((164) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((4) * (11)) + 9)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((149) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));

  d = +(a[(((96) - 1) * (8)) + (get_global_id(0))]) + (a[(((97) - 1) * (8)) + (get_global_id(0))]) + (a[(((98) - 1) * (8)) + (get_global_id(0))]) + (a[(((99) - 1) * (8)) + (get_global_id(0))]) + (a[(((100) - 1) * (8)) + (get_global_id(0))]) + (a[(((101) - 1) * (8)) + (get_global_id(0))]) + (b[(((71) - 1) * (8)) + (get_global_id(0))]) + (b[(((82) - 1) * (8)) + (get_global_id(0))]) + (b[(((85) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((5) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((71) - 1) * (8)) + (get_global_id(0))]) + (a[(((82) - 1) * (8)) + (get_global_id(0))]) + (a[(((85) - 1) * (8)) + (get_global_id(0))]) + (b[(((96) - 1) * (8)) + (get_global_id(0))]) + (b[(((97) - 1) * (8)) + (get_global_id(0))]) + (b[(((99) - 1) * (8)) + (get_global_id(0))]) + (b[(((100) - 1) * (8)) + (get_global_id(0))]) + (b[(((101) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));

  (c[((((((5) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((98) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));

  d = +(a[(((122) - 1) * (8)) + (get_global_id(0))]) + (a[(((123) - 1) * (8)) + (get_global_id(0))]) + (a[(((124) - 1) * (8)) + (get_global_id(0))]) + (a[(((125) - 1) * (8)) + (get_global_id(0))]) + (b[(((114) - 1) * (8)) + (get_global_id(0))]) + (b[(((134) - 1) * (8)) + (get_global_id(0))]) + (b[(((155) - 1) * (8)) + (get_global_id(0))]) + (b[(((166) - 1) * (8)) + (get_global_id(0))]) + (b[(((186) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((6) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((114) - 1) * (8)) + (get_global_id(0))]) + (b[(((122) - 1) * (8)) + (get_global_id(0))]) + (b[(((124) - 1) * (8)) + (get_global_id(0))]) + (a[(((155) - 1) * (8)) + (get_global_id(0))]) + (a[(((186) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((6) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((123) - 1) * (8)) + (get_global_id(0))]) + (b[(((125) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((6) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((166) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((6) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((134) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));

  d = +(a[(((115) - 1) * (8)) + (get_global_id(0))]) + (a[(((132) - 1) * (8)) + (get_global_id(0))]) + (a[(((133) - 1) * (8)) + (get_global_id(0))]) + (a[(((134) - 1) * (8)) + (get_global_id(0))]) + (a[(((135) - 1) * (8)) + (get_global_id(0))]) + (a[(((136) - 1) * (8)) + (get_global_id(0))]) + (a[(((137) - 1) * (8)) + (get_global_id(0))]) + (a[(((138) - 1) * (8)) + (get_global_id(0))]) + (a[(((139) - 1) * (8)) + (get_global_id(0))]) + (a[(((140) - 1) * (8)) + (get_global_id(0))]) +
      (a[(((141) - 1) * (8)) + (get_global_id(0))]) + (a[(((142) - 1) * (8)) + (get_global_id(0))]) + (a[(((144) - 1) * (8)) + (get_global_id(0))]) + (a[(((145) - 1) * (8)) + (get_global_id(0))]) + (a[(((146) - 1) * (8)) + (get_global_id(0))]) + (b[(((87) - 1) * (8)) + (get_global_id(0))]) + (b[(((112) - 1) * (8)) + (get_global_id(0))]) + (b[(((120) - 1) * (8)) + (get_global_id(0))]) + (b[(((157) - 1) * (8)) + (get_global_id(0))]) + (b[(((158) - 1) * (8)) + (get_global_id(0))]) +
      (b[(((161) - 1) * (8)) + (get_global_id(0))]) + (b[(((162) - 1) * (8)) + (get_global_id(0))]) + (b[(((168) - 1) * (8)) + (get_global_id(0))]) + (b[(((188) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((7) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) =
      (((+(b[(((115) - 1) * (8)) + (get_global_id(0))]) + (b[(((132) - 1) * (8)) + (get_global_id(0))]) + (b[(((133) - 1) * (8)) + (get_global_id(0))]) + (b[(((135) - 1) * (8)) + (get_global_id(0))]) + (b[(((136) - 1) * (8)) + (get_global_id(0))]) + (b[(((137) - 1) * (8)) + (get_global_id(0))]) + (b[(((138) - 1) * (8)) + (get_global_id(0))]) + (b[(((142) - 1) * (8)) + (get_global_id(0))]) + (b[(((143) - 1) * (8)) + (get_global_id(0))]) + (b[(((144) - 1) * (8)) + (get_global_id(0))]) +
         (b[(((145) - 1) * (8)) + (get_global_id(0))]) + (b[(((146) - 1) * (8)) + (get_global_id(0))]) + (a[(((157) - 1) * (8)) + (get_global_id(0))]) + (a[(((158) - 1) * (8)) + (get_global_id(0))]) + (a[(((161) - 1) * (8)) + (get_global_id(0))]) + (a[(((162) - 1) * (8)) + (get_global_id(0))]) + (a[(((168) - 1) * (8)) + (get_global_id(0))]) + (a[(((188) - 1) * (8)) + (get_global_id(0))]) + (b[(((206) - 1) * (8)) + (get_global_id(0))]))) *
       (1.0f / (d)));

  (c[((((((7) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((87) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((7) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((112) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((7) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((120) - 1) * (8)) + (get_global_id(0))]) + (b[(((140) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((7) * (11)) + 6)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((134) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((7) * (11)) + 9)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((139) - 1) * (8)) + (get_global_id(0))]) + (b[(((141) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));

  d = +(a[(((170) - 1) * (8)) + (get_global_id(0))]) + (a[(((171) - 1) * (8)) + (get_global_id(0))]) + (a[(((172) - 1) * (8)) + (get_global_id(0))]) + (a[(((173) - 1) * (8)) + (get_global_id(0))]) + (a[(((174) - 1) * (8)) + (get_global_id(0))]) + (a[(((175) - 1) * (8)) + (get_global_id(0))]) + (a[(((176) - 1) * (8)) + (get_global_id(0))]) + (a[(((177) - 1) * (8)) + (get_global_id(0))]) + (a[(((178) - 1) * (8)) + (get_global_id(0))]) + (b[(((94) - 1) * (8)) + (get_global_id(0))]) +
      (b[(((156) - 1) * (8)) + (get_global_id(0))]) + (b[(((164) - 1) * (8)) + (get_global_id(0))]) + (b[(((180) - 1) * (8)) + (get_global_id(0))]) + (b[(((181) - 1) * (8)) + (get_global_id(0))]) + (b[(((182) - 1) * (8)) + (get_global_id(0))]) + (b[(((183) - 1) * (8)) + (get_global_id(0))]) + (b[(((184) - 1) * (8)) + (get_global_id(0))]) + (b[(((199) - 1) * (8)) + (get_global_id(0))]) + (b[(((201) - 1) * (8)) + (get_global_id(0))]) + (b[(((204) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((8) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) =
      (((+(a[(((94) - 1) * (8)) + (get_global_id(0))]) + (a[(((156) - 1) * (8)) + (get_global_id(0))]) + (b[(((170) - 1) * (8)) + (get_global_id(0))]) + (b[(((171) - 1) * (8)) + (get_global_id(0))]) + (b[(((172) - 1) * (8)) + (get_global_id(0))]) + (b[(((173) - 1) * (8)) + (get_global_id(0))]) + (b[(((174) - 1) * (8)) + (get_global_id(0))]) + (b[(((175) - 1) * (8)) + (get_global_id(0))]) + (b[(((176) - 1) * (8)) + (get_global_id(0))]) + (b[(((177) - 1) * (8)) + (get_global_id(0))]) +
         (b[(((178) - 1) * (8)) + (get_global_id(0))]) + (b[(((179) - 1) * (8)) + (get_global_id(0))]) + (a[(((180) - 1) * (8)) + (get_global_id(0))]) + (a[(((181) - 1) * (8)) + (get_global_id(0))]) + (a[(((182) - 1) * (8)) + (get_global_id(0))]) + (a[(((184) - 1) * (8)) + (get_global_id(0))]) + (a[(((194) - 1) * (8)) + (get_global_id(0))]) + (b[(((206) - 1) * (8)) + (get_global_id(0))]))) *
       (1.0f / (d)));

  (c[((((((8) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((183) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((8) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((164) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((8) * (11)) + 10)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((199) - 1) * (8)) + (get_global_id(0))]) + (a[(((201) - 1) * (8)) + (get_global_id(0))]) + (a[(((204) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));

  d = +(a[(((147) - 1) * (8)) + (get_global_id(0))]) + (a[(((148) - 1) * (8)) + (get_global_id(0))]) + (a[(((149) - 1) * (8)) + (get_global_id(0))]) + (a[(((150) - 1) * (8)) + (get_global_id(0))]) + (a[(((151) - 1) * (8)) + (get_global_id(0))]) + (a[(((152) - 1) * (8)) + (get_global_id(0))]) + (a[(((153) - 1) * (8)) + (get_global_id(0))]) + (a[(((154) - 1) * (8)) + (get_global_id(0))]) + (b[(((126) - 1) * (8)) + (get_global_id(0))]) + (b[(((139) - 1) * (8)) + (get_global_id(0))]) +
      (b[(((141) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((9) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((126) - 1) * (8)) + (get_global_id(0))]) + (b[(((147) - 1) * (8)) + (get_global_id(0))]) + (b[(((148) - 1) * (8)) + (get_global_id(0))]) + (b[(((150) - 1) * (8)) + (get_global_id(0))]) + (b[(((151) - 1) * (8)) + (get_global_id(0))]) + (b[(((152) - 1) * (8)) + (get_global_id(0))]) + (b[(((153) - 1) * (8)) + (get_global_id(0))]) + (b[(((154) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));

  (c[((((((9) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((149) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
  (c[((((((9) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((139) - 1) * (8)) + (get_global_id(0))]) + (a[(((141) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));

  d = +(a[(((199) - 1) * (8)) + (get_global_id(0))]) + (a[(((200) - 1) * (8)) + (get_global_id(0))]) + (a[(((201) - 1) * (8)) + (get_global_id(0))]) + (a[(((202) - 1) * (8)) + (get_global_id(0))]) + (a[(((203) - 1) * (8)) + (get_global_id(0))]) + (a[(((204) - 1) * (8)) + (get_global_id(0))]) + (a[(((205) - 1) * (8)) + (get_global_id(0))]) + (b[(((169) - 1) * (8)) + (get_global_id(0))]) + (b[(((190) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((10) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((+(a[(((169) - 1) * (8)) + (get_global_id(0))]) + (a[(((190) - 1) * (8)) + (get_global_id(0))]) + (b[(((200) - 1) * (8)) + (get_global_id(0))]) + (b[(((202) - 1) * (8)) + (get_global_id(0))]) + (b[(((203) - 1) * (8)) + (get_global_id(0))]) + (b[(((205) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));

  (c[((((((10) * (11)) + 8)) - 1) * (8)) + (get_global_id(0))]) = (((+(b[(((199) - 1) * (8)) + (get_global_id(0))]) + (b[(((201) - 1) * (8)) + (get_global_id(0))]) + (b[(((204) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (d)));
}
","[ 23   8   8 ...,   0 127   0]"
644,shoc-1.1.5-S3D-qssab_kernel,default,2206,0,384,0,0,0,57594120,128,CPU,7.514782,13.734796,"__kernel void A(__global float* a, __global float* b, __global float* c) {
  float d;

  (c[((((((8) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((8) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((8) * (11)) + 10)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((10) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]);
  d = 1 - (c[((((((8) * (11)) + 10)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((10) * (11)) + 8)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((8) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((8) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((8) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((8) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((8) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((8) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((3) * (11)) + 5)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((5) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]);
  d = 1 - (c[((((((3) * (11)) + 5)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((5) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 8)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 8)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 6)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 6)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((4) * (11)) + 9)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((9) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((4) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((4) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((4) * (11)) + 9)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((9) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]);
  d = 1 - (c[((((((4) * (11)) + 9)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((9) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 8)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 8)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((7) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((7) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((7) * (11)) + 9)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((9) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((7) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((7) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((7) * (11)) + 9)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((9) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]);
  d = 1 - (c[((((((7) * (11)) + 9)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((9) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((7) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((7) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((7) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((7) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((7) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((7) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((7) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((7) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((7) * (11)) + 6)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((7) * (11)) + 6)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((3) * (11)) + 6)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((6) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((3) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((3) * (11)) + 6)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((6) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((3) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((3) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((3) * (11)) + 6)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((6) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]);
  d = 1 - (c[((((((3) * (11)) + 6)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((6) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 8)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 8)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((7) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((7) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((7) * (11)) + 6)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((6) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((7) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((7) * (11)) + 6)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((6) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((7) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((7) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((7) * (11)) + 6)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((6) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]);
  d = 1 - (c[((((((7) * (11)) + 6)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((6) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((7) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((7) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((7) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((7) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((7) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((7) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((7) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((7) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((7) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((7) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((2) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((2) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((2) * (11)) + 6)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((6) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((2) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((2) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((2) * (11)) + 6)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((6) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((2) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((2) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((2) * (11)) + 6)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((6) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]);
  d = 1 - (c[((((((2) * (11)) + 6)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((6) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((2) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((2) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((2) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((2) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((2) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((2) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((2) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((2) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((2) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((2) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((4) * (11)) + 8)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((8) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((4) * (11)) + 8)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((8) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]);
  d = 1 - (c[((((((4) * (11)) + 8)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((8) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((3) * (11)) + 8)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((8) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((3) * (11)) + 8)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((8) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]);
  d = 1 - (c[((((((3) * (11)) + 8)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((8) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((4) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((1) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((4) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((1) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((4) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((4) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((4) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((1) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((4) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((4) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((4) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((1) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]);
  d = 1 - (c[((((((4) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((1) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((3) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((1) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((3) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((1) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((3) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((3) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((3) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((1) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((3) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((3) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((3) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((1) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]);
  d = 1 - (c[((((((3) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((1) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((7) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((7) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((7) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((1) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((7) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((7) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((7) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((1) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((7) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((7) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((7) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((1) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((7) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((7) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((7) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((1) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]);
  d = 1 - (c[((((((7) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((1) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((7) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((7) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((7) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((7) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((7) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((7) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((7) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((7) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((2) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((2) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((2) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((1) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((2) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((2) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((2) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((1) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((2) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((2) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((2) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((1) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((2) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((2) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((2) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((1) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]);
  d = 1 - (c[((((((2) * (11)) + 1)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((1) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((2) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((2) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((2) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((2) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((2) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((2) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((2) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((2) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((4) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((2) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((4) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((2) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((4) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((4) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((4) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((2) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]);
  d = 1 - (c[((((((4) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((2) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((3) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((2) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((3) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((2) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((3) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((3) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((3) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((2) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]);
  d = 1 - (c[((((((3) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((2) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((7) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((7) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((7) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((2) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((7) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((7) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((7) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((2) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((7) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((7) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((7) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((2) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]);
  d = 1 - (c[((((((7) * (11)) + 2)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((2) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((7) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((7) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((7) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((7) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((7) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((7) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((4) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((7) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((4) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((7) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]);
  d = 1 - (c[((((((4) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((7) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((3) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((7) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((3) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((7) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]);
  d = 1 - (c[((((((3) * (11)) + 7)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((7) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
  (c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) + (c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((3) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]);
  d = 1 - (c[((((((4) * (11)) + 3)) - 1) * (8)) + (get_global_id(0))]) * (c[((((((3) * (11)) + 4)) - 1) * (8)) + (get_global_id(0))]);
  (c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))]) = (((c[((((((4) * (11)) + 0)) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (d)));
}
","[  1  10   1 ...,   0 127   0]"
645,shoc-1.1.5-S3D-ratt10_kernel,default,499,0,22,0,0,0,57594120,128,CPU,6.149749,13.73514,"__kernel void A(__global const float* a, __global float* b, float c) {
  const float d = a[get_global_id(0)] * c;
  const float e = log(d);

  (b[(((1) - 1) * (8)) + (get_global_id(0))]) = exp(4.22794408e1f - 9.e-1f * e + ((8.55468335e2f) * (1.0f / (d))));
  (b[(((2) - 1) * (8)) + (get_global_id(0))]) = exp(6.37931383e1f - 3.42e0f * e - ((4.24463259e4f) * (1.0f / (d))));
  (b[(((3) - 1) * (8)) + (get_global_id(0))]) = exp(6.54619238e1f - 3.74e0f * e - ((9.74227469e2f) * (1.0f / (d))));
  (b[(((4) - 1) * (8)) + (get_global_id(0))]) = exp(5.55621468e1f - 2.57e0f * e - ((7.17083751e2f) * (1.0f / (d))));
  (b[(((5) - 1) * (8)) + (get_global_id(0))]) = exp(6.33329483e1f - 3.14e0f * e - ((6.18956501e2f) * (1.0f / (d))));
  (b[(((6) - 1) * (8)) + (get_global_id(0))]) = exp(7.69748493e1f - 5.11e0f * e - ((3.57032226e3f) * (1.0f / (d))));
  (b[(((7) - 1) * (8)) + (get_global_id(0))]) = exp(6.98660102e1f - 4.8e0f * e - ((2.79788467e3f) * (1.0f / (d))));
  (b[(((8) - 1) * (8)) + (get_global_id(0))]) = exp(7.68923562e1f - 4.76e0f * e - ((1.22784867e3f) * (1.0f / (d))));
  (b[(((9) - 1) * (8)) + (get_global_id(0))]) = exp(1.11312542e2f - 9.588e0f * e - ((2.566405e3f) * (1.0f / (d))));
  (b[(((10) - 1) * (8)) + (get_global_id(0))]) = exp(1.15700234e2f - 9.67e0f * e - ((3.13000767e3f) * (1.0f / (d))));
  (b[(((11) - 1) * (8)) + (get_global_id(0))]) = exp(3.54348644e1f - 6.4e-1f * e - ((2.50098684e4f) * (1.0f / (d))));
  (b[(((12) - 1) * (8)) + (get_global_id(0))]) = exp(6.3111756e1f - 3.4e0f * e - ((1.80145126e4f) * (1.0f / (d))));
  (b[(((13) - 1) * (8)) + (get_global_id(0))]) = exp(9.57409899e1f - 7.64e0f * e - ((5.98827834e3f) * (1.0f / (d))));
  (b[(((14) - 1) * (8)) + (get_global_id(0))]) = exp(6.9414025e1f - 3.86e0f * e - ((1.67067934e3f) * (1.0f / (d))));
  (b[(((15) - 1) * (8)) + (get_global_id(0))]) = exp(1.35001549e2f - 1.194e1f * e - ((4.9163262e3f) * (1.0f / (d))));
  (b[(((16) - 1) * (8)) + (get_global_id(0))]) = exp(9.14494773e1f - 7.297e0f * e - ((2.36511834e3f) * (1.0f / (d))));
  (b[(((17) - 1) * (8)) + (get_global_id(0))]) = exp(1.17075165e2f - 9.31e0f * e - ((5.02512164e4f) * (1.0f / (d))));
  (b[(((18) - 1) * (8)) + (get_global_id(0))]) = exp(9.68908955e1f - 7.62e0f * e - ((3.50742017e3f) * (1.0f / (d))));
  (b[(((19) - 1) * (8)) + (get_global_id(0))]) = exp(9.50941235e1f - 7.08e0f * e - ((3.36400342e3f) * (1.0f / (d))));
  (b[(((20) - 1) * (8)) + (get_global_id(0))]) = exp(1.38440285e2f - 1.2e1f * e - ((3.00309643e3f) * (1.0f / (d))));
  (b[(((21) - 1) * (8)) + (get_global_id(0))]) = exp(8.93324137e1f - 6.66e0f * e - ((3.52251667e3f) * (1.0f / (d))));
}
","[  7  83   7 ...,   0 127   0]"
646,shoc-1.1.5-S3D-ratt2_kernel,default,558,0,139,0,0,0,57594120,128,CPU,6.23194,13.73784,"__kernel void A(__global const float* a, __global const float* b, __global float* c, __global const float* d, const float e) {
  const float f = a[get_global_id(0)] * e;
  const float g = log(f);

  const float h = 1e+20f;

  const float i = 8.31451e7f;
  const float j = 1.01325e6f;
  const float k = ((j) * (1.0f / ((i * (f)))));

  float l;

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((4) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((5) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((1) - 1) * (8)) + (get_global_id(0))]) = (b[(((1) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((3) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((5) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((2) - 1) * (8)) + (get_global_id(0))]) = (b[(((2) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((5) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((6) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((3) - 1) * (8)) + (get_global_id(0))]) = (b[(((3) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((5) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((6) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((4) - 1) * (8)) + (get_global_id(0))]) = (b[(((4) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((2) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((1) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((5) - 1) * (8)) + (get_global_id(0))]) = (b[(((5) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((2) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((1) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((6) - 1) * (8)) + (get_global_id(0))]) = (b[(((6) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((2) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((1) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((7) - 1) * (8)) + (get_global_id(0))]) = (b[(((7) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((2) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((1) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((8) - 1) * (8)) + (get_global_id(0))]) = (b[(((8) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((5) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((6) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((9) - 1) * (8)) + (get_global_id(0))]) = (b[(((9) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((3) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((5) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((10) - 1) * (8)) + (get_global_id(0))]) = (b[(((10) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((3) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((4) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((11) - 1) * (8)) + (get_global_id(0))]) = (b[(((11) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((4) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((7) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((12) - 1) * (8)) + (get_global_id(0))]) = (b[(((12) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((4) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((7) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((13) - 1) * (8)) + (get_global_id(0))]) = (b[(((13) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((4) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((7) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((14) - 1) * (8)) + (get_global_id(0))]) = (b[(((14) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((4) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((7) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((15) - 1) * (8)) + (get_global_id(0))]) = (b[(((15) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((5) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((8) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((16) - 1) * (8)) + (get_global_id(0))]) = (b[(((16) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((7) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((6) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((17) - 1) * (8)) + (get_global_id(0))]) = (b[(((17) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((7) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((4) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((18) - 1) * (8)) + (get_global_id(0))]) = (b[(((18) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((7) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((5) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((19) - 1) * (8)) + (get_global_id(0))]) = (b[(((19) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((7) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((5) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((20) - 1) * (8)) + (get_global_id(0))]) = (b[(((20) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((7) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((6) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((21) - 1) * (8)) + (get_global_id(0))]) = (b[(((21) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((7) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((8) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((22) - 1) * (8)) + (get_global_id(0))]) = (b[(((22) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((7) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((8) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((23) - 1) * (8)) + (get_global_id(0))]) = (b[(((23) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((8) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((7) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((24) - 1) * (8)) + (get_global_id(0))]) = (b[(((24) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((8) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((6) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((25) - 1) * (8)) + (get_global_id(0))]) = (b[(((25) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);
}
","[  1  28   1 ...,   0 127   0]"
647,shoc-1.1.5-S3D-ratt3_kernel,default,576,0,145,0,0,0,57594120,128,CPU,6.309551,13.741414,"__kernel void A(__global const float* a, __global const float* b, __global float* c, __global const float* d, const float e) {
  float f = a[get_global_id(0)] * e;
  float g = log(f);

  const float h = 1e+20f;

  const float i = 8.31451e7f;
  const float j = 1.01325e6f;
  const float k = ((j) * (1.0f / ((i * (f)))));

  float l;

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((8) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((7) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((26) - 1) * (8)) + (get_global_id(0))]) = (b[(((26) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((8) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((6) - 1) * (8)) + (get_global_id(0))]) * (d[(((7) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((27) - 1) * (8)) + (get_global_id(0))]) = (b[(((27) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((8) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((6) - 1) * (8)) + (get_global_id(0))]) * (d[(((7) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((28) - 1) * (8)) + (get_global_id(0))]) = (b[(((28) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((15) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((29) - 1) * (8)) + (get_global_id(0))]) = (b[(((29) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((15) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((30) - 1) * (8)) + (get_global_id(0))]) = (b[(((30) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((17) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((31) - 1) * (8)) + (get_global_id(0))]) = (b[(((31) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((15) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((32) - 1) * (8)) + (get_global_id(0))]) = (b[(((32) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((15) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((33) - 1) * (8)) + (get_global_id(0))]) = (b[(((33) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((9) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((34) - 1) * (8)) + (get_global_id(0))]) = (b[(((34) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((9) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((35) - 1) * (8)) + (get_global_id(0))]) = (b[(((35) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((9) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((10) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((36) - 1) * (8)) + (get_global_id(0))]) = (b[(((36) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((6) - 1) * (8)) + (get_global_id(0))]) * (d[(((9) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((37) - 1) * (8)) + (get_global_id(0))]) = (b[(((37) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((9) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((38) - 1) * (8)) + (get_global_id(0))]) = (b[(((38) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((9) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((25) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((39) - 1) * (8)) + (get_global_id(0))]) = (b[(((39) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((9) - 1) * (8)) + (get_global_id(0))]) * (d[(((15) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((14) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((40) - 1) * (8)) + (get_global_id(0))]) = (b[(((40) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((17) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((41) - 1) * (8)) + (get_global_id(0))]) = (b[(((41) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((42) - 1) * (8)) + (get_global_id(0))]) = (b[(((42) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((43) - 1) * (8)) + (get_global_id(0))]) = (b[(((43) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((15) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((44) - 1) * (8)) + (get_global_id(0))]) = (b[(((44) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((6) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((45) - 1) * (8)) + (get_global_id(0))]) = (b[(((45) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((16) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((46) - 1) * (8)) + (get_global_id(0))]) = (b[(((46) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((47) - 1) * (8)) + (get_global_id(0))]) = (b[(((47) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((10) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((12) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((48) - 1) * (8)) + (get_global_id(0))]) = (b[(((48) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((10) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((49) - 1) * (8)) + (get_global_id(0))]) = (b[(((49) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((10) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((50) - 1) * (8)) + (get_global_id(0))]) = (b[(((50) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);
}
","[  8   1  12 ...,   0 127   0]"
648,shoc-1.1.5-S3D-ratt4_kernel,default,566,0,143,0,0,0,57594120,128,CPU,6.344937,13.741798999999999,"__kernel void A(__global const float* a, __global const float* b, __global float* c, __global const float* d, const float e) {
  float f = a[get_global_id(0)] * e;
  float g = log(f);

  const float h = 1e+20f;

  const float i = 8.31451e7f;
  const float j = 1.01325e6f;
  const float k = ((j) * (1.0f / ((i * (f)))));

  float l;

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((10) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((51) - 1) * (8)) + (get_global_id(0))]) = (b[(((51) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((10) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((15) - 1) * (8)) + (get_global_id(0))]) * k))));
  (c[(((52) - 1) * (8)) + (get_global_id(0))]) = (b[(((52) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((10) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((53) - 1) * (8)) + (get_global_id(0))]) = (b[(((53) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((10) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((6) - 1) * (8)) + (get_global_id(0))]) * (d[(((9) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((54) - 1) * (8)) + (get_global_id(0))]) = (b[(((54) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((10) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((55) - 1) * (8)) + (get_global_id(0))]) = (b[(((55) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((10) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((26) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((56) - 1) * (8)) + (get_global_id(0))]) = (b[(((56) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((9) - 1) * (8)) + (get_global_id(0))]) * (d[(((10) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((19) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((57) - 1) * (8)) + (get_global_id(0))]) = (b[(((57) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((10) - 1) * (8)) + (get_global_id(0))]) * (d[(((10) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((19) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((58) - 1) * (8)) + (get_global_id(0))]) = (b[(((58) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = (((d[(((11) - 1) * (8)) + (get_global_id(0))])) * (1.0f / ((d[(((10) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((59) - 1) * (8)) + (get_global_id(0))]) = (b[(((59) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((11) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((9) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((60) - 1) * (8)) + (get_global_id(0))]) = (b[(((60) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((11) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((61) - 1) * (8)) + (get_global_id(0))]) = (b[(((61) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((11) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((62) - 1) * (8)) + (get_global_id(0))]) = (b[(((62) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((11) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((63) - 1) * (8)) + (get_global_id(0))]) = (b[(((63) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((11) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((64) - 1) * (8)) + (get_global_id(0))]) = (b[(((64) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((11) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))]) * k))));
  (c[(((65) - 1) * (8)) + (get_global_id(0))]) = (b[(((65) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((11) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((6) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((66) - 1) * (8)) + (get_global_id(0))]) = (b[(((66) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = (((d[(((11) - 1) * (8)) + (get_global_id(0))])) * (1.0f / ((d[(((10) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((67) - 1) * (8)) + (get_global_id(0))]) = (b[(((67) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = (((d[(((11) - 1) * (8)) + (get_global_id(0))])) * (1.0f / ((d[(((10) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((68) - 1) * (8)) + (get_global_id(0))]) = (b[(((68) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = (((d[(((11) - 1) * (8)) + (get_global_id(0))])) * (1.0f / ((d[(((10) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((69) - 1) * (8)) + (get_global_id(0))]) = (b[(((69) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((11) - 1) * (8)) + (get_global_id(0))]) * (d[(((15) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((14) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((70) - 1) * (8)) + (get_global_id(0))]) = (b[(((70) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((18) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((71) - 1) * (8)) + (get_global_id(0))]) = (b[(((71) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((72) - 1) * (8)) + (get_global_id(0))]) = (b[(((72) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((73) - 1) * (8)) + (get_global_id(0))]) = (b[(((73) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((6) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((74) - 1) * (8)) + (get_global_id(0))]) = (b[(((74) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((75) - 1) * (8)) + (get_global_id(0))]) = (b[(((75) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);
}
","[  7  22  16 ...,   0 127   0]"
649,shoc-1.1.5-S3D-ratt5_kernel,default,585,0,148,0,0,0,57594120,128,CPU,6.326207,13.743812,"__kernel void A(__global const float* a, __global const float* b, __global float* c, __global const float* d, const float e) {
  const float f = a[get_global_id(0)] * e;
  const float g = log(f);

  const float h = 1e+20f;

  const float i = 8.31451e7f;
  const float j = 1.01325e6f;
  const float k = ((j) * (1.0f / ((i * (f)))));

  float l;

  l = ((((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((8) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((76) - 1) * (8)) + (get_global_id(0))]) = (b[(((76) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((9) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((26) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((77) - 1) * (8)) + (get_global_id(0))]) = (b[(((77) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((13) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((78) - 1) * (8)) + (get_global_id(0))]) = (b[(((78) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((79) - 1) * (8)) + (get_global_id(0))]) = (b[(((79) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((6) - 1) * (8)) + (get_global_id(0))]) * (d[(((10) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((80) - 1) * (8)) + (get_global_id(0))]) = (b[(((80) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((6) - 1) * (8)) + (get_global_id(0))]) * (d[(((11) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((81) - 1) * (8)) + (get_global_id(0))]) = (b[(((81) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((18) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((82) - 1) * (8)) + (get_global_id(0))]) = (b[(((82) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((83) - 1) * (8)) + (get_global_id(0))]) = (b[(((83) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((13) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((84) - 1) * (8)) + (get_global_id(0))]) = (b[(((84) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((18) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((85) - 1) * (8)) + (get_global_id(0))]) = (b[(((85) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((8) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((13) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((86) - 1) * (8)) + (get_global_id(0))]) = (b[(((86) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((9) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((87) - 1) * (8)) + (get_global_id(0))]) = (b[(((87) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((13) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((88) - 1) * (8)) + (get_global_id(0))]) = (b[(((88) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((28) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((89) - 1) * (8)) + (get_global_id(0))]) = (b[(((89) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((13) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((90) - 1) * (8)) + (get_global_id(0))]) = (b[(((90) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((10) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((91) - 1) * (8)) + (get_global_id(0))]) = (b[(((91) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((11) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((92) - 1) * (8)) + (get_global_id(0))]) = (b[(((92) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((24) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((93) - 1) * (8)) + (get_global_id(0))]) = (b[(((93) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((94) - 1) * (8)) + (get_global_id(0))]) = (b[(((94) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((25) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((14) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((95) - 1) * (8)) + (get_global_id(0))]) = (b[(((95) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((18) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((96) - 1) * (8)) + (get_global_id(0))]) = (b[(((96) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((18) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((97) - 1) * (8)) + (get_global_id(0))]) = (b[(((97) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((18) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((6) - 1) * (8)) + (get_global_id(0))]) * (d[(((11) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((98) - 1) * (8)) + (get_global_id(0))]) = (b[(((98) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((18) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((99) - 1) * (8)) + (get_global_id(0))]) = (b[(((99) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((18) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((6) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((100) - 1) * (8)) + (get_global_id(0))]) = (b[(((100) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);
}
","[ 21   8   1 ...,   0 127   0]"
650,shoc-1.1.5-S3D-ratt6_kernel,default,587,0,148,0,0,0,57594120,128,CPU,6.321418,13.743028,"__kernel void A(__global const float* a, __global const float* b, __global float* c, __global const float* d, const float e) {
  const float f = a[get_global_id(0)] * e;
  const float g = log(f);

  const float h = 1e+20f;

  const float i = 8.31451e7f;
  const float j = 1.01325e6f;
  const float k = ((j) * (1.0f / ((i * (f)))));

  float l;

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((18) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((101) - 1) * (8)) + (get_global_id(0))]) = (b[(((101) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((13) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((102) - 1) * (8)) + (get_global_id(0))]) = (b[(((102) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((13) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((103) - 1) * (8)) + (get_global_id(0))]) = (b[(((103) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((13) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((6) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((104) - 1) * (8)) + (get_global_id(0))]) = (b[(((104) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((9) - 1) * (8)) + (get_global_id(0))]) * (d[(((13) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((105) - 1) * (8)) + (get_global_id(0))]) = (b[(((105) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((10) - 1) * (8)) + (get_global_id(0))]) * (d[(((13) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((106) - 1) * (8)) + (get_global_id(0))]) = (b[(((106) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((11) - 1) * (8)) + (get_global_id(0))]) * (d[(((13) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((107) - 1) * (8)) + (get_global_id(0))]) = (b[(((107) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((25) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((11) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((108) - 1) * (8)) + (get_global_id(0))]) = (b[(((108) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((25) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))]) * k))));
  (c[(((109) - 1) * (8)) + (get_global_id(0))]) = (b[(((109) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((25) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))]) * k))));
  (c[(((110) - 1) * (8)) + (get_global_id(0))]) = (b[(((110) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((9) - 1) * (8)) + (get_global_id(0))]) * (d[(((25) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((14) - 1) * (8)) + (get_global_id(0))]) * (d[(((19) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((111) - 1) * (8)) + (get_global_id(0))]) = (b[(((111) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((10) - 1) * (8)) + (get_global_id(0))]) * (d[(((25) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((14) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((112) - 1) * (8)) + (get_global_id(0))]) = (b[(((112) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((25) - 1) * (8)) + (get_global_id(0))]) * (d[(((25) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((14) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))]) * (d[(((19) - 1) * (8)) + (get_global_id(0))]) * k))));
  (c[(((113) - 1) * (8)) + (get_global_id(0))]) = (b[(((113) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = (((d[(((19) - 1) * (8)) + (get_global_id(0))])) * (1.0f / ((d[(((20) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((114) - 1) * (8)) + (get_global_id(0))]) = (b[(((114) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = (((d[(((21) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((19) - 1) * (8)) + (get_global_id(0))]) * k))));
  (c[(((115) - 1) * (8)) + (get_global_id(0))]) = (b[(((115) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((19) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((25) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((116) - 1) * (8)) + (get_global_id(0))]) = (b[(((116) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((19) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((10) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((117) - 1) * (8)) + (get_global_id(0))]) = (b[(((117) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((19) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((26) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((118) - 1) * (8)) + (get_global_id(0))]) = (b[(((118) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((19) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((119) - 1) * (8)) + (get_global_id(0))]) = (b[(((119) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((16) - 1) * (8)) + (get_global_id(0))]) * (d[(((19) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((14) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((120) - 1) * (8)) + (get_global_id(0))]) = (b[(((120) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((19) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((29) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((121) - 1) * (8)) + (get_global_id(0))]) = (b[(((121) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = (((d[(((19) - 1) * (8)) + (get_global_id(0))])) * (1.0f / ((d[(((20) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((122) - 1) * (8)) + (get_global_id(0))]) = (b[(((122) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((20) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((10) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((123) - 1) * (8)) + (get_global_id(0))]) = (b[(((123) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((20) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((26) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((124) - 1) * (8)) + (get_global_id(0))]) = (b[(((124) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((20) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((10) - 1) * (8)) + (get_global_id(0))]) * (d[(((15) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((125) - 1) * (8)) + (get_global_id(0))]) = (b[(((125) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);
}
","[ 23   8   8 ...,   0 127   0]"
651,shoc-1.1.5-S3D-ratt7_kernel,default,579,0,146,0,0,0,57594120,128,CPU,6.301248999999999,13.744202,"__kernel void A(__global const float* a, __global const float* b, __global float* c, __global const float* d, const float e) {
  const float f = a[get_global_id(0)] * e;
  const float g = log(f);

  const float h = 1e+20f;

  const float i = 8.31451e7f;
  const float j = 1.01325e6f;
  const float k = ((j) * (1.0f / ((i * (f)))));

  float l;

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((26) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((27) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((126) - 1) * (8)) + (get_global_id(0))]) = (b[(((126) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((26) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((25) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((127) - 1) * (8)) + (get_global_id(0))]) = (b[(((127) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((26) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((128) - 1) * (8)) + (get_global_id(0))]) = (b[(((128) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((26) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((25) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((129) - 1) * (8)) + (get_global_id(0))]) = (b[(((129) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((26) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((10) - 1) * (8)) + (get_global_id(0))]) * (d[(((15) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((130) - 1) * (8)) + (get_global_id(0))]) = (b[(((130) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((26) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((6) - 1) * (8)) + (get_global_id(0))]) * (d[(((25) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((131) - 1) * (8)) + (get_global_id(0))]) = (b[(((131) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((22) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((132) - 1) * (8)) + (get_global_id(0))]) = (b[(((132) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((19) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((133) - 1) * (8)) + (get_global_id(0))]) = (b[(((133) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((20) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((134) - 1) * (8)) + (get_global_id(0))]) = (b[(((134) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((26) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((135) - 1) * (8)) + (get_global_id(0))]) = (b[(((135) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((136) - 1) * (8)) + (get_global_id(0))]) = (b[(((136) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((6) - 1) * (8)) + (get_global_id(0))]) * (d[(((19) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((137) - 1) * (8)) + (get_global_id(0))]) = (b[(((137) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((19) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((138) - 1) * (8)) + (get_global_id(0))]) = (b[(((138) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((27) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((139) - 1) * (8)) + (get_global_id(0))]) = (b[(((139) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((16) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((140) - 1) * (8)) + (get_global_id(0))]) = (b[(((140) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((27) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((141) - 1) * (8)) + (get_global_id(0))]) = (b[(((141) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((8) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((142) - 1) * (8)) + (get_global_id(0))]) = (b[(((142) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((16) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((14) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((143) - 1) * (8)) + (get_global_id(0))]) = (b[(((143) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((13) - 1) * (8)) + (get_global_id(0))]) * (d[(((19) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((144) - 1) * (8)) + (get_global_id(0))]) = (b[(((144) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((30) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((145) - 1) * (8)) + (get_global_id(0))]) = (b[(((145) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((29) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((146) - 1) * (8)) + (get_global_id(0))]) = (b[(((146) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = (((d[(((27) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))]) * k))));
  (c[(((147) - 1) * (8)) + (get_global_id(0))]) = (b[(((147) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((27) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((28) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((148) - 1) * (8)) + (get_global_id(0))]) = (b[(((148) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((27) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((149) - 1) * (8)) + (get_global_id(0))]) = (b[(((149) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((27) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((26) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((150) - 1) * (8)) + (get_global_id(0))]) = (b[(((150) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);
}
","[ 15   8   8 ...,   0 127   0]"
652,shoc-1.1.5-S3D-ratt8_kernel,default,587,0,148,0,0,0,57594120,128,CPU,6.285722,13.745042000000002,"__kernel void A(__global const float* a, __global const float* b, __global float* c, __global const float* d, const float e) {
  const float f = a[get_global_id(0)] * e;
  const float g = log(f);

  const float h = 1e+20f;

  const float i = 8.31451e7f;
  const float j = 1.01325e6f;
  const float k = ((j) * (1.0f / ((i * (f)))));

  float l;

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((27) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((26) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((151) - 1) * (8)) + (get_global_id(0))]) = (b[(((151) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((27) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((6) - 1) * (8)) + (get_global_id(0))]) * (d[(((26) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((152) - 1) * (8)) + (get_global_id(0))]) = (b[(((152) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((27) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((26) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((153) - 1) * (8)) + (get_global_id(0))]) = (b[(((153) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((27) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((14) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))]) * k))));
  (c[(((154) - 1) * (8)) + (get_global_id(0))]) = (b[(((154) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = (((d[(((22) - 1) * (8)) + (get_global_id(0))])) * (1.0f / (((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((20) - 1) * (8)) + (get_global_id(0))]) * k))));
  (c[(((155) - 1) * (8)) + (get_global_id(0))]) = (b[(((155) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((23) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((156) - 1) * (8)) + (get_global_id(0))]) = (b[(((156) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((157) - 1) * (8)) + (get_global_id(0))]) = (b[(((157) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((158) - 1) * (8)) + (get_global_id(0))]) = (b[(((158) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((16) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((159) - 1) * (8)) + (get_global_id(0))]) = (b[(((159) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((10) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((160) - 1) * (8)) + (get_global_id(0))]) = (b[(((160) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((6) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((161) - 1) * (8)) + (get_global_id(0))]) = (b[(((161) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((162) - 1) * (8)) + (get_global_id(0))]) = (b[(((162) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((28) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((163) - 1) * (8)) + (get_global_id(0))]) = (b[(((163) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((16) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((14) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((164) - 1) * (8)) + (get_global_id(0))]) = (b[(((164) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((10) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((29) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((165) - 1) * (8)) + (get_global_id(0))]) = (b[(((165) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((11) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((13) - 1) * (8)) + (get_global_id(0))]) * (d[(((20) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((166) - 1) * (8)) + (get_global_id(0))]) = (b[(((166) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((11) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((29) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((167) - 1) * (8)) + (get_global_id(0))]) = (b[(((167) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((13) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((168) - 1) * (8)) + (get_global_id(0))]) = (b[(((168) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((31) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((169) - 1) * (8)) + (get_global_id(0))]) = (b[(((169) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((24) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((170) - 1) * (8)) + (get_global_id(0))]) = (b[(((170) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((171) - 1) * (8)) + (get_global_id(0))]) = (b[(((171) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((172) - 1) * (8)) + (get_global_id(0))]) = (b[(((172) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((28) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((173) - 1) * (8)) + (get_global_id(0))]) = (b[(((173) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((174) - 1) * (8)) + (get_global_id(0))]) = (b[(((174) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((24) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((175) - 1) * (8)) + (get_global_id(0))]) = (b[(((175) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);
}
","[  1   9   1 ...,   0 127   0]"
653,shoc-1.1.5-S3D-ratt9_kernel,default,746,0,189,0,0,0,57594120,128,CPU,6.472397,13.752907,"__kernel void A(__global const float* a, __global const float* b, __global float* c, __global const float* d, const float e) {
  const float f = a[get_global_id(0)] * e;
  const float g = log(f);

  const float h = 1e+20f;

  const float i = 8.31451e7f;
  const float j = 1.01325e6f;
  const float k = ((j) * (1.0f / ((i * (f)))));

  float l;

  l = ((((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((8) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((176) - 1) * (8)) + (get_global_id(0))]) = (b[(((176) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))]) * k))));
  (c[(((177) - 1) * (8)) + (get_global_id(0))]) = (b[(((177) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((8) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((24) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((178) - 1) * (8)) + (get_global_id(0))]) = (b[(((178) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((16) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((14) - 1) * (8)) + (get_global_id(0))]) * (d[(((24) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((179) - 1) * (8)) + (get_global_id(0))]) = (b[(((179) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((24) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((180) - 1) * (8)) + (get_global_id(0))]) = (b[(((180) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((24) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((181) - 1) * (8)) + (get_global_id(0))]) = (b[(((181) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((24) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((6) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((182) - 1) * (8)) + (get_global_id(0))]) = (b[(((182) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((11) - 1) * (8)) + (get_global_id(0))]) * (d[(((24) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((183) - 1) * (8)) + (get_global_id(0))]) = (b[(((183) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((24) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((13) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((184) - 1) * (8)) + (get_global_id(0))]) = (b[(((184) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((29) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((30) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((185) - 1) * (8)) + (get_global_id(0))]) = (b[(((185) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((29) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((13) - 1) * (8)) + (get_global_id(0))]) * (d[(((20) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((186) - 1) * (8)) + (get_global_id(0))]) = (b[(((186) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((29) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((30) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((187) - 1) * (8)) + (get_global_id(0))]) = (b[(((187) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((29) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))]) * (d[(((21) - 1) * (8)) + (get_global_id(0))]) * k))));
  (c[(((188) - 1) * (8)) + (get_global_id(0))]) = (b[(((188) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((16) - 1) * (8)) + (get_global_id(0))]) * (d[(((29) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((14) - 1) * (8)) + (get_global_id(0))]) * (d[(((30) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((189) - 1) * (8)) + (get_global_id(0))]) = (b[(((189) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((30) - 1) * (8)) + (get_global_id(0))]) * k)) * (1.0f / ((d[(((31) - 1) * (8)) + (get_global_id(0))]))));
  (c[(((190) - 1) * (8)) + (get_global_id(0))]) = (b[(((190) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((30) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((22) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((191) - 1) * (8)) + (get_global_id(0))]) = (b[(((191) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((30) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((29) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((192) - 1) * (8)) + (get_global_id(0))]) = (b[(((192) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((30) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((26) - 1) * (8)) + (get_global_id(0))]) * k))));
  (c[(((193) - 1) * (8)) + (get_global_id(0))]) = (b[(((193) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((30) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((16) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((194) - 1) * (8)) + (get_global_id(0))]) = (b[(((194) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((30) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((29) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((195) - 1) * (8)) + (get_global_id(0))]) = (b[(((195) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((30) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((6) - 1) * (8)) + (get_global_id(0))]) * (d[(((29) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((196) - 1) * (8)) + (get_global_id(0))]) = (b[(((196) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((30) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((8) - 1) * (8)) + (get_global_id(0))]) * (d[(((29) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((197) - 1) * (8)) + (get_global_id(0))]) = (b[(((197) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((30) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((13) - 1) * (8)) + (get_global_id(0))]) * (d[(((29) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((198) - 1) * (8)) + (get_global_id(0))]) = (b[(((198) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((31) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((199) - 1) * (8)) + (get_global_id(0))]) = (b[(((199) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((2) - 1) * (8)) + (get_global_id(0))]) * (d[(((31) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((1) - 1) * (8)) + (get_global_id(0))]) * (d[(((30) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((200) - 1) * (8)) + (get_global_id(0))]) = (b[(((200) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((3) - 1) * (8)) + (get_global_id(0))]) * (d[(((31) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((17) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((201) - 1) * (8)) + (get_global_id(0))]) = (b[(((201) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((31) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((6) - 1) * (8)) + (get_global_id(0))]) * (d[(((30) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((202) - 1) * (8)) + (get_global_id(0))]) = (b[(((202) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((4) - 1) * (8)) + (get_global_id(0))]) * (d[(((31) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((30) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((203) - 1) * (8)) + (get_global_id(0))]) = (b[(((203) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((7) - 1) * (8)) + (get_global_id(0))]) * (d[(((31) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((5) - 1) * (8)) + (get_global_id(0))]) * (d[(((17) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))]) * k))));
  (c[(((204) - 1) * (8)) + (get_global_id(0))]) = (b[(((204) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((31) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((13) - 1) * (8)) + (get_global_id(0))]) * (d[(((30) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((205) - 1) * (8)) + (get_global_id(0))]) = (b[(((205) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);

  l = ((((d[(((21) - 1) * (8)) + (get_global_id(0))]) * (d[(((23) - 1) * (8)) + (get_global_id(0))]))) * (1.0f / (((d[(((12) - 1) * (8)) + (get_global_id(0))]) * (d[(((29) - 1) * (8)) + (get_global_id(0))])))));
  (c[(((206) - 1) * (8)) + (get_global_id(0))]) = (b[(((206) - 1) * (8)) + (get_global_id(0))]) * fmin(l, h);
}
","[  7  73  51 ...,   0 127   0]"
654,shoc-1.1.5-S3D-ratt_kernel,default,2650,0,207,0,0,0,57594120,128,CPU,8.545337,13.832764000000001,"__kernel void A(__global const float* a, __global float* b, float c) {
  const float d = a[get_global_id(0)] * c;

  const float e = log(d);
  const float f = 1.0e0 / (d);
  const float g = f * f;
  float h;

  (b[(((1) - 1) * (8)) + (get_global_id(0))]) = exp(3.20498617e1f - 7.25286183e3f * f);
  (b[(((2) - 1) * (8)) + (get_global_id(0))]) = exp(1.08197783e1f + 2.67e0f * e - 3.16523284e3f * f);
  (b[(((3) - 1) * (8)) + (get_global_id(0))]) = exp(1.9190789e1f + 1.51e0f * e - 1.72603317e3f * f);
  (b[(((4) - 1) * (8)) + (get_global_id(0))]) = exp(1.0482906e1f + 2.4e0f * e + 1.06178717e3f * f);
  (b[(((5) - 1) * (8)) + (get_global_id(0))]) = 1.e18 * f;
  (b[(((6) - 1) * (8)) + (get_global_id(0))]) = exp(3.90385861e1f - 6.e-1f * e);
  (b[(((7) - 1) * (8)) + (get_global_id(0))]) = exp(4.55408762e1f - 1.25e0f * e);
  (b[(((8) - 1) * (8)) + (get_global_id(0))]) = 5.5e20 * g;
  (b[(((9) - 1) * (8)) + (get_global_id(0))]) = 2.2e22 * g;
  (b[(((10) - 1) * (8)) + (get_global_id(0))]) = 5.e17 * f;
  (b[(((11) - 1) * (8)) + (get_global_id(0))]) = 1.2e17 * f;
  (b[(((12) - 1) * (8)) + (get_global_id(0))]) = exp(4.24761511e1f - 8.6e-1f * e);
  (b[(((13) - 1) * (8)) + (get_global_id(0))]) = exp(4.71503141e1f - 1.72e0f * e);
  (b[(((14) - 1) * (8)) + (get_global_id(0))]) = exp(4.42511034e1f - 7.6e-1f * e);
  (b[(((15) - 1) * (8)) + (get_global_id(0))]) = exp(4.47046282e1f - 1.24e0f * e);
  (b[(((16) - 1) * (8)) + (get_global_id(0))]) = exp(3.19350862e1f - 3.7e-1f * e);
  (b[(((17) - 1) * (8)) + (get_global_id(0))]) = exp(2.90097872e1f - 3.37658384e2f * f);
  (b[(((18) - 1) * (8)) + (get_global_id(0))]) = exp(3.04404238e1f - 4.12637667e2f * f);
  (b[(((19) - 1) * (8)) + (get_global_id(0))]) = exp(3.18908801e1f - 1.50965e2f * f);
  (b[(((20) - 1) * (8)) + (get_global_id(0))]) = 2.e13;
  (b[(((21) - 1) * (8)) + (get_global_id(0))]) = exp(3.14683206e1f + 2.51608334e2f * f);
  (b[(((22) - 1) * (8)) + (get_global_id(0))]) = exp(2.55908003e1f + 8.20243168e2f * f);
  (b[(((23) - 1) * (8)) + (get_global_id(0))]) = exp(3.36712758e1f - 6.03860001e3f * f);
  (b[(((24) - 1) * (8)) + (get_global_id(0))]) = exp(1.6308716e1f + 2.e0f * e - 2.61672667e3f * f);
  (b[(((25) - 1) * (8)) + (get_global_id(0))]) = exp(2.99336062e1f - 1.81158e3f * f);
  (b[(((26) - 1) * (8)) + (get_global_id(0))]) = exp(1.60803938e1f + 2.e0f * e - 2.01286667e3f * f);
  (b[(((27) - 1) * (8)) + (get_global_id(0))]) = exp(2.81906369e1f - 1.61029334e2f * f);
  (b[(((28) - 1) * (8)) + (get_global_id(0))]) = exp(3.39940492e1f - 4.81075134e3f * f);
  (b[(((29) - 1) * (8)) + (get_global_id(0))]) = exp(3.40312786e1f - 1.50965e3f * f);
  (b[(((30) - 1) * (8)) + (get_global_id(0))]) = exp(1.76783433e1f + 1.228e0f * e - 3.52251667e1f * f);
  (b[(((31) - 1) * (8)) + (get_global_id(0))]) = exp(1.75767107e1f + 1.5e0f * e - 4.00560467e4f * f);
  (b[(((32) - 1) * (8)) + (get_global_id(0))]) = exp(2.85473118e1f - 2.40537567e4f * f);
  (b[(((33) - 1) * (8)) + (get_global_id(0))]) = exp(3.26416564e1f - 1.18759134e4f * f);
  (b[(((34) - 1) * (8)) + (get_global_id(0))]) = 5.7e13;
  (b[(((35) - 1) * (8)) + (get_global_id(0))]) = 3.e13;
  (b[(((36) - 1) * (8)) + (get_global_id(0))]) = exp(1.85223344e1f + 1.79e0f * e - 8.40371835e2f * f);
  (b[(((37) - 1) * (8)) + (get_global_id(0))]) = exp(2.93732401e1f + 3.79928584e2f * f);
  (b[(((38) - 1) * (8)) + (get_global_id(0))]) = 3.3e13;
  (b[(((39) - 1) * (8)) + (get_global_id(0))]) = 5.e13;
  (b[(((40) - 1) * (8)) + (get_global_id(0))]) = exp(2.88547965e1f - 3.47219501e2f * f);
  (b[(((41) - 1) * (8)) + (get_global_id(0))]) = exp(2.77171988e1f + 4.8e-1f * e + 1.30836334e2f * f);
  (b[(((42) - 1) * (8)) + (get_global_id(0))]) = 7.34e13;
  (b[(((43) - 1) * (8)) + (get_global_id(0))]) = 3.e13;
  (b[(((44) - 1) * (8)) + (get_global_id(0))]) = 3.e13;
  (b[(((45) - 1) * (8)) + (get_global_id(0))]) = 5.e13;
  (b[(((46) - 1) * (8)) + (get_global_id(0))]) = exp(3.9769885e1f - 1.e0f * e - 8.55468335e3f * f);
  (b[(((47) - 1) * (8)) + (get_global_id(0))]) = exp(2.96591694e1f - 2.01286667e2f * f);
  (b[(((48) - 1) * (8)) + (get_global_id(0))]) = exp(3.77576522e1f - 8.e-1f * e);
  (b[(((49) - 1) * (8)) + (get_global_id(0))]) = exp(1.31223634e1f + 2.e0f * e - 3.63825651e3f * f);
  (b[(((50) - 1) * (8)) + (get_global_id(0))]) = 8.e13;
  h = exp(-7.54825001e2f * f);
  (b[(((51) - 1) * (8)) + (get_global_id(0))]) = 1.056e13 * h;
  (b[(((52) - 1) * (8)) + (get_global_id(0))]) = 2.64e12 * h;
  (b[(((53) - 1) * (8)) + (get_global_id(0))]) = 2.e13;
  (b[(((54) - 1) * (8)) + (get_global_id(0))]) = exp(1.62403133e1f + 2.e0f * e - 1.50965e3f * f);
  (b[(((55) - 1) * (8)) + (get_global_id(0))]) = 2.e13;
  (b[(((56) - 1) * (8)) + (get_global_id(0))]) = exp(2.74203001e1f + 5.e-1f * e - 2.26950717e3f * f);
  (b[(((57) - 1) * (8)) + (get_global_id(0))]) = 4.e13;
  (b[(((58) - 1) * (8)) + (get_global_id(0))]) = 3.2e13;
  (b[(((59) - 1) * (8)) + (get_global_id(0))]) = exp(3.03390713e1f - 3.01930001e2f * f);
  (b[(((60) - 1) * (8)) + (get_global_id(0))]) = 3.e13;
  (b[(((61) - 1) * (8)) + (get_global_id(0))]) = 1.5e13;
  (b[(((62) - 1) * (8)) + (get_global_id(0))]) = 1.5e13;
  (b[(((63) - 1) * (8)) + (get_global_id(0))]) = 3.e13;
  (b[(((64) - 1) * (8)) + (get_global_id(0))]) = 7.e13;
  (b[(((65) - 1) * (8)) + (get_global_id(0))]) = 2.8e13;
  (b[(((66) - 1) * (8)) + (get_global_id(0))]) = 1.2e13;
  (b[(((67) - 1) * (8)) + (get_global_id(0))]) = 3.e13;
  (b[(((68) - 1) * (8)) + (get_global_id(0))]) = 9.e12;
  (b[(((69) - 1) * (8)) + (get_global_id(0))]) = 7.e12;
  (b[(((70) - 1) * (8)) + (get_global_id(0))]) = 1.4e13;
  (b[(((71) - 1) * (8)) + (get_global_id(0))]) = exp(2.7014835e1f + 4.54e-1f * e - 1.30836334e3f * f);
  (b[(((72) - 1) * (8)) + (get_global_id(0))]) = exp(2.38587601e1f + 1.05e0f * e - 1.64803459e3f * f);
  (b[(((73) - 1) * (8)) + (get_global_id(0))]) = exp(3.12945828e1f - 1.781387e3f * f);
  (b[(((74) - 1) * (8)) + (get_global_id(0))]) = exp(2.19558261e1f + 1.18e0f * e + 2.2493785e2f * f);
  (b[(((75) - 1) * (8)) + (get_global_id(0))]) = exp(3.22361913e1f - 2.01286667e4f * f);
  h = exp(-4.02573334e3f * f);
  (b[(((76) - 1) * (8)) + (get_global_id(0))]) = 1.e12 * h;
  (b[(((127) - 1) * (8)) + (get_global_id(0))]) = 5.e13 * h;
  (b[(((129) - 1) * (8)) + (get_global_id(0))]) = 1.e13 * h;
  (b[(((77) - 1) * (8)) + (get_global_id(0))]) = exp(3.21806786e1f + 2.59156584e2f * f);
  (b[(((78) - 1) * (8)) + (get_global_id(0))]) = exp(3.70803784e1f - 6.3e-1f * e - 1.92731984e2f * f);
  (b[(((79) - 1) * (8)) + (get_global_id(0))]) = 8.43e13;
  (b[(((80) - 1) * (8)) + (get_global_id(0))]) = exp(1.78408622e1f + 1.6e0f * e - 2.72743434e3f * f);
  (b[(((81) - 1) * (8)) + (get_global_id(0))]) = 2.501e13;
  (b[(((82) - 1) * (8)) + (get_global_id(0))]) = exp(3.10595094e1f - 1.449264e4f * f);
  (b[(((83) - 1) * (8)) + (get_global_id(0))]) = exp(2.43067848e1f - 4.49875701e3f * f);
  (b[(((84) - 1) * (8)) + (get_global_id(0))]) = 1.e12;
  (b[(((85) - 1) * (8)) + (get_global_id(0))]) = 1.34e13;
  (b[(((86) - 1) * (8)) + (get_global_id(0))]) = exp(1.01064284e1f + 2.47e0f * e - 2.60666234e3f * f);
  (b[(((87) - 1) * (8)) + (get_global_id(0))]) = 3.e13;
  (b[(((88) - 1) * (8)) + (get_global_id(0))]) = 8.48e12;
  (b[(((89) - 1) * (8)) + (get_global_id(0))]) = 1.8e13;
  (b[(((90) - 1) * (8)) + (get_global_id(0))]) = exp(8.10772006e0f + 2.81e0f * e - 2.94884967e3f * f);
  (b[(((91) - 1) * (8)) + (get_global_id(0))]) = 4.e13;
  h = exp(2.86833501e2f * f);
  (b[(((92) - 1) * (8)) + (get_global_id(0))]) = 1.2e13 * h;
  (b[(((107) - 1) * (8)) + (get_global_id(0))]) = 1.6e13 * h;
  (b[(((93) - 1) * (8)) + (get_global_id(0))]) = exp(3.75927776e1f - 9.7e-1f * e - 3.11994334e2f * f);
  (b[(((94) - 1) * (8)) + (get_global_id(0))]) = exp(2.9238457e1f + 1.e-1f * e - 5.33409668e3f * f);
  (b[(((95) - 1) * (8)) + (get_global_id(0))]) = 5.e13;
  (b[(((96) - 1) * (8)) + (get_global_id(0))]) = 2.e13;
  (b[(((97) - 1) * (8)) + (get_global_id(0))]) = 3.2e13;
  (b[(((98) - 1) * (8)) + (get_global_id(0))]) = 1.6e13;
  (b[(((99) - 1) * (8)) + (get_global_id(0))]) = 1.e13;
  (b[(((100) - 1) * (8)) + (get_global_id(0))]) = 5.e12;
  (b[(((101) - 1) * (8)) + (get_global_id(0))]) = exp(-2.84796532e1f + 7.6e0f * e + 1.77635484e3f * f);
  (b[(((102) - 1) * (8)) + (get_global_id(0))]) = exp(2.03077504e1f + 1.62e0f * e - 5.45486868e3f * f);
  (b[(((103) - 1) * (8)) + (get_global_id(0))]) = exp(2.07430685e1f + 1.5e0f * e - 4.32766334e3f * f);
  (b[(((104) - 1) * (8)) + (get_global_id(0))]) = exp(1.84206807e1f + 1.6e0f * e - 1.570036e3f * f);
  (b[(((105) - 1) * (8)) + (get_global_id(0))]) = 6.e13;
  (b[(((106) - 1) * (8)) + (get_global_id(0))]) = exp(1.47156719e1f + 2.e0f * e - 4.16160184e3f * f);
  (b[(((108) - 1) * (8)) + (get_global_id(0))]) = 1.e14;
  (b[(((109) - 1) * (8)) + (get_global_id(0))]) = 1.e14;
  (b[(((110) - 1) * (8)) + (get_global_id(0))]) = exp(2.81010247e1f - 4.29747034e2f * f);
  (b[(((111) - 1) * (8)) + (get_global_id(0))]) = 5.e13;
  (b[(((112) - 1) * (8)) + (get_global_id(0))]) = 3.e13;
  (b[(((113) - 1) * (8)) + (get_global_id(0))]) = 1.e13;
  (b[(((114) - 1) * (8)) + (get_global_id(0))]) = exp(3.43156328e1f - 5.2e-1f * e - 2.55382459e4f * f);
  (b[(((115) - 1) * (8)) + (get_global_id(0))]) = exp(1.97713479e1f + 1.62e0f * e - 1.86432818e4f * f);
  h = exp(2.e0f * e - 9.56111669e2f * f);
  (b[(((116) - 1) * (8)) + (get_global_id(0))]) = 1.632e7 * h;
  (b[(((117) - 1) * (8)) + (get_global_id(0))]) = 4.08e6 * h;
  (b[(((118) - 1) * (8)) + (get_global_id(0))]) = exp(-8.4310155e0f + 4.5e0f * e + 5.03216668e2f * f);
  (b[(((119) - 1) * (8)) + (get_global_id(0))]) = exp(-7.6354939e0f + 4.e0f * e + 1.00643334e3f * f);
  (b[(((120) - 1) * (8)) + (get_global_id(0))]) = exp(1.61180957e1f + 2.e0f * e - 3.01930001e3f * f);
  (b[(((121) - 1) * (8)) + (get_global_id(0))]) = exp(1.27430637e2f - 1.182e1f * e - 1.79799315e4f * f);
  (b[(((122) - 1) * (8)) + (get_global_id(0))]) = 1.e14;
  (b[(((123) - 1) * (8)) + (get_global_id(0))]) = 1.e14;
  (b[(((124) - 1) * (8)) + (get_global_id(0))]) = 2.e13;
  (b[(((125) - 1) * (8)) + (get_global_id(0))]) = 1.e13;
  (b[(((126) - 1) * (8)) + (get_global_id(0))]) = exp(3.34301138e1f - 6.e-2f * e - 4.27734167e3f * f);
  (b[(((128) - 1) * (8)) + (get_global_id(0))]) = exp(2.11287309e1f + 1.43e0f * e - 1.35365284e3f * f);
  (b[(((130) - 1) * (8)) + (get_global_id(0))]) = exp(2.81906369e1f - 6.79342501e2f * f);
  h = exp(-1.00643334e3f * f);
  (b[(((131) - 1) * (8)) + (get_global_id(0))]) = 7.5e12 * h;
  (b[(((152) - 1) * (8)) + (get_global_id(0))]) = 1.e13 * h;
  (b[(((186) - 1) * (8)) + (get_global_id(0))]) = 2.e13 * h;
  (b[(((132) - 1) * (8)) + (get_global_id(0))]) = exp(2.94360258e1f + 2.7e-1f * e - 1.40900667e2f * f);
  (b[(((133) - 1) * (8)) + (get_global_id(0))]) = 3.e13;
  (b[(((134) - 1) * (8)) + (get_global_id(0))]) = 6.e13;
  (b[(((135) - 1) * (8)) + (get_global_id(0))]) = 4.8e13;
  (b[(((136) - 1) * (8)) + (get_global_id(0))]) = 4.8e13;
  (b[(((137) - 1) * (8)) + (get_global_id(0))]) = 3.011e13;
  (b[(((138) - 1) * (8)) + (get_global_id(0))]) = exp(1.41081802e1f + 1.61e0f * e + 1.9293327e2f * f);
  (b[(((139) - 1) * (8)) + (get_global_id(0))]) = exp(2.64270483e1f + 2.9e-1f * e - 5.53538334e0f * f);
  (b[(((140) - 1) * (8)) + (get_global_id(0))]) = exp(3.83674178e1f - 1.39e0f * e - 5.08248834e2f * f);
  (b[(((141) - 1) * (8)) + (get_global_id(0))]) = 1.e13;
  (b[(((142) - 1) * (8)) + (get_global_id(0))]) = exp(2.32164713e1f + 2.99917134e2f * f);
  (b[(((143) - 1) * (8)) + (get_global_id(0))]) = 9.033e13;
  (b[(((144) - 1) * (8)) + (get_global_id(0))]) = 3.92e11;
  (b[(((145) - 1) * (8)) + (get_global_id(0))]) = 2.5e13;
  (b[(((146) - 1) * (8)) + (get_global_id(0))]) = exp(5.56675073e1f - 2.83e0f * e - 9.36888792e3f * f);
  (b[(((147) - 1) * (8)) + (get_global_id(0))]) = exp(9.64601125e1f - 9.147e0f * e - 2.36008617e4f * f);
  (b[(((148) - 1) * (8)) + (get_global_id(0))]) = 1.e14;
  (b[(((149) - 1) * (8)) + (get_global_id(0))]) = 9.e13;
  h = exp(-2.01286667e3f * f);
  (b[(((150) - 1) * (8)) + (get_global_id(0))]) = 2.e13 * h;
  (b[(((151) - 1) * (8)) + (get_global_id(0))]) = 2.e13 * h;
  (b[(((153) - 1) * (8)) + (get_global_id(0))]) = 1.4e11;
  (b[(((154) - 1) * (8)) + (get_global_id(0))]) = 1.8e10;
  (b[(((155) - 1) * (8)) + (get_global_id(0))]) = exp(2.97104627e1f + 4.4e-1f * e - 4.46705436e4f * f);
  (b[(((156) - 1) * (8)) + (get_global_id(0))]) = exp(2.77079822e1f + 4.54e-1f * e - 9.15854335e2f * f);
  (b[(((157) - 1) * (8)) + (get_global_id(0))]) = exp(1.77414365e1f + 1.93e0f * e - 6.51665585e3f * f);
  (b[(((158) - 1) * (8)) + (get_global_id(0))]) = exp(1.65302053e1f + 1.91e0f * e - 1.88203034e3f * f);
  h = exp(1.83e0f * e - 1.10707667e2f * f);
  (b[(((159) - 1) * (8)) + (get_global_id(0))]) = 1.92e7 * h;
  (b[(((160) - 1) * (8)) + (get_global_id(0))]) = 3.84e5 * h;
  (b[(((161) - 1) * (8)) + (get_global_id(0))]) = exp(1.50964444e1f + 2.e0f * e - 1.25804167e3f * f);
  (b[(((162) - 1) * (8)) + (get_global_id(0))]) = exp(3.13734413e1f - 3.05955734e4f * f);
  (b[(((163) - 1) * (8)) + (get_global_id(0))]) = exp(2.83241683e1f - 7.04503335e3f * f);
  (b[(((164) - 1) * (8)) + (get_global_id(0))]) = exp(1.61180957e1f + 2.e0f * e - 4.02573334e3f * f);
  (b[(((165) - 1) * (8)) + (get_global_id(0))]) = exp(3.06267534e1f - 3.01930001e3f * f);
  (b[(((166) - 1) * (8)) + (get_global_id(0))]) = 5.e13;
  (b[(((167) - 1) * (8)) + (get_global_id(0))]) = 5.e13;
  (b[(((168) - 1) * (8)) + (get_global_id(0))]) = exp(1.23327053e1f + 2.e0f * e - 4.62959334e3f * f);
  (b[(((169) - 1) * (8)) + (get_global_id(0))]) = exp(2.65223585e1f - 3.87476834e3f * f);
  (b[(((170) - 1) * (8)) + (get_global_id(0))]) = exp(4.07945264e1f - 9.9e-1f * e - 7.95082335e2f * f);
  (b[(((171) - 1) * (8)) + (get_global_id(0))]) = 2.e12;
  (b[(((172) - 1) * (8)) + (get_global_id(0))]) = 1.604e13;
  (b[(((173) - 1) * (8)) + (get_global_id(0))]) = 8.02e13;
  (b[(((174) - 1) * (8)) + (get_global_id(0))]) = 2.e10;
  (b[(((175) - 1) * (8)) + (get_global_id(0))]) = 3.e11;
  (b[(((176) - 1) * (8)) + (get_global_id(0))]) = 3.e11;
  (b[(((177) - 1) * (8)) + (get_global_id(0))]) = 2.4e13;
  (b[(((178) - 1) * (8)) + (get_global_id(0))]) = exp(2.28865889e1f - 4.90133034e2f * f);
  (b[(((179) - 1) * (8)) + (get_global_id(0))]) = 1.2e14;
  (b[(((180) - 1) * (8)) + (get_global_id(0))]) = exp(1.85604427e1f + 1.9e0f * e - 3.78922151e3f * f);
  (b[(((181) - 1) * (8)) + (get_global_id(0))]) = exp(1.83130955e1f + 1.92e0f * e - 2.86330284e3f * f);
  (b[(((182) - 1) * (8)) + (get_global_id(0))]) = exp(1.50796373e1f + 2.12e0f * e - 4.37798501e2f * f);
  (b[(((183) - 1) * (8)) + (get_global_id(0))]) = exp(3.13199006e1f + 2.76769167e2f * f);
  (b[(((184) - 1) * (8)) + (get_global_id(0))]) = exp(1.56303353e1f + 1.74e0f * e - 5.25861418e3f * f);
  (b[(((185) - 1) * (8)) + (get_global_id(0))]) = 2.e14;
  (b[(((187) - 1) * (8)) + (get_global_id(0))]) = 2.66e12;
  (b[(((188) - 1) * (8)) + (get_global_id(0))]) = 6.6e12;
  (b[(((189) - 1) * (8)) + (get_global_id(0))]) = 6.e13;
  (b[(((190) - 1) * (8)) + (get_global_id(0))]) = exp(3.02187852e1f - 1.64083859e3f * f);
  (b[(((191) - 1) * (8)) + (get_global_id(0))]) = exp(5.11268757e1f - 2.39e0f * e - 5.62596234e3f * f);
  (b[(((192) - 1) * (8)) + (get_global_id(0))]) = exp(1.20435537e1f + 2.5e0f * e - 1.2530095e3f * f);
  (b[(((193) - 1) * (8)) + (get_global_id(0))]) = exp(1.86030023e1f + 1.65e0f * e - 1.6455185e2f * f);
  (b[(((194) - 1) * (8)) + (get_global_id(0))]) = exp(1.73708586e1f + 1.65e0f * e + 4.89126601e2f * f);
  (b[(((195) - 1) * (8)) + (get_global_id(0))]) = exp(2.59162227e1f + 7.e-1f * e - 2.95891401e3f * f);
  (b[(((196) - 1) * (8)) + (get_global_id(0))]) = exp(1.49469127e1f + 2.e0f * e + 1.49958567e2f * f);
  (b[(((197) - 1) * (8)) + (get_global_id(0))]) = exp(9.16951838e0f + 2.6e0f * e - 6.99974385e3f * f);
  (b[(((198) - 1) * (8)) + (get_global_id(0))]) = exp(7.8845736e-1f + 3.5e0f * e - 2.85575459e3f * f);
  (b[(((199) - 1) * (8)) + (get_global_id(0))]) = exp(5.65703751e1f - 2.92e0f * e - 6.29272443e3f * f);
  (b[(((200) - 1) * (8)) + (get_global_id(0))]) = 1.8e12;
  (b[(((201) - 1) * (8)) + (get_global_id(0))]) = 9.6e13;
  (b[(((202) - 1) * (8)) + (get_global_id(0))]) = 2.4e13;
  (b[(((203) - 1) * (8)) + (get_global_id(0))]) = 9.e10;
  (b[(((204) - 1) * (8)) + (get_global_id(0))]) = 2.4e13;
  (b[(((205) - 1) * (8)) + (get_global_id(0))]) = 1.1e13;
  (b[(((206) - 1) * (8)) + (get_global_id(0))]) = exp(7.50436995e1f - 5.22e0f * e - 9.93701954e3f * f);
}
","[ 13  20  76 ...,   0 127   0]"
655,shoc-1.1.5-S3D-ratx2_kernel,default,2294,0,669,0,0,0,57594120,128,GPU,14.384526999999999,13.85286,"__kernel void A(__global const float* a, __global float* b) {
  (b[(((1) - 1) * (8)) + (get_global_id(0))]) = (b[(((1) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((2) - 1) * (8)) + (get_global_id(0))]) = (b[(((2) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((3) - 1) * (8)) + (get_global_id(0))]) = (b[(((3) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((4) - 1) * (8)) + (get_global_id(0))]) = (b[(((4) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((6) - 1) * (8)) + (get_global_id(0))]) = (b[(((6) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((7) - 1) * (8)) + (get_global_id(0))]) = (b[(((7) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((8) - 1) * (8)) + (get_global_id(0))]) = (b[(((8) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]) * (a[(((12) - 1) * (8)) + (get_global_id(0))]);
  (b[(((13) - 1) * (8)) + (get_global_id(0))]) = (b[(((13) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((14) - 1) * (8)) + (get_global_id(0))]) = (b[(((14) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((15) - 1) * (8)) + (get_global_id(0))]) = (b[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]) * (a[(((22) - 1) * (8)) + (get_global_id(0))]);
  (b[(((16) - 1) * (8)) + (get_global_id(0))]) = (b[(((16) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((17) - 1) * (8)) + (get_global_id(0))]) = (b[(((17) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((18) - 1) * (8)) + (get_global_id(0))]) = (b[(((18) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((19) - 1) * (8)) + (get_global_id(0))]) = (b[(((19) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((20) - 1) * (8)) + (get_global_id(0))]) = (b[(((20) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((21) - 1) * (8)) + (get_global_id(0))]) = (b[(((21) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((22) - 1) * (8)) + (get_global_id(0))]) = (b[(((22) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((23) - 1) * (8)) + (get_global_id(0))]) = (b[(((23) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((24) - 1) * (8)) + (get_global_id(0))]) = (b[(((24) - 1) * (8)) + (get_global_id(0))]) * (a[(((8) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((25) - 1) * (8)) + (get_global_id(0))]) = (b[(((25) - 1) * (8)) + (get_global_id(0))]) * (a[(((8) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((26) - 1) * (8)) + (get_global_id(0))]) = (b[(((26) - 1) * (8)) + (get_global_id(0))]) * (a[(((8) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((27) - 1) * (8)) + (get_global_id(0))]) = (b[(((27) - 1) * (8)) + (get_global_id(0))]) * (a[(((8) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((28) - 1) * (8)) + (get_global_id(0))]) = (b[(((28) - 1) * (8)) + (get_global_id(0))]) * (a[(((8) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((30) - 1) * (8)) + (get_global_id(0))]) = (b[(((30) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((31) - 1) * (8)) + (get_global_id(0))]) = (b[(((31) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((32) - 1) * (8)) + (get_global_id(0))]) = (b[(((32) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((33) - 1) * (8)) + (get_global_id(0))]) = (b[(((33) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((34) - 1) * (8)) + (get_global_id(0))]) = (b[(((34) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((35) - 1) * (8)) + (get_global_id(0))]) = (b[(((35) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((36) - 1) * (8)) + (get_global_id(0))]) = (b[(((36) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((37) - 1) * (8)) + (get_global_id(0))]) = (b[(((37) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((38) - 1) * (8)) + (get_global_id(0))]) = (b[(((38) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((39) - 1) * (8)) + (get_global_id(0))]) = (b[(((39) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((40) - 1) * (8)) + (get_global_id(0))]) = (b[(((40) - 1) * (8)) + (get_global_id(0))]) * (a[(((12) - 1) * (8)) + (get_global_id(0))]);
  (b[(((41) - 1) * (8)) + (get_global_id(0))]) = (b[(((41) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((42) - 1) * (8)) + (get_global_id(0))]) = (b[(((42) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((43) - 1) * (8)) + (get_global_id(0))]) = (b[(((43) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((44) - 1) * (8)) + (get_global_id(0))]) = (b[(((44) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((45) - 1) * (8)) + (get_global_id(0))]) = (b[(((45) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((47) - 1) * (8)) + (get_global_id(0))]) = (b[(((47) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((48) - 1) * (8)) + (get_global_id(0))]) = (b[(((48) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((49) - 1) * (8)) + (get_global_id(0))]) = (b[(((49) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((50) - 1) * (8)) + (get_global_id(0))]) = (b[(((50) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((51) - 1) * (8)) + (get_global_id(0))]) = (b[(((51) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((52) - 1) * (8)) + (get_global_id(0))]) = (b[(((52) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((53) - 1) * (8)) + (get_global_id(0))]) = (b[(((53) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((54) - 1) * (8)) + (get_global_id(0))]) = (b[(((54) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((55) - 1) * (8)) + (get_global_id(0))]) = (b[(((55) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((56) - 1) * (8)) + (get_global_id(0))]) = (b[(((56) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((59) - 1) * (8)) + (get_global_id(0))]) = (b[(((59) - 1) * (8)) + (get_global_id(0))]) * (a[(((22) - 1) * (8)) + (get_global_id(0))]);
  (b[(((60) - 1) * (8)) + (get_global_id(0))]) = (b[(((60) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((61) - 1) * (8)) + (get_global_id(0))]) = (b[(((61) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((62) - 1) * (8)) + (get_global_id(0))]) = (b[(((62) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((63) - 1) * (8)) + (get_global_id(0))]) = (b[(((63) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((64) - 1) * (8)) + (get_global_id(0))]) = (b[(((64) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((65) - 1) * (8)) + (get_global_id(0))]) = (b[(((65) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((66) - 1) * (8)) + (get_global_id(0))]) = (b[(((66) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((67) - 1) * (8)) + (get_global_id(0))]) = (b[(((67) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((68) - 1) * (8)) + (get_global_id(0))]) = (b[(((68) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((69) - 1) * (8)) + (get_global_id(0))]) = (b[(((69) - 1) * (8)) + (get_global_id(0))]) * (a[(((12) - 1) * (8)) + (get_global_id(0))]);
  (b[(((70) - 1) * (8)) + (get_global_id(0))]) = (b[(((70) - 1) * (8)) + (get_global_id(0))]) * (a[(((12) - 1) * (8)) + (get_global_id(0))]);
  (b[(((71) - 1) * (8)) + (get_global_id(0))]) = (b[(((71) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((72) - 1) * (8)) + (get_global_id(0))]) = (b[(((72) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((73) - 1) * (8)) + (get_global_id(0))]) = (b[(((73) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((74) - 1) * (8)) + (get_global_id(0))]) = (b[(((74) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((75) - 1) * (8)) + (get_global_id(0))]) = (b[(((75) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((76) - 1) * (8)) + (get_global_id(0))]) = (b[(((76) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((77) - 1) * (8)) + (get_global_id(0))]) = (b[(((77) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]);
  (b[(((78) - 1) * (8)) + (get_global_id(0))]) = (b[(((78) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((79) - 1) * (8)) + (get_global_id(0))]) = (b[(((79) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((80) - 1) * (8)) + (get_global_id(0))]) = (b[(((80) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((81) - 1) * (8)) + (get_global_id(0))]) = (b[(((81) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((82) - 1) * (8)) + (get_global_id(0))]) = (b[(((82) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((83) - 1) * (8)) + (get_global_id(0))]) = (b[(((83) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((84) - 1) * (8)) + (get_global_id(0))]) = (b[(((84) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((85) - 1) * (8)) + (get_global_id(0))]) = (b[(((85) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((86) - 1) * (8)) + (get_global_id(0))]) = (b[(((86) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((8) - 1) * (8)) + (get_global_id(0))]);
  (b[(((87) - 1) * (8)) + (get_global_id(0))]) = (b[(((87) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((88) - 1) * (8)) + (get_global_id(0))]) = (b[(((88) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((89) - 1) * (8)) + (get_global_id(0))]) = (b[(((89) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((90) - 1) * (8)) + (get_global_id(0))]) = (b[(((90) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]);
  (b[(((91) - 1) * (8)) + (get_global_id(0))]) = (b[(((91) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((92) - 1) * (8)) + (get_global_id(0))]) = (b[(((92) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((93) - 1) * (8)) + (get_global_id(0))]) = (b[(((93) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((94) - 1) * (8)) + (get_global_id(0))]) = (b[(((94) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((95) - 1) * (8)) + (get_global_id(0))]) = (b[(((95) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((17) - 1) * (8)) + (get_global_id(0))]);
  (b[(((96) - 1) * (8)) + (get_global_id(0))]) = (b[(((96) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((97) - 1) * (8)) + (get_global_id(0))]) = (b[(((97) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((98) - 1) * (8)) + (get_global_id(0))]) = (b[(((98) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((99) - 1) * (8)) + (get_global_id(0))]) = (b[(((99) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((100) - 1) * (8)) + (get_global_id(0))]) = (b[(((100) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((101) - 1) * (8)) + (get_global_id(0))]) = (b[(((101) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((102) - 1) * (8)) + (get_global_id(0))]) = (b[(((102) - 1) * (8)) + (get_global_id(0))]) * (a[(((10) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((103) - 1) * (8)) + (get_global_id(0))]) = (b[(((103) - 1) * (8)) + (get_global_id(0))]) * (a[(((10) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((104) - 1) * (8)) + (get_global_id(0))]) = (b[(((104) - 1) * (8)) + (get_global_id(0))]) * (a[(((10) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((105) - 1) * (8)) + (get_global_id(0))]) = (b[(((105) - 1) * (8)) + (get_global_id(0))]) * (a[(((10) - 1) * (8)) + (get_global_id(0))]);
  (b[(((106) - 1) * (8)) + (get_global_id(0))]) = (b[(((106) - 1) * (8)) + (get_global_id(0))]) * (a[(((10) - 1) * (8)) + (get_global_id(0))]);
  (b[(((107) - 1) * (8)) + (get_global_id(0))]) = (b[(((107) - 1) * (8)) + (get_global_id(0))]) * (a[(((10) - 1) * (8)) + (get_global_id(0))]);
  (b[(((108) - 1) * (8)) + (get_global_id(0))]) = (b[(((108) - 1) * (8)) + (get_global_id(0))]) * (a[(((17) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((109) - 1) * (8)) + (get_global_id(0))]) = (b[(((109) - 1) * (8)) + (get_global_id(0))]) * (a[(((17) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((110) - 1) * (8)) + (get_global_id(0))]) = (b[(((110) - 1) * (8)) + (get_global_id(0))]) * (a[(((17) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((111) - 1) * (8)) + (get_global_id(0))]) = (b[(((111) - 1) * (8)) + (get_global_id(0))]) * (a[(((17) - 1) * (8)) + (get_global_id(0))]);
  (b[(((112) - 1) * (8)) + (get_global_id(0))]) = (b[(((112) - 1) * (8)) + (get_global_id(0))]) * (a[(((17) - 1) * (8)) + (get_global_id(0))]);
  (b[(((113) - 1) * (8)) + (get_global_id(0))]) = (b[(((113) - 1) * (8)) + (get_global_id(0))]) * (a[(((17) - 1) * (8)) + (get_global_id(0))]) * (a[(((17) - 1) * (8)) + (get_global_id(0))]);
  (b[(((114) - 1) * (8)) + (get_global_id(0))]) = (b[(((114) - 1) * (8)) + (get_global_id(0))]) * (a[(((14) - 1) * (8)) + (get_global_id(0))]);
  (b[(((116) - 1) * (8)) + (get_global_id(0))]) = (b[(((116) - 1) * (8)) + (get_global_id(0))]) * (a[(((14) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((117) - 1) * (8)) + (get_global_id(0))]) = (b[(((117) - 1) * (8)) + (get_global_id(0))]) * (a[(((14) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((118) - 1) * (8)) + (get_global_id(0))]) = (b[(((118) - 1) * (8)) + (get_global_id(0))]) * (a[(((14) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((119) - 1) * (8)) + (get_global_id(0))]) = (b[(((119) - 1) * (8)) + (get_global_id(0))]) * (a[(((14) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((120) - 1) * (8)) + (get_global_id(0))]) = (b[(((120) - 1) * (8)) + (get_global_id(0))]) * (a[(((14) - 1) * (8)) + (get_global_id(0))]);
  (b[(((122) - 1) * (8)) + (get_global_id(0))]) = (b[(((122) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((123) - 1) * (8)) + (get_global_id(0))]) = (b[(((123) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((124) - 1) * (8)) + (get_global_id(0))]) = (b[(((124) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((125) - 1) * (8)) + (get_global_id(0))]) = (b[(((125) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((126) - 1) * (8)) + (get_global_id(0))]) = (b[(((126) - 1) * (8)) + (get_global_id(0))]) * (a[(((18) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((127) - 1) * (8)) + (get_global_id(0))]) = (b[(((127) - 1) * (8)) + (get_global_id(0))]) * (a[(((18) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((128) - 1) * (8)) + (get_global_id(0))]) = (b[(((128) - 1) * (8)) + (get_global_id(0))]) * (a[(((18) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((129) - 1) * (8)) + (get_global_id(0))]) = (b[(((129) - 1) * (8)) + (get_global_id(0))]) * (a[(((18) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((130) - 1) * (8)) + (get_global_id(0))]) = (b[(((130) - 1) * (8)) + (get_global_id(0))]) * (a[(((18) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((131) - 1) * (8)) + (get_global_id(0))]) = (b[(((131) - 1) * (8)) + (get_global_id(0))]) * (a[(((18) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((132) - 1) * (8)) + (get_global_id(0))]) = (b[(((132) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((133) - 1) * (8)) + (get_global_id(0))]) = (b[(((133) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((134) - 1) * (8)) + (get_global_id(0))]) = (b[(((134) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((135) - 1) * (8)) + (get_global_id(0))]) = (b[(((135) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((136) - 1) * (8)) + (get_global_id(0))]) = (b[(((136) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((137) - 1) * (8)) + (get_global_id(0))]) = (b[(((137) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((138) - 1) * (8)) + (get_global_id(0))]) = (b[(((138) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((139) - 1) * (8)) + (get_global_id(0))]) = (b[(((139) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((140) - 1) * (8)) + (get_global_id(0))]) = (b[(((140) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((141) - 1) * (8)) + (get_global_id(0))]) = (b[(((141) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((142) - 1) * (8)) + (get_global_id(0))]) = (b[(((142) - 1) * (8)) + (get_global_id(0))]) * (a[(((8) - 1) * (8)) + (get_global_id(0))]);
  (b[(((144) - 1) * (8)) + (get_global_id(0))]) = (b[(((144) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((145) - 1) * (8)) + (get_global_id(0))]) = (b[(((145) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((146) - 1) * (8)) + (get_global_id(0))]) = (b[(((146) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((148) - 1) * (8)) + (get_global_id(0))]) = (b[(((148) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((149) - 1) * (8)) + (get_global_id(0))]) = (b[(((149) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((150) - 1) * (8)) + (get_global_id(0))]) = (b[(((150) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((151) - 1) * (8)) + (get_global_id(0))]) = (b[(((151) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((152) - 1) * (8)) + (get_global_id(0))]) = (b[(((152) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((153) - 1) * (8)) + (get_global_id(0))]) = (b[(((153) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((154) - 1) * (8)) + (get_global_id(0))]) = (b[(((154) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((155) - 1) * (8)) + (get_global_id(0))]) = (b[(((155) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]);
  (b[(((156) - 1) * (8)) + (get_global_id(0))]) = (b[(((156) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((157) - 1) * (8)) + (get_global_id(0))]) = (b[(((157) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((158) - 1) * (8)) + (get_global_id(0))]) = (b[(((158) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((159) - 1) * (8)) + (get_global_id(0))]) = (b[(((159) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((160) - 1) * (8)) + (get_global_id(0))]) = (b[(((160) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((161) - 1) * (8)) + (get_global_id(0))]) = (b[(((161) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((162) - 1) * (8)) + (get_global_id(0))]) = (b[(((162) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((163) - 1) * (8)) + (get_global_id(0))]) = (b[(((163) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((164) - 1) * (8)) + (get_global_id(0))]) = (b[(((164) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]);
  (b[(((165) - 1) * (8)) + (get_global_id(0))]) = (b[(((165) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]);
  (b[(((166) - 1) * (8)) + (get_global_id(0))]) = (b[(((166) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]);
  (b[(((167) - 1) * (8)) + (get_global_id(0))]) = (b[(((167) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]);
  (b[(((168) - 1) * (8)) + (get_global_id(0))]) = (b[(((168) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((169) - 1) * (8)) + (get_global_id(0))]) = (b[(((169) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((170) - 1) * (8)) + (get_global_id(0))]) = (b[(((170) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((171) - 1) * (8)) + (get_global_id(0))]) = (b[(((171) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((172) - 1) * (8)) + (get_global_id(0))]) = (b[(((172) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((173) - 1) * (8)) + (get_global_id(0))]) = (b[(((173) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((174) - 1) * (8)) + (get_global_id(0))]) = (b[(((174) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((175) - 1) * (8)) + (get_global_id(0))]) = (b[(((175) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((176) - 1) * (8)) + (get_global_id(0))]) = (b[(((176) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((177) - 1) * (8)) + (get_global_id(0))]) = (b[(((177) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((178) - 1) * (8)) + (get_global_id(0))]) = (b[(((178) - 1) * (8)) + (get_global_id(0))]) * (a[(((8) - 1) * (8)) + (get_global_id(0))]);
  (b[(((180) - 1) * (8)) + (get_global_id(0))]) = (b[(((180) - 1) * (8)) + (get_global_id(0))]) * (a[(((16) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((181) - 1) * (8)) + (get_global_id(0))]) = (b[(((181) - 1) * (8)) + (get_global_id(0))]) * (a[(((16) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((182) - 1) * (8)) + (get_global_id(0))]) = (b[(((182) - 1) * (8)) + (get_global_id(0))]) * (a[(((16) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((183) - 1) * (8)) + (get_global_id(0))]) = (b[(((183) - 1) * (8)) + (get_global_id(0))]) * (a[(((16) - 1) * (8)) + (get_global_id(0))]);
  (b[(((184) - 1) * (8)) + (get_global_id(0))]) = (b[(((184) - 1) * (8)) + (get_global_id(0))]) * (a[(((16) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((185) - 1) * (8)) + (get_global_id(0))]) = (b[(((185) - 1) * (8)) + (get_global_id(0))]) * (a[(((20) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((186) - 1) * (8)) + (get_global_id(0))]) = (b[(((186) - 1) * (8)) + (get_global_id(0))]) * (a[(((20) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((187) - 1) * (8)) + (get_global_id(0))]) = (b[(((187) - 1) * (8)) + (get_global_id(0))]) * (a[(((20) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((188) - 1) * (8)) + (get_global_id(0))]) = (b[(((188) - 1) * (8)) + (get_global_id(0))]) * (a[(((20) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((189) - 1) * (8)) + (get_global_id(0))]) = (b[(((189) - 1) * (8)) + (get_global_id(0))]) * (a[(((20) - 1) * (8)) + (get_global_id(0))]);
  (b[(((190) - 1) * (8)) + (get_global_id(0))]) = (b[(((190) - 1) * (8)) + (get_global_id(0))]) * (a[(((21) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((191) - 1) * (8)) + (get_global_id(0))]) = (b[(((191) - 1) * (8)) + (get_global_id(0))]) * (a[(((21) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((192) - 1) * (8)) + (get_global_id(0))]) = (b[(((192) - 1) * (8)) + (get_global_id(0))]) * (a[(((21) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((193) - 1) * (8)) + (get_global_id(0))]) = (b[(((193) - 1) * (8)) + (get_global_id(0))]) * (a[(((21) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((194) - 1) * (8)) + (get_global_id(0))]) = (b[(((194) - 1) * (8)) + (get_global_id(0))]) * (a[(((21) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((195) - 1) * (8)) + (get_global_id(0))]) = (b[(((195) - 1) * (8)) + (get_global_id(0))]) * (a[(((21) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((196) - 1) * (8)) + (get_global_id(0))]) = (b[(((196) - 1) * (8)) + (get_global_id(0))]) * (a[(((21) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((197) - 1) * (8)) + (get_global_id(0))]) = (b[(((197) - 1) * (8)) + (get_global_id(0))]) * (a[(((21) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((198) - 1) * (8)) + (get_global_id(0))]) = (b[(((198) - 1) * (8)) + (get_global_id(0))]) * (a[(((21) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((199) - 1) * (8)) + (get_global_id(0))]) = (b[(((199) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((200) - 1) * (8)) + (get_global_id(0))]) = (b[(((200) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((201) - 1) * (8)) + (get_global_id(0))]) = (b[(((201) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((202) - 1) * (8)) + (get_global_id(0))]) = (b[(((202) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((203) - 1) * (8)) + (get_global_id(0))]) = (b[(((203) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((204) - 1) * (8)) + (get_global_id(0))]) = (b[(((204) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((205) - 1) * (8)) + (get_global_id(0))]) = (b[(((205) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
}
","[ 65  51   7 ...,   0 127   0]"
656,shoc-1.1.5-S3D-ratx4_kernel,default,2426,0,702,0,0,0,57594120,128,GPU,14.887798000000002,13.866565,"__kernel void A(__global const float* a, __global float* b) {
  (b[(((1) - 1) * (8)) + (get_global_id(0))]) = (b[(((1) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((2) - 1) * (8)) + (get_global_id(0))]) = (b[(((2) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((3) - 1) * (8)) + (get_global_id(0))]) = (b[(((3) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((4) - 1) * (8)) + (get_global_id(0))]) = (b[(((4) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((6) - 1) * (8)) + (get_global_id(0))]) = (b[(((6) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((7) - 1) * (8)) + (get_global_id(0))]) = (b[(((7) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((8) - 1) * (8)) + (get_global_id(0))]) = (b[(((8) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]) * (a[(((12) - 1) * (8)) + (get_global_id(0))]);
  (b[(((13) - 1) * (8)) + (get_global_id(0))]) = (b[(((13) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((14) - 1) * (8)) + (get_global_id(0))]) = (b[(((14) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((15) - 1) * (8)) + (get_global_id(0))]) = (b[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]) * (a[(((22) - 1) * (8)) + (get_global_id(0))]);
  (b[(((16) - 1) * (8)) + (get_global_id(0))]) = (b[(((16) - 1) * (8)) + (get_global_id(0))]) * (a[(((8) - 1) * (8)) + (get_global_id(0))]);
  (b[(((17) - 1) * (8)) + (get_global_id(0))]) = (b[(((17) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((18) - 1) * (8)) + (get_global_id(0))]) = (b[(((18) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((19) - 1) * (8)) + (get_global_id(0))]) = (b[(((19) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((20) - 1) * (8)) + (get_global_id(0))]) = (b[(((20) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((21) - 1) * (8)) + (get_global_id(0))]) = (b[(((21) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((22) - 1) * (8)) + (get_global_id(0))]) = (b[(((22) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]) * (a[(((8) - 1) * (8)) + (get_global_id(0))]);
  (b[(((23) - 1) * (8)) + (get_global_id(0))]) = (b[(((23) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]) * (a[(((8) - 1) * (8)) + (get_global_id(0))]);
  (b[(((24) - 1) * (8)) + (get_global_id(0))]) = (b[(((24) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((25) - 1) * (8)) + (get_global_id(0))]) = (b[(((25) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((26) - 1) * (8)) + (get_global_id(0))]) = (b[(((26) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((27) - 1) * (8)) + (get_global_id(0))]) = (b[(((27) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((28) - 1) * (8)) + (get_global_id(0))]) = (b[(((28) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((30) - 1) * (8)) + (get_global_id(0))]) = (b[(((30) - 1) * (8)) + (get_global_id(0))]) * (a[(((12) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((31) - 1) * (8)) + (get_global_id(0))]) = (b[(((31) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]);
  (b[(((32) - 1) * (8)) + (get_global_id(0))]) = (b[(((32) - 1) * (8)) + (get_global_id(0))]) * (a[(((12) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((33) - 1) * (8)) + (get_global_id(0))]) = (b[(((33) - 1) * (8)) + (get_global_id(0))]) * (a[(((12) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((34) - 1) * (8)) + (get_global_id(0))]) = (b[(((34) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((35) - 1) * (8)) + (get_global_id(0))]) = (b[(((35) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((36) - 1) * (8)) + (get_global_id(0))]) = (b[(((36) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((37) - 1) * (8)) + (get_global_id(0))]) = (b[(((37) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((38) - 1) * (8)) + (get_global_id(0))]) = (b[(((38) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((39) - 1) * (8)) + (get_global_id(0))]) = (b[(((39) - 1) * (8)) + (get_global_id(0))]) * (a[(((17) - 1) * (8)) + (get_global_id(0))]);
  (b[(((40) - 1) * (8)) + (get_global_id(0))]) = (b[(((40) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((41) - 1) * (8)) + (get_global_id(0))]) = (b[(((41) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]);
  (b[(((42) - 1) * (8)) + (get_global_id(0))]) = (b[(((42) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((43) - 1) * (8)) + (get_global_id(0))]) = (b[(((43) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((44) - 1) * (8)) + (get_global_id(0))]) = (b[(((44) - 1) * (8)) + (get_global_id(0))]) * (a[(((12) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((45) - 1) * (8)) + (get_global_id(0))]) = (b[(((45) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((47) - 1) * (8)) + (get_global_id(0))]) = (b[(((47) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((48) - 1) * (8)) + (get_global_id(0))]) = (b[(((48) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((49) - 1) * (8)) + (get_global_id(0))]) = (b[(((49) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((50) - 1) * (8)) + (get_global_id(0))]) = (b[(((50) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((51) - 1) * (8)) + (get_global_id(0))]) = (b[(((51) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((52) - 1) * (8)) + (get_global_id(0))]) = (b[(((52) - 1) * (8)) + (get_global_id(0))]) * (a[(((12) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((53) - 1) * (8)) + (get_global_id(0))]) = (b[(((53) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((54) - 1) * (8)) + (get_global_id(0))]) = (b[(((54) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((55) - 1) * (8)) + (get_global_id(0))]) = (b[(((55) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((56) - 1) * (8)) + (get_global_id(0))]) = (b[(((56) - 1) * (8)) + (get_global_id(0))]) * (a[(((18) - 1) * (8)) + (get_global_id(0))]);
  (b[(((57) - 1) * (8)) + (get_global_id(0))]) = (b[(((57) - 1) * (8)) + (get_global_id(0))]) * (a[(((14) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((58) - 1) * (8)) + (get_global_id(0))]) = (b[(((58) - 1) * (8)) + (get_global_id(0))]) * (a[(((14) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((59) - 1) * (8)) + (get_global_id(0))]) = (b[(((59) - 1) * (8)) + (get_global_id(0))]) * (a[(((22) - 1) * (8)) + (get_global_id(0))]);
  (b[(((60) - 1) * (8)) + (get_global_id(0))]) = (b[(((60) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((61) - 1) * (8)) + (get_global_id(0))]) = (b[(((61) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((62) - 1) * (8)) + (get_global_id(0))]) = (b[(((62) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((63) - 1) * (8)) + (get_global_id(0))]) = (b[(((63) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((64) - 1) * (8)) + (get_global_id(0))]) = (b[(((64) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((65) - 1) * (8)) + (get_global_id(0))]) = (b[(((65) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((66) - 1) * (8)) + (get_global_id(0))]) = (b[(((66) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((67) - 1) * (8)) + (get_global_id(0))]) = (b[(((67) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((68) - 1) * (8)) + (get_global_id(0))]) = (b[(((68) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((69) - 1) * (8)) + (get_global_id(0))]) = (b[(((69) - 1) * (8)) + (get_global_id(0))]) * (a[(((12) - 1) * (8)) + (get_global_id(0))]);
  (b[(((70) - 1) * (8)) + (get_global_id(0))]) = (b[(((70) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((72) - 1) * (8)) + (get_global_id(0))]) = (b[(((72) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((73) - 1) * (8)) + (get_global_id(0))]) = (b[(((73) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((74) - 1) * (8)) + (get_global_id(0))]) = (b[(((74) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((75) - 1) * (8)) + (get_global_id(0))]) = (b[(((75) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((76) - 1) * (8)) + (get_global_id(0))]) = (b[(((76) - 1) * (8)) + (get_global_id(0))]) * (a[(((8) - 1) * (8)) + (get_global_id(0))]);
  (b[(((77) - 1) * (8)) + (get_global_id(0))]) = (b[(((77) - 1) * (8)) + (get_global_id(0))]) * (a[(((18) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((78) - 1) * (8)) + (get_global_id(0))]) = (b[(((78) - 1) * (8)) + (get_global_id(0))]) * (a[(((10) - 1) * (8)) + (get_global_id(0))]);
  (b[(((79) - 1) * (8)) + (get_global_id(0))]) = (b[(((79) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((80) - 1) * (8)) + (get_global_id(0))]) = (b[(((80) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((81) - 1) * (8)) + (get_global_id(0))]) = (b[(((81) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((82) - 1) * (8)) + (get_global_id(0))]) = (b[(((82) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((83) - 1) * (8)) + (get_global_id(0))]) = (b[(((83) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]);
  (b[(((84) - 1) * (8)) + (get_global_id(0))]) = (b[(((84) - 1) * (8)) + (get_global_id(0))]) * (a[(((10) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((85) - 1) * (8)) + (get_global_id(0))]) = (b[(((85) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((86) - 1) * (8)) + (get_global_id(0))]) = (b[(((86) - 1) * (8)) + (get_global_id(0))]) * (a[(((10) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((87) - 1) * (8)) + (get_global_id(0))]) = (b[(((87) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((88) - 1) * (8)) + (get_global_id(0))]) = (b[(((88) - 1) * (8)) + (get_global_id(0))]) * (a[(((10) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((89) - 1) * (8)) + (get_global_id(0))]) = (b[(((89) - 1) * (8)) + (get_global_id(0))]) * (a[(((19) - 1) * (8)) + (get_global_id(0))]);
  (b[(((90) - 1) * (8)) + (get_global_id(0))]) = (b[(((90) - 1) * (8)) + (get_global_id(0))]) * (a[(((10) - 1) * (8)) + (get_global_id(0))]);
  (b[(((91) - 1) * (8)) + (get_global_id(0))]) = (b[(((91) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((92) - 1) * (8)) + (get_global_id(0))]) = (b[(((92) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((93) - 1) * (8)) + (get_global_id(0))]) = (b[(((93) - 1) * (8)) + (get_global_id(0))]) * (a[(((16) - 1) * (8)) + (get_global_id(0))]);
  (b[(((94) - 1) * (8)) + (get_global_id(0))]) = (b[(((94) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((95) - 1) * (8)) + (get_global_id(0))]) = (b[(((95) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((96) - 1) * (8)) + (get_global_id(0))]) = (b[(((96) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((97) - 1) * (8)) + (get_global_id(0))]) = (b[(((97) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((98) - 1) * (8)) + (get_global_id(0))]) = (b[(((98) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((99) - 1) * (8)) + (get_global_id(0))]) = (b[(((99) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((100) - 1) * (8)) + (get_global_id(0))]) = (b[(((100) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((101) - 1) * (8)) + (get_global_id(0))]) = (b[(((101) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((102) - 1) * (8)) + (get_global_id(0))]) = (b[(((102) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((103) - 1) * (8)) + (get_global_id(0))]) = (b[(((103) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((104) - 1) * (8)) + (get_global_id(0))]) = (b[(((104) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((105) - 1) * (8)) + (get_global_id(0))]) = (b[(((105) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((106) - 1) * (8)) + (get_global_id(0))]) = (b[(((106) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((107) - 1) * (8)) + (get_global_id(0))]) = (b[(((107) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((108) - 1) * (8)) + (get_global_id(0))]) = (b[(((108) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((109) - 1) * (8)) + (get_global_id(0))]) = (b[(((109) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((110) - 1) * (8)) + (get_global_id(0))]) = (b[(((110) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((111) - 1) * (8)) + (get_global_id(0))]) = (b[(((111) - 1) * (8)) + (get_global_id(0))]) * (a[(((14) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((112) - 1) * (8)) + (get_global_id(0))]) = (b[(((112) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((113) - 1) * (8)) + (get_global_id(0))]) = (b[(((113) - 1) * (8)) + (get_global_id(0))]) * (a[(((14) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((115) - 1) * (8)) + (get_global_id(0))]) = (b[(((115) - 1) * (8)) + (get_global_id(0))]) * (a[(((14) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((116) - 1) * (8)) + (get_global_id(0))]) = (b[(((116) - 1) * (8)) + (get_global_id(0))]) * (a[(((17) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((117) - 1) * (8)) + (get_global_id(0))]) = (b[(((117) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((118) - 1) * (8)) + (get_global_id(0))]) = (b[(((118) - 1) * (8)) + (get_global_id(0))]) * (a[(((18) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((119) - 1) * (8)) + (get_global_id(0))]) = (b[(((119) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((120) - 1) * (8)) + (get_global_id(0))]) = (b[(((120) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((122) - 1) * (8)) + (get_global_id(0))]) = (b[(((122) - 1) * (8)) + (get_global_id(0))]) * (a[(((14) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((123) - 1) * (8)) + (get_global_id(0))]) = (b[(((123) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((124) - 1) * (8)) + (get_global_id(0))]) = (b[(((124) - 1) * (8)) + (get_global_id(0))]) * (a[(((18) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((125) - 1) * (8)) + (get_global_id(0))]) = (b[(((125) - 1) * (8)) + (get_global_id(0))]) * (a[(((12) - 1) * (8)) + (get_global_id(0))]);
  (b[(((127) - 1) * (8)) + (get_global_id(0))]) = (b[(((127) - 1) * (8)) + (get_global_id(0))]) * (a[(((17) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((128) - 1) * (8)) + (get_global_id(0))]) = (b[(((128) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((129) - 1) * (8)) + (get_global_id(0))]) = (b[(((129) - 1) * (8)) + (get_global_id(0))]) * (a[(((17) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((130) - 1) * (8)) + (get_global_id(0))]) = (b[(((130) - 1) * (8)) + (get_global_id(0))]) * (a[(((12) - 1) * (8)) + (get_global_id(0))]);
  (b[(((131) - 1) * (8)) + (get_global_id(0))]) = (b[(((131) - 1) * (8)) + (get_global_id(0))]) * (a[(((17) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((132) - 1) * (8)) + (get_global_id(0))]) = (b[(((132) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]);
  (b[(((133) - 1) * (8)) + (get_global_id(0))]) = (b[(((133) - 1) * (8)) + (get_global_id(0))]) * (a[(((14) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((134) - 1) * (8)) + (get_global_id(0))]) = (b[(((134) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((135) - 1) * (8)) + (get_global_id(0))]) = (b[(((135) - 1) * (8)) + (get_global_id(0))]) * (a[(((18) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((136) - 1) * (8)) + (get_global_id(0))]) = (b[(((136) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((137) - 1) * (8)) + (get_global_id(0))]) = (b[(((137) - 1) * (8)) + (get_global_id(0))]) * (a[(((14) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((138) - 1) * (8)) + (get_global_id(0))]) = (b[(((138) - 1) * (8)) + (get_global_id(0))]) * (a[(((14) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((139) - 1) * (8)) + (get_global_id(0))]) = (b[(((139) - 1) * (8)) + (get_global_id(0))]) * (a[(((3) - 1) * (8)) + (get_global_id(0))]);
  (b[(((140) - 1) * (8)) + (get_global_id(0))]) = (b[(((140) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]);
  (b[(((141) - 1) * (8)) + (get_global_id(0))]) = (b[(((141) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((142) - 1) * (8)) + (get_global_id(0))]) = (b[(((142) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((143) - 1) * (8)) + (get_global_id(0))]) = (b[(((143) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((144) - 1) * (8)) + (get_global_id(0))]) = (b[(((144) - 1) * (8)) + (get_global_id(0))]) * (a[(((14) - 1) * (8)) + (get_global_id(0))]) * (a[(((10) - 1) * (8)) + (get_global_id(0))]);
  (b[(((145) - 1) * (8)) + (get_global_id(0))]) = (b[(((145) - 1) * (8)) + (get_global_id(0))]) * (a[(((21) - 1) * (8)) + (get_global_id(0))]);
  (b[(((146) - 1) * (8)) + (get_global_id(0))]) = (b[(((146) - 1) * (8)) + (get_global_id(0))]) * (a[(((20) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((147) - 1) * (8)) + (get_global_id(0))]) = (b[(((147) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((148) - 1) * (8)) + (get_global_id(0))]) = (b[(((148) - 1) * (8)) + (get_global_id(0))]) * (a[(((19) - 1) * (8)) + (get_global_id(0))]);
  (b[(((149) - 1) * (8)) + (get_global_id(0))]) = (b[(((149) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((150) - 1) * (8)) + (get_global_id(0))]) = (b[(((150) - 1) * (8)) + (get_global_id(0))]) * (a[(((18) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((151) - 1) * (8)) + (get_global_id(0))]) = (b[(((151) - 1) * (8)) + (get_global_id(0))]) * (a[(((18) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((152) - 1) * (8)) + (get_global_id(0))]) = (b[(((152) - 1) * (8)) + (get_global_id(0))]) * (a[(((18) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((153) - 1) * (8)) + (get_global_id(0))]) = (b[(((153) - 1) * (8)) + (get_global_id(0))]) * (a[(((18) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((154) - 1) * (8)) + (get_global_id(0))]) = (b[(((154) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((155) - 1) * (8)) + (get_global_id(0))]) = (b[(((155) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((157) - 1) * (8)) + (get_global_id(0))]) = (b[(((157) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((158) - 1) * (8)) + (get_global_id(0))]) = (b[(((158) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((159) - 1) * (8)) + (get_global_id(0))]) = (b[(((159) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((160) - 1) * (8)) + (get_global_id(0))]) = (b[(((160) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]);
  (b[(((161) - 1) * (8)) + (get_global_id(0))]) = (b[(((161) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((162) - 1) * (8)) + (get_global_id(0))]) = (b[(((162) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((163) - 1) * (8)) + (get_global_id(0))]) = (b[(((163) - 1) * (8)) + (get_global_id(0))]) * (a[(((19) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((164) - 1) * (8)) + (get_global_id(0))]) = (b[(((164) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((165) - 1) * (8)) + (get_global_id(0))]) = (b[(((165) - 1) * (8)) + (get_global_id(0))]) * (a[(((20) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((166) - 1) * (8)) + (get_global_id(0))]) = (b[(((166) - 1) * (8)) + (get_global_id(0))]) * (a[(((10) - 1) * (8)) + (get_global_id(0))]);
  (b[(((167) - 1) * (8)) + (get_global_id(0))]) = (b[(((167) - 1) * (8)) + (get_global_id(0))]) * (a[(((20) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((168) - 1) * (8)) + (get_global_id(0))]) = (b[(((168) - 1) * (8)) + (get_global_id(0))]) * (a[(((10) - 1) * (8)) + (get_global_id(0))]);
  (b[(((170) - 1) * (8)) + (get_global_id(0))]) = (b[(((170) - 1) * (8)) + (get_global_id(0))]) * (a[(((16) - 1) * (8)) + (get_global_id(0))]);
  (b[(((171) - 1) * (8)) + (get_global_id(0))]) = (b[(((171) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((172) - 1) * (8)) + (get_global_id(0))]) = (b[(((172) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]);
  (b[(((173) - 1) * (8)) + (get_global_id(0))]) = (b[(((173) - 1) * (8)) + (get_global_id(0))]) * (a[(((19) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((174) - 1) * (8)) + (get_global_id(0))]) = (b[(((174) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((175) - 1) * (8)) + (get_global_id(0))]) = (b[(((175) - 1) * (8)) + (get_global_id(0))]) * (a[(((16) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((176) - 1) * (8)) + (get_global_id(0))]) = (b[(((176) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((8) - 1) * (8)) + (get_global_id(0))]);
  (b[(((177) - 1) * (8)) + (get_global_id(0))]) = (b[(((177) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((178) - 1) * (8)) + (get_global_id(0))]) = (b[(((178) - 1) * (8)) + (get_global_id(0))]) * (a[(((16) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((179) - 1) * (8)) + (get_global_id(0))]) = (b[(((179) - 1) * (8)) + (get_global_id(0))]) * (a[(((16) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((180) - 1) * (8)) + (get_global_id(0))]) = (b[(((180) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((181) - 1) * (8)) + (get_global_id(0))]) = (b[(((181) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((182) - 1) * (8)) + (get_global_id(0))]) = (b[(((182) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((183) - 1) * (8)) + (get_global_id(0))]) = (b[(((183) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((184) - 1) * (8)) + (get_global_id(0))]) = (b[(((184) - 1) * (8)) + (get_global_id(0))]) * (a[(((10) - 1) * (8)) + (get_global_id(0))]);
  (b[(((185) - 1) * (8)) + (get_global_id(0))]) = (b[(((185) - 1) * (8)) + (get_global_id(0))]) * (a[(((21) - 1) * (8)) + (get_global_id(0))]);
  (b[(((186) - 1) * (8)) + (get_global_id(0))]) = (b[(((186) - 1) * (8)) + (get_global_id(0))]) * (a[(((10) - 1) * (8)) + (get_global_id(0))]);
  (b[(((187) - 1) * (8)) + (get_global_id(0))]) = (b[(((187) - 1) * (8)) + (get_global_id(0))]) * (a[(((21) - 1) * (8)) + (get_global_id(0))]) * (a[(((4) - 1) * (8)) + (get_global_id(0))]);
  (b[(((188) - 1) * (8)) + (get_global_id(0))]) = (b[(((188) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]);
  (b[(((189) - 1) * (8)) + (get_global_id(0))]) = (b[(((189) - 1) * (8)) + (get_global_id(0))]) * (a[(((21) - 1) * (8)) + (get_global_id(0))]) * (a[(((11) - 1) * (8)) + (get_global_id(0))]);
  (b[(((191) - 1) * (8)) + (get_global_id(0))]) = (b[(((191) - 1) * (8)) + (get_global_id(0))]) * (a[(((15) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((192) - 1) * (8)) + (get_global_id(0))]) = (b[(((192) - 1) * (8)) + (get_global_id(0))]) * (a[(((20) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((193) - 1) * (8)) + (get_global_id(0))]) = (b[(((193) - 1) * (8)) + (get_global_id(0))]) * (a[(((18) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]) * (a[(((2) - 1) * (8)) + (get_global_id(0))]);
  (b[(((195) - 1) * (8)) + (get_global_id(0))]) = (b[(((195) - 1) * (8)) + (get_global_id(0))]) * (a[(((20) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]);
  (b[(((196) - 1) * (8)) + (get_global_id(0))]) = (b[(((196) - 1) * (8)) + (get_global_id(0))]) * (a[(((20) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((197) - 1) * (8)) + (get_global_id(0))]) = (b[(((197) - 1) * (8)) + (get_global_id(0))]) * (a[(((20) - 1) * (8)) + (get_global_id(0))]) * (a[(((8) - 1) * (8)) + (get_global_id(0))]);
  (b[(((198) - 1) * (8)) + (get_global_id(0))]) = (b[(((198) - 1) * (8)) + (get_global_id(0))]) * (a[(((20) - 1) * (8)) + (get_global_id(0))]) * (a[(((10) - 1) * (8)) + (get_global_id(0))]);
  (b[(((199) - 1) * (8)) + (get_global_id(0))]) = (b[(((199) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
  (b[(((200) - 1) * (8)) + (get_global_id(0))]) = (b[(((200) - 1) * (8)) + (get_global_id(0))]) * (a[(((21) - 1) * (8)) + (get_global_id(0))]) * (a[(((1) - 1) * (8)) + (get_global_id(0))]);
  (b[(((201) - 1) * (8)) + (get_global_id(0))]) = (b[(((201) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]);
  (b[(((202) - 1) * (8)) + (get_global_id(0))]) = (b[(((202) - 1) * (8)) + (get_global_id(0))]) * (a[(((21) - 1) * (8)) + (get_global_id(0))]) * (a[(((6) - 1) * (8)) + (get_global_id(0))]);
  (b[(((203) - 1) * (8)) + (get_global_id(0))]) = (b[(((203) - 1) * (8)) + (get_global_id(0))]) * (a[(((21) - 1) * (8)) + (get_global_id(0))]) * (a[(((7) - 1) * (8)) + (get_global_id(0))]);
  (b[(((204) - 1) * (8)) + (get_global_id(0))]) = (b[(((204) - 1) * (8)) + (get_global_id(0))]) * (a[(((5) - 1) * (8)) + (get_global_id(0))]) * (a[(((13) - 1) * (8)) + (get_global_id(0))]);
  (b[(((205) - 1) * (8)) + (get_global_id(0))]) = (b[(((205) - 1) * (8)) + (get_global_id(0))]) * (a[(((10) - 1) * (8)) + (get_global_id(0))]) * (a[(((21) - 1) * (8)) + (get_global_id(0))]);
  (b[(((206) - 1) * (8)) + (get_global_id(0))]) = (b[(((206) - 1) * (8)) + (get_global_id(0))]) * (a[(((20) - 1) * (8)) + (get_global_id(0))]) * (a[(((9) - 1) * (8)) + (get_global_id(0))]);
}
","[ 65  51   7 ...,   0 127   0]"
657,shoc-1.1.5-S3D-ratx_kernel,default,1201,1,98,0,0,0,57594120,128,CPU,8.655694,13.844573,"__kernel void A(__global const float* a, __global const float* b, __global float* c, __global float* d, __global const float* e, const float f) {
  const float g = a[get_global_id(0)] * f;
  const float h = log((g));
  float i = 0.0;
  float j, k, l, m, n, o;
  float p, q, r;
  float s;

  const float t = 0x1.0p-126f;

  for (unsigned int u = 1; u <= 22; u++) {
    i += (b[(((u)-1) * (8)) + (get_global_id(0))]);
  }

  float v = i + (b[(((1) - 1) * (8)) + (get_global_id(0))]) + 5.e0 * (b[(((6) - 1) * (8)) + (get_global_id(0))]) + (b[(((10) - 1) * (8)) + (get_global_id(0))]) + 5.e-1 * (b[(((11) - 1) * (8)) + (get_global_id(0))]) + (b[(((12) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((16) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((14) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((15) - 1) * (8)) + (get_global_id(0))]);
  float w = i + (b[(((1) - 1) * (8)) + (get_global_id(0))]) + 5.e0 * (b[(((6) - 1) * (8)) + (get_global_id(0))]) + (b[(((10) - 1) * (8)) + (get_global_id(0))]) + 5.e-1 * (b[(((11) - 1) * (8)) + (get_global_id(0))]) + (b[(((12) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((16) - 1) * (8)) + (get_global_id(0))]) + 1.5e0f * (b[(((14) - 1) * (8)) + (get_global_id(0))]) + 1.5e0f * (b[(((15) - 1) * (8)) + (get_global_id(0))]);
  float x = i + (b[(((1) - 1) * (8)) + (get_global_id(0))]) + 5.e0 * (b[(((6) - 1) * (8)) + (get_global_id(0))]) + (b[(((10) - 1) * (8)) + (get_global_id(0))]) + 5.e-1 * (b[(((11) - 1) * (8)) + (get_global_id(0))]) + (b[(((12) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((16) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((14) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((15) - 1) * (8)) + (get_global_id(0))]);

  j = (e[(((1) - 1) * (8)) + (get_global_id(0))]) * ((x) * (1.0f / ((c[(((16) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  l = log10(fmax(j, t));
  m = 2.654e-1f * exp(((-g) * (1.0f / (9.4e1f)))) + 7.346e-1f * exp(((-g) * (1.0f / (1.756e3f)))) + exp(((-5.182e3f) * (1.0f / (g))));
  n = log10(fmax(m, t));
  o = 0.75 - 1.27 * n;
  p = l - (0.4 + 0.67 * n);
  s = ((p) * (1.0f / ((o - 0.14 * p))));
  q = ((n) * (1.0f / ((1.0 + s * s))));
  r = exp10(q);
  k = r * k;
  (c[(((16) - 1) * (8)) + (get_global_id(0))]) = (c[(((16) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((16) - 1) * (8)) + (get_global_id(0))]) = (d[(((16) - 1) * (8)) + (get_global_id(0))]) * k;

  j = (e[(((2) - 1) * (8)) + (get_global_id(0))]) * ((v) * (1.0f / ((c[(((31) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  l = log10(fmax(j, t));
  m = 6.8e-2f * exp(((-g) * (1.0f / (1.97e2f)))) + 9.32e-1f * exp(((-g) * (1.0f / (1.54e3f)))) + exp(((-1.03e4f) * (1.0f / (g))));
  n = log10(fmax(m, t));
  o = 0.75 - 1.27 * n;
  p = l - (0.4 + 0.67 * n);
  s = ((p) * (1.0f / ((o - 0.14 * p))));
  q = ((n) * (1.0f / ((1.0 + s * s))));
  r = exp10(q);
  k = r * k;
  (c[(((31) - 1) * (8)) + (get_global_id(0))]) = (c[(((31) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((31) - 1) * (8)) + (get_global_id(0))]) = (d[(((31) - 1) * (8)) + (get_global_id(0))]) * k;

  j = (e[(((3) - 1) * (8)) + (get_global_id(0))]) * ((v) * (1.0f / ((c[(((39) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  l = log10(fmax(j, t));
  m = 4.243e-1f * exp(((-g) * (1.0f / (2.37e2f)))) + 5.757e-1f * exp(((-g) * (1.0f / (1.652e3f)))) + exp(((-5.069e3f) * (1.0f / (g))));
  n = log10(fmax(m, t));
  o = 0.75 - 1.27 * n;
  p = l - (0.4 + 0.67 * n);
  s = ((p) * (1.0f / ((o - 0.14 * p))));
  q = ((n) * (1.0f / ((1.0 + s * s))));
  r = exp10(q);
  k = r * k;
  (c[(((39) - 1) * (8)) + (get_global_id(0))]) = (c[(((39) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((39) - 1) * (8)) + (get_global_id(0))]) = (d[(((39) - 1) * (8)) + (get_global_id(0))]) * k;

  j = (e[(((4) - 1) * (8)) + (get_global_id(0))]) * ((v) * (1.0f / ((c[(((41) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  l = log10(fmax(j, t));
  m = 2.176e-1f * exp(((-g) * (1.0f / (2.71e2f)))) + 7.824e-1f * exp(((-g) * (1.0f / (2.755e3f)))) + exp(((-6.57e3f) * (1.0f / (g))));
  n = log10(fmax(m, t));
  o = 0.75 - 1.27 * n;
  p = l - (0.4 + 0.67 * n);
  s = ((p) * (1.0f / ((o - 0.14 * p))));
  q = ((n) * (1.0f / ((1.0 + s * s))));
  r = exp10(q);
  k = r * k;
  (c[(((41) - 1) * (8)) + (get_global_id(0))]) = (c[(((41) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((41) - 1) * (8)) + (get_global_id(0))]) = (d[(((41) - 1) * (8)) + (get_global_id(0))]) * k;

  j = (e[(((5) - 1) * (8)) + (get_global_id(0))]) * ((v) * (1.0f / ((c[(((48) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  l = log10(fmax(j, t));
  m = 3.2e-1f * exp(((-g) * (1.0f / (7.8e1f)))) + 6.8e-1f * exp(((-g) * (1.0f / (1.995e3f)))) + exp(((-5.59e3f) * (1.0f / (g))));
  n = log10(fmax(m, t));
  o = 0.75 - 1.27 * n;
  p = l - (0.4 + 0.67 * n);
  s = ((p) * (1.0f / ((o - 0.14 * p))));
  q = ((n) * (1.0f / ((1.0 + s * s))));
  r = exp10(q);
  k = r * k;
  (c[(((48) - 1) * (8)) + (get_global_id(0))]) = (c[(((48) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((48) - 1) * (8)) + (get_global_id(0))]) = (d[(((48) - 1) * (8)) + (get_global_id(0))]) * k;

  j = (e[(((6) - 1) * (8)) + (get_global_id(0))]) * ((v) * (1.0f / ((c[(((56) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  l = log10(fmax(j, t));
  m = 4.093e-1f * exp(((-g) * (1.0f / (2.75e2f)))) + 5.907e-1f * exp(((-g) * (1.0f / (1.226e3f)))) + exp(((-5.185e3f) * (1.0f / (g))));
  n = log10(fmax(m, t));
  o = 0.75 - 1.27 * n;
  p = l - (0.4 + 0.67 * n);
  s = ((p) * (1.0f / ((o - 0.14 * p))));
  q = ((n) * (1.0f / ((1.0 + s * s))));
  r = exp10(q);
  k = r * k;
  (c[(((56) - 1) * (8)) + (get_global_id(0))]) = (c[(((56) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((56) - 1) * (8)) + (get_global_id(0))]) = (d[(((56) - 1) * (8)) + (get_global_id(0))]) * k;

  j = (e[(((7) - 1) * (8)) + (get_global_id(0))]) * ((v) * (1.0f / ((c[(((71) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  l = log10(fmax(j, t));
  m = 2.42e-1f * exp(((-g) * (1.0f / (9.4e1f)))) + 7.58e-1f * exp(((-g) * (1.0f / (1.555e3f)))) + exp(((-4.2e3f) * (1.0f / (g))));
  n = log10(fmax(m, t));
  o = 0.75 - 1.27 * n;
  p = l - (0.4 + 0.67 * n);
  s = ((p) * (1.0f / ((o - 0.14 * p))));
  q = ((n) * (1.0f / ((1.0 + s * s))));
  r = exp10(q);
  k = r * k;
  (c[(((71) - 1) * (8)) + (get_global_id(0))]) = (c[(((71) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((71) - 1) * (8)) + (get_global_id(0))]) = (d[(((71) - 1) * (8)) + (get_global_id(0))]) * k;

  j = (e[(((8) - 1) * (8)) + (get_global_id(0))]) * ((v) * (1.0f / ((c[(((78) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  l = log10(fmax(j, t));
  m = 2.17e-1f * exp(((-g) * (1.0f / (7.4e1f)))) + 7.83e-1f * exp(((-g) * (1.0f / (2.941e3f)))) + exp(((-6.964e3f) * (1.0f / (g))));
  n = log10(fmax(m, t));
  o = 0.75 - 1.27 * n;
  p = l - (0.4 + 0.67 * n);
  s = ((p) * (1.0f / ((o - 0.14 * p))));
  q = ((n) * (1.0f / ((1.0 + s * s))));
  r = exp10(q);
  k = r * k;
  (c[(((78) - 1) * (8)) + (get_global_id(0))]) = (c[(((78) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((78) - 1) * (8)) + (get_global_id(0))]) = (d[(((78) - 1) * (8)) + (get_global_id(0))]) * k;

  j = (e[(((9) - 1) * (8)) + (get_global_id(0))]) * ((v) * (1.0f / ((c[(((89) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  l = log10(fmax(j, t));
  m = 3.827e-1f * exp(((-g) * (1.0f / (1.3076e1f)))) + 6.173e-1f * exp(((-g) * (1.0f / (2.078e3f)))) + exp(((-5.093e3f) * (1.0f / (g))));
  n = log10(fmax(m, t));
  o = 0.75 - 1.27 * n;
  p = l - (0.4 + 0.67 * n);
  s = ((p) * (1.0f / ((o - 0.14 * p))));
  q = ((n) * (1.0f / ((1.0 + s * s))));
  r = exp10(q);
  k = r * k;
  (c[(((89) - 1) * (8)) + (get_global_id(0))]) = (c[(((89) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((89) - 1) * (8)) + (get_global_id(0))]) = (d[(((89) - 1) * (8)) + (get_global_id(0))]) * k;

  j = (e[(((10) - 1) * (8)) + (get_global_id(0))]) * ((v) * (1.0f / ((c[(((93) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  l = log10(fmax(j, t));
  m = 4.675e-1f * exp(((-g) * (1.0f / (1.51e2f)))) + 5.325e-1f * exp(((-g) * (1.0f / (1.038e3f)))) + exp(((-4.97e3f) * (1.0f / (g))));
  n = log10(fmax(m, t));
  o = 0.75 - 1.27 * n;
  p = l - (0.4 + 0.67 * n);
  s = ((p) * (1.0f / ((o - 0.14 * p))));
  q = ((n) * (1.0f / ((1.0 + s * s))));
  r = exp10(q);
  k = r * k;
  (c[(((93) - 1) * (8)) + (get_global_id(0))]) = (c[(((93) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((93) - 1) * (8)) + (get_global_id(0))]) = (d[(((93) - 1) * (8)) + (get_global_id(0))]) * k;

  j = (e[(((11) - 1) * (8)) + (get_global_id(0))]) * ((w) * (1.0f / ((c[(((114) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  (c[(((114) - 1) * (8)) + (get_global_id(0))]) = (c[(((114) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((114) - 1) * (8)) + (get_global_id(0))]) = (d[(((114) - 1) * (8)) + (get_global_id(0))]) * k;

  j = (e[(((12) - 1) * (8)) + (get_global_id(0))]) * ((v) * (1.0f / ((c[(((115) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  l = log10(fmax(j, t));
  m = -9.816e-1f * exp(((-g) * (1.0f / (5.3837e3f)))) + 1.9816e0f * exp(((-g) * (1.0f / (4.2932e0f)))) + exp(((7.95e-2f) * (1.0f / (g))));
  n = log10(fmax(m, t));
  o = 0.75 - 1.27 * n;
  p = l - (0.4 + 0.67 * n);
  s = ((p) * (1.0f / ((o - 0.14 * p))));
  q = ((n) * (1.0f / ((1.0 + s * s))));
  r = exp10(q);
  k = r * k;
  (c[(((115) - 1) * (8)) + (get_global_id(0))]) = (c[(((115) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((115) - 1) * (8)) + (get_global_id(0))]) = (d[(((115) - 1) * (8)) + (get_global_id(0))]) * k;
}
","[ 52   8   1 ...,   0 127   0]"
658,shoc-1.1.5-S3D-ratxb_kernel,default,1321,1,163,0,0,0,57594120,128,CPU,8.440195,13.828788000000001,"__kernel void A(__global const float* a, __global const float* b, __global float* c, __global float* d, __global const float* e, const float f) {
  const float g = a[get_global_id(0)] * f;
  const float h = log((g));
  float i = 0.0f;
  float j, k, l, m, n, o;
  float p, q, r, s;

  const float t = 0x1.0p-126f;

  for (unsigned int u = 1; u <= 22; u++) {
    i += (b[(((u)-1) * (8)) + (get_global_id(0))]);
  }

  float v = i - (b[(((1) - 1) * (8)) + (get_global_id(0))]) - (b[(((6) - 1) * (8)) + (get_global_id(0))]) + (b[(((10) - 1) * (8)) + (get_global_id(0))]) - (b[(((12) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((16) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((14) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((15) - 1) * (8)) + (get_global_id(0))]);
  float w = i - 2.7e-1f * (b[(((1) - 1) * (8)) + (get_global_id(0))]) + 2.65e0f * (b[(((6) - 1) * (8)) + (get_global_id(0))]) + (b[(((10) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((16) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((14) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((15) - 1) * (8)) + (get_global_id(0))]);
  float x = i + (b[(((1) - 1) * (8)) + (get_global_id(0))]) + 5.e0 * (b[(((6) - 1) * (8)) + (get_global_id(0))]) + (b[(((10) - 1) * (8)) + (get_global_id(0))]) + 5.e-1 * (b[(((11) - 1) * (8)) + (get_global_id(0))]) + (b[(((12) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((16) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((14) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((15) - 1) * (8)) + (get_global_id(0))]);
  float y = i + 1.4e0f * (b[(((1) - 1) * (8)) + (get_global_id(0))]) + 1.44e1f * (b[(((6) - 1) * (8)) + (get_global_id(0))]) + (b[(((10) - 1) * (8)) + (get_global_id(0))]) + 7.5e-1f * (b[(((11) - 1) * (8)) + (get_global_id(0))]) + 2.6e0f * (b[(((12) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((16) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((14) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((15) - 1) * (8)) + (get_global_id(0))]);
  float z = i - (b[(((4) - 1) * (8)) + (get_global_id(0))]) - (b[(((6) - 1) * (8)) + (get_global_id(0))]) - 2.5e-1f * (b[(((11) - 1) * (8)) + (get_global_id(0))]) + 5.e-1 * (b[(((12) - 1) * (8)) + (get_global_id(0))]) + 5.e-1 * (b[(((16) - 1) * (8)) + (get_global_id(0))]) - (b[(((22) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((14) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((15) - 1) * (8)) + (get_global_id(0))]);
  float aa = i + (b[(((1) - 1) * (8)) + (get_global_id(0))]) + 5.e0 * (b[(((4) - 1) * (8)) + (get_global_id(0))]) + 5.e0 * (b[(((6) - 1) * (8)) + (get_global_id(0))]) + (b[(((10) - 1) * (8)) + (get_global_id(0))]) + 5.e-1 * (b[(((11) - 1) * (8)) + (get_global_id(0))]) + 2.5e0f * (b[(((12) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((16) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((14) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((15) - 1) * (8)) + (get_global_id(0))]);
  float ab = i + (b[(((1) - 1) * (8)) + (get_global_id(0))]) + 5.e0 * (b[(((6) - 1) * (8)) + (get_global_id(0))]) + (b[(((10) - 1) * (8)) + (get_global_id(0))]) + 5.e-1 * (b[(((11) - 1) * (8)) + (get_global_id(0))]) + (b[(((12) - 1) * (8)) + (get_global_id(0))]) + 2.e0 * (b[(((16) - 1) * (8)) + (get_global_id(0))]);

  (c[(((5) - 1) * (8)) + (get_global_id(0))]) = (c[(((5) - 1) * (8)) + (get_global_id(0))]) * v * (b[(((2) - 1) * (8)) + (get_global_id(0))]) * (b[(((2) - 1) * (8)) + (get_global_id(0))]);
  (d[(((5) - 1) * (8)) + (get_global_id(0))]) = (d[(((5) - 1) * (8)) + (get_global_id(0))]) * v * (b[(((1) - 1) * (8)) + (get_global_id(0))]);
  (c[(((9) - 1) * (8)) + (get_global_id(0))]) = (c[(((9) - 1) * (8)) + (get_global_id(0))]) * w * (b[(((2) - 1) * (8)) + (get_global_id(0))]) * (b[(((5) - 1) * (8)) + (get_global_id(0))]);
  (d[(((9) - 1) * (8)) + (get_global_id(0))]) = (d[(((9) - 1) * (8)) + (get_global_id(0))]) * w * (b[(((6) - 1) * (8)) + (get_global_id(0))]);
  (c[(((10) - 1) * (8)) + (get_global_id(0))]) = (c[(((10) - 1) * (8)) + (get_global_id(0))]) * x * (b[(((3) - 1) * (8)) + (get_global_id(0))]) * (b[(((2) - 1) * (8)) + (get_global_id(0))]);
  (d[(((10) - 1) * (8)) + (get_global_id(0))]) = (d[(((10) - 1) * (8)) + (get_global_id(0))]) * x * (b[(((5) - 1) * (8)) + (get_global_id(0))]);
  (c[(((11) - 1) * (8)) + (get_global_id(0))]) = (c[(((11) - 1) * (8)) + (get_global_id(0))]) * y * (b[(((3) - 1) * (8)) + (get_global_id(0))]) * (b[(((3) - 1) * (8)) + (get_global_id(0))]);
  (d[(((11) - 1) * (8)) + (get_global_id(0))]) = (d[(((11) - 1) * (8)) + (get_global_id(0))]) * y * (b[(((4) - 1) * (8)) + (get_global_id(0))]);
  (c[(((12) - 1) * (8)) + (get_global_id(0))]) = (c[(((12) - 1) * (8)) + (get_global_id(0))]) * z * (b[(((2) - 1) * (8)) + (get_global_id(0))]) * (b[(((4) - 1) * (8)) + (get_global_id(0))]);
  (d[(((12) - 1) * (8)) + (get_global_id(0))]) = (d[(((12) - 1) * (8)) + (get_global_id(0))]) * z * (b[(((7) - 1) * (8)) + (get_global_id(0))]);
  (c[(((29) - 1) * (8)) + (get_global_id(0))]) = (c[(((29) - 1) * (8)) + (get_global_id(0))]) * aa * (b[(((11) - 1) * (8)) + (get_global_id(0))]) * (b[(((3) - 1) * (8)) + (get_global_id(0))]);
  (d[(((29) - 1) * (8)) + (get_global_id(0))]) = (d[(((29) - 1) * (8)) + (get_global_id(0))]) * aa * (b[(((12) - 1) * (8)) + (get_global_id(0))]);
  (c[(((46) - 1) * (8)) + (get_global_id(0))]) = (c[(((46) - 1) * (8)) + (get_global_id(0))]) * x;
  (d[(((46) - 1) * (8)) + (get_global_id(0))]) = (d[(((46) - 1) * (8)) + (get_global_id(0))]) * x * (b[(((11) - 1) * (8)) + (get_global_id(0))]) * (b[(((2) - 1) * (8)) + (get_global_id(0))]);
  (c[(((121) - 1) * (8)) + (get_global_id(0))]) = (c[(((121) - 1) * (8)) + (get_global_id(0))]) * i * (b[(((14) - 1) * (8)) + (get_global_id(0))]) * (b[(((9) - 1) * (8)) + (get_global_id(0))]);
  (d[(((121) - 1) * (8)) + (get_global_id(0))]) = (d[(((121) - 1) * (8)) + (get_global_id(0))]) * i * (b[(((20) - 1) * (8)) + (get_global_id(0))]);

  j = (e[(((13) - 1) * (8)) + (get_global_id(0))]) * ((x) * (1.0f / ((c[(((126) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  l = log10(fmax(j, t));
  m = 6.63e-1f * exp(((-g) * (1.0f / (1.707e3f)))) + 3.37e-1f * exp(((-g) * (1.0f / (3.2e3f)))) + exp(((-4.131e3f) * (1.0f / (g))));
  n = log10(fmax(m, t));
  o = 0.75 - 1.27 * n;
  p = l - (0.4 + 0.67 * n);
  s = ((p) * (1.0f / ((o - 0.14 * p))));
  q = ((n) * (1.0f / ((1.0 + s * s))));
  r = exp10(q);
  k = r * k;
  (c[(((126) - 1) * (8)) + (get_global_id(0))]) = (c[(((126) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((126) - 1) * (8)) + (get_global_id(0))]) = (d[(((126) - 1) * (8)) + (get_global_id(0))]) * k;

  j = (e[(((14) - 1) * (8)) + (get_global_id(0))]) * ((x) * (1.0f / ((c[(((132) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  l = log10(fmax(j, t));
  m = 2.18e-1f * exp(((-g) * (1.0f / (2.075e2f)))) + 7.82e-1f * exp(((-g) * (1.0f / (2.663e3f)))) + exp(((-6.095e3f) * (1.0f / (g))));
  n = log10(fmax(m, t));
  o = 0.75 - 1.27 * n;
  p = l - (0.4 + 0.67 * n);
  s = ((p) * (1.0f / ((o - 0.14 * p))));
  q = ((n) * (1.0f / ((1.0 + s * s))));
  r = exp10(q);
  k = r * k;
  (c[(((132) - 1) * (8)) + (get_global_id(0))]) = (c[(((132) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((132) - 1) * (8)) + (get_global_id(0))]) = (d[(((132) - 1) * (8)) + (get_global_id(0))]) * k;

  j = (e[(((15) - 1) * (8)) + (get_global_id(0))]) * ((x) * (1.0f / ((c[(((145) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  l = log10(fmax(j, t));
  m = 8.25e-1f * exp(((-g) * (1.0f / (1.3406e3f)))) + 1.75e-1f * exp(((-g) * (1.0f / (6.e4f)))) + exp(((-1.01398e4f) * (1.0f / (g))));
  n = log10(fmax(m, t));
  o = 0.75 - 1.27 * n;
  p = l - (0.4 + 0.67 * n);
  s = ((p) * (1.0f / ((o - 0.14 * p))));
  q = ((n) * (1.0f / ((1.0 + s * s))));
  r = exp10(q);
  k = r * k;
  (c[(((145) - 1) * (8)) + (get_global_id(0))]) = (c[(((145) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((145) - 1) * (8)) + (get_global_id(0))]) = (d[(((145) - 1) * (8)) + (get_global_id(0))]) * k;

  j = (e[(((16) - 1) * (8)) + (get_global_id(0))]) * ((x) * (1.0f / ((c[(((148) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  l = log10(fmax(j, t));
  m = 4.5e-1f * exp(((-g) * (1.0f / (8.9e3f)))) + 5.5e-1f * exp(((-g) * (1.0f / (4.35e3f)))) + exp(((-7.244e3f) * (1.0f / (g))));
  n = log10(fmax(m, t));
  o = 0.75 - 1.27 * n;
  p = l - (0.4 + 0.67 * n);
  s = ((p) * (1.0f / ((o - 0.14 * p))));
  q = ((n) * (1.0f / ((1.0 + s * s))));
  r = exp10(q);
  k = r * k;
  (c[(((148) - 1) * (8)) + (get_global_id(0))]) = (c[(((148) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((148) - 1) * (8)) + (get_global_id(0))]) = (d[(((148) - 1) * (8)) + (get_global_id(0))]) * k;

  j = (e[(((17) - 1) * (8)) + (get_global_id(0))]) * ((x) * (1.0f / ((c[(((155) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  l = log10(fmax(j, t));
  m = 2.655e-1f * exp(((-g) * (1.0f / (1.8e2f)))) + 7.345e-1f * exp(((-g) * (1.0f / (1.035e3f)))) + exp(((-5.417e3f) * (1.0f / (g))));
  n = log10(fmax(m, t));
  o = 0.75 - 1.27 * n;
  p = l - (0.4 + 0.67 * n);
  s = ((p) * (1.0f / ((o - 0.14 * p))));
  q = ((n) * (1.0f / ((1.0 + s * s))));
  r = exp10(q);
  k = r * k;
  (c[(((155) - 1) * (8)) + (get_global_id(0))]) = (c[(((155) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((155) - 1) * (8)) + (get_global_id(0))]) = (d[(((155) - 1) * (8)) + (get_global_id(0))]) * k;

  j = (e[(((18) - 1) * (8)) + (get_global_id(0))]) * ((x) * (1.0f / ((c[(((156) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  l = log10(fmax(j, t));
  m = 2.47e-2f * exp(((-g) * (1.0f / (2.1e2f)))) + 9.753e-1f * exp(((-g) * (1.0f / (9.84e2f)))) + exp(((-4.374e3f) * (1.0f / (g))));
  n = log10(fmax(m, t));
  o = 0.75 - 1.27 * n;
  p = l - (0.4 + 0.67 * n);
  s = ((p) * (1.0f / ((o - 0.14 * p))));
  q = ((n) * (1.0f / ((1.0 + s * s))));
  r = exp10(q);
  k = r * k;
  (c[(((156) - 1) * (8)) + (get_global_id(0))]) = (c[(((156) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((156) - 1) * (8)) + (get_global_id(0))]) = (d[(((156) - 1) * (8)) + (get_global_id(0))]) * k;

  j = (e[(((19) - 1) * (8)) + (get_global_id(0))]) * ((x) * (1.0f / ((c[(((170) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  l = log10(fmax(j, t));
  m = 1.578e-1f * exp(((-g) * (1.0f / (1.25e2f)))) + 8.422e-1f * exp(((-g) * (1.0f / (2.219e3f)))) + exp(((-6.882e3f) * (1.0f / (g))));
  n = log10(fmax(m, t));
  o = 0.75 - 1.27 * n;
  p = l - (0.4 + 0.67 * n);
  s = ((p) * (1.0f / ((o - 0.14 * p))));
  q = ((n) * (1.0f / ((1.0 + s * s))));
  r = exp10(q);
  k = r * k;
  (c[(((170) - 1) * (8)) + (get_global_id(0))]) = (c[(((170) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((170) - 1) * (8)) + (get_global_id(0))]) = (d[(((170) - 1) * (8)) + (get_global_id(0))]) * k;

  j = (e[(((20) - 1) * (8)) + (get_global_id(0))]) * ((x) * (1.0f / ((c[(((185) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  l = log10(fmax(j, t));
  m = 9.8e-1f * exp(((-g) * (1.0f / (1.0966e3f)))) + 2.e-2 * exp(((-g) * (1.0f / (1.0966e3f)))) + exp(((-6.8595e3f) * (1.0f / (g))));
  n = log10(fmax(m, t));
  o = 0.75 - 1.27 * n;
  p = l - (0.4 + 0.67 * n);
  s = ((p) * (1.0f / ((o - 0.14 * p))));
  q = ((n) * (1.0f / ((1.0 + s * s))));
  r = exp10(q);
  k = r * k;
  (c[(((185) - 1) * (8)) + (get_global_id(0))]) = (c[(((185) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((185) - 1) * (8)) + (get_global_id(0))]) = (d[(((185) - 1) * (8)) + (get_global_id(0))]) * k;

  j = (e[(((21) - 1) * (8)) + (get_global_id(0))]) * ((ab) * (1.0f / ((c[(((190) - 1) * (8)) + (get_global_id(0))]))));
  k = ((j) * (1.0f / ((1.0 + j))));
  l = log10(fmax(j, t));
  m = 0.e0 * exp(((-g) * (1.0f / (1.e3f)))) + 1.e0 * exp(((-g) * (1.0f / (1.31e3f)))) + exp(((-4.8097e4f) * (1.0f / (g))));
  n = log10(fmax(m, t));
  o = 0.75 - 1.27 * n;
  p = l - (0.4 + 0.67 * n);
  s = ((p) * (1.0f / ((o - 0.14 * p))));
  q = ((n) * (1.0f / ((1.0 + s * s))));
  r = exp10(q);
  k = r * k;
  (c[(((190) - 1) * (8)) + (get_global_id(0))]) = (c[(((190) - 1) * (8)) + (get_global_id(0))]) * k;
  (d[(((190) - 1) * (8)) + (get_global_id(0))]) = (d[(((190) - 1) * (8)) + (get_global_id(0))]) * k;
}
","[  1  17  13 ...,   0 127   0]"
659,shoc-1.1.5-S3D-rdsmh_kernel,default,1878,1,63,0,0,0,57594120,128,CPU,6.483251999999999,13.753116,"__kernel void A(__global const float* a, __global float* b, const float c) {
  const float d = a[get_global_id(0)] * c;
  const float e = log((d));
  const float f = 1.0e0f / (d);

  const float g = e - 1.0;

  if ((d) > 1.0e3f) {
    (b[(((1) - 1) * (8)) + (get_global_id(0))]) = exp(-3.20502331e+00f + 9.50158922e+02f * f + 3.33727920e+00f * g + A(d, -2.47012365e-05f, +8.32427963e-08f, -1.49638662e-11f, +1.00127688e-15f));
    (b[(((2) - 1) * (8)) + (get_global_id(0))]) = exp(-4.46682914e-01f - 2.54736599e+04f * f + 2.50000001e+00f * g + A(d, -1.15421486e-11f, +2.69269913e-15f, -3.94596029e-19f, +2.49098679e-23f));
    (b[(((3) - 1) * (8)) + (get_global_id(0))]) = exp(4.78433864e+00f - 2.92175791e+04f * f + 2.56942078e+00f * g + A(d, -4.29870569e-05f, +6.99140982e-09f, -8.34814992e-13f, +6.14168455e-17f));
    (b[(((4) - 1) * (8)) + (get_global_id(0))]) = exp(5.45323129e+00f + 1.08845772e+03f * f + 3.28253784e+00f * g + A(d, +7.41543770e-04f, -1.26327778e-07f, +1.74558796e-11f, -1.08358897e-15f));
    (b[(((5) - 1) * (8)) + (get_global_id(0))]) = exp(4.47669610e+00f - 3.85865700e+03f * f + 3.09288767e+00f * g + A(d, +2.74214858e-04f, +2.10842047e-08f, -7.32884630e-12f, +5.87061880e-16f));
    (b[(((6) - 1) * (8)) + (get_global_id(0))]) = exp(4.96677010e+00f + 3.00042971e+04f * f + 3.03399249e+00f * g + A(d, +1.08845902e-03f, -2.73454197e-08f, -8.08683225e-12f, +8.41004960e-16f));
    (b[(((7) - 1) * (8)) + (get_global_id(0))]) = exp(3.78510215e+00f - 1.11856713e+02f * f + 4.01721090e+00f * g + A(d, +1.11991007e-03f, -1.05609692e-07f, +9.52053083e-12f, -5.39542675e-16f));
    (b[(((8) - 1) * (8)) + (get_global_id(0))]) = exp(2.91615662e+00f + 1.78617877e+04f * f + 4.16500285e+00f * g + A(d, +2.45415847e-03f, -3.16898708e-07f, +3.09321655e-11f, -1.43954153e-15f));
    (b[(((9) - 1) * (8)) + (get_global_id(0))]) = exp(5.48497999e+00f - 7.10124364e+04f * f + 2.87846473e+00f * g + A(d, +4.85456841e-04f, +2.40742758e-08f, -1.08906541e-11f, +8.80396915e-16f));
    (b[(((10) - 1) * (8)) + (get_global_id(0))]) = exp(6.17119324e+00f - 4.62636040e+04f * f + 2.87410113e+00f * g + A(d, +1.82819646e-03f, -2.34824328e-07f, +2.16816291e-11f, -9.38637835e-16f));
    (b[(((11) - 1) * (8)) + (get_global_id(0))]) = exp(8.62650169e+00f - 5.09259997e+04f * f + 2.29203842e+00f * g + A(d, +2.32794319e-03f, -3.35319912e-07f, +3.48255000e-11f, -1.69858183e-15f));
    (b[(((12) - 1) * (8)) + (get_global_id(0))]) = exp(8.48007179e+00f - 1.67755843e+04f * f + 2.28571772e+00f * g + A(d, +3.61995018e-03f, -4.97857247e-07f, +4.96403870e-11f, -2.33577197e-15f));
    (b[(((13) - 1) * (8)) + (get_global_id(0))]) = exp(1.84373180e+01f + 9.46834459e+03f * f + 7.48514950e-02f * g + A(d, +6.69547335e-03f, -9.55476348e-07f, +1.01910446e-10f, -5.09076150e-15f));
    (b[(((14) - 1) * (8)) + (get_global_id(0))]) = exp(7.81868772e+00f + 1.41518724e+04f * f + 2.71518561e+00f * g + A(d, +1.03126372e-03f, -1.66470962e-07f, +1.91710840e-11f, -1.01823858e-15f));
    (b[(((15) - 1) * (8)) + (get_global_id(0))]) = exp(2.27163806e+00f + 4.87591660e+04f * f + 3.85746029e+00f * g + A(d, +2.20718513e-03f, -3.69135673e-07f, +4.36241823e-11f, -2.36042082e-15f));
    (b[(((16) - 1) * (8)) + (get_global_id(0))]) = exp(9.79834492e+00f - 4.01191815e+03f * f + 2.77217438e+00f * g + A(d, +2.47847763e-03f, -4.14076022e-07f, +4.90968148e-11f, -2.66754356e-15f));
    (b[(((17) - 1) * (8)) + (get_global_id(0))]) = exp(1.36563230e+01f + 1.39958323e+04f * f + 1.76069008e+00f * g + A(d, +4.60000041e-03f, -7.37098022e-07f, +8.38676767e-11f, -4.41927820e-15f));
    (b[(((18) - 1) * (8)) + (get_global_id(0))]) = exp(2.92957500e+00f - 1.27832520e+02f * f + 3.77079900e+00f * g + A(d, +3.93574850e-03f, -4.42730667e-07f, +3.28702583e-11f, -1.05630800e-15f));
    (b[(((19) - 1) * (8)) + (get_global_id(0))]) = exp(-1.23028121e+00f - 2.59359992e+04f * f + 4.14756964e+00f * g + A(d, +2.98083332e-03f, -3.95491420e-07f, +3.89510143e-11f, -1.80617607e-15f));
    (b[(((20) - 1) * (8)) + (get_global_id(0))]) = exp(6.40237010e-01f - 4.83166880e+04f * f + 4.27803400e+00f * g + A(d, +2.37814020e-03f, -2.71683483e-07f, +2.12190050e-11f, -7.44318950e-16f));
    (b[(((21) - 1) * (8)) + (get_global_id(0))]) = exp(7.78732378e+00f - 3.46128739e+04f * f + 3.01672400e+00f * g + A(d, +5.16511460e-03f, -7.80137248e-07f, +8.48027400e-11f, -4.31303520e-15f));
    (b[(((22) - 1) * (8)) + (get_global_id(0))]) = exp(1.03053693e+01f - 4.93988614e+03f * f + 2.03611116e+00f * g + A(d, +7.32270755e-03f, -1.11846319e-06f, +1.22685769e-10f, -6.28530305e-15f));
    (b[(((23) - 1) * (8)) + (get_global_id(0))]) = exp(1.34624343e+01f - 1.28575200e+04f * f + 1.95465642e+00f * g + A(d, +8.69863610e-03f, -1.33034445e-06f, +1.46014741e-10f, -7.48207880e-15f));
    (b[(((24) - 1) * (8)) + (get_global_id(0))]) = exp(1.51156107e+01f + 1.14263932e+04f * f + 1.07188150e+00f * g + A(d, +1.08426339e-02f, -1.67093445e-06f, +1.84510001e-10f, -9.50014450e-15f));
    (b[(((25) - 1) * (8)) + (get_global_id(0))]) = exp(-3.93025950e+00f - 1.93272150e+04f * f + 5.62820580e+00f * g + A(d, +2.04267005e-03f, -2.65575783e-07f, +2.38550433e-11f, -9.70391600e-16f));
    (b[(((26) - 1) * (8)) + (get_global_id(0))]) = exp(6.32247205e-01f + 7.55105311e+03f * f + 4.51129732e+00f * g + A(d, +4.50179872e-03f, -6.94899392e-07f, +7.69454902e-11f, -3.97419100e-15f));
    (b[(((27) - 1) * (8)) + (get_global_id(0))]) = exp(-5.03208790e+00f - 4.90321780e+02f * f + 5.97566990e+00f * g + A(d, +4.06529570e-03f, -4.57270750e-07f, +3.39192008e-11f, -1.08800855e-15f));
    (b[(((28) - 1) * (8)) + (get_global_id(0))]) = exp(-3.48079170e+00f + 2.25931220e+04f * f + 5.40411080e+00f * g + A(d, +5.86152950e-03f, -7.04385617e-07f, +5.69770425e-11f, -2.04924315e-15f));
    (b[(((29) - 1) * (8)) + (get_global_id(0))]) = exp(-1.12430500e+01f - 1.74824490e+04f * f + 6.50078770e+00f * g + A(d, +7.16236550e-03f, -9.46360533e-07f, +9.23400083e-11f, -4.51819435e-15f));
    (b[(((30) - 1) * (8)) + (get_global_id(0))]) = exp(-1.33133500e+01f + 9.23570300e+02f * f + 6.73225700e+00f * g + A(d, +7.45417000e-03f, -8.24983167e-07f, +6.01001833e-11f, -1.88310200e-15f));
    (b[(((31) - 1) * (8)) + (get_global_id(0))]) = exp(-1.55152970e+01f - 7.97622360e+03f * f + 7.70974790e+00f * g + A(d, +8.01574250e-03f, -8.78670633e-07f, +6.32402933e-11f, -1.94313595e-15f));
  } else {
    (b[(((1) - 1) * (8)) + (get_global_id(0))]) = exp(6.83010238e-01f + 9.17935173e+02f * f + 2.34433112e+00f * g + A(d, +3.99026037e-03f, -3.24635850e-06f, +1.67976745e-09f, -3.68805881e-13f));
    (b[(((2) - 1) * (8)) + (get_global_id(0))]) = exp(-4.46682853e-01f - 2.54736599e+04f * f + 2.50000000e+00f * g + A(d, +3.52666409e-13f, -3.32653273e-16f, +1.91734693e-19f, -4.63866166e-23f));
    (b[(((3) - 1) * (8)) + (get_global_id(0))]) = exp(2.05193346e+00f - 2.91222592e+04f * f + 3.16826710e+00f * g + A(d, -1.63965942e-03f, +1.10717733e-06f, -5.10672187e-10f, +1.05632986e-13f));
    (b[(((4) - 1) * (8)) + (get_global_id(0))]) = exp(3.65767573e+00f + 1.06394356e+03f * f + 3.78245636e+00f * g + A(d, -1.49836708e-03f, +1.64121700e-06f, -8.06774591e-10f, +1.62186419e-13f));
    (b[(((5) - 1) * (8)) + (get_global_id(0))]) = exp(-1.03925458e-01f - 3.61508056e+03f * f + 3.99201543e+00f * g + A(d, -1.20065876e-03f, +7.69656402e-07f, -3.23427778e-10f, +6.82057350e-14f));
    (b[(((6) - 1) * (8)) + (get_global_id(0))]) = exp(-8.49032208e-01f + 3.02937267e+04f * f + 4.19864056e+00f * g + A(d, -1.01821705e-03f, +1.08673369e-06f, -4.57330885e-10f, +8.85989085e-14f));
    (b[(((7) - 1) * (8)) + (get_global_id(0))]) = exp(3.71666245e+00f - 2.94808040e+02f * f + 4.30179801e+00f * g + A(d, -2.37456025e-03f, +3.52638152e-06f, -2.02303245e-09f, +4.64612562e-13f));
    (b[(((8) - 1) * (8)) + (get_global_id(0))]) = exp(3.43505074e+00f + 1.77025821e+04f * f + 4.27611269e+00f * g + A(d, -2.71411208e-04f, +2.78892835e-06f, -1.79809011e-09f, +4.31227182e-13f));
    (b[(((9) - 1) * (8)) + (get_global_id(0))]) = exp(2.08401108e+00f - 7.07972934e+04f * f + 3.48981665e+00f * g + A(d, +1.61917771e-04f, -2.81498442e-07f, +2.63514439e-10f, -7.03045335e-14f));
    (b[(((10) - 1) * (8)) + (get_global_id(0))]) = exp(1.56253185e+00f - 4.60040401e+04f * f + 3.76267867e+00f * g + A(d, +4.84436072e-04f, +4.65816402e-07f, -3.20909294e-10f, +8.43708595e-14f));
    (b[(((11) - 1) * (8)) + (get_global_id(0))]) = exp(-7.69118967e-01f - 5.04968163e+04f * f + 4.19860411e+00f * g + A(d, -1.18330710e-03f, +1.37216037e-06f, -5.57346651e-10f, +9.71573685e-14f));
    (b[(((12) - 1) * (8)) + (get_global_id(0))]) = exp(1.60456433e+00f - 1.64449988e+04f * f + 3.67359040e+00f * g + A(d, +1.00547588e-03f, +9.55036427e-07f, -5.72597854e-10f, +1.27192867e-13f));
    (b[(((13) - 1) * (8)) + (get_global_id(0))]) = exp(-4.64130376e+00f + 1.02466476e+04f * f + 5.14987613e+00f * g + A(d, -6.83548940e-03f, +8.19667665e-06f, -4.03952522e-09f, +8.33469780e-13f));
    (b[(((14) - 1) * (8)) + (get_global_id(0))]) = exp(3.50840928e+00f + 1.43440860e+04f * f + 3.57953347e+00f * g + A(d, -3.05176840e-04f, +1.69469055e-07f, +7.55838237e-11f, -4.52212249e-14f));
    (b[(((15) - 1) * (8)) + (get_global_id(0))]) = exp(9.90105222e+00f + 4.83719697e+04f * f + 2.35677352e+00f * g + A(d, +4.49229839e-03f, -1.18726045e-06f, +2.04932518e-10f, -7.18497740e-15f));
    (b[(((16) - 1) * (8)) + (get_global_id(0))]) = exp(3.39437243e+00f - 3.83956496e+03f * f + 4.22118584e+00f * g + A(d, -1.62196266e-03f, +2.29665743e-06f, -1.10953411e-09f, +2.16884433e-13f));
    (b[(((17) - 1) * (8)) + (get_global_id(0))]) = exp(6.02812900e-01f + 1.43089567e+04f * f + 4.79372315e+00f * g + A(d, -4.95416685e-03f, +6.22033347e-06f, -3.16071051e-09f, +6.58863260e-13f));
    (b[(((18) - 1) * (8)) + (get_global_id(0))]) = exp(1.31521770e+01f - 9.78601100e+02f * f + 2.10620400e+00f * g + A(d, +3.60829750e-03f, +8.89745333e-07f, -6.14803000e-10f, +1.03780500e-13f));
    (b[(((19) - 1) * (8)) + (get_global_id(0))]) = exp(1.39397051e+01f - 2.64289807e+04f * f + 8.08681094e-01f * g + A(d, +1.16807815e-02f, -5.91953025e-06f, +2.33460364e-09f, -4.25036487e-13f));
    (b[(((20) - 1) * (8)) + (get_global_id(0))]) = exp(5.92039100e+00f - 4.86217940e+04f * f + 3.28154830e+00f * g + A(d, +3.48823955e-03f, -3.97587400e-07f, -1.00870267e-10f, +4.90947725e-14f));
    (b[(((21) - 1) * (8)) + (get_global_id(0))]) = exp(8.51054025e+00f - 3.48598468e+04f * f + 3.21246645e+00f * g + A(d, +7.57395810e-04f, +4.32015687e-06f, -2.98048206e-09f, +7.35754365e-13f));
    (b[(((22) - 1) * (8)) + (get_global_id(0))]) = exp(4.09733096e+00f - 5.08977593e+03f * f + 3.95920148e+00f * g + A(d, -3.78526124e-03f, +9.51650487e-06f, -5.76323961e-09f, +1.34942187e-12f));
    (b[(((23) - 1) * (8)) + (get_global_id(0))]) = exp(4.70720924e+00f - 1.28416265e+04f * f + 4.30646568e+00f * g + A(d, -2.09329446e-03f, +8.28571345e-06f, -4.99272172e-09f, +1.15254502e-12f));
    (b[(((24) - 1) * (8)) + (get_global_id(0))]) = exp(2.66682316e+00f + 1.15222055e+04f * f + 4.29142492e+00f * g + A(d, -2.75077135e-03f, +9.99063813e-06f, -5.90388571e-09f, +1.34342886e-12f));
    (b[(((25) - 1) * (8)) + (get_global_id(0))]) = exp(1.24904170e+01f - 2.00594490e+04f * f + 2.25172140e+00f * g + A(d, +8.82751050e-03f, -3.95485017e-06f, +1.43964658e-09f, -2.53324055e-13f));
    (b[(((26) - 1) * (8)) + (get_global_id(0))]) = exp(1.22156480e+01f + 7.04291804e+03f * f + 2.13583630e+00f * g + A(d, +9.05943605e-03f, -2.89912457e-06f, +7.78664640e-10f, -1.00728807e-13f));
    (b[(((27) - 1) * (8)) + (get_global_id(0))]) = exp(9.57145350e+00f - 1.52147660e+03f * f + 3.40906240e+00f * g + A(d, +5.36928700e-03f, +3.15248750e-07f, +5.96548592e-10f, +1.43369255e-13f));
    (b[(((28) - 1) * (8)) + (get_global_id(0))]) = exp(4.10301590e+00f + 2.15728780e+04f * f + 4.72945950e+00f * g + A(d, -1.59664290e-03f, +7.92248683e-06f, -4.78821758e-09f, +1.09655560e-12f));
    (b[(((29) - 1) * (8)) + (get_global_id(0))]) = exp(1.71732140e+01f - 1.92456290e+04f * f + 1.36318350e+00f * g + A(d, +9.90691050e-03f, +2.08284333e-06f, -2.77962958e-09f, +7.92328550e-13f));
    (b[(((30) - 1) * (8)) + (get_global_id(0))]) = exp(1.61453400e+01f - 1.07482600e+03f * f + 1.49330700e+00f * g + A(d, +1.04625900e-02f, +7.47799000e-07f, -1.39076000e-09f, +3.57907300e-13f));
    (b[(((31) - 1) * (8)) + (get_global_id(0))]) = exp(2.11360340e+01f - 1.03123460e+04f * f + 1.04911730e+00f * g + A(d, +1.30044865e-02f, +3.92375267e-07f, -1.63292767e-09f, +4.68601035e-13f));
  }
}","[ 18  78   1 ..., 127   0 127]"
660,shoc-1.1.5-S3D-rdwdot10_kernel,default,1072,0,272,0,4,0,57594120,128,CPU,6.9780789999999975,13.791314999999999,"__kernel void A(__global const float* a, __global const float* b, __global float* c, const float d, __global const float* e) {
  float f = ((a[(((12) - 1) * (8)) + (get_global_id(0))]) - (b[(((12) - 1) * (8)) + (get_global_id(0))])) + ((a[(((13) - 1) * (8)) + (get_global_id(0))]) - (b[(((13) - 1) * (8)) + (get_global_id(0))])) + ((a[(((14) - 1) * (8)) + (get_global_id(0))]) - (b[(((14) - 1) * (8)) + (get_global_id(0))])) + ((a[(((15) - 1) * (8)) + (get_global_id(0))]) - (b[(((15) - 1) * (8)) + (get_global_id(0))]));
  float g = ((a[(((22) - 1) * (8)) + (get_global_id(0))]) - (b[(((22) - 1) * (8)) + (get_global_id(0))])) + ((a[(((23) - 1) * (8)) + (get_global_id(0))]) - (b[(((23) - 1) * (8)) + (get_global_id(0))]));
  float h = ((a[(((27) - 1) * (8)) + (get_global_id(0))]) - (b[(((27) - 1) * (8)) + (get_global_id(0))])) + ((a[(((28) - 1) * (8)) + (get_global_id(0))]) - (b[(((28) - 1) * (8)) + (get_global_id(0))]));
  float i = ((a[(((5) - 1) * (8)) + (get_global_id(0))]) - (b[(((5) - 1) * (8)) + (get_global_id(0))])) + ((a[(((6) - 1) * (8)) + (get_global_id(0))]) - (b[(((6) - 1) * (8)) + (get_global_id(0))])) + ((a[(((7) - 1) * (8)) + (get_global_id(0))]) - (b[(((7) - 1) * (8)) + (get_global_id(0))])) + ((a[(((8) - 1) * (8)) + (get_global_id(0))]) - (b[(((8) - 1) * (8)) + (get_global_id(0))]));

  (c[(((1) - 1) * (8)) + (get_global_id(0))]) =
      (-((a[(((2) - 1) * (8)) + (get_global_id(0))]) - (b[(((2) - 1) * (8)) + (get_global_id(0))])) - ((a[(((3) - 1) * (8)) + (get_global_id(0))]) - (b[(((3) - 1) * (8)) + (get_global_id(0))])) + i + ((a[(((18) - 1) * (8)) + (get_global_id(0))]) - (b[(((18) - 1) * (8)) + (get_global_id(0))])) + ((a[(((24) - 1) * (8)) + (get_global_id(0))]) - (b[(((24) - 1) * (8)) + (get_global_id(0))])) - ((a[(((31) - 1) * (8)) + (get_global_id(0))]) - (b[(((31) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((36) - 1) * (8)) + (get_global_id(0))]) - (b[(((36) - 1) * (8)) + (get_global_id(0))])) + ((a[(((42) - 1) * (8)) + (get_global_id(0))]) - (b[(((42) - 1) * (8)) + (get_global_id(0))])) - ((a[(((49) - 1) * (8)) + (get_global_id(0))]) - (b[(((49) - 1) * (8)) + (get_global_id(0))])) + ((a[(((58) - 1) * (8)) + (get_global_id(0))]) - (b[(((58) - 1) * (8)) + (get_global_id(0))])) + ((a[(((60) - 1) * (8)) + (get_global_id(0))]) - (b[(((60) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((61) - 1) * (8)) + (get_global_id(0))]) - (b[(((61) - 1) * (8)) + (get_global_id(0))])) - ((a[(((64) - 1) * (8)) + (get_global_id(0))]) - (b[(((64) - 1) * (8)) + (get_global_id(0))])) + ((a[(((72) - 1) * (8)) + (get_global_id(0))]) - (b[(((72) - 1) * (8)) + (get_global_id(0))])) + ((a[(((96) - 1) * (8)) + (get_global_id(0))]) - (b[(((96) - 1) * (8)) + (get_global_id(0))])) + ((a[(((102) - 1) * (8)) + (get_global_id(0))]) - (b[(((102) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((127) - 1) * (8)) + (get_global_id(0))]) - (b[(((127) - 1) * (8)) + (get_global_id(0))])) + ((a[(((133) - 1) * (8)) + (get_global_id(0))]) - (b[(((133) - 1) * (8)) + (get_global_id(0))])) + ((a[(((134) - 1) * (8)) + (get_global_id(0))]) - (b[(((134) - 1) * (8)) + (get_global_id(0))])) + ((a[(((150) - 1) * (8)) + (get_global_id(0))]) - (b[(((150) - 1) * (8)) + (get_global_id(0))])) + ((a[(((155) - 1) * (8)) + (get_global_id(0))]) - (b[(((155) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((157) - 1) * (8)) + (get_global_id(0))]) - (b[(((157) - 1) * (8)) + (get_global_id(0))])) + ((a[(((171) - 1) * (8)) + (get_global_id(0))]) - (b[(((171) - 1) * (8)) + (get_global_id(0))])) + ((a[(((180) - 1) * (8)) + (get_global_id(0))]) - (b[(((180) - 1) * (8)) + (get_global_id(0))])) + ((a[(((192) - 1) * (8)) + (get_global_id(0))]) - (b[(((192) - 1) * (8)) + (get_global_id(0))])) + ((a[(((200) - 1) * (8)) + (get_global_id(0))]) - (b[(((200) - 1) * (8)) + (get_global_id(0))]))) *
      d * e[0];

  (c[(((3) - 1) * (8)) + (get_global_id(0))]) =
      (+((a[(((1) - 1) * (8)) + (get_global_id(0))]) - (b[(((1) - 1) * (8)) + (get_global_id(0))])) - ((a[(((2) - 1) * (8)) + (get_global_id(0))]) - (b[(((2) - 1) * (8)) + (get_global_id(0))])) + ((a[(((4) - 1) * (8)) + (get_global_id(0))]) - (b[(((4) - 1) * (8)) + (get_global_id(0))])) - ((a[(((10) - 1) * (8)) + (get_global_id(0))]) - (b[(((10) - 1) * (8)) + (get_global_id(0))])) - ((a[(((11) - 1) * (8)) + (get_global_id(0))]) - (b[(((11) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((11) - 1) * (8)) + (get_global_id(0))]) - (b[(((11) - 1) * (8)) + (get_global_id(0))])) + ((a[(((17) - 1) * (8)) + (get_global_id(0))]) - (b[(((17) - 1) * (8)) + (get_global_id(0))])) - ((a[(((20) - 1) * (8)) + (get_global_id(0))]) - (b[(((20) - 1) * (8)) + (get_global_id(0))])) - ((a[(((26) - 1) * (8)) + (get_global_id(0))]) - (b[(((26) - 1) * (8)) + (get_global_id(0))])) - ((a[(((29) - 1) * (8)) + (get_global_id(0))]) - (b[(((29) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((32) - 1) * (8)) + (get_global_id(0))]) - (b[(((32) - 1) * (8)) + (get_global_id(0))])) - ((a[(((34) - 1) * (8)) + (get_global_id(0))]) - (b[(((34) - 1) * (8)) + (get_global_id(0))])) + ((a[(((38) - 1) * (8)) + (get_global_id(0))]) - (b[(((38) - 1) * (8)) + (get_global_id(0))])) - ((a[(((43) - 1) * (8)) + (get_global_id(0))]) - (b[(((43) - 1) * (8)) + (get_global_id(0))])) - ((a[(((44) - 1) * (8)) + (get_global_id(0))]) - (b[(((44) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((50) - 1) * (8)) + (get_global_id(0))]) - (b[(((50) - 1) * (8)) + (get_global_id(0))])) - ((a[(((61) - 1) * (8)) + (get_global_id(0))]) - (b[(((61) - 1) * (8)) + (get_global_id(0))])) - ((a[(((62) - 1) * (8)) + (get_global_id(0))]) - (b[(((62) - 1) * (8)) + (get_global_id(0))])) - ((a[(((73) - 1) * (8)) + (get_global_id(0))]) - (b[(((73) - 1) * (8)) + (get_global_id(0))])) - ((a[(((79) - 1) * (8)) + (get_global_id(0))]) - (b[(((79) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((82) - 1) * (8)) + (get_global_id(0))]) - (b[(((82) - 1) * (8)) + (get_global_id(0))])) - ((a[(((99) - 1) * (8)) + (get_global_id(0))]) - (b[(((99) - 1) * (8)) + (get_global_id(0))])) - ((a[(((103) - 1) * (8)) + (get_global_id(0))]) - (b[(((103) - 1) * (8)) + (get_global_id(0))])) - ((a[(((109) - 1) * (8)) + (get_global_id(0))]) - (b[(((109) - 1) * (8)) + (get_global_id(0))])) - ((a[(((116) - 1) * (8)) + (get_global_id(0))]) - (b[(((116) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((117) - 1) * (8)) + (get_global_id(0))]) - (b[(((117) - 1) * (8)) + (get_global_id(0))])) - ((a[(((123) - 1) * (8)) + (get_global_id(0))]) - (b[(((123) - 1) * (8)) + (get_global_id(0))])) - ((a[(((129) - 1) * (8)) + (get_global_id(0))]) - (b[(((129) - 1) * (8)) + (get_global_id(0))])) - ((a[(((130) - 1) * (8)) + (get_global_id(0))]) - (b[(((130) - 1) * (8)) + (get_global_id(0))])) - ((a[(((135) - 1) * (8)) + (get_global_id(0))]) - (b[(((135) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((136) - 1) * (8)) + (get_global_id(0))]) - (b[(((136) - 1) * (8)) + (get_global_id(0))])) + ((a[(((139) - 1) * (8)) + (get_global_id(0))]) - (b[(((139) - 1) * (8)) + (get_global_id(0))])) - ((a[(((151) - 1) * (8)) + (get_global_id(0))]) - (b[(((151) - 1) * (8)) + (get_global_id(0))])) - ((a[(((158) - 1) * (8)) + (get_global_id(0))]) - (b[(((158) - 1) * (8)) + (get_global_id(0))])) - ((a[(((159) - 1) * (8)) + (get_global_id(0))]) - (b[(((159) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((160) - 1) * (8)) + (get_global_id(0))]) - (b[(((160) - 1) * (8)) + (get_global_id(0))])) - ((a[(((172) - 1) * (8)) + (get_global_id(0))]) - (b[(((172) - 1) * (8)) + (get_global_id(0))])) - ((a[(((173) - 1) * (8)) + (get_global_id(0))]) - (b[(((173) - 1) * (8)) + (get_global_id(0))])) - ((a[(((181) - 1) * (8)) + (get_global_id(0))]) - (b[(((181) - 1) * (8)) + (get_global_id(0))])) - ((a[(((193) - 1) * (8)) + (get_global_id(0))]) - (b[(((193) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((194) - 1) * (8)) + (get_global_id(0))]) - (b[(((194) - 1) * (8)) + (get_global_id(0))])) - ((a[(((195) - 1) * (8)) + (get_global_id(0))]) - (b[(((195) - 1) * (8)) + (get_global_id(0))])) - ((a[(((201) - 1) * (8)) + (get_global_id(0))]) - (b[(((201) - 1) * (8)) + (get_global_id(0))]))) *
      d * e[2];

  (c[(((4) - 1) * (8)) + (get_global_id(0))]) =
      (-((a[(((1) - 1) * (8)) + (get_global_id(0))]) - (b[(((1) - 1) * (8)) + (get_global_id(0))])) + ((a[(((11) - 1) * (8)) + (get_global_id(0))]) - (b[(((11) - 1) * (8)) + (get_global_id(0))])) - f + ((a[(((18) - 1) * (8)) + (get_global_id(0))]) - (b[(((18) - 1) * (8)) + (get_global_id(0))])) + ((a[(((20) - 1) * (8)) + (get_global_id(0))]) - (b[(((20) - 1) * (8)) + (get_global_id(0))])) + ((a[(((21) - 1) * (8)) + (get_global_id(0))]) - (b[(((21) - 1) * (8)) + (get_global_id(0))])) + g -
       ((a[(((32) - 1) * (8)) + (get_global_id(0))]) - (b[(((32) - 1) * (8)) + (get_global_id(0))])) - ((a[(((38) - 1) * (8)) + (get_global_id(0))]) - (b[(((38) - 1) * (8)) + (get_global_id(0))])) - ((a[(((47) - 1) * (8)) + (get_global_id(0))]) - (b[(((47) - 1) * (8)) + (get_global_id(0))])) - ((a[(((51) - 1) * (8)) + (get_global_id(0))]) - (b[(((51) - 1) * (8)) + (get_global_id(0))])) - ((a[(((52) - 1) * (8)) + (get_global_id(0))]) - (b[(((52) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((65) - 1) * (8)) + (get_global_id(0))]) - (b[(((65) - 1) * (8)) + (get_global_id(0))])) - ((a[(((66) - 1) * (8)) + (get_global_id(0))]) - (b[(((66) - 1) * (8)) + (get_global_id(0))])) - ((a[(((75) - 1) * (8)) + (get_global_id(0))]) - (b[(((75) - 1) * (8)) + (get_global_id(0))])) - ((a[(((82) - 1) * (8)) + (get_global_id(0))]) - (b[(((82) - 1) * (8)) + (get_global_id(0))])) - ((a[(((83) - 1) * (8)) + (get_global_id(0))]) - (b[(((83) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((84) - 1) * (8)) + (get_global_id(0))]) - (b[(((84) - 1) * (8)) + (get_global_id(0))])) - ((a[(((101) - 1) * (8)) + (get_global_id(0))]) - (b[(((101) - 1) * (8)) + (get_global_id(0))])) - ((a[(((110) - 1) * (8)) + (get_global_id(0))]) - (b[(((110) - 1) * (8)) + (get_global_id(0))])) - ((a[(((125) - 1) * (8)) + (get_global_id(0))]) - (b[(((125) - 1) * (8)) + (get_global_id(0))])) - ((a[(((138) - 1) * (8)) + (get_global_id(0))]) - (b[(((138) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((139) - 1) * (8)) + (get_global_id(0))]) - (b[(((139) - 1) * (8)) + (get_global_id(0))])) - ((a[(((140) - 1) * (8)) + (get_global_id(0))]) - (b[(((140) - 1) * (8)) + (get_global_id(0))])) - ((a[(((153) - 1) * (8)) + (get_global_id(0))]) - (b[(((153) - 1) * (8)) + (get_global_id(0))])) - ((a[(((154) - 1) * (8)) + (get_global_id(0))]) - (b[(((154) - 1) * (8)) + (get_global_id(0))])) - ((a[(((162) - 1) * (8)) + (get_global_id(0))]) - (b[(((162) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((174) - 1) * (8)) + (get_global_id(0))]) - (b[(((174) - 1) * (8)) + (get_global_id(0))])) + ((a[(((175) - 1) * (8)) + (get_global_id(0))]) - (b[(((175) - 1) * (8)) + (get_global_id(0))])) + ((a[(((187) - 1) * (8)) + (get_global_id(0))]) - (b[(((187) - 1) * (8)) + (get_global_id(0))])) - ((a[(((203) - 1) * (8)) + (get_global_id(0))]) - (b[(((203) - 1) * (8)) + (get_global_id(0))]))) *
      d * e[3];
  (c[(((6) - 1) * (8)) + (get_global_id(0))]) =
      (+((a[(((3) - 1) * (8)) + (get_global_id(0))]) - (b[(((3) - 1) * (8)) + (get_global_id(0))])) + ((a[(((4) - 1) * (8)) + (get_global_id(0))]) - (b[(((4) - 1) * (8)) + (get_global_id(0))])) + ((a[(((9) - 1) * (8)) + (get_global_id(0))]) - (b[(((9) - 1) * (8)) + (get_global_id(0))])) + ((a[(((17) - 1) * (8)) + (get_global_id(0))]) - (b[(((17) - 1) * (8)) + (get_global_id(0))])) + ((a[(((21) - 1) * (8)) + (get_global_id(0))]) - (b[(((21) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((25) - 1) * (8)) + (get_global_id(0))]) - (b[(((25) - 1) * (8)) + (get_global_id(0))])) + h - ((a[(((37) - 1) * (8)) + (get_global_id(0))]) - (b[(((37) - 1) * (8)) + (get_global_id(0))])) + ((a[(((45) - 1) * (8)) + (get_global_id(0))]) - (b[(((45) - 1) * (8)) + (get_global_id(0))])) + ((a[(((54) - 1) * (8)) + (get_global_id(0))]) - (b[(((54) - 1) * (8)) + (get_global_id(0))])) + ((a[(((66) - 1) * (8)) + (get_global_id(0))]) - (b[(((66) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((74) - 1) * (8)) + (get_global_id(0))]) - (b[(((74) - 1) * (8)) + (get_global_id(0))])) + ((a[(((80) - 1) * (8)) + (get_global_id(0))]) - (b[(((80) - 1) * (8)) + (get_global_id(0))])) + ((a[(((81) - 1) * (8)) + (get_global_id(0))]) - (b[(((81) - 1) * (8)) + (get_global_id(0))])) + ((a[(((98) - 1) * (8)) + (get_global_id(0))]) - (b[(((98) - 1) * (8)) + (get_global_id(0))])) + ((a[(((100) - 1) * (8)) + (get_global_id(0))]) - (b[(((100) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((104) - 1) * (8)) + (get_global_id(0))]) - (b[(((104) - 1) * (8)) + (get_global_id(0))])) + ((a[(((131) - 1) * (8)) + (get_global_id(0))]) - (b[(((131) - 1) * (8)) + (get_global_id(0))])) + ((a[(((137) - 1) * (8)) + (get_global_id(0))]) - (b[(((137) - 1) * (8)) + (get_global_id(0))])) + ((a[(((152) - 1) * (8)) + (get_global_id(0))]) - (b[(((152) - 1) * (8)) + (get_global_id(0))])) + ((a[(((161) - 1) * (8)) + (get_global_id(0))]) - (b[(((161) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((182) - 1) * (8)) + (get_global_id(0))]) - (b[(((182) - 1) * (8)) + (get_global_id(0))])) + ((a[(((196) - 1) * (8)) + (get_global_id(0))]) - (b[(((196) - 1) * (8)) + (get_global_id(0))])) + ((a[(((202) - 1) * (8)) + (get_global_id(0))]) - (b[(((202) - 1) * (8)) + (get_global_id(0))]))) *
      d * e[5];
}
","[  8  52   8 ...,   0 127   0]"
661,shoc-1.1.5-S3D-rdwdot2_kernel,default,267,0,69,0,2,0,57594120,128,CPU,5.994753,13.727387,"__kernel void A(__global const float* a, __global const float* b, __global float* c, const float d, __global const float* e) {
  (c[(((21) - 1) * (8)) + (get_global_id(0))]) =
      (((a[(((145) - 1) * (8)) + (get_global_id(0))]) - (b[(((145) - 1) * (8)) + (get_global_id(0))])) + ((a[(((185) - 1) * (8)) + (get_global_id(0))]) - (b[(((185) - 1) * (8)) + (get_global_id(0))])) + ((a[(((187) - 1) * (8)) + (get_global_id(0))]) - (b[(((187) - 1) * (8)) + (get_global_id(0))])) + ((a[(((189) - 1) * (8)) + (get_global_id(0))]) - (b[(((189) - 1) * (8)) + (get_global_id(0))])) - ((a[(((190) - 1) * (8)) + (get_global_id(0))]) - (b[(((190) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((191) - 1) * (8)) + (get_global_id(0))]) - (b[(((191) - 1) * (8)) + (get_global_id(0))])) - ((a[(((192) - 1) * (8)) + (get_global_id(0))]) - (b[(((192) - 1) * (8)) + (get_global_id(0))])) - ((a[(((193) - 1) * (8)) + (get_global_id(0))]) - (b[(((193) - 1) * (8)) + (get_global_id(0))])) - ((a[(((194) - 1) * (8)) + (get_global_id(0))]) - (b[(((194) - 1) * (8)) + (get_global_id(0))])) - ((a[(((195) - 1) * (8)) + (get_global_id(0))]) - (b[(((195) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((196) - 1) * (8)) + (get_global_id(0))]) - (b[(((196) - 1) * (8)) + (get_global_id(0))])) - ((a[(((197) - 1) * (8)) + (get_global_id(0))]) - (b[(((197) - 1) * (8)) + (get_global_id(0))])) - ((a[(((198) - 1) * (8)) + (get_global_id(0))]) - (b[(((198) - 1) * (8)) + (get_global_id(0))])) + ((a[(((200) - 1) * (8)) + (get_global_id(0))]) - (b[(((200) - 1) * (8)) + (get_global_id(0))])) + ((a[(((202) - 1) * (8)) + (get_global_id(0))]) - (b[(((202) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((203) - 1) * (8)) + (get_global_id(0))]) - (b[(((203) - 1) * (8)) + (get_global_id(0))])) + ((a[(((205) - 1) * (8)) + (get_global_id(0))]) - (b[(((205) - 1) * (8)) + (get_global_id(0))]))) *
      d * e[20];

  (c[(((20) - 1) * (8)) + (get_global_id(0))]) =
      (+((a[(((121) - 1) * (8)) + (get_global_id(0))]) - (b[(((121) - 1) * (8)) + (get_global_id(0))])) + ((a[(((146) - 1) * (8)) + (get_global_id(0))]) - (b[(((146) - 1) * (8)) + (get_global_id(0))])) + ((a[(((165) - 1) * (8)) + (get_global_id(0))]) - (b[(((165) - 1) * (8)) + (get_global_id(0))])) + ((a[(((167) - 1) * (8)) + (get_global_id(0))]) - (b[(((167) - 1) * (8)) + (get_global_id(0))])) - ((a[(((185) - 1) * (8)) + (get_global_id(0))]) - (b[(((185) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((186) - 1) * (8)) + (get_global_id(0))]) - (b[(((186) - 1) * (8)) + (get_global_id(0))])) - ((a[(((187) - 1) * (8)) + (get_global_id(0))]) - (b[(((187) - 1) * (8)) + (get_global_id(0))])) - ((a[(((188) - 1) * (8)) + (get_global_id(0))]) - (b[(((188) - 1) * (8)) + (get_global_id(0))])) - ((a[(((189) - 1) * (8)) + (get_global_id(0))]) - (b[(((189) - 1) * (8)) + (get_global_id(0))])) + ((a[(((192) - 1) * (8)) + (get_global_id(0))]) - (b[(((192) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((195) - 1) * (8)) + (get_global_id(0))]) - (b[(((195) - 1) * (8)) + (get_global_id(0))])) + ((a[(((196) - 1) * (8)) + (get_global_id(0))]) - (b[(((196) - 1) * (8)) + (get_global_id(0))])) + ((a[(((197) - 1) * (8)) + (get_global_id(0))]) - (b[(((197) - 1) * (8)) + (get_global_id(0))])) + ((a[(((198) - 1) * (8)) + (get_global_id(0))]) - (b[(((198) - 1) * (8)) + (get_global_id(0))])) + ((a[(((206) - 1) * (8)) + (get_global_id(0))]) - (b[(((206) - 1) * (8)) + (get_global_id(0))]))) *
      d * e[19];

  (c[(((22) - 1) * (8)) + (get_global_id(0))]) = 0.0;
}
","[  7   7  16 ...,   0 127   0]"
662,shoc-1.1.5-S3D-rdwdot3_kernel,default,948,0,244,0,7,0,57594120,128,CPU,7.038685000000001,13.778436,"__kernel void A(__global const float* a, __global const float* b, __global float* c, const float d, __global const float* e) {
  float f = ((a[(((114) - 1) * (8)) + (get_global_id(0))]) - (b[(((114) - 1) * (8)) + (get_global_id(0))])) - ((a[(((122) - 1) * (8)) + (get_global_id(0))]) - (b[(((122) - 1) * (8)) + (get_global_id(0))]));

  (c[(((13) - 1) * (8)) + (get_global_id(0))]) =
      (+((a[(((31) - 1) * (8)) + (get_global_id(0))]) - (b[(((31) - 1) * (8)) + (get_global_id(0))])) + ((a[(((37) - 1) * (8)) + (get_global_id(0))]) - (b[(((37) - 1) * (8)) + (get_global_id(0))])) + ((a[(((41) - 1) * (8)) + (get_global_id(0))]) - (b[(((41) - 1) * (8)) + (get_global_id(0))])) + ((a[(((53) - 1) * (8)) + (get_global_id(0))]) - (b[(((53) - 1) * (8)) + (get_global_id(0))])) + ((a[(((55) - 1) * (8)) + (get_global_id(0))]) - (b[(((55) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((63) - 1) * (8)) + (get_global_id(0))]) - (b[(((63) - 1) * (8)) + (get_global_id(0))])) + ((a[(((70) - 1) * (8)) + (get_global_id(0))]) - (b[(((70) - 1) * (8)) + (get_global_id(0))])) - ((a[(((71) - 1) * (8)) + (get_global_id(0))]) - (b[(((71) - 1) * (8)) + (get_global_id(0))])) - ((a[(((72) - 1) * (8)) + (get_global_id(0))]) - (b[(((72) - 1) * (8)) + (get_global_id(0))])) - ((a[(((73) - 1) * (8)) + (get_global_id(0))]) - (b[(((73) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((74) - 1) * (8)) + (get_global_id(0))]) - (b[(((74) - 1) * (8)) + (get_global_id(0))])) - ((a[(((75) - 1) * (8)) + (get_global_id(0))]) - (b[(((75) - 1) * (8)) + (get_global_id(0))])) - ((a[(((76) - 1) * (8)) + (get_global_id(0))]) - (b[(((76) - 1) * (8)) + (get_global_id(0))])) - ((a[(((77) - 1) * (8)) + (get_global_id(0))]) - (b[(((77) - 1) * (8)) + (get_global_id(0))])) + ((a[(((79) - 1) * (8)) + (get_global_id(0))]) - (b[(((79) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((83) - 1) * (8)) + (get_global_id(0))]) - (b[(((83) - 1) * (8)) + (get_global_id(0))])) - ((a[(((90) - 1) * (8)) + (get_global_id(0))]) - (b[(((90) - 1) * (8)) + (get_global_id(0))])) + ((a[(((96) - 1) * (8)) + (get_global_id(0))]) - (b[(((96) - 1) * (8)) + (get_global_id(0))])) + ((a[(((99) - 1) * (8)) + (get_global_id(0))]) - (b[(((99) - 1) * (8)) + (get_global_id(0))])) + ((a[(((100) - 1) * (8)) + (get_global_id(0))]) - (b[(((100) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((101) - 1) * (8)) + (get_global_id(0))]) - (b[(((101) - 1) * (8)) + (get_global_id(0))])) + ((a[(((140) - 1) * (8)) + (get_global_id(0))]) - (b[(((140) - 1) * (8)) + (get_global_id(0))])) + ((a[(((154) - 1) * (8)) + (get_global_id(0))]) - (b[(((154) - 1) * (8)) + (get_global_id(0))])) + ((a[(((160) - 1) * (8)) + (get_global_id(0))]) - (b[(((160) - 1) * (8)) + (get_global_id(0))])) + ((a[(((172) - 1) * (8)) + (get_global_id(0))]) - (b[(((172) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((177) - 1) * (8)) + (get_global_id(0))]) - (b[(((177) - 1) * (8)) + (get_global_id(0))])) + ((a[(((188) - 1) * (8)) + (get_global_id(0))]) - (b[(((188) - 1) * (8)) + (get_global_id(0))])) + ((a[(((201) - 1) * (8)) + (get_global_id(0))]) - (b[(((201) - 1) * (8)) + (get_global_id(0))])) + ((a[(((204) - 1) * (8)) + (get_global_id(0))]) - (b[(((204) - 1) * (8)) + (get_global_id(0))]))) *
      d * e[12];
  (c[(((14) - 1) * (8)) + (get_global_id(0))]) =
      (+((a[(((57) - 1) * (8)) + (get_global_id(0))]) - (b[(((57) - 1) * (8)) + (get_global_id(0))])) + ((a[(((58) - 1) * (8)) + (get_global_id(0))]) - (b[(((58) - 1) * (8)) + (get_global_id(0))])) + ((a[(((111) - 1) * (8)) + (get_global_id(0))]) - (b[(((111) - 1) * (8)) + (get_global_id(0))])) + ((a[(((113) - 1) * (8)) + (get_global_id(0))]) - (b[(((113) - 1) * (8)) + (get_global_id(0))])) - f + ((a[(((115) - 1) * (8)) + (get_global_id(0))]) - (b[(((115) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((116) - 1) * (8)) + (get_global_id(0))]) - (b[(((116) - 1) * (8)) + (get_global_id(0))])) - ((a[(((117) - 1) * (8)) + (get_global_id(0))]) - (b[(((117) - 1) * (8)) + (get_global_id(0))])) - ((a[(((118) - 1) * (8)) + (get_global_id(0))]) - (b[(((118) - 1) * (8)) + (get_global_id(0))])) - ((a[(((119) - 1) * (8)) + (get_global_id(0))]) - (b[(((119) - 1) * (8)) + (get_global_id(0))])) - ((a[(((120) - 1) * (8)) + (get_global_id(0))]) - (b[(((120) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((121) - 1) * (8)) + (get_global_id(0))]) - (b[(((121) - 1) * (8)) + (get_global_id(0))])) + ((a[(((133) - 1) * (8)) + (get_global_id(0))]) - (b[(((133) - 1) * (8)) + (get_global_id(0))])) + ((a[(((137) - 1) * (8)) + (get_global_id(0))]) - (b[(((137) - 1) * (8)) + (get_global_id(0))])) + ((a[(((138) - 1) * (8)) + (get_global_id(0))]) - (b[(((138) - 1) * (8)) + (get_global_id(0))])) + ((a[(((144) - 1) * (8)) + (get_global_id(0))]) - (b[(((144) - 1) * (8)) + (get_global_id(0))]))) *
      d * e[13];

  (c[(((15) - 1) * (8)) + (get_global_id(0))]) =
      (+((a[(((91) - 1) * (8)) + (get_global_id(0))]) - (b[(((91) - 1) * (8)) + (get_global_id(0))])) + ((a[(((92) - 1) * (8)) + (get_global_id(0))]) - (b[(((92) - 1) * (8)) + (get_global_id(0))])) + ((a[(((95) - 1) * (8)) + (get_global_id(0))]) - (b[(((95) - 1) * (8)) + (get_global_id(0))])) + ((a[(((105) - 1) * (8)) + (get_global_id(0))]) - (b[(((105) - 1) * (8)) + (get_global_id(0))])) + ((a[(((132) - 1) * (8)) + (get_global_id(0))]) - (b[(((132) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((142) - 1) * (8)) + (get_global_id(0))]) - (b[(((142) - 1) * (8)) + (get_global_id(0))])) + ((a[(((143) - 1) * (8)) + (get_global_id(0))]) - (b[(((143) - 1) * (8)) + (get_global_id(0))])) - ((a[(((155) - 1) * (8)) + (get_global_id(0))]) - (b[(((155) - 1) * (8)) + (get_global_id(0))])) - ((a[(((156) - 1) * (8)) + (get_global_id(0))]) - (b[(((156) - 1) * (8)) + (get_global_id(0))])) - ((a[(((157) - 1) * (8)) + (get_global_id(0))]) - (b[(((157) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((158) - 1) * (8)) + (get_global_id(0))]) - (b[(((158) - 1) * (8)) + (get_global_id(0))])) - ((a[(((159) - 1) * (8)) + (get_global_id(0))]) - (b[(((159) - 1) * (8)) + (get_global_id(0))])) - ((a[(((160) - 1) * (8)) + (get_global_id(0))]) - (b[(((160) - 1) * (8)) + (get_global_id(0))])) - ((a[(((161) - 1) * (8)) + (get_global_id(0))]) - (b[(((161) - 1) * (8)) + (get_global_id(0))])) - ((a[(((162) - 1) * (8)) + (get_global_id(0))]) - (b[(((162) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((163) - 1) * (8)) + (get_global_id(0))]) - (b[(((163) - 1) * (8)) + (get_global_id(0))])) - ((a[(((164) - 1) * (8)) + (get_global_id(0))]) - (b[(((164) - 1) * (8)) + (get_global_id(0))])) - ((a[(((165) - 1) * (8)) + (get_global_id(0))]) - (b[(((165) - 1) * (8)) + (get_global_id(0))])) - ((a[(((166) - 1) * (8)) + (get_global_id(0))]) - (b[(((166) - 1) * (8)) + (get_global_id(0))])) - ((a[(((167) - 1) * (8)) + (get_global_id(0))]) - (b[(((167) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((168) - 1) * (8)) + (get_global_id(0))]) - (b[(((168) - 1) * (8)) + (get_global_id(0))])) - ((a[(((169) - 1) * (8)) + (get_global_id(0))]) - (b[(((169) - 1) * (8)) + (get_global_id(0))])) + ((a[(((171) - 1) * (8)) + (get_global_id(0))]) - (b[(((171) - 1) * (8)) + (get_global_id(0))])) + ((a[(((174) - 1) * (8)) + (get_global_id(0))]) - (b[(((174) - 1) * (8)) + (get_global_id(0))])) + ((a[(((176) - 1) * (8)) + (get_global_id(0))]) - (b[(((176) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((191) - 1) * (8)) + (get_global_id(0))]) - (b[(((191) - 1) * (8)) + (get_global_id(0))]))) *
      d * e[14];
  (c[(((16) - 1) * (8)) + (get_global_id(0))]) =
      (+((a[(((93) - 1) * (8)) + (get_global_id(0))]) - (b[(((93) - 1) * (8)) + (get_global_id(0))])) + ((a[(((170) - 1) * (8)) + (get_global_id(0))]) - (b[(((170) - 1) * (8)) + (get_global_id(0))])) + ((a[(((175) - 1) * (8)) + (get_global_id(0))]) - (b[(((175) - 1) * (8)) + (get_global_id(0))])) + ((a[(((178) - 1) * (8)) + (get_global_id(0))]) - (b[(((178) - 1) * (8)) + (get_global_id(0))])) + ((a[(((179) - 1) * (8)) + (get_global_id(0))]) - (b[(((179) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((180) - 1) * (8)) + (get_global_id(0))]) - (b[(((180) - 1) * (8)) + (get_global_id(0))])) - ((a[(((181) - 1) * (8)) + (get_global_id(0))]) - (b[(((181) - 1) * (8)) + (get_global_id(0))])) - ((a[(((182) - 1) * (8)) + (get_global_id(0))]) - (b[(((182) - 1) * (8)) + (get_global_id(0))])) - ((a[(((183) - 1) * (8)) + (get_global_id(0))]) - (b[(((183) - 1) * (8)) + (get_global_id(0))])) - ((a[(((184) - 1) * (8)) + (get_global_id(0))]) - (b[(((184) - 1) * (8)) + (get_global_id(0))]))) *
      d * e[15];

  (c[(((17) - 1) * (8)) + (get_global_id(0))]) =
      (+((a[(((39) - 1) * (8)) + (get_global_id(0))]) - (b[(((39) - 1) * (8)) + (get_global_id(0))])) - ((a[(((95) - 1) * (8)) + (get_global_id(0))]) - (b[(((95) - 1) * (8)) + (get_global_id(0))])) - ((a[(((108) - 1) * (8)) + (get_global_id(0))]) - (b[(((108) - 1) * (8)) + (get_global_id(0))])) - ((a[(((109) - 1) * (8)) + (get_global_id(0))]) - (b[(((109) - 1) * (8)) + (get_global_id(0))])) - ((a[(((110) - 1) * (8)) + (get_global_id(0))]) - (b[(((110) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((111) - 1) * (8)) + (get_global_id(0))]) - (b[(((111) - 1) * (8)) + (get_global_id(0))])) - ((a[(((112) - 1) * (8)) + (get_global_id(0))]) - (b[(((112) - 1) * (8)) + (get_global_id(0))])) - ((a[(((113) - 1) * (8)) + (get_global_id(0))]) - (b[(((113) - 1) * (8)) + (get_global_id(0))])) - ((a[(((113) - 1) * (8)) + (get_global_id(0))]) - (b[(((113) - 1) * (8)) + (get_global_id(0))])) + ((a[(((116) - 1) * (8)) + (get_global_id(0))]) - (b[(((116) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((127) - 1) * (8)) + (get_global_id(0))]) - (b[(((127) - 1) * (8)) + (get_global_id(0))])) + ((a[(((129) - 1) * (8)) + (get_global_id(0))]) - (b[(((129) - 1) * (8)) + (get_global_id(0))])) + ((a[(((131) - 1) * (8)) + (get_global_id(0))]) - (b[(((131) - 1) * (8)) + (get_global_id(0))]))) *
      d * e[16];
  (c[(((18) - 1) * (8)) + (get_global_id(0))]) = (+((a[(((56) - 1) * (8)) + (get_global_id(0))]) - (b[(((56) - 1) * (8)) + (get_global_id(0))])) + ((a[(((77) - 1) * (8)) + (get_global_id(0))]) - (b[(((77) - 1) * (8)) + (get_global_id(0))])) + ((a[(((118) - 1) * (8)) + (get_global_id(0))]) - (b[(((118) - 1) * (8)) + (get_global_id(0))])) + ((a[(((124) - 1) * (8)) + (get_global_id(0))]) - (b[(((124) - 1) * (8)) + (get_global_id(0))])) -
                                                  ((a[(((126) - 1) * (8)) + (get_global_id(0))]) - (b[(((126) - 1) * (8)) + (get_global_id(0))])) - ((a[(((127) - 1) * (8)) + (get_global_id(0))]) - (b[(((127) - 1) * (8)) + (get_global_id(0))])) - ((a[(((128) - 1) * (8)) + (get_global_id(0))]) - (b[(((128) - 1) * (8)) + (get_global_id(0))])) - ((a[(((129) - 1) * (8)) + (get_global_id(0))]) - (b[(((129) - 1) * (8)) + (get_global_id(0))])) -
                                                  ((a[(((130) - 1) * (8)) + (get_global_id(0))]) - (b[(((130) - 1) * (8)) + (get_global_id(0))])) - ((a[(((131) - 1) * (8)) + (get_global_id(0))]) - (b[(((131) - 1) * (8)) + (get_global_id(0))])) + ((a[(((135) - 1) * (8)) + (get_global_id(0))]) - (b[(((135) - 1) * (8)) + (get_global_id(0))])) + ((a[(((150) - 1) * (8)) + (get_global_id(0))]) - (b[(((150) - 1) * (8)) + (get_global_id(0))])) +
                                                  ((a[(((151) - 1) * (8)) + (get_global_id(0))]) - (b[(((151) - 1) * (8)) + (get_global_id(0))])) + ((a[(((152) - 1) * (8)) + (get_global_id(0))]) - (b[(((152) - 1) * (8)) + (get_global_id(0))])) + ((a[(((153) - 1) * (8)) + (get_global_id(0))]) - (b[(((153) - 1) * (8)) + (get_global_id(0))])) + ((a[(((193) - 1) * (8)) + (get_global_id(0))]) - (b[(((193) - 1) * (8)) + (get_global_id(0))]))) *
                                                 d * e[17];
  (c[(((19) - 1) * (8)) + (get_global_id(0))]) = (+((a[(((89) - 1) * (8)) + (get_global_id(0))]) - (b[(((89) - 1) * (8)) + (get_global_id(0))])) + ((a[(((148) - 1) * (8)) + (get_global_id(0))]) - (b[(((148) - 1) * (8)) + (get_global_id(0))])) + ((a[(((163) - 1) * (8)) + (get_global_id(0))]) - (b[(((163) - 1) * (8)) + (get_global_id(0))])) + ((a[(((173) - 1) * (8)) + (get_global_id(0))]) - (b[(((173) - 1) * (8)) + (get_global_id(0))]))) * d * e[18];
}
","[  2   2   2 ...,   0 127   0]"
663,shoc-1.1.5-S3D-rdwdot6_kernel,default,416,0,106,0,2,0,57594120,128,CPU,6.1072169999999995,13.74134,"__kernel void A(__global const float* a, __global const float* b, __global float* c, const float d, __global const float* e) {
  (c[(((11) - 1) * (8)) + (get_global_id(0))]) =
      (-((a[(((29) - 1) * (8)) + (get_global_id(0))]) - (b[(((29) - 1) * (8)) + (get_global_id(0))])) - ((a[(((30) - 1) * (8)) + (get_global_id(0))]) - (b[(((30) - 1) * (8)) + (get_global_id(0))])) - ((a[(((31) - 1) * (8)) + (get_global_id(0))]) - (b[(((31) - 1) * (8)) + (get_global_id(0))])) - ((a[(((32) - 1) * (8)) + (get_global_id(0))]) - (b[(((32) - 1) * (8)) + (get_global_id(0))])) - ((a[(((33) - 1) * (8)) + (get_global_id(0))]) - (b[(((33) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((34) - 1) * (8)) + (get_global_id(0))]) - (b[(((34) - 1) * (8)) + (get_global_id(0))])) - ((a[(((39) - 1) * (8)) + (get_global_id(0))]) - (b[(((39) - 1) * (8)) + (get_global_id(0))])) + ((a[(((40) - 1) * (8)) + (get_global_id(0))]) - (b[(((40) - 1) * (8)) + (get_global_id(0))])) + ((a[(((42) - 1) * (8)) + (get_global_id(0))]) - (b[(((42) - 1) * (8)) + (get_global_id(0))])) + ((a[(((43) - 1) * (8)) + (get_global_id(0))]) - (b[(((43) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((45) - 1) * (8)) + (get_global_id(0))]) - (b[(((45) - 1) * (8)) + (get_global_id(0))])) + ((a[(((46) - 1) * (8)) + (get_global_id(0))]) - (b[(((46) - 1) * (8)) + (get_global_id(0))])) + ((a[(((47) - 1) * (8)) + (get_global_id(0))]) - (b[(((47) - 1) * (8)) + (get_global_id(0))])) - ((a[(((56) - 1) * (8)) + (get_global_id(0))]) - (b[(((56) - 1) * (8)) + (get_global_id(0))])) + ((a[(((61) - 1) * (8)) + (get_global_id(0))]) - (b[(((61) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((65) - 1) * (8)) + (get_global_id(0))]) - (b[(((65) - 1) * (8)) + (get_global_id(0))])) + ((a[(((66) - 1) * (8)) + (get_global_id(0))]) - (b[(((66) - 1) * (8)) + (get_global_id(0))])) + ((a[(((70) - 1) * (8)) + (get_global_id(0))]) - (b[(((70) - 1) * (8)) + (get_global_id(0))])) + ((a[(((88) - 1) * (8)) + (get_global_id(0))]) - (b[(((88) - 1) * (8)) + (get_global_id(0))])) + ((a[(((95) - 1) * (8)) + (get_global_id(0))]) - (b[(((95) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((108) - 1) * (8)) + (get_global_id(0))]) - (b[(((108) - 1) * (8)) + (get_global_id(0))])) + ((a[(((109) - 1) * (8)) + (get_global_id(0))]) - (b[(((109) - 1) * (8)) + (get_global_id(0))])) + ((a[(((109) - 1) * (8)) + (get_global_id(0))]) - (b[(((109) - 1) * (8)) + (get_global_id(0))])) + ((a[(((110) - 1) * (8)) + (get_global_id(0))]) - (b[(((110) - 1) * (8)) + (get_global_id(0))])) + ((a[(((110) - 1) * (8)) + (get_global_id(0))]) - (b[(((110) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((111) - 1) * (8)) + (get_global_id(0))]) - (b[(((111) - 1) * (8)) + (get_global_id(0))])) + ((a[(((112) - 1) * (8)) + (get_global_id(0))]) - (b[(((112) - 1) * (8)) + (get_global_id(0))])) + ((a[(((113) - 1) * (8)) + (get_global_id(0))]) - (b[(((113) - 1) * (8)) + (get_global_id(0))])) + ((a[(((113) - 1) * (8)) + (get_global_id(0))]) - (b[(((113) - 1) * (8)) + (get_global_id(0))])) + ((a[(((117) - 1) * (8)) + (get_global_id(0))]) - (b[(((117) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((119) - 1) * (8)) + (get_global_id(0))]) - (b[(((119) - 1) * (8)) + (get_global_id(0))])) + ((a[(((120) - 1) * (8)) + (get_global_id(0))]) - (b[(((120) - 1) * (8)) + (get_global_id(0))])) + ((a[(((123) - 1) * (8)) + (get_global_id(0))]) - (b[(((123) - 1) * (8)) + (get_global_id(0))])) + ((a[(((128) - 1) * (8)) + (get_global_id(0))]) - (b[(((128) - 1) * (8)) + (get_global_id(0))])) + ((a[(((136) - 1) * (8)) + (get_global_id(0))]) - (b[(((136) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((143) - 1) * (8)) + (get_global_id(0))]) - (b[(((143) - 1) * (8)) + (get_global_id(0))])) + ((a[(((147) - 1) * (8)) + (get_global_id(0))]) - (b[(((147) - 1) * (8)) + (get_global_id(0))])) + ((a[(((154) - 1) * (8)) + (get_global_id(0))]) - (b[(((154) - 1) * (8)) + (get_global_id(0))])) + ((a[(((164) - 1) * (8)) + (get_global_id(0))]) - (b[(((164) - 1) * (8)) + (get_global_id(0))])) + ((a[(((179) - 1) * (8)) + (get_global_id(0))]) - (b[(((179) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((189) - 1) * (8)) + (get_global_id(0))]) - (b[(((189) - 1) * (8)) + (get_global_id(0))]))) *
      d * e[10];
  (c[(((12) - 1) * (8)) + (get_global_id(0))]) =
      (+((a[(((29) - 1) * (8)) + (get_global_id(0))]) - (b[(((29) - 1) * (8)) + (get_global_id(0))])) + ((a[(((30) - 1) * (8)) + (get_global_id(0))]) - (b[(((30) - 1) * (8)) + (get_global_id(0))])) + ((a[(((32) - 1) * (8)) + (get_global_id(0))]) - (b[(((32) - 1) * (8)) + (get_global_id(0))])) + ((a[(((33) - 1) * (8)) + (get_global_id(0))]) - (b[(((33) - 1) * (8)) + (get_global_id(0))])) - ((a[(((40) - 1) * (8)) + (get_global_id(0))]) - (b[(((40) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((44) - 1) * (8)) + (get_global_id(0))]) - (b[(((44) - 1) * (8)) + (get_global_id(0))])) + ((a[(((52) - 1) * (8)) + (get_global_id(0))]) - (b[(((52) - 1) * (8)) + (get_global_id(0))])) - ((a[(((70) - 1) * (8)) + (get_global_id(0))]) - (b[(((70) - 1) * (8)) + (get_global_id(0))])) + ((a[(((125) - 1) * (8)) + (get_global_id(0))]) - (b[(((125) - 1) * (8)) + (get_global_id(0))])) + ((a[(((130) - 1) * (8)) + (get_global_id(0))]) - (b[(((130) - 1) * (8)) + (get_global_id(0))]))) *
      d * e[11];
}
","[ 51   7   7 ...,   0 127   0]"
664,shoc-1.1.5-S3D-rdwdot7_kernel,default,576,0,146,0,2,0,57594120,128,CPU,6.325321,13.750960000000001,"__kernel void A(__global const float* a, __global const float* b, __global float* c, const float d, __global const float* e) {
  (c[(((9) - 1) * (8)) + (get_global_id(0))]) =
      (+((a[(((48) - 1) * (8)) + (get_global_id(0))]) - (b[(((48) - 1) * (8)) + (get_global_id(0))])) + ((a[(((49) - 1) * (8)) + (get_global_id(0))]) - (b[(((49) - 1) * (8)) + (get_global_id(0))])) + ((a[(((64) - 1) * (8)) + (get_global_id(0))]) - (b[(((64) - 1) * (8)) + (get_global_id(0))])) - ((a[(((78) - 1) * (8)) + (get_global_id(0))]) - (b[(((78) - 1) * (8)) + (get_global_id(0))])) - ((a[(((79) - 1) * (8)) + (get_global_id(0))]) - (b[(((79) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((80) - 1) * (8)) + (get_global_id(0))]) - (b[(((80) - 1) * (8)) + (get_global_id(0))])) - ((a[(((81) - 1) * (8)) + (get_global_id(0))]) - (b[(((81) - 1) * (8)) + (get_global_id(0))])) - ((a[(((82) - 1) * (8)) + (get_global_id(0))]) - (b[(((82) - 1) * (8)) + (get_global_id(0))])) - ((a[(((83) - 1) * (8)) + (get_global_id(0))]) - (b[(((83) - 1) * (8)) + (get_global_id(0))])) - ((a[(((84) - 1) * (8)) + (get_global_id(0))]) - (b[(((84) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((85) - 1) * (8)) + (get_global_id(0))]) - (b[(((85) - 1) * (8)) + (get_global_id(0))])) - ((a[(((86) - 1) * (8)) + (get_global_id(0))]) - (b[(((86) - 1) * (8)) + (get_global_id(0))])) - ((a[(((87) - 1) * (8)) + (get_global_id(0))]) - (b[(((87) - 1) * (8)) + (get_global_id(0))])) - ((a[(((88) - 1) * (8)) + (get_global_id(0))]) - (b[(((88) - 1) * (8)) + (get_global_id(0))])) - ((a[(((89) - 1) * (8)) + (get_global_id(0))]) - (b[(((89) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((90) - 1) * (8)) + (get_global_id(0))]) - (b[(((90) - 1) * (8)) + (get_global_id(0))])) - ((a[(((91) - 1) * (8)) + (get_global_id(0))]) - (b[(((91) - 1) * (8)) + (get_global_id(0))])) - ((a[(((92) - 1) * (8)) + (get_global_id(0))]) - (b[(((92) - 1) * (8)) + (get_global_id(0))])) - ((a[(((93) - 1) * (8)) + (get_global_id(0))]) - (b[(((93) - 1) * (8)) + (get_global_id(0))])) - ((a[(((93) - 1) * (8)) + (get_global_id(0))]) - (b[(((93) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((94) - 1) * (8)) + (get_global_id(0))]) - (b[(((94) - 1) * (8)) + (get_global_id(0))])) - ((a[(((94) - 1) * (8)) + (get_global_id(0))]) - (b[(((94) - 1) * (8)) + (get_global_id(0))])) - ((a[(((95) - 1) * (8)) + (get_global_id(0))]) - (b[(((95) - 1) * (8)) + (get_global_id(0))])) + ((a[(((97) - 1) * (8)) + (get_global_id(0))]) - (b[(((97) - 1) * (8)) + (get_global_id(0))])) + ((a[(((102) - 1) * (8)) + (get_global_id(0))]) - (b[(((102) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((103) - 1) * (8)) + (get_global_id(0))]) - (b[(((103) - 1) * (8)) + (get_global_id(0))])) + ((a[(((104) - 1) * (8)) + (get_global_id(0))]) - (b[(((104) - 1) * (8)) + (get_global_id(0))])) + ((a[(((106) - 1) * (8)) + (get_global_id(0))]) - (b[(((106) - 1) * (8)) + (get_global_id(0))])) + ((a[(((106) - 1) * (8)) + (get_global_id(0))]) - (b[(((106) - 1) * (8)) + (get_global_id(0))])) + ((a[(((107) - 1) * (8)) + (get_global_id(0))]) - (b[(((107) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((107) - 1) * (8)) + (get_global_id(0))]) - (b[(((107) - 1) * (8)) + (get_global_id(0))])) + ((a[(((119) - 1) * (8)) + (get_global_id(0))]) - (b[(((119) - 1) * (8)) + (get_global_id(0))])) - ((a[(((121) - 1) * (8)) + (get_global_id(0))]) - (b[(((121) - 1) * (8)) + (get_global_id(0))])) + ((a[(((128) - 1) * (8)) + (get_global_id(0))]) - (b[(((128) - 1) * (8)) + (get_global_id(0))])) + ((a[(((136) - 1) * (8)) + (get_global_id(0))]) - (b[(((136) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((144) - 1) * (8)) + (get_global_id(0))]) - (b[(((144) - 1) * (8)) + (get_global_id(0))])) - ((a[(((145) - 1) * (8)) + (get_global_id(0))]) - (b[(((145) - 1) * (8)) + (get_global_id(0))])) - ((a[(((146) - 1) * (8)) + (get_global_id(0))]) - (b[(((146) - 1) * (8)) + (get_global_id(0))])) + ((a[(((147) - 1) * (8)) + (get_global_id(0))]) - (b[(((147) - 1) * (8)) + (get_global_id(0))])) + ((a[(((149) - 1) * (8)) + (get_global_id(0))]) - (b[(((149) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((159) - 1) * (8)) + (get_global_id(0))]) - (b[(((159) - 1) * (8)) + (get_global_id(0))])) - ((a[(((168) - 1) * (8)) + (get_global_id(0))]) - (b[(((168) - 1) * (8)) + (get_global_id(0))])) - ((a[(((169) - 1) * (8)) + (get_global_id(0))]) - (b[(((169) - 1) * (8)) + (get_global_id(0))])) + ((a[(((172) - 1) * (8)) + (get_global_id(0))]) - (b[(((172) - 1) * (8)) + (get_global_id(0))])) + ((a[(((177) - 1) * (8)) + (get_global_id(0))]) - (b[(((177) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((183) - 1) * (8)) + (get_global_id(0))]) - (b[(((183) - 1) * (8)) + (get_global_id(0))])) - ((a[(((184) - 1) * (8)) + (get_global_id(0))]) - (b[(((184) - 1) * (8)) + (get_global_id(0))])) + ((a[(((191) - 1) * (8)) + (get_global_id(0))]) - (b[(((191) - 1) * (8)) + (get_global_id(0))])) + ((a[(((193) - 1) * (8)) + (get_global_id(0))]) - (b[(((193) - 1) * (8)) + (get_global_id(0))])) - ((a[(((198) - 1) * (8)) + (get_global_id(0))]) - (b[(((198) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((199) - 1) * (8)) + (get_global_id(0))]) - (b[(((199) - 1) * (8)) + (get_global_id(0))])) - ((a[(((205) - 1) * (8)) + (get_global_id(0))]) - (b[(((205) - 1) * (8)) + (get_global_id(0))])) + ((a[(((206) - 1) * (8)) + (get_global_id(0))]) - (b[(((206) - 1) * (8)) + (get_global_id(0))]))) *
      d * e[8];
  (c[(((10) - 1) * (8)) + (get_global_id(0))]) =
      (+((a[(((78) - 1) * (8)) + (get_global_id(0))]) - (b[(((78) - 1) * (8)) + (get_global_id(0))])) + ((a[(((84) - 1) * (8)) + (get_global_id(0))]) - (b[(((84) - 1) * (8)) + (get_global_id(0))])) + ((a[(((86) - 1) * (8)) + (get_global_id(0))]) - (b[(((86) - 1) * (8)) + (get_global_id(0))])) + ((a[(((88) - 1) * (8)) + (get_global_id(0))]) - (b[(((88) - 1) * (8)) + (get_global_id(0))])) + ((a[(((90) - 1) * (8)) + (get_global_id(0))]) - (b[(((90) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((102) - 1) * (8)) + (get_global_id(0))]) - (b[(((102) - 1) * (8)) + (get_global_id(0))])) - ((a[(((103) - 1) * (8)) + (get_global_id(0))]) - (b[(((103) - 1) * (8)) + (get_global_id(0))])) - ((a[(((104) - 1) * (8)) + (get_global_id(0))]) - (b[(((104) - 1) * (8)) + (get_global_id(0))])) - ((a[(((105) - 1) * (8)) + (get_global_id(0))]) - (b[(((105) - 1) * (8)) + (get_global_id(0))])) - ((a[(((106) - 1) * (8)) + (get_global_id(0))]) - (b[(((106) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((107) - 1) * (8)) + (get_global_id(0))]) - (b[(((107) - 1) * (8)) + (get_global_id(0))])) + ((a[(((144) - 1) * (8)) + (get_global_id(0))]) - (b[(((144) - 1) * (8)) + (get_global_id(0))])) + ((a[(((166) - 1) * (8)) + (get_global_id(0))]) - (b[(((166) - 1) * (8)) + (get_global_id(0))])) + ((a[(((168) - 1) * (8)) + (get_global_id(0))]) - (b[(((168) - 1) * (8)) + (get_global_id(0))])) + ((a[(((184) - 1) * (8)) + (get_global_id(0))]) - (b[(((184) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((186) - 1) * (8)) + (get_global_id(0))]) - (b[(((186) - 1) * (8)) + (get_global_id(0))])) + ((a[(((198) - 1) * (8)) + (get_global_id(0))]) - (b[(((198) - 1) * (8)) + (get_global_id(0))])) + ((a[(((205) - 1) * (8)) + (get_global_id(0))]) - (b[(((205) - 1) * (8)) + (get_global_id(0))]))) *
      d * e[9];
}
","[ 51   7   7 ...,   0 127   0]"
665,shoc-1.1.5-S3D-rdwdot8_kernel,default,411,0,104,0,2,0,57594120,128,CPU,6.207221,13.741217,"__kernel void A(__global const float* a, __global const float* b, __global float* c, const float d, __global const float* e) {
  float f = ((a[(((12) - 1) * (8)) + (get_global_id(0))]) - (b[(((12) - 1) * (8)) + (get_global_id(0))])) + ((a[(((13) - 1) * (8)) + (get_global_id(0))]) - (b[(((13) - 1) * (8)) + (get_global_id(0))])) + ((a[(((14) - 1) * (8)) + (get_global_id(0))]) - (b[(((14) - 1) * (8)) + (get_global_id(0))])) + ((a[(((15) - 1) * (8)) + (get_global_id(0))]) - (b[(((15) - 1) * (8)) + (get_global_id(0))]));
  float g = ((a[(((22) - 1) * (8)) + (get_global_id(0))]) - (b[(((22) - 1) * (8)) + (get_global_id(0))])) + ((a[(((23) - 1) * (8)) + (get_global_id(0))]) - (b[(((23) - 1) * (8)) + (get_global_id(0))]));
  float h = ((a[(((27) - 1) * (8)) + (get_global_id(0))]) - (b[(((27) - 1) * (8)) + (get_global_id(0))])) + ((a[(((28) - 1) * (8)) + (get_global_id(0))]) - (b[(((28) - 1) * (8)) + (get_global_id(0))]));

  (c[(((7) - 1) * (8)) + (get_global_id(0))]) =
      (+f - ((a[(((17) - 1) * (8)) + (get_global_id(0))]) - (b[(((17) - 1) * (8)) + (get_global_id(0))])) - ((a[(((18) - 1) * (8)) + (get_global_id(0))]) - (b[(((18) - 1) * (8)) + (get_global_id(0))])) - ((a[(((19) - 1) * (8)) + (get_global_id(0))]) - (b[(((19) - 1) * (8)) + (get_global_id(0))])) - ((a[(((20) - 1) * (8)) + (get_global_id(0))]) - (b[(((20) - 1) * (8)) + (get_global_id(0))])) - ((a[(((21) - 1) * (8)) + (get_global_id(0))]) - (b[(((21) - 1) * (8)) + (get_global_id(0))])) - g - g +
       ((a[(((24) - 1) * (8)) + (get_global_id(0))]) - (b[(((24) - 1) * (8)) + (get_global_id(0))])) + ((a[(((26) - 1) * (8)) + (get_global_id(0))]) - (b[(((26) - 1) * (8)) + (get_global_id(0))])) + h - ((a[(((33) - 1) * (8)) + (get_global_id(0))]) - (b[(((33) - 1) * (8)) + (get_global_id(0))])) + ((a[(((47) - 1) * (8)) + (get_global_id(0))]) - (b[(((47) - 1) * (8)) + (get_global_id(0))])) - ((a[(((55) - 1) * (8)) + (get_global_id(0))]) - (b[(((55) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((75) - 1) * (8)) + (get_global_id(0))]) - (b[(((75) - 1) * (8)) + (get_global_id(0))])) - ((a[(((76) - 1) * (8)) + (get_global_id(0))]) - (b[(((76) - 1) * (8)) + (get_global_id(0))])) - ((a[(((84) - 1) * (8)) + (get_global_id(0))]) - (b[(((84) - 1) * (8)) + (get_global_id(0))])) - ((a[(((85) - 1) * (8)) + (get_global_id(0))]) - (b[(((85) - 1) * (8)) + (get_global_id(0))])) + ((a[(((86) - 1) * (8)) + (get_global_id(0))]) - (b[(((86) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((101) - 1) * (8)) + (get_global_id(0))]) - (b[(((101) - 1) * (8)) + (get_global_id(0))])) + ((a[(((138) - 1) * (8)) + (get_global_id(0))]) - (b[(((138) - 1) * (8)) + (get_global_id(0))])) - ((a[(((141) - 1) * (8)) + (get_global_id(0))]) - (b[(((141) - 1) * (8)) + (get_global_id(0))])) + ((a[(((142) - 1) * (8)) + (get_global_id(0))]) - (b[(((142) - 1) * (8)) + (get_global_id(0))])) + ((a[(((153) - 1) * (8)) + (get_global_id(0))]) - (b[(((153) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((162) - 1) * (8)) + (get_global_id(0))]) - (b[(((162) - 1) * (8)) + (get_global_id(0))])) - ((a[(((163) - 1) * (8)) + (get_global_id(0))]) - (b[(((163) - 1) * (8)) + (get_global_id(0))])) + ((a[(((174) - 1) * (8)) + (get_global_id(0))]) - (b[(((174) - 1) * (8)) + (get_global_id(0))])) - ((a[(((175) - 1) * (8)) + (get_global_id(0))]) - (b[(((175) - 1) * (8)) + (get_global_id(0))])) - ((a[(((176) - 1) * (8)) + (get_global_id(0))]) - (b[(((176) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((177) - 1) * (8)) + (get_global_id(0))]) - (b[(((177) - 1) * (8)) + (get_global_id(0))])) + ((a[(((178) - 1) * (8)) + (get_global_id(0))]) - (b[(((178) - 1) * (8)) + (get_global_id(0))])) - ((a[(((187) - 1) * (8)) + (get_global_id(0))]) - (b[(((187) - 1) * (8)) + (get_global_id(0))])) - ((a[(((188) - 1) * (8)) + (get_global_id(0))]) - (b[(((188) - 1) * (8)) + (get_global_id(0))])) - ((a[(((197) - 1) * (8)) + (get_global_id(0))]) - (b[(((197) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((203) - 1) * (8)) + (get_global_id(0))]) - (b[(((203) - 1) * (8)) + (get_global_id(0))])) - ((a[(((204) - 1) * (8)) + (get_global_id(0))]) - (b[(((204) - 1) * (8)) + (get_global_id(0))]))) *
      d * e[6];
  (c[(((8) - 1) * (8)) + (get_global_id(0))]) =
      (+((a[(((16) - 1) * (8)) + (get_global_id(0))]) - (b[(((16) - 1) * (8)) + (get_global_id(0))])) + g - ((a[(((24) - 1) * (8)) + (get_global_id(0))]) - (b[(((24) - 1) * (8)) + (get_global_id(0))])) - ((a[(((25) - 1) * (8)) + (get_global_id(0))]) - (b[(((25) - 1) * (8)) + (get_global_id(0))])) - ((a[(((26) - 1) * (8)) + (get_global_id(0))]) - (b[(((26) - 1) * (8)) + (get_global_id(0))])) - h + ((a[(((76) - 1) * (8)) + (get_global_id(0))]) - (b[(((76) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((86) - 1) * (8)) + (get_global_id(0))]) - (b[(((86) - 1) * (8)) + (get_global_id(0))])) - ((a[(((142) - 1) * (8)) + (get_global_id(0))]) - (b[(((142) - 1) * (8)) + (get_global_id(0))])) + ((a[(((176) - 1) * (8)) + (get_global_id(0))]) - (b[(((176) - 1) * (8)) + (get_global_id(0))])) - ((a[(((178) - 1) * (8)) + (get_global_id(0))]) - (b[(((178) - 1) * (8)) + (get_global_id(0))])) + ((a[(((197) - 1) * (8)) + (get_global_id(0))]) - (b[(((197) - 1) * (8)) + (get_global_id(0))]))) *
      d * e[7];
}
","[ 12   1  16 ...,   0 127   0]"
666,shoc-1.1.5-S3D-rdwdot9_kernel,default,492,0,124,0,1,0,57594120,128,CPU,6.276553,13.745767,"__kernel void A(__global const float* a, __global const float* b, __global float* c, const float d, __global const float* e) {
  float f = ((a[(((27) - 1) * (8)) + (get_global_id(0))]) - (b[(((27) - 1) * (8)) + (get_global_id(0))])) + ((a[(((28) - 1) * (8)) + (get_global_id(0))]) - (b[(((28) - 1) * (8)) + (get_global_id(0))]));

  (c[(((5) - 1) * (8)) + (get_global_id(0))]) =
      (+((a[(((1) - 1) * (8)) + (get_global_id(0))]) - (b[(((1) - 1) * (8)) + (get_global_id(0))])) + ((a[(((2) - 1) * (8)) + (get_global_id(0))]) - (b[(((2) - 1) * (8)) + (get_global_id(0))])) - ((a[(((3) - 1) * (8)) + (get_global_id(0))]) - (b[(((3) - 1) * (8)) + (get_global_id(0))])) - ((a[(((4) - 1) * (8)) + (get_global_id(0))]) - (b[(((4) - 1) * (8)) + (get_global_id(0))])) - ((a[(((4) - 1) * (8)) + (get_global_id(0))]) - (b[(((4) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((9) - 1) * (8)) + (get_global_id(0))]) - (b[(((9) - 1) * (8)) + (get_global_id(0))])) + ((a[(((10) - 1) * (8)) + (get_global_id(0))]) - (b[(((10) - 1) * (8)) + (get_global_id(0))])) - ((a[(((16) - 1) * (8)) + (get_global_id(0))]) - (b[(((16) - 1) * (8)) + (get_global_id(0))])) - ((a[(((16) - 1) * (8)) + (get_global_id(0))]) - (b[(((16) - 1) * (8)) + (get_global_id(0))])) + ((a[(((19) - 1) * (8)) + (get_global_id(0))]) - (b[(((19) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((19) - 1) * (8)) + (get_global_id(0))]) - (b[(((19) - 1) * (8)) + (get_global_id(0))])) + ((a[(((20) - 1) * (8)) + (get_global_id(0))]) - (b[(((20) - 1) * (8)) + (get_global_id(0))])) - ((a[(((21) - 1) * (8)) + (get_global_id(0))]) - (b[(((21) - 1) * (8)) + (get_global_id(0))])) + ((a[(((25) - 1) * (8)) + (get_global_id(0))]) - (b[(((25) - 1) * (8)) + (get_global_id(0))])) + ((a[(((26) - 1) * (8)) + (get_global_id(0))]) - (b[(((26) - 1) * (8)) + (get_global_id(0))])) - f -
       ((a[(((30) - 1) * (8)) + (get_global_id(0))]) - (b[(((30) - 1) * (8)) + (get_global_id(0))])) + ((a[(((33) - 1) * (8)) + (get_global_id(0))]) - (b[(((33) - 1) * (8)) + (get_global_id(0))])) - ((a[(((35) - 1) * (8)) + (get_global_id(0))]) - (b[(((35) - 1) * (8)) + (get_global_id(0))])) + ((a[(((43) - 1) * (8)) + (get_global_id(0))]) - (b[(((43) - 1) * (8)) + (get_global_id(0))])) - ((a[(((45) - 1) * (8)) + (get_global_id(0))]) - (b[(((45) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((51) - 1) * (8)) + (get_global_id(0))]) - (b[(((51) - 1) * (8)) + (get_global_id(0))])) - ((a[(((53) - 1) * (8)) + (get_global_id(0))]) - (b[(((53) - 1) * (8)) + (get_global_id(0))])) - ((a[(((54) - 1) * (8)) + (get_global_id(0))]) - (b[(((54) - 1) * (8)) + (get_global_id(0))])) + ((a[(((55) - 1) * (8)) + (get_global_id(0))]) - (b[(((55) - 1) * (8)) + (get_global_id(0))])) - ((a[(((63) - 1) * (8)) + (get_global_id(0))]) - (b[(((63) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((65) - 1) * (8)) + (get_global_id(0))]) - (b[(((65) - 1) * (8)) + (get_global_id(0))])) + ((a[(((73) - 1) * (8)) + (get_global_id(0))]) - (b[(((73) - 1) * (8)) + (get_global_id(0))])) - ((a[(((74) - 1) * (8)) + (get_global_id(0))]) - (b[(((74) - 1) * (8)) + (get_global_id(0))])) - ((a[(((80) - 1) * (8)) + (get_global_id(0))]) - (b[(((80) - 1) * (8)) + (get_global_id(0))])) - ((a[(((81) - 1) * (8)) + (get_global_id(0))]) - (b[(((81) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((83) - 1) * (8)) + (get_global_id(0))]) - (b[(((83) - 1) * (8)) + (get_global_id(0))])) + ((a[(((85) - 1) * (8)) + (get_global_id(0))]) - (b[(((85) - 1) * (8)) + (get_global_id(0))])) + ((a[(((97) - 1) * (8)) + (get_global_id(0))]) - (b[(((97) - 1) * (8)) + (get_global_id(0))])) + ((a[(((99) - 1) * (8)) + (get_global_id(0))]) - (b[(((99) - 1) * (8)) + (get_global_id(0))])) - ((a[(((100) - 1) * (8)) + (get_global_id(0))]) - (b[(((100) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((103) - 1) * (8)) + (get_global_id(0))]) - (b[(((103) - 1) * (8)) + (get_global_id(0))])) - ((a[(((104) - 1) * (8)) + (get_global_id(0))]) - (b[(((104) - 1) * (8)) + (get_global_id(0))])) + ((a[(((110) - 1) * (8)) + (get_global_id(0))]) - (b[(((110) - 1) * (8)) + (get_global_id(0))])) - ((a[(((118) - 1) * (8)) + (get_global_id(0))]) - (b[(((118) - 1) * (8)) + (get_global_id(0))])) - ((a[(((119) - 1) * (8)) + (get_global_id(0))]) - (b[(((119) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((124) - 1) * (8)) + (get_global_id(0))]) - (b[(((124) - 1) * (8)) + (get_global_id(0))])) + ((a[(((129) - 1) * (8)) + (get_global_id(0))]) - (b[(((129) - 1) * (8)) + (get_global_id(0))])) - ((a[(((131) - 1) * (8)) + (get_global_id(0))]) - (b[(((131) - 1) * (8)) + (get_global_id(0))])) - ((a[(((137) - 1) * (8)) + (get_global_id(0))]) - (b[(((137) - 1) * (8)) + (get_global_id(0))])) + ((a[(((141) - 1) * (8)) + (get_global_id(0))]) - (b[(((141) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((151) - 1) * (8)) + (get_global_id(0))]) - (b[(((151) - 1) * (8)) + (get_global_id(0))])) - ((a[(((152) - 1) * (8)) + (get_global_id(0))]) - (b[(((152) - 1) * (8)) + (get_global_id(0))])) + ((a[(((154) - 1) * (8)) + (get_global_id(0))]) - (b[(((154) - 1) * (8)) + (get_global_id(0))])) + ((a[(((158) - 1) * (8)) + (get_global_id(0))]) - (b[(((158) - 1) * (8)) + (get_global_id(0))])) - ((a[(((161) - 1) * (8)) + (get_global_id(0))]) - (b[(((161) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((163) - 1) * (8)) + (get_global_id(0))]) - (b[(((163) - 1) * (8)) + (get_global_id(0))])) + ((a[(((177) - 1) * (8)) + (get_global_id(0))]) - (b[(((177) - 1) * (8)) + (get_global_id(0))])) + ((a[(((181) - 1) * (8)) + (get_global_id(0))]) - (b[(((181) - 1) * (8)) + (get_global_id(0))])) - ((a[(((182) - 1) * (8)) + (get_global_id(0))]) - (b[(((182) - 1) * (8)) + (get_global_id(0))])) + ((a[(((188) - 1) * (8)) + (get_global_id(0))]) - (b[(((188) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((195) - 1) * (8)) + (get_global_id(0))]) - (b[(((195) - 1) * (8)) + (get_global_id(0))])) - ((a[(((196) - 1) * (8)) + (get_global_id(0))]) - (b[(((196) - 1) * (8)) + (get_global_id(0))])) - ((a[(((202) - 1) * (8)) + (get_global_id(0))]) - (b[(((202) - 1) * (8)) + (get_global_id(0))])) + ((a[(((204) - 1) * (8)) + (get_global_id(0))]) - (b[(((204) - 1) * (8)) + (get_global_id(0))]))) *
      d * e[4];
}
","[  1   7  65 ...,   0 127   0]"
667,shoc-1.1.5-S3D-rdwdot_kernel,default,693,0,174,0,1,0,57594120,128,CPU,6.726004,13.761647,"__kernel void A(__global const float* a, __global const float* b, __global float* c, const float d, __global const float* e) {
  float f = ((a[(((5) - 1) * (8)) + (get_global_id(0))]) - (b[(((5) - 1) * (8)) + (get_global_id(0))])) + ((a[(((6) - 1) * (8)) + (get_global_id(0))]) - (b[(((6) - 1) * (8)) + (get_global_id(0))])) + ((a[(((7) - 1) * (8)) + (get_global_id(0))]) - (b[(((7) - 1) * (8)) + (get_global_id(0))])) + ((a[(((8) - 1) * (8)) + (get_global_id(0))]) - (b[(((8) - 1) * (8)) + (get_global_id(0))]));
  float g = ((a[(((12) - 1) * (8)) + (get_global_id(0))]) - (b[(((12) - 1) * (8)) + (get_global_id(0))])) + ((a[(((13) - 1) * (8)) + (get_global_id(0))]) - (b[(((13) - 1) * (8)) + (get_global_id(0))])) + ((a[(((14) - 1) * (8)) + (get_global_id(0))]) - (b[(((14) - 1) * (8)) + (get_global_id(0))])) + ((a[(((15) - 1) * (8)) + (get_global_id(0))]) - (b[(((15) - 1) * (8)) + (get_global_id(0))]));

  (c[(((2) - 1) * (8)) + (get_global_id(0))]) =
      (-((a[(((1) - 1) * (8)) + (get_global_id(0))]) - (b[(((1) - 1) * (8)) + (get_global_id(0))])) + ((a[(((2) - 1) * (8)) + (get_global_id(0))]) - (b[(((2) - 1) * (8)) + (get_global_id(0))])) + ((a[(((3) - 1) * (8)) + (get_global_id(0))]) - (b[(((3) - 1) * (8)) + (get_global_id(0))])) - f - f - ((a[(((9) - 1) * (8)) + (get_global_id(0))]) - (b[(((9) - 1) * (8)) + (get_global_id(0))])) - ((a[(((10) - 1) * (8)) + (get_global_id(0))]) - (b[(((10) - 1) * (8)) + (get_global_id(0))])) - g -
       ((a[(((17) - 1) * (8)) + (get_global_id(0))]) - (b[(((17) - 1) * (8)) + (get_global_id(0))])) - ((a[(((18) - 1) * (8)) + (get_global_id(0))]) - (b[(((18) - 1) * (8)) + (get_global_id(0))])) - ((a[(((19) - 1) * (8)) + (get_global_id(0))]) - (b[(((19) - 1) * (8)) + (get_global_id(0))])) - ((a[(((24) - 1) * (8)) + (get_global_id(0))]) - (b[(((24) - 1) * (8)) + (get_global_id(0))])) - ((a[(((25) - 1) * (8)) + (get_global_id(0))]) - (b[(((25) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((30) - 1) * (8)) + (get_global_id(0))]) - (b[(((30) - 1) * (8)) + (get_global_id(0))])) + ((a[(((34) - 1) * (8)) + (get_global_id(0))]) - (b[(((34) - 1) * (8)) + (get_global_id(0))])) + ((a[(((35) - 1) * (8)) + (get_global_id(0))]) - (b[(((35) - 1) * (8)) + (get_global_id(0))])) + ((a[(((36) - 1) * (8)) + (get_global_id(0))]) - (b[(((36) - 1) * (8)) + (get_global_id(0))])) + ((a[(((37) - 1) * (8)) + (get_global_id(0))]) - (b[(((37) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((41) - 1) * (8)) + (get_global_id(0))]) - (b[(((41) - 1) * (8)) + (get_global_id(0))])) - ((a[(((42) - 1) * (8)) + (get_global_id(0))]) - (b[(((42) - 1) * (8)) + (get_global_id(0))])) + ((a[(((44) - 1) * (8)) + (get_global_id(0))]) - (b[(((44) - 1) * (8)) + (get_global_id(0))])) + ((a[(((46) - 1) * (8)) + (get_global_id(0))]) - (b[(((46) - 1) * (8)) + (get_global_id(0))])) - ((a[(((48) - 1) * (8)) + (get_global_id(0))]) - (b[(((48) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((49) - 1) * (8)) + (get_global_id(0))]) - (b[(((49) - 1) * (8)) + (get_global_id(0))])) + ((a[(((50) - 1) * (8)) + (get_global_id(0))]) - (b[(((50) - 1) * (8)) + (get_global_id(0))])) + ((a[(((52) - 1) * (8)) + (get_global_id(0))]) - (b[(((52) - 1) * (8)) + (get_global_id(0))])) + ((a[(((52) - 1) * (8)) + (get_global_id(0))]) - (b[(((52) - 1) * (8)) + (get_global_id(0))])) + ((a[(((53) - 1) * (8)) + (get_global_id(0))]) - (b[(((53) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((57) - 1) * (8)) + (get_global_id(0))]) - (b[(((57) - 1) * (8)) + (get_global_id(0))])) - ((a[(((60) - 1) * (8)) + (get_global_id(0))]) - (b[(((60) - 1) * (8)) + (get_global_id(0))])) + ((a[(((62) - 1) * (8)) + (get_global_id(0))]) - (b[(((62) - 1) * (8)) + (get_global_id(0))])) + ((a[(((63) - 1) * (8)) + (get_global_id(0))]) - (b[(((63) - 1) * (8)) + (get_global_id(0))])) + ((a[(((64) - 1) * (8)) + (get_global_id(0))]) - (b[(((64) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((65) - 1) * (8)) + (get_global_id(0))]) - (b[(((65) - 1) * (8)) + (get_global_id(0))])) - ((a[(((71) - 1) * (8)) + (get_global_id(0))]) - (b[(((71) - 1) * (8)) + (get_global_id(0))])) - ((a[(((72) - 1) * (8)) + (get_global_id(0))]) - (b[(((72) - 1) * (8)) + (get_global_id(0))])) + ((a[(((77) - 1) * (8)) + (get_global_id(0))]) - (b[(((77) - 1) * (8)) + (get_global_id(0))])) - ((a[(((78) - 1) * (8)) + (get_global_id(0))]) - (b[(((78) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((79) - 1) * (8)) + (get_global_id(0))]) - (b[(((79) - 1) * (8)) + (get_global_id(0))])) + ((a[(((87) - 1) * (8)) + (get_global_id(0))]) - (b[(((87) - 1) * (8)) + (get_global_id(0))])) + ((a[(((91) - 1) * (8)) + (get_global_id(0))]) - (b[(((91) - 1) * (8)) + (get_global_id(0))])) + ((a[(((92) - 1) * (8)) + (get_global_id(0))]) - (b[(((92) - 1) * (8)) + (get_global_id(0))])) + ((a[(((94) - 1) * (8)) + (get_global_id(0))]) - (b[(((94) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((96) - 1) * (8)) + (get_global_id(0))]) - (b[(((96) - 1) * (8)) + (get_global_id(0))])) - ((a[(((97) - 1) * (8)) + (get_global_id(0))]) - (b[(((97) - 1) * (8)) + (get_global_id(0))])) - ((a[(((98) - 1) * (8)) + (get_global_id(0))]) - (b[(((98) - 1) * (8)) + (get_global_id(0))])) - ((a[(((102) - 1) * (8)) + (get_global_id(0))]) - (b[(((102) - 1) * (8)) + (get_global_id(0))])) + ((a[(((105) - 1) * (8)) + (get_global_id(0))]) - (b[(((105) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((108) - 1) * (8)) + (get_global_id(0))]) - (b[(((108) - 1) * (8)) + (get_global_id(0))])) + ((a[(((109) - 1) * (8)) + (get_global_id(0))]) - (b[(((109) - 1) * (8)) + (get_global_id(0))])) + ((a[(((115) - 1) * (8)) + (get_global_id(0))]) - (b[(((115) - 1) * (8)) + (get_global_id(0))])) + ((a[(((116) - 1) * (8)) + (get_global_id(0))]) - (b[(((116) - 1) * (8)) + (get_global_id(0))])) + ((a[(((118) - 1) * (8)) + (get_global_id(0))]) - (b[(((118) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((124) - 1) * (8)) + (get_global_id(0))]) - (b[(((124) - 1) * (8)) + (get_global_id(0))])) - ((a[(((126) - 1) * (8)) + (get_global_id(0))]) - (b[(((126) - 1) * (8)) + (get_global_id(0))])) - ((a[(((127) - 1) * (8)) + (get_global_id(0))]) - (b[(((127) - 1) * (8)) + (get_global_id(0))])) - ((a[(((128) - 1) * (8)) + (get_global_id(0))]) - (b[(((128) - 1) * (8)) + (get_global_id(0))])) - ((a[(((132) - 1) * (8)) + (get_global_id(0))]) - (b[(((132) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((133) - 1) * (8)) + (get_global_id(0))]) - (b[(((133) - 1) * (8)) + (get_global_id(0))])) - ((a[(((134) - 1) * (8)) + (get_global_id(0))]) - (b[(((134) - 1) * (8)) + (get_global_id(0))])) + ((a[(((135) - 1) * (8)) + (get_global_id(0))]) - (b[(((135) - 1) * (8)) + (get_global_id(0))])) + ((a[(((146) - 1) * (8)) + (get_global_id(0))]) - (b[(((146) - 1) * (8)) + (get_global_id(0))])) - ((a[(((148) - 1) * (8)) + (get_global_id(0))]) - (b[(((148) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((149) - 1) * (8)) + (get_global_id(0))]) - (b[(((149) - 1) * (8)) + (get_global_id(0))])) - ((a[(((150) - 1) * (8)) + (get_global_id(0))]) - (b[(((150) - 1) * (8)) + (get_global_id(0))])) - ((a[(((156) - 1) * (8)) + (get_global_id(0))]) - (b[(((156) - 1) * (8)) + (get_global_id(0))])) - ((a[(((157) - 1) * (8)) + (get_global_id(0))]) - (b[(((157) - 1) * (8)) + (get_global_id(0))])) + ((a[(((165) - 1) * (8)) + (get_global_id(0))]) - (b[(((165) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((167) - 1) * (8)) + (get_global_id(0))]) - (b[(((167) - 1) * (8)) + (get_global_id(0))])) - ((a[(((170) - 1) * (8)) + (get_global_id(0))]) - (b[(((170) - 1) * (8)) + (get_global_id(0))])) - ((a[(((171) - 1) * (8)) + (get_global_id(0))]) - (b[(((171) - 1) * (8)) + (get_global_id(0))])) + ((a[(((173) - 1) * (8)) + (get_global_id(0))]) - (b[(((173) - 1) * (8)) + (get_global_id(0))])) - ((a[(((180) - 1) * (8)) + (get_global_id(0))]) - (b[(((180) - 1) * (8)) + (get_global_id(0))])) -
       ((a[(((185) - 1) * (8)) + (get_global_id(0))]) - (b[(((185) - 1) * (8)) + (get_global_id(0))])) - ((a[(((186) - 1) * (8)) + (get_global_id(0))]) - (b[(((186) - 1) * (8)) + (get_global_id(0))])) - ((a[(((190) - 1) * (8)) + (get_global_id(0))]) - (b[(((190) - 1) * (8)) + (get_global_id(0))])) - ((a[(((191) - 1) * (8)) + (get_global_id(0))]) - (b[(((191) - 1) * (8)) + (get_global_id(0))])) - ((a[(((192) - 1) * (8)) + (get_global_id(0))]) - (b[(((192) - 1) * (8)) + (get_global_id(0))])) +
       ((a[(((193) - 1) * (8)) + (get_global_id(0))]) - (b[(((193) - 1) * (8)) + (get_global_id(0))])) - ((a[(((199) - 1) * (8)) + (get_global_id(0))]) - (b[(((199) - 1) * (8)) + (get_global_id(0))])) - ((a[(((200) - 1) * (8)) + (get_global_id(0))]) - (b[(((200) - 1) * (8)) + (get_global_id(0))]))) *
      d * e[1];
}
","[  7   7   7 ...,   0 127   0]"
668,shoc-1.1.5-Scan-bottom_scan,default,13,6,12,5,2,0,8389376,256,CPU,4.931584,16.880482,"__kernel void A(__global const float* a, __global const float* b, __global float* c, const int d, __local float* e) {
  __local float f;
  f = 0;

  __global float4* g = (__global float4*)a;
  __global float4* h = (__global float4*)c;
  int i = d / 4;

  int j = i / get_num_groups(0);
  int k = get_group_id(0) * j;

  int l = (get_group_id(0) == get_num_groups(0) - 1) ? i : k + j;

  int m = k + get_local_id(0);
  unsigned int n = k;

  float o = b[get_group_id(0)];

  while (n < l) {
    float4 p;
    if (m < l) {
      p = g[m];
    } else {
      p.x = 0.0f;
      p.y = 0.0f;
      p.z = 0.0f;
      p.w = 0.0f;
    }

    p.y += p.x;
    p.z += p.y;
    p.w += p.z;

    float q = B(p.w, e, 1);

    p.x += q + o;
    p.y += q + o;
    p.z += q + o;
    p.w += q + o;

    if (m < l) {
      h[m] = p;
    }

    barrier(1);
    if (get_local_id(0) == get_local_size(0) - 1) {
      f = p.w;
    }
    barrier(1);

    o = f;

    n += get_local_size(0);
    m += get_local_size(0);
  }
}","[129 129 129 ..., 127   0 127]"
669,shoc-1.1.5-Scan-reduce,default,10,5,6,4,1,0,8389376,256,CPU,4.170566,16.875218,"__kernel void A(__global const float* a, __global float* b, const int c, __local float* d) {
  int e = ((c / 4) / get_num_groups(0)) * 4;
  int f = get_group_id(0) * e;

  int g = (get_group_id(0) == get_num_groups(0) - 1) ? c : f + e;

  int h = get_local_id(0);
  int i = f + h;

  float j = 0.0f;

  while (i < g) {
    j += a[i];
    i += get_local_size(0);
  }

  d[h] = j;
  barrier(1);

  for (unsigned int k = get_local_size(0) / 2; k > 0; k >>= 1) {
    if (h < k) {
      d[h] += d[h + k];
    }
    barrier(1);
  }

  barrier(1);

  if (h == 0) {
    b[get_group_id(0)] = d[0];
  }
}","[129 129 129 ..., 127   0 127]"
670,shoc-1.1.5-Scan-top_scan,default,2,3,8,5,0,0,8389376,256,CPU,4.0114849999999995,16.868038000000002,"__kernel void A(__global float* a, const int b, __local float* c) {
  float d = get_local_id(0) < b ? a[get_local_id(0)] : 0.0f;
  d = B(d, c, 1);

  if (get_local_id(0) < b) {
    a[get_local_id(0)] = d;
  }
}","[129 129 129 ..., 127   0 127]"
671,shoc-1.1.5-Sort-bottom_scan,default,27,10,24,16,5,0,4198400,256,GPU,17.00504,8.607596000000001,"__kernel void A(__global const uint* a, __global const uint* b, __global uint* c, const int d, __local uint* e, const int f) {
  __local uint g[16];

  __local uint h[16];

  __private int i[16] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

  __global uint4* j = (__global uint4*)a;
  __global uint4* k = (__global uint4*)c;
  int l = d / 4;

  int m = l / get_num_groups(0);
  int n = get_group_id(0) * m;

  int o = (get_group_id(0) == get_num_groups(0) - 1) ? l : n + m;

  int p = n + get_local_id(0);
  int q = n;

  if (get_local_id(0) < 16) {
    h[get_local_id(0)] = 0;
    g[get_local_id(0)] = b[(get_local_id(0) * get_num_groups(0)) + get_group_id(0)];
  }
  barrier(1);

  while (q < o) {
    for (int r = 0; r < 16; r++)
      i[r] = 0;
    uint4 s;
    uint4 t;

    if (p < o) {
      s = j[p];

      t.x = (s.x >> f) & 0xFU;
      t.y = (s.y >> f) & 0xFU;
      t.z = (s.z >> f) & 0xFU;
      t.w = (s.w >> f) & 0xFU;

      i[t.x]++;
      i[t.y]++;
      i[t.z]++;
      i[t.w]++;
    }

    for (int u = 0; u < 16; u++) {
      i[u] = B(i[u], e, 1);
      barrier(1);
    }

    if (p < o) {
      int v;
      v = i[t.x] + g[t.x] + h[t.x];
      c[v] = s.x;
      i[t.x]++;

      v = i[t.y] + g[t.y] + h[t.y];
      c[v] = s.y;
      i[t.y]++;

      v = i[t.z] + g[t.z] + h[t.z];
      c[v] = s.z;
      i[t.z]++;

      v = i[t.w] + g[t.w] + h[t.w];
      c[v] = s.w;
      i[t.w]++;
    }

    barrier(1);

    if (get_local_id(0) == get_local_size(0) - 1) {
      for (int r = 0; r < 16; r++) {
        h[r] += i[r];
      }
    }
    barrier(1);

    q += get_local_size(0);
    p += get_local_size(0);
  }
}","[ 15  11   1 ..., 127   0 127]"
672,shoc-1.1.5-Sort-reduce,default,14,6,6,4,1,0,4198400,256,CPU,4.338501,8.478576,"__kernel void A(__global const uint* a, __global uint* b, const int c, __local uint* d, const int e) {
  int f = ((c / 4) / get_num_groups(0)) * 4;
  int g = get_group_id(0) * f;

  int h = (get_group_id(0) == get_num_groups(0) - 1) ? c : g + f;

  int i = get_local_id(0);
  int j = g + i;

  int k[16] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

  while (j < h) {
    k[(a[j] >> e) & 0xFU]++;
    j += get_local_size(0);
  }

  for (int l = 0; l < 16; l++) {
    d[i] = k[l];
    barrier(1);

    for (unsigned int m = get_local_size(0) / 2; m > 0; m >>= 1) {
      if (i < m) {
        d[i] += d[i + m];
      }
      barrier(1);
    }

    if (i == 0) {
      b[(l * get_num_groups(0)) + get_group_id(0)] = d[0];
    }
  }
}","[129 129 129 ..., 127   0 127]"
673,shoc-1.1.5-Sort-top_scan,default,9,6,11,5,0,0,4198400,256,CPU,1.885541,8.459673,"__kernel void A(__global uint* a, const int b, __local uint* c) {
  __local int d;
  d = 0;
  barrier(1);

  int e = (get_local_id(0) < b && (get_local_id(0) + 1) == b) ? 1 : 0;

  for (int f = 0; f < 16; f++) {
    uint g = 0;

    if (get_local_id(0) < b) {
      g = a[(b * f) + get_local_id(0)];
    }

    uint h = B(g, c, 1);

    if (get_local_id(0) < b) {
      a[(b * f) + get_local_id(0)] = h + d;
    }
    barrier(1);

    if (e) {
      d += h + g;
    }
    barrier(1);
  }
}","[129 129 129 ..., 127   0 127]"
674,shoc-1.1.5-Spmv-spmv_csr_scalar_kernel,default,2,2,6,0,6,0,2000628,128,CPU,2.038006,3.6455,"__kernel void A(__global const float* restrict a, __global const float* restrict b, __global const int* restrict c, __global const int* restrict d, const int e, __global float* restrict f) {
  int g = get_global_id(0);

  if (g < e) {
    float h = 0;
    int i = d[g];
    int j = d[g + 1];
    for (int k = i; k < j; k++) {
      int l = c[k];

      h += a[k] * b[l];
    }
    f[g] = h;
  }
}","[129 129 129 ..., 127   0 127]"
675,shoc-1.1.5-Spmv-spmv_csr_vector_kernel,default,12,5,11,5,6,0,2000628,128,CPU,2.03694,3.642489,"__kernel void A(__global const float* restrict a, __global const float* restrict b, __global const int* restrict c, __global const int* restrict d, const int e, const int f, __global float* restrict g) {
  int h = get_local_id(0);

  int i = h & (f - 1);

  int j = get_local_size(0) / f;
  int k = (get_group_id(0) * j) + (h / f);

  __local volatile float l[128];
  l[h] = 0;

  if (k < e) {
    int m = d[k];
    int n = d[k + 1];
    float o = 0;
    for (int p = m + i; p < n; p += f) {
      int q = c[p];

      o += a[p] * b[q];
    }

    l[h] = o;
    barrier(1);

    int r = f / 2;
    while (r > 0) {
      if (i < r)
        l[h] += l[h + r];
      barrier(1);
      r = r / 2;
    }

    if (i == 0) {
      g[k] = l[h];
    }
  }
}","[129 129 129 ..., 127   0 127]"
676,shoc-1.1.5-Spmv-spmv_ellpackr_kernel,default,3,2,5,0,5,0,2000628,128,CPU,2.0350029999999997,3.6463050000000004,"__kernel void A(__global const float* restrict a, __global const float* restrict b, __global const int* restrict c, __global const int* restrict d, const int e, __global float* restrict f) {
  int g = get_global_id(0);

  if (g < e) {
    float h = 0.0;
    int i = d[g];
    for (int j = 0; j < i; j++) {
      int k = j * e + g;

      h += a[k] * b[c[k]];
    }
    f[g] = h;
  }
}","[129 129 129 ..., 127   0 127]"
677,shoc-1.1.5-Stencil2D-CopyRect,default,8,2,2,0,0,0,71647488,0,CPU,17.328426,48.005295000000004,"__kernel void A(__global float* a, int b, int c, __global float* d, int e, int f, int g, int h) {
  int i = get_group_id(0);
  int j = get_local_id(0);
  int k = get_global_size(0);
  int l = get_local_size(0);
  int m = i * l + j;

  if (m < h) {
    for (int n = 0; n < g; n++) {
      (a + b)[D(m, n, c)] = (d + e)[D(m, n, f)];
    }
  }
}","[129 129 129 ..., 127   0 127]"
678,shoc-1.1.5-Stencil2D-StencilKernel,default,144,7,16,12,3,0,71647488,256,CPU,17.86673,48.047807,"__kernel void A(__global float* a, __global float* b, const int c, float d, float e, float f, __local float* g) {
  int h = get_group_id(0);
  int i = get_group_id(1);
  int j = get_num_groups(0);
  int k = get_num_groups(1);
  int l = get_local_id(0);
  int m = get_local_id(1);
  int n = 16;
  int o = get_local_size(1);

  int p = A(h, n, l);
  int q = B(i, o, m);

  int r = k * o + 2;
  int s = r + (((r % c) == 0) ? 0 : (c - (r % c)));
  int t = s - 2;

  int u = o;
  for (int v = 0; v < (n + 2); v++) {
    int w = C(l - 1 + v, m, u);
    int x = C(p - 1 + v, q, t);
    g[w] = a[x];
  }

  if (m == 0) {
    for (int v = 0; v < (n + 2); v++) {
      int w = C(l - 1 + v, m - 1, u);
      int x = C(p - 1 + v, q - 1, t);
      g[w] = a[x];
    }
  } else if (m == (o - 1)) {
    for (int v = 0; v < (n + 2); v++) {
      int w = C(l - 1 + v, m + 1, u);
      int x = C(p - 1 + v, q + 1, t);
      g[w] = a[x];
    }
  }

  barrier(1);

  for (int v = 0; v < n; v++) {
    int y = C(l + v, m, u);
    int z = C(l - 1 + v, m, u);
    int aa = C(l + 1 + v, m, u);
    int ab = C(l + v, m + 1, u);
    int ac = C(l + v, m - 1, u);
    int ad = C(l - 1 + v, m + 1, u);
    int ae = C(l + 1 + v, m + 1, u);
    int af = C(l - 1 + v, m - 1, u);
    int ag = C(l + 1 + v, m - 1, u);

    float ah = g[y];
    float ai = g[z] + g[aa] + g[ab] + g[ac];
    float aj = g[ad] + g[ae] + g[af] + g[ag];

    b[C(p + v, q, t)] = d * ah + e * ai + f * aj;
  }
}","[  1  96   1 ..., 127   0 127]"
679,shoc-1.1.5-Triad-Triad,default,2,0,3,0,3,0,117440512,128,CPU,876.4571800000001,3184.516221000001,"__kernel void A(__global const float* a, __global const float* b, __global float* c, const float d) {
  int e = get_global_id(0);
  c[e] = a[e] + d * b[e];
}
","[129 129 129 ...,   0 127   0]"
